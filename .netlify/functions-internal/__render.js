var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __esm = (fn, res) => function __init() {
  return fn && (res = (0, fn[Object.keys(fn)[0]])(fn = 0)), res;
};
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[Object.keys(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  __markAsModule(target);
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toModule = (module2) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", module2 && module2.__esModule && "default" in module2 ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};

// node_modules/@sveltejs/kit/dist/install-fetch.js
function dataUriToBuffer(uri) {
  if (!/^data:/i.test(uri)) {
    throw new TypeError('`uri` does not appear to be a Data URI (must begin with "data:")');
  }
  uri = uri.replace(/\r?\n/g, "");
  const firstComma = uri.indexOf(",");
  if (firstComma === -1 || firstComma <= 4) {
    throw new TypeError("malformed data: URI");
  }
  const meta = uri.substring(5, firstComma).split(";");
  let charset = "";
  let base64 = false;
  const type = meta[0] || "text/plain";
  let typeFull = type;
  for (let i = 1; i < meta.length; i++) {
    if (meta[i] === "base64") {
      base64 = true;
    } else {
      typeFull += `;${meta[i]}`;
      if (meta[i].indexOf("charset=") === 0) {
        charset = meta[i].substring(8);
      }
    }
  }
  if (!meta[0] && !charset.length) {
    typeFull += ";charset=US-ASCII";
    charset = "US-ASCII";
  }
  const encoding = base64 ? "base64" : "ascii";
  const data = unescape(uri.substring(firstComma + 1));
  const buffer = Buffer.from(data, encoding);
  buffer.type = type;
  buffer.typeFull = typeFull;
  buffer.charset = charset;
  return buffer;
}
async function* toIterator(parts, clone2 = true) {
  for (let part of parts) {
    if ("stream" in part) {
      yield* part.stream();
    } else if (ArrayBuffer.isView(part)) {
      if (clone2) {
        let position = part.byteOffset;
        let end = part.byteOffset + part.byteLength;
        while (position !== end) {
          const size = Math.min(end - position, POOL_SIZE);
          const chunk = part.buffer.slice(position, position + size);
          position += chunk.byteLength;
          yield new Uint8Array(chunk);
        }
      } else {
        yield part;
      }
    } else {
      let position = 0;
      while (position !== part.size) {
        const chunk = part.slice(position, Math.min(part.size, position + POOL_SIZE));
        const buffer = await chunk.arrayBuffer();
        position += buffer.byteLength;
        yield new Uint8Array(buffer);
      }
    }
  }
}
function isFormData(object) {
  return typeof object === "object" && typeof object.append === "function" && typeof object.set === "function" && typeof object.get === "function" && typeof object.getAll === "function" && typeof object.delete === "function" && typeof object.keys === "function" && typeof object.values === "function" && typeof object.entries === "function" && typeof object.constructor === "function" && object[NAME] === "FormData";
}
function getHeader(boundary, name, field) {
  let header = "";
  header += `${dashes}${boundary}${carriage}`;
  header += `Content-Disposition: form-data; name="${name}"`;
  if (isBlob(field)) {
    header += `; filename="${field.name}"${carriage}`;
    header += `Content-Type: ${field.type || "application/octet-stream"}`;
  }
  return `${header}${carriage.repeat(2)}`;
}
async function* formDataIterator(form, boundary) {
  for (const [name, value] of form) {
    yield getHeader(boundary, name, value);
    if (isBlob(value)) {
      yield* value.stream();
    } else {
      yield value;
    }
    yield carriage;
  }
  yield getFooter(boundary);
}
function getFormDataLength(form, boundary) {
  let length = 0;
  for (const [name, value] of form) {
    length += Buffer.byteLength(getHeader(boundary, name, value));
    length += isBlob(value) ? value.size : Buffer.byteLength(String(value));
    length += carriageLength;
  }
  length += Buffer.byteLength(getFooter(boundary));
  return length;
}
async function consumeBody(data) {
  if (data[INTERNALS$2].disturbed) {
    throw new TypeError(`body used already for: ${data.url}`);
  }
  data[INTERNALS$2].disturbed = true;
  if (data[INTERNALS$2].error) {
    throw data[INTERNALS$2].error;
  }
  let { body } = data;
  if (body === null) {
    return Buffer.alloc(0);
  }
  if (isBlob(body)) {
    body = import_stream.default.Readable.from(body.stream());
  }
  if (Buffer.isBuffer(body)) {
    return body;
  }
  if (!(body instanceof import_stream.default)) {
    return Buffer.alloc(0);
  }
  const accum = [];
  let accumBytes = 0;
  try {
    for await (const chunk of body) {
      if (data.size > 0 && accumBytes + chunk.length > data.size) {
        const error2 = new FetchError(`content size at ${data.url} over limit: ${data.size}`, "max-size");
        body.destroy(error2);
        throw error2;
      }
      accumBytes += chunk.length;
      accum.push(chunk);
    }
  } catch (error2) {
    const error_ = error2 instanceof FetchBaseError ? error2 : new FetchError(`Invalid response body while trying to fetch ${data.url}: ${error2.message}`, "system", error2);
    throw error_;
  }
  if (body.readableEnded === true || body._readableState.ended === true) {
    try {
      if (accum.every((c) => typeof c === "string")) {
        return Buffer.from(accum.join(""));
      }
      return Buffer.concat(accum, accumBytes);
    } catch (error2) {
      throw new FetchError(`Could not create Buffer from response body for ${data.url}: ${error2.message}`, "system", error2);
    }
  } else {
    throw new FetchError(`Premature close of server response while trying to fetch ${data.url}`);
  }
}
function fromRawHeaders(headers = []) {
  return new Headers(headers.reduce((result, value, index2, array) => {
    if (index2 % 2 === 0) {
      result.push(array.slice(index2, index2 + 2));
    }
    return result;
  }, []).filter(([name, value]) => {
    try {
      validateHeaderName(name);
      validateHeaderValue(name, String(value));
      return true;
    } catch {
      return false;
    }
  }));
}
async function fetch(url, options_) {
  return new Promise((resolve2, reject) => {
    const request = new Request(url, options_);
    const options2 = getNodeRequestOptions(request);
    if (!supportedSchemas.has(options2.protocol)) {
      throw new TypeError(`node-fetch cannot load ${url}. URL scheme "${options2.protocol.replace(/:$/, "")}" is not supported.`);
    }
    if (options2.protocol === "data:") {
      const data = dataUriToBuffer$1(request.url);
      const response2 = new Response(data, { headers: { "Content-Type": data.typeFull } });
      resolve2(response2);
      return;
    }
    const send = (options2.protocol === "https:" ? import_https.default : import_http.default).request;
    const { signal } = request;
    let response = null;
    const abort = () => {
      const error2 = new AbortError("The operation was aborted.");
      reject(error2);
      if (request.body && request.body instanceof import_stream.default.Readable) {
        request.body.destroy(error2);
      }
      if (!response || !response.body) {
        return;
      }
      response.body.emit("error", error2);
    };
    if (signal && signal.aborted) {
      abort();
      return;
    }
    const abortAndFinalize = () => {
      abort();
      finalize();
    };
    const request_ = send(options2);
    if (signal) {
      signal.addEventListener("abort", abortAndFinalize);
    }
    const finalize = () => {
      request_.abort();
      if (signal) {
        signal.removeEventListener("abort", abortAndFinalize);
      }
    };
    request_.on("error", (error2) => {
      reject(new FetchError(`request to ${request.url} failed, reason: ${error2.message}`, "system", error2));
      finalize();
    });
    fixResponseChunkedTransferBadEnding(request_, (error2) => {
      response.body.destroy(error2);
    });
    if (process.version < "v14") {
      request_.on("socket", (s2) => {
        let endedWithEventsCount;
        s2.prependListener("end", () => {
          endedWithEventsCount = s2._eventsCount;
        });
        s2.prependListener("close", (hadError) => {
          if (response && endedWithEventsCount < s2._eventsCount && !hadError) {
            const error2 = new Error("Premature close");
            error2.code = "ERR_STREAM_PREMATURE_CLOSE";
            response.body.emit("error", error2);
          }
        });
      });
    }
    request_.on("response", (response_) => {
      request_.setTimeout(0);
      const headers = fromRawHeaders(response_.rawHeaders);
      if (isRedirect(response_.statusCode)) {
        const location = headers.get("Location");
        const locationURL = location === null ? null : new URL(location, request.url);
        switch (request.redirect) {
          case "error":
            reject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, "no-redirect"));
            finalize();
            return;
          case "manual":
            if (locationURL !== null) {
              headers.set("Location", locationURL);
            }
            break;
          case "follow": {
            if (locationURL === null) {
              break;
            }
            if (request.counter >= request.follow) {
              reject(new FetchError(`maximum redirect reached at: ${request.url}`, "max-redirect"));
              finalize();
              return;
            }
            const requestOptions = {
              headers: new Headers(request.headers),
              follow: request.follow,
              counter: request.counter + 1,
              agent: request.agent,
              compress: request.compress,
              method: request.method,
              body: request.body,
              signal: request.signal,
              size: request.size
            };
            if (response_.statusCode !== 303 && request.body && options_.body instanceof import_stream.default.Readable) {
              reject(new FetchError("Cannot follow redirect with body being a readable stream", "unsupported-redirect"));
              finalize();
              return;
            }
            if (response_.statusCode === 303 || (response_.statusCode === 301 || response_.statusCode === 302) && request.method === "POST") {
              requestOptions.method = "GET";
              requestOptions.body = void 0;
              requestOptions.headers.delete("content-length");
            }
            resolve2(fetch(new Request(locationURL, requestOptions)));
            finalize();
            return;
          }
          default:
            return reject(new TypeError(`Redirect option '${request.redirect}' is not a valid value of RequestRedirect`));
        }
      }
      if (signal) {
        response_.once("end", () => {
          signal.removeEventListener("abort", abortAndFinalize);
        });
      }
      let body = (0, import_stream.pipeline)(response_, new import_stream.PassThrough(), reject);
      if (process.version < "v12.10") {
        response_.on("aborted", abortAndFinalize);
      }
      const responseOptions = {
        url: request.url,
        status: response_.statusCode,
        statusText: response_.statusMessage,
        headers,
        size: request.size,
        counter: request.counter,
        highWaterMark: request.highWaterMark
      };
      const codings = headers.get("Content-Encoding");
      if (!request.compress || request.method === "HEAD" || codings === null || response_.statusCode === 204 || response_.statusCode === 304) {
        response = new Response(body, responseOptions);
        resolve2(response);
        return;
      }
      const zlibOptions = {
        flush: import_zlib.default.Z_SYNC_FLUSH,
        finishFlush: import_zlib.default.Z_SYNC_FLUSH
      };
      if (codings === "gzip" || codings === "x-gzip") {
        body = (0, import_stream.pipeline)(body, import_zlib.default.createGunzip(zlibOptions), reject);
        response = new Response(body, responseOptions);
        resolve2(response);
        return;
      }
      if (codings === "deflate" || codings === "x-deflate") {
        const raw = (0, import_stream.pipeline)(response_, new import_stream.PassThrough(), reject);
        raw.once("data", (chunk) => {
          body = (chunk[0] & 15) === 8 ? (0, import_stream.pipeline)(body, import_zlib.default.createInflate(), reject) : (0, import_stream.pipeline)(body, import_zlib.default.createInflateRaw(), reject);
          response = new Response(body, responseOptions);
          resolve2(response);
        });
        return;
      }
      if (codings === "br") {
        body = (0, import_stream.pipeline)(body, import_zlib.default.createBrotliDecompress(), reject);
        response = new Response(body, responseOptions);
        resolve2(response);
        return;
      }
      response = new Response(body, responseOptions);
      resolve2(response);
    });
    writeToStream(request_, request);
  });
}
function fixResponseChunkedTransferBadEnding(request, errorCallback) {
  const LAST_CHUNK = Buffer.from("0\r\n\r\n");
  let isChunkedTransfer = false;
  let properLastChunkReceived = false;
  let previousChunk;
  request.on("response", (response) => {
    const { headers } = response;
    isChunkedTransfer = headers["transfer-encoding"] === "chunked" && !headers["content-length"];
  });
  request.on("socket", (socket) => {
    const onSocketClose = () => {
      if (isChunkedTransfer && !properLastChunkReceived) {
        const error2 = new Error("Premature close");
        error2.code = "ERR_STREAM_PREMATURE_CLOSE";
        errorCallback(error2);
      }
    };
    socket.prependListener("close", onSocketClose);
    request.on("abort", () => {
      socket.removeListener("close", onSocketClose);
    });
    socket.on("data", (buf) => {
      properLastChunkReceived = Buffer.compare(buf.slice(-5), LAST_CHUNK) === 0;
      if (!properLastChunkReceived && previousChunk) {
        properLastChunkReceived = Buffer.compare(previousChunk.slice(-3), LAST_CHUNK.slice(0, 3)) === 0 && Buffer.compare(buf.slice(-2), LAST_CHUNK.slice(3)) === 0;
      }
      previousChunk = buf;
    });
  });
}
var import_http, import_https, import_zlib, import_stream, import_util, import_crypto, import_url, commonjsGlobal, src, dataUriToBuffer$1, ponyfill_es2018, POOL_SIZE$1, POOL_SIZE, _Blob, Blob2, Blob$1, FetchBaseError, FetchError, NAME, isURLSearchParameters, isBlob, isAbortSignal, carriage, dashes, carriageLength, getFooter, getBoundary, INTERNALS$2, Body, clone, extractContentType, getTotalBytes, writeToStream, validateHeaderName, validateHeaderValue, Headers, redirectStatus, isRedirect, INTERNALS$1, Response, getSearch, INTERNALS, isRequest, Request, getNodeRequestOptions, AbortError, supportedSchemas;
var init_install_fetch = __esm({
  "node_modules/@sveltejs/kit/dist/install-fetch.js"() {
    init_shims();
    import_http = __toModule(require("http"));
    import_https = __toModule(require("https"));
    import_zlib = __toModule(require("zlib"));
    import_stream = __toModule(require("stream"));
    import_util = __toModule(require("util"));
    import_crypto = __toModule(require("crypto"));
    import_url = __toModule(require("url"));
    commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
    src = dataUriToBuffer;
    dataUriToBuffer$1 = src;
    ponyfill_es2018 = { exports: {} };
    (function(module2, exports) {
      (function(global2, factory) {
        factory(exports);
      })(commonjsGlobal, function(exports2) {
        const SymbolPolyfill = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? Symbol : (description) => `Symbol(${description})`;
        function noop2() {
          return void 0;
        }
        function getGlobals() {
          if (typeof self !== "undefined") {
            return self;
          } else if (typeof window !== "undefined") {
            return window;
          } else if (typeof commonjsGlobal !== "undefined") {
            return commonjsGlobal;
          }
          return void 0;
        }
        const globals = getGlobals();
        function typeIsObject(x) {
          return typeof x === "object" && x !== null || typeof x === "function";
        }
        const rethrowAssertionErrorRejection = noop2;
        const originalPromise = Promise;
        const originalPromiseThen = Promise.prototype.then;
        const originalPromiseResolve = Promise.resolve.bind(originalPromise);
        const originalPromiseReject = Promise.reject.bind(originalPromise);
        function newPromise(executor) {
          return new originalPromise(executor);
        }
        function promiseResolvedWith(value) {
          return originalPromiseResolve(value);
        }
        function promiseRejectedWith(reason) {
          return originalPromiseReject(reason);
        }
        function PerformPromiseThen(promise, onFulfilled, onRejected) {
          return originalPromiseThen.call(promise, onFulfilled, onRejected);
        }
        function uponPromise(promise, onFulfilled, onRejected) {
          PerformPromiseThen(PerformPromiseThen(promise, onFulfilled, onRejected), void 0, rethrowAssertionErrorRejection);
        }
        function uponFulfillment(promise, onFulfilled) {
          uponPromise(promise, onFulfilled);
        }
        function uponRejection(promise, onRejected) {
          uponPromise(promise, void 0, onRejected);
        }
        function transformPromiseWith(promise, fulfillmentHandler, rejectionHandler) {
          return PerformPromiseThen(promise, fulfillmentHandler, rejectionHandler);
        }
        function setPromiseIsHandledToTrue(promise) {
          PerformPromiseThen(promise, void 0, rethrowAssertionErrorRejection);
        }
        const queueMicrotask = (() => {
          const globalQueueMicrotask = globals && globals.queueMicrotask;
          if (typeof globalQueueMicrotask === "function") {
            return globalQueueMicrotask;
          }
          const resolvedPromise = promiseResolvedWith(void 0);
          return (fn) => PerformPromiseThen(resolvedPromise, fn);
        })();
        function reflectCall(F, V, args) {
          if (typeof F !== "function") {
            throw new TypeError("Argument is not a function");
          }
          return Function.prototype.apply.call(F, V, args);
        }
        function promiseCall(F, V, args) {
          try {
            return promiseResolvedWith(reflectCall(F, V, args));
          } catch (value) {
            return promiseRejectedWith(value);
          }
        }
        const QUEUE_MAX_ARRAY_SIZE = 16384;
        class SimpleQueue {
          constructor() {
            this._cursor = 0;
            this._size = 0;
            this._front = {
              _elements: [],
              _next: void 0
            };
            this._back = this._front;
            this._cursor = 0;
            this._size = 0;
          }
          get length() {
            return this._size;
          }
          push(element) {
            const oldBack = this._back;
            let newBack = oldBack;
            if (oldBack._elements.length === QUEUE_MAX_ARRAY_SIZE - 1) {
              newBack = {
                _elements: [],
                _next: void 0
              };
            }
            oldBack._elements.push(element);
            if (newBack !== oldBack) {
              this._back = newBack;
              oldBack._next = newBack;
            }
            ++this._size;
          }
          shift() {
            const oldFront = this._front;
            let newFront = oldFront;
            const oldCursor = this._cursor;
            let newCursor = oldCursor + 1;
            const elements = oldFront._elements;
            const element = elements[oldCursor];
            if (newCursor === QUEUE_MAX_ARRAY_SIZE) {
              newFront = oldFront._next;
              newCursor = 0;
            }
            --this._size;
            this._cursor = newCursor;
            if (oldFront !== newFront) {
              this._front = newFront;
            }
            elements[oldCursor] = void 0;
            return element;
          }
          forEach(callback) {
            let i = this._cursor;
            let node = this._front;
            let elements = node._elements;
            while (i !== elements.length || node._next !== void 0) {
              if (i === elements.length) {
                node = node._next;
                elements = node._elements;
                i = 0;
                if (elements.length === 0) {
                  break;
                }
              }
              callback(elements[i]);
              ++i;
            }
          }
          peek() {
            const front = this._front;
            const cursor = this._cursor;
            return front._elements[cursor];
          }
        }
        function ReadableStreamReaderGenericInitialize(reader, stream) {
          reader._ownerReadableStream = stream;
          stream._reader = reader;
          if (stream._state === "readable") {
            defaultReaderClosedPromiseInitialize(reader);
          } else if (stream._state === "closed") {
            defaultReaderClosedPromiseInitializeAsResolved(reader);
          } else {
            defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);
          }
        }
        function ReadableStreamReaderGenericCancel(reader, reason) {
          const stream = reader._ownerReadableStream;
          return ReadableStreamCancel(stream, reason);
        }
        function ReadableStreamReaderGenericRelease(reader) {
          if (reader._ownerReadableStream._state === "readable") {
            defaultReaderClosedPromiseReject(reader, new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));
          } else {
            defaultReaderClosedPromiseResetToRejected(reader, new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));
          }
          reader._ownerReadableStream._reader = void 0;
          reader._ownerReadableStream = void 0;
        }
        function readerLockException(name) {
          return new TypeError("Cannot " + name + " a stream using a released reader");
        }
        function defaultReaderClosedPromiseInitialize(reader) {
          reader._closedPromise = newPromise((resolve2, reject) => {
            reader._closedPromise_resolve = resolve2;
            reader._closedPromise_reject = reject;
          });
        }
        function defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {
          defaultReaderClosedPromiseInitialize(reader);
          defaultReaderClosedPromiseReject(reader, reason);
        }
        function defaultReaderClosedPromiseInitializeAsResolved(reader) {
          defaultReaderClosedPromiseInitialize(reader);
          defaultReaderClosedPromiseResolve(reader);
        }
        function defaultReaderClosedPromiseReject(reader, reason) {
          if (reader._closedPromise_reject === void 0) {
            return;
          }
          setPromiseIsHandledToTrue(reader._closedPromise);
          reader._closedPromise_reject(reason);
          reader._closedPromise_resolve = void 0;
          reader._closedPromise_reject = void 0;
        }
        function defaultReaderClosedPromiseResetToRejected(reader, reason) {
          defaultReaderClosedPromiseInitializeAsRejected(reader, reason);
        }
        function defaultReaderClosedPromiseResolve(reader) {
          if (reader._closedPromise_resolve === void 0) {
            return;
          }
          reader._closedPromise_resolve(void 0);
          reader._closedPromise_resolve = void 0;
          reader._closedPromise_reject = void 0;
        }
        const AbortSteps = SymbolPolyfill("[[AbortSteps]]");
        const ErrorSteps = SymbolPolyfill("[[ErrorSteps]]");
        const CancelSteps = SymbolPolyfill("[[CancelSteps]]");
        const PullSteps = SymbolPolyfill("[[PullSteps]]");
        const NumberIsFinite = Number.isFinite || function(x) {
          return typeof x === "number" && isFinite(x);
        };
        const MathTrunc = Math.trunc || function(v) {
          return v < 0 ? Math.ceil(v) : Math.floor(v);
        };
        function isDictionary(x) {
          return typeof x === "object" || typeof x === "function";
        }
        function assertDictionary(obj, context) {
          if (obj !== void 0 && !isDictionary(obj)) {
            throw new TypeError(`${context} is not an object.`);
          }
        }
        function assertFunction(x, context) {
          if (typeof x !== "function") {
            throw new TypeError(`${context} is not a function.`);
          }
        }
        function isObject(x) {
          return typeof x === "object" && x !== null || typeof x === "function";
        }
        function assertObject(x, context) {
          if (!isObject(x)) {
            throw new TypeError(`${context} is not an object.`);
          }
        }
        function assertRequiredArgument(x, position, context) {
          if (x === void 0) {
            throw new TypeError(`Parameter ${position} is required in '${context}'.`);
          }
        }
        function assertRequiredField(x, field, context) {
          if (x === void 0) {
            throw new TypeError(`${field} is required in '${context}'.`);
          }
        }
        function convertUnrestrictedDouble(value) {
          return Number(value);
        }
        function censorNegativeZero(x) {
          return x === 0 ? 0 : x;
        }
        function integerPart(x) {
          return censorNegativeZero(MathTrunc(x));
        }
        function convertUnsignedLongLongWithEnforceRange(value, context) {
          const lowerBound = 0;
          const upperBound = Number.MAX_SAFE_INTEGER;
          let x = Number(value);
          x = censorNegativeZero(x);
          if (!NumberIsFinite(x)) {
            throw new TypeError(`${context} is not a finite number`);
          }
          x = integerPart(x);
          if (x < lowerBound || x > upperBound) {
            throw new TypeError(`${context} is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`);
          }
          if (!NumberIsFinite(x) || x === 0) {
            return 0;
          }
          return x;
        }
        function assertReadableStream(x, context) {
          if (!IsReadableStream(x)) {
            throw new TypeError(`${context} is not a ReadableStream.`);
          }
        }
        function AcquireReadableStreamDefaultReader(stream) {
          return new ReadableStreamDefaultReader(stream);
        }
        function ReadableStreamAddReadRequest(stream, readRequest) {
          stream._reader._readRequests.push(readRequest);
        }
        function ReadableStreamFulfillReadRequest(stream, chunk, done) {
          const reader = stream._reader;
          const readRequest = reader._readRequests.shift();
          if (done) {
            readRequest._closeSteps();
          } else {
            readRequest._chunkSteps(chunk);
          }
        }
        function ReadableStreamGetNumReadRequests(stream) {
          return stream._reader._readRequests.length;
        }
        function ReadableStreamHasDefaultReader(stream) {
          const reader = stream._reader;
          if (reader === void 0) {
            return false;
          }
          if (!IsReadableStreamDefaultReader(reader)) {
            return false;
          }
          return true;
        }
        class ReadableStreamDefaultReader {
          constructor(stream) {
            assertRequiredArgument(stream, 1, "ReadableStreamDefaultReader");
            assertReadableStream(stream, "First parameter");
            if (IsReadableStreamLocked(stream)) {
              throw new TypeError("This stream has already been locked for exclusive reading by another reader");
            }
            ReadableStreamReaderGenericInitialize(this, stream);
            this._readRequests = new SimpleQueue();
          }
          get closed() {
            if (!IsReadableStreamDefaultReader(this)) {
              return promiseRejectedWith(defaultReaderBrandCheckException("closed"));
            }
            return this._closedPromise;
          }
          cancel(reason = void 0) {
            if (!IsReadableStreamDefaultReader(this)) {
              return promiseRejectedWith(defaultReaderBrandCheckException("cancel"));
            }
            if (this._ownerReadableStream === void 0) {
              return promiseRejectedWith(readerLockException("cancel"));
            }
            return ReadableStreamReaderGenericCancel(this, reason);
          }
          read() {
            if (!IsReadableStreamDefaultReader(this)) {
              return promiseRejectedWith(defaultReaderBrandCheckException("read"));
            }
            if (this._ownerReadableStream === void 0) {
              return promiseRejectedWith(readerLockException("read from"));
            }
            let resolvePromise;
            let rejectPromise;
            const promise = newPromise((resolve2, reject) => {
              resolvePromise = resolve2;
              rejectPromise = reject;
            });
            const readRequest = {
              _chunkSteps: (chunk) => resolvePromise({ value: chunk, done: false }),
              _closeSteps: () => resolvePromise({ value: void 0, done: true }),
              _errorSteps: (e) => rejectPromise(e)
            };
            ReadableStreamDefaultReaderRead(this, readRequest);
            return promise;
          }
          releaseLock() {
            if (!IsReadableStreamDefaultReader(this)) {
              throw defaultReaderBrandCheckException("releaseLock");
            }
            if (this._ownerReadableStream === void 0) {
              return;
            }
            if (this._readRequests.length > 0) {
              throw new TypeError("Tried to release a reader lock when that reader has pending read() calls un-settled");
            }
            ReadableStreamReaderGenericRelease(this);
          }
        }
        Object.defineProperties(ReadableStreamDefaultReader.prototype, {
          cancel: { enumerable: true },
          read: { enumerable: true },
          releaseLock: { enumerable: true },
          closed: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(ReadableStreamDefaultReader.prototype, SymbolPolyfill.toStringTag, {
            value: "ReadableStreamDefaultReader",
            configurable: true
          });
        }
        function IsReadableStreamDefaultReader(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_readRequests")) {
            return false;
          }
          return x instanceof ReadableStreamDefaultReader;
        }
        function ReadableStreamDefaultReaderRead(reader, readRequest) {
          const stream = reader._ownerReadableStream;
          stream._disturbed = true;
          if (stream._state === "closed") {
            readRequest._closeSteps();
          } else if (stream._state === "errored") {
            readRequest._errorSteps(stream._storedError);
          } else {
            stream._readableStreamController[PullSteps](readRequest);
          }
        }
        function defaultReaderBrandCheckException(name) {
          return new TypeError(`ReadableStreamDefaultReader.prototype.${name} can only be used on a ReadableStreamDefaultReader`);
        }
        const AsyncIteratorPrototype = Object.getPrototypeOf(Object.getPrototypeOf(async function* () {
        }).prototype);
        class ReadableStreamAsyncIteratorImpl {
          constructor(reader, preventCancel) {
            this._ongoingPromise = void 0;
            this._isFinished = false;
            this._reader = reader;
            this._preventCancel = preventCancel;
          }
          next() {
            const nextSteps = () => this._nextSteps();
            this._ongoingPromise = this._ongoingPromise ? transformPromiseWith(this._ongoingPromise, nextSteps, nextSteps) : nextSteps();
            return this._ongoingPromise;
          }
          return(value) {
            const returnSteps = () => this._returnSteps(value);
            return this._ongoingPromise ? transformPromiseWith(this._ongoingPromise, returnSteps, returnSteps) : returnSteps();
          }
          _nextSteps() {
            if (this._isFinished) {
              return Promise.resolve({ value: void 0, done: true });
            }
            const reader = this._reader;
            if (reader._ownerReadableStream === void 0) {
              return promiseRejectedWith(readerLockException("iterate"));
            }
            let resolvePromise;
            let rejectPromise;
            const promise = newPromise((resolve2, reject) => {
              resolvePromise = resolve2;
              rejectPromise = reject;
            });
            const readRequest = {
              _chunkSteps: (chunk) => {
                this._ongoingPromise = void 0;
                queueMicrotask(() => resolvePromise({ value: chunk, done: false }));
              },
              _closeSteps: () => {
                this._ongoingPromise = void 0;
                this._isFinished = true;
                ReadableStreamReaderGenericRelease(reader);
                resolvePromise({ value: void 0, done: true });
              },
              _errorSteps: (reason) => {
                this._ongoingPromise = void 0;
                this._isFinished = true;
                ReadableStreamReaderGenericRelease(reader);
                rejectPromise(reason);
              }
            };
            ReadableStreamDefaultReaderRead(reader, readRequest);
            return promise;
          }
          _returnSteps(value) {
            if (this._isFinished) {
              return Promise.resolve({ value, done: true });
            }
            this._isFinished = true;
            const reader = this._reader;
            if (reader._ownerReadableStream === void 0) {
              return promiseRejectedWith(readerLockException("finish iterating"));
            }
            if (!this._preventCancel) {
              const result = ReadableStreamReaderGenericCancel(reader, value);
              ReadableStreamReaderGenericRelease(reader);
              return transformPromiseWith(result, () => ({ value, done: true }));
            }
            ReadableStreamReaderGenericRelease(reader);
            return promiseResolvedWith({ value, done: true });
          }
        }
        const ReadableStreamAsyncIteratorPrototype = {
          next() {
            if (!IsReadableStreamAsyncIterator(this)) {
              return promiseRejectedWith(streamAsyncIteratorBrandCheckException("next"));
            }
            return this._asyncIteratorImpl.next();
          },
          return(value) {
            if (!IsReadableStreamAsyncIterator(this)) {
              return promiseRejectedWith(streamAsyncIteratorBrandCheckException("return"));
            }
            return this._asyncIteratorImpl.return(value);
          }
        };
        if (AsyncIteratorPrototype !== void 0) {
          Object.setPrototypeOf(ReadableStreamAsyncIteratorPrototype, AsyncIteratorPrototype);
        }
        function AcquireReadableStreamAsyncIterator(stream, preventCancel) {
          const reader = AcquireReadableStreamDefaultReader(stream);
          const impl = new ReadableStreamAsyncIteratorImpl(reader, preventCancel);
          const iterator = Object.create(ReadableStreamAsyncIteratorPrototype);
          iterator._asyncIteratorImpl = impl;
          return iterator;
        }
        function IsReadableStreamAsyncIterator(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_asyncIteratorImpl")) {
            return false;
          }
          try {
            return x._asyncIteratorImpl instanceof ReadableStreamAsyncIteratorImpl;
          } catch (_a) {
            return false;
          }
        }
        function streamAsyncIteratorBrandCheckException(name) {
          return new TypeError(`ReadableStreamAsyncIterator.${name} can only be used on a ReadableSteamAsyncIterator`);
        }
        const NumberIsNaN = Number.isNaN || function(x) {
          return x !== x;
        };
        function CreateArrayFromList(elements) {
          return elements.slice();
        }
        function CopyDataBlockBytes(dest, destOffset, src2, srcOffset, n) {
          new Uint8Array(dest).set(new Uint8Array(src2, srcOffset, n), destOffset);
        }
        function TransferArrayBuffer(O) {
          return O;
        }
        function IsDetachedBuffer(O) {
          return false;
        }
        function ArrayBufferSlice(buffer, begin, end) {
          if (buffer.slice) {
            return buffer.slice(begin, end);
          }
          const length = end - begin;
          const slice = new ArrayBuffer(length);
          CopyDataBlockBytes(slice, 0, buffer, begin, length);
          return slice;
        }
        function IsNonNegativeNumber(v) {
          if (typeof v !== "number") {
            return false;
          }
          if (NumberIsNaN(v)) {
            return false;
          }
          if (v < 0) {
            return false;
          }
          return true;
        }
        function CloneAsUint8Array(O) {
          const buffer = ArrayBufferSlice(O.buffer, O.byteOffset, O.byteOffset + O.byteLength);
          return new Uint8Array(buffer);
        }
        function DequeueValue(container) {
          const pair = container._queue.shift();
          container._queueTotalSize -= pair.size;
          if (container._queueTotalSize < 0) {
            container._queueTotalSize = 0;
          }
          return pair.value;
        }
        function EnqueueValueWithSize(container, value, size) {
          if (!IsNonNegativeNumber(size) || size === Infinity) {
            throw new RangeError("Size must be a finite, non-NaN, non-negative number.");
          }
          container._queue.push({ value, size });
          container._queueTotalSize += size;
        }
        function PeekQueueValue(container) {
          const pair = container._queue.peek();
          return pair.value;
        }
        function ResetQueue(container) {
          container._queue = new SimpleQueue();
          container._queueTotalSize = 0;
        }
        class ReadableStreamBYOBRequest {
          constructor() {
            throw new TypeError("Illegal constructor");
          }
          get view() {
            if (!IsReadableStreamBYOBRequest(this)) {
              throw byobRequestBrandCheckException("view");
            }
            return this._view;
          }
          respond(bytesWritten) {
            if (!IsReadableStreamBYOBRequest(this)) {
              throw byobRequestBrandCheckException("respond");
            }
            assertRequiredArgument(bytesWritten, 1, "respond");
            bytesWritten = convertUnsignedLongLongWithEnforceRange(bytesWritten, "First parameter");
            if (this._associatedReadableByteStreamController === void 0) {
              throw new TypeError("This BYOB request has been invalidated");
            }
            if (IsDetachedBuffer(this._view.buffer))
              ;
            ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);
          }
          respondWithNewView(view) {
            if (!IsReadableStreamBYOBRequest(this)) {
              throw byobRequestBrandCheckException("respondWithNewView");
            }
            assertRequiredArgument(view, 1, "respondWithNewView");
            if (!ArrayBuffer.isView(view)) {
              throw new TypeError("You can only respond with array buffer views");
            }
            if (this._associatedReadableByteStreamController === void 0) {
              throw new TypeError("This BYOB request has been invalidated");
            }
            if (IsDetachedBuffer(view.buffer))
              ;
            ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);
          }
        }
        Object.defineProperties(ReadableStreamBYOBRequest.prototype, {
          respond: { enumerable: true },
          respondWithNewView: { enumerable: true },
          view: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(ReadableStreamBYOBRequest.prototype, SymbolPolyfill.toStringTag, {
            value: "ReadableStreamBYOBRequest",
            configurable: true
          });
        }
        class ReadableByteStreamController {
          constructor() {
            throw new TypeError("Illegal constructor");
          }
          get byobRequest() {
            if (!IsReadableByteStreamController(this)) {
              throw byteStreamControllerBrandCheckException("byobRequest");
            }
            return ReadableByteStreamControllerGetBYOBRequest(this);
          }
          get desiredSize() {
            if (!IsReadableByteStreamController(this)) {
              throw byteStreamControllerBrandCheckException("desiredSize");
            }
            return ReadableByteStreamControllerGetDesiredSize(this);
          }
          close() {
            if (!IsReadableByteStreamController(this)) {
              throw byteStreamControllerBrandCheckException("close");
            }
            if (this._closeRequested) {
              throw new TypeError("The stream has already been closed; do not close it again!");
            }
            const state = this._controlledReadableByteStream._state;
            if (state !== "readable") {
              throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be closed`);
            }
            ReadableByteStreamControllerClose(this);
          }
          enqueue(chunk) {
            if (!IsReadableByteStreamController(this)) {
              throw byteStreamControllerBrandCheckException("enqueue");
            }
            assertRequiredArgument(chunk, 1, "enqueue");
            if (!ArrayBuffer.isView(chunk)) {
              throw new TypeError("chunk must be an array buffer view");
            }
            if (chunk.byteLength === 0) {
              throw new TypeError("chunk must have non-zero byteLength");
            }
            if (chunk.buffer.byteLength === 0) {
              throw new TypeError(`chunk's buffer must have non-zero byteLength`);
            }
            if (this._closeRequested) {
              throw new TypeError("stream is closed or draining");
            }
            const state = this._controlledReadableByteStream._state;
            if (state !== "readable") {
              throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be enqueued to`);
            }
            ReadableByteStreamControllerEnqueue(this, chunk);
          }
          error(e = void 0) {
            if (!IsReadableByteStreamController(this)) {
              throw byteStreamControllerBrandCheckException("error");
            }
            ReadableByteStreamControllerError(this, e);
          }
          [CancelSteps](reason) {
            ReadableByteStreamControllerClearPendingPullIntos(this);
            ResetQueue(this);
            const result = this._cancelAlgorithm(reason);
            ReadableByteStreamControllerClearAlgorithms(this);
            return result;
          }
          [PullSteps](readRequest) {
            const stream = this._controlledReadableByteStream;
            if (this._queueTotalSize > 0) {
              const entry = this._queue.shift();
              this._queueTotalSize -= entry.byteLength;
              ReadableByteStreamControllerHandleQueueDrain(this);
              const view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);
              readRequest._chunkSteps(view);
              return;
            }
            const autoAllocateChunkSize = this._autoAllocateChunkSize;
            if (autoAllocateChunkSize !== void 0) {
              let buffer;
              try {
                buffer = new ArrayBuffer(autoAllocateChunkSize);
              } catch (bufferE) {
                readRequest._errorSteps(bufferE);
                return;
              }
              const pullIntoDescriptor = {
                buffer,
                bufferByteLength: autoAllocateChunkSize,
                byteOffset: 0,
                byteLength: autoAllocateChunkSize,
                bytesFilled: 0,
                elementSize: 1,
                viewConstructor: Uint8Array,
                readerType: "default"
              };
              this._pendingPullIntos.push(pullIntoDescriptor);
            }
            ReadableStreamAddReadRequest(stream, readRequest);
            ReadableByteStreamControllerCallPullIfNeeded(this);
          }
        }
        Object.defineProperties(ReadableByteStreamController.prototype, {
          close: { enumerable: true },
          enqueue: { enumerable: true },
          error: { enumerable: true },
          byobRequest: { enumerable: true },
          desiredSize: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(ReadableByteStreamController.prototype, SymbolPolyfill.toStringTag, {
            value: "ReadableByteStreamController",
            configurable: true
          });
        }
        function IsReadableByteStreamController(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_controlledReadableByteStream")) {
            return false;
          }
          return x instanceof ReadableByteStreamController;
        }
        function IsReadableStreamBYOBRequest(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_associatedReadableByteStreamController")) {
            return false;
          }
          return x instanceof ReadableStreamBYOBRequest;
        }
        function ReadableByteStreamControllerCallPullIfNeeded(controller) {
          const shouldPull = ReadableByteStreamControllerShouldCallPull(controller);
          if (!shouldPull) {
            return;
          }
          if (controller._pulling) {
            controller._pullAgain = true;
            return;
          }
          controller._pulling = true;
          const pullPromise = controller._pullAlgorithm();
          uponPromise(pullPromise, () => {
            controller._pulling = false;
            if (controller._pullAgain) {
              controller._pullAgain = false;
              ReadableByteStreamControllerCallPullIfNeeded(controller);
            }
          }, (e) => {
            ReadableByteStreamControllerError(controller, e);
          });
        }
        function ReadableByteStreamControllerClearPendingPullIntos(controller) {
          ReadableByteStreamControllerInvalidateBYOBRequest(controller);
          controller._pendingPullIntos = new SimpleQueue();
        }
        function ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {
          let done = false;
          if (stream._state === "closed") {
            done = true;
          }
          const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);
          if (pullIntoDescriptor.readerType === "default") {
            ReadableStreamFulfillReadRequest(stream, filledView, done);
          } else {
            ReadableStreamFulfillReadIntoRequest(stream, filledView, done);
          }
        }
        function ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {
          const bytesFilled = pullIntoDescriptor.bytesFilled;
          const elementSize = pullIntoDescriptor.elementSize;
          return new pullIntoDescriptor.viewConstructor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);
        }
        function ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer, byteOffset, byteLength) {
          controller._queue.push({ buffer, byteOffset, byteLength });
          controller._queueTotalSize += byteLength;
        }
        function ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {
          const elementSize = pullIntoDescriptor.elementSize;
          const currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;
          const maxBytesToCopy = Math.min(controller._queueTotalSize, pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);
          const maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;
          const maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;
          let totalBytesToCopyRemaining = maxBytesToCopy;
          let ready = false;
          if (maxAlignedBytes > currentAlignedBytes) {
            totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;
            ready = true;
          }
          const queue = controller._queue;
          while (totalBytesToCopyRemaining > 0) {
            const headOfQueue = queue.peek();
            const bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);
            const destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;
            CopyDataBlockBytes(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);
            if (headOfQueue.byteLength === bytesToCopy) {
              queue.shift();
            } else {
              headOfQueue.byteOffset += bytesToCopy;
              headOfQueue.byteLength -= bytesToCopy;
            }
            controller._queueTotalSize -= bytesToCopy;
            ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);
            totalBytesToCopyRemaining -= bytesToCopy;
          }
          return ready;
        }
        function ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor) {
          pullIntoDescriptor.bytesFilled += size;
        }
        function ReadableByteStreamControllerHandleQueueDrain(controller) {
          if (controller._queueTotalSize === 0 && controller._closeRequested) {
            ReadableByteStreamControllerClearAlgorithms(controller);
            ReadableStreamClose(controller._controlledReadableByteStream);
          } else {
            ReadableByteStreamControllerCallPullIfNeeded(controller);
          }
        }
        function ReadableByteStreamControllerInvalidateBYOBRequest(controller) {
          if (controller._byobRequest === null) {
            return;
          }
          controller._byobRequest._associatedReadableByteStreamController = void 0;
          controller._byobRequest._view = null;
          controller._byobRequest = null;
        }
        function ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {
          while (controller._pendingPullIntos.length > 0) {
            if (controller._queueTotalSize === 0) {
              return;
            }
            const pullIntoDescriptor = controller._pendingPullIntos.peek();
            if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {
              ReadableByteStreamControllerShiftPendingPullInto(controller);
              ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);
            }
          }
        }
        function ReadableByteStreamControllerPullInto(controller, view, readIntoRequest) {
          const stream = controller._controlledReadableByteStream;
          let elementSize = 1;
          if (view.constructor !== DataView) {
            elementSize = view.constructor.BYTES_PER_ELEMENT;
          }
          const ctor = view.constructor;
          const buffer = TransferArrayBuffer(view.buffer);
          const pullIntoDescriptor = {
            buffer,
            bufferByteLength: buffer.byteLength,
            byteOffset: view.byteOffset,
            byteLength: view.byteLength,
            bytesFilled: 0,
            elementSize,
            viewConstructor: ctor,
            readerType: "byob"
          };
          if (controller._pendingPullIntos.length > 0) {
            controller._pendingPullIntos.push(pullIntoDescriptor);
            ReadableStreamAddReadIntoRequest(stream, readIntoRequest);
            return;
          }
          if (stream._state === "closed") {
            const emptyView = new ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);
            readIntoRequest._closeSteps(emptyView);
            return;
          }
          if (controller._queueTotalSize > 0) {
            if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {
              const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);
              ReadableByteStreamControllerHandleQueueDrain(controller);
              readIntoRequest._chunkSteps(filledView);
              return;
            }
            if (controller._closeRequested) {
              const e = new TypeError("Insufficient bytes to fill elements in the given buffer");
              ReadableByteStreamControllerError(controller, e);
              readIntoRequest._errorSteps(e);
              return;
            }
          }
          controller._pendingPullIntos.push(pullIntoDescriptor);
          ReadableStreamAddReadIntoRequest(stream, readIntoRequest);
          ReadableByteStreamControllerCallPullIfNeeded(controller);
        }
        function ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {
          const stream = controller._controlledReadableByteStream;
          if (ReadableStreamHasBYOBReader(stream)) {
            while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {
              const pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);
              ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);
            }
          }
        }
        function ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {
          ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);
          if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {
            return;
          }
          ReadableByteStreamControllerShiftPendingPullInto(controller);
          const remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;
          if (remainderSize > 0) {
            const end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;
            const remainder = ArrayBufferSlice(pullIntoDescriptor.buffer, end - remainderSize, end);
            ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);
          }
          pullIntoDescriptor.bytesFilled -= remainderSize;
          ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);
          ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);
        }
        function ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {
          const firstDescriptor = controller._pendingPullIntos.peek();
          ReadableByteStreamControllerInvalidateBYOBRequest(controller);
          const state = controller._controlledReadableByteStream._state;
          if (state === "closed") {
            ReadableByteStreamControllerRespondInClosedState(controller);
          } else {
            ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);
          }
          ReadableByteStreamControllerCallPullIfNeeded(controller);
        }
        function ReadableByteStreamControllerShiftPendingPullInto(controller) {
          const descriptor = controller._pendingPullIntos.shift();
          return descriptor;
        }
        function ReadableByteStreamControllerShouldCallPull(controller) {
          const stream = controller._controlledReadableByteStream;
          if (stream._state !== "readable") {
            return false;
          }
          if (controller._closeRequested) {
            return false;
          }
          if (!controller._started) {
            return false;
          }
          if (ReadableStreamHasDefaultReader(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {
            return true;
          }
          if (ReadableStreamHasBYOBReader(stream) && ReadableStreamGetNumReadIntoRequests(stream) > 0) {
            return true;
          }
          const desiredSize = ReadableByteStreamControllerGetDesiredSize(controller);
          if (desiredSize > 0) {
            return true;
          }
          return false;
        }
        function ReadableByteStreamControllerClearAlgorithms(controller) {
          controller._pullAlgorithm = void 0;
          controller._cancelAlgorithm = void 0;
        }
        function ReadableByteStreamControllerClose(controller) {
          const stream = controller._controlledReadableByteStream;
          if (controller._closeRequested || stream._state !== "readable") {
            return;
          }
          if (controller._queueTotalSize > 0) {
            controller._closeRequested = true;
            return;
          }
          if (controller._pendingPullIntos.length > 0) {
            const firstPendingPullInto = controller._pendingPullIntos.peek();
            if (firstPendingPullInto.bytesFilled > 0) {
              const e = new TypeError("Insufficient bytes to fill elements in the given buffer");
              ReadableByteStreamControllerError(controller, e);
              throw e;
            }
          }
          ReadableByteStreamControllerClearAlgorithms(controller);
          ReadableStreamClose(stream);
        }
        function ReadableByteStreamControllerEnqueue(controller, chunk) {
          const stream = controller._controlledReadableByteStream;
          if (controller._closeRequested || stream._state !== "readable") {
            return;
          }
          const buffer = chunk.buffer;
          const byteOffset = chunk.byteOffset;
          const byteLength = chunk.byteLength;
          const transferredBuffer = TransferArrayBuffer(buffer);
          if (controller._pendingPullIntos.length > 0) {
            const firstPendingPullInto = controller._pendingPullIntos.peek();
            if (IsDetachedBuffer(firstPendingPullInto.buffer))
              ;
            firstPendingPullInto.buffer = TransferArrayBuffer(firstPendingPullInto.buffer);
          }
          ReadableByteStreamControllerInvalidateBYOBRequest(controller);
          if (ReadableStreamHasDefaultReader(stream)) {
            if (ReadableStreamGetNumReadRequests(stream) === 0) {
              ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);
            } else {
              const transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);
              ReadableStreamFulfillReadRequest(stream, transferredView, false);
            }
          } else if (ReadableStreamHasBYOBReader(stream)) {
            ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);
            ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);
          } else {
            ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);
          }
          ReadableByteStreamControllerCallPullIfNeeded(controller);
        }
        function ReadableByteStreamControllerError(controller, e) {
          const stream = controller._controlledReadableByteStream;
          if (stream._state !== "readable") {
            return;
          }
          ReadableByteStreamControllerClearPendingPullIntos(controller);
          ResetQueue(controller);
          ReadableByteStreamControllerClearAlgorithms(controller);
          ReadableStreamError(stream, e);
        }
        function ReadableByteStreamControllerGetBYOBRequest(controller) {
          if (controller._byobRequest === null && controller._pendingPullIntos.length > 0) {
            const firstDescriptor = controller._pendingPullIntos.peek();
            const view = new Uint8Array(firstDescriptor.buffer, firstDescriptor.byteOffset + firstDescriptor.bytesFilled, firstDescriptor.byteLength - firstDescriptor.bytesFilled);
            const byobRequest = Object.create(ReadableStreamBYOBRequest.prototype);
            SetUpReadableStreamBYOBRequest(byobRequest, controller, view);
            controller._byobRequest = byobRequest;
          }
          return controller._byobRequest;
        }
        function ReadableByteStreamControllerGetDesiredSize(controller) {
          const state = controller._controlledReadableByteStream._state;
          if (state === "errored") {
            return null;
          }
          if (state === "closed") {
            return 0;
          }
          return controller._strategyHWM - controller._queueTotalSize;
        }
        function ReadableByteStreamControllerRespond(controller, bytesWritten) {
          const firstDescriptor = controller._pendingPullIntos.peek();
          const state = controller._controlledReadableByteStream._state;
          if (state === "closed") {
            if (bytesWritten !== 0) {
              throw new TypeError("bytesWritten must be 0 when calling respond() on a closed stream");
            }
          } else {
            if (bytesWritten === 0) {
              throw new TypeError("bytesWritten must be greater than 0 when calling respond() on a readable stream");
            }
            if (firstDescriptor.bytesFilled + bytesWritten > firstDescriptor.byteLength) {
              throw new RangeError("bytesWritten out of range");
            }
          }
          firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);
          ReadableByteStreamControllerRespondInternal(controller, bytesWritten);
        }
        function ReadableByteStreamControllerRespondWithNewView(controller, view) {
          const firstDescriptor = controller._pendingPullIntos.peek();
          const state = controller._controlledReadableByteStream._state;
          if (state === "closed") {
            if (view.byteLength !== 0) {
              throw new TypeError("The view's length must be 0 when calling respondWithNewView() on a closed stream");
            }
          } else {
            if (view.byteLength === 0) {
              throw new TypeError("The view's length must be greater than 0 when calling respondWithNewView() on a readable stream");
            }
          }
          if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {
            throw new RangeError("The region specified by view does not match byobRequest");
          }
          if (firstDescriptor.bufferByteLength !== view.buffer.byteLength) {
            throw new RangeError("The buffer of view has different capacity than byobRequest");
          }
          if (firstDescriptor.bytesFilled + view.byteLength > firstDescriptor.byteLength) {
            throw new RangeError("The region specified by view is larger than byobRequest");
          }
          firstDescriptor.buffer = TransferArrayBuffer(view.buffer);
          ReadableByteStreamControllerRespondInternal(controller, view.byteLength);
        }
        function SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize) {
          controller._controlledReadableByteStream = stream;
          controller._pullAgain = false;
          controller._pulling = false;
          controller._byobRequest = null;
          controller._queue = controller._queueTotalSize = void 0;
          ResetQueue(controller);
          controller._closeRequested = false;
          controller._started = false;
          controller._strategyHWM = highWaterMark;
          controller._pullAlgorithm = pullAlgorithm;
          controller._cancelAlgorithm = cancelAlgorithm;
          controller._autoAllocateChunkSize = autoAllocateChunkSize;
          controller._pendingPullIntos = new SimpleQueue();
          stream._readableStreamController = controller;
          const startResult = startAlgorithm();
          uponPromise(promiseResolvedWith(startResult), () => {
            controller._started = true;
            ReadableByteStreamControllerCallPullIfNeeded(controller);
          }, (r) => {
            ReadableByteStreamControllerError(controller, r);
          });
        }
        function SetUpReadableByteStreamControllerFromUnderlyingSource(stream, underlyingByteSource, highWaterMark) {
          const controller = Object.create(ReadableByteStreamController.prototype);
          let startAlgorithm = () => void 0;
          let pullAlgorithm = () => promiseResolvedWith(void 0);
          let cancelAlgorithm = () => promiseResolvedWith(void 0);
          if (underlyingByteSource.start !== void 0) {
            startAlgorithm = () => underlyingByteSource.start(controller);
          }
          if (underlyingByteSource.pull !== void 0) {
            pullAlgorithm = () => underlyingByteSource.pull(controller);
          }
          if (underlyingByteSource.cancel !== void 0) {
            cancelAlgorithm = (reason) => underlyingByteSource.cancel(reason);
          }
          const autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;
          if (autoAllocateChunkSize === 0) {
            throw new TypeError("autoAllocateChunkSize must be greater than 0");
          }
          SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize);
        }
        function SetUpReadableStreamBYOBRequest(request, controller, view) {
          request._associatedReadableByteStreamController = controller;
          request._view = view;
        }
        function byobRequestBrandCheckException(name) {
          return new TypeError(`ReadableStreamBYOBRequest.prototype.${name} can only be used on a ReadableStreamBYOBRequest`);
        }
        function byteStreamControllerBrandCheckException(name) {
          return new TypeError(`ReadableByteStreamController.prototype.${name} can only be used on a ReadableByteStreamController`);
        }
        function AcquireReadableStreamBYOBReader(stream) {
          return new ReadableStreamBYOBReader(stream);
        }
        function ReadableStreamAddReadIntoRequest(stream, readIntoRequest) {
          stream._reader._readIntoRequests.push(readIntoRequest);
        }
        function ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {
          const reader = stream._reader;
          const readIntoRequest = reader._readIntoRequests.shift();
          if (done) {
            readIntoRequest._closeSteps(chunk);
          } else {
            readIntoRequest._chunkSteps(chunk);
          }
        }
        function ReadableStreamGetNumReadIntoRequests(stream) {
          return stream._reader._readIntoRequests.length;
        }
        function ReadableStreamHasBYOBReader(stream) {
          const reader = stream._reader;
          if (reader === void 0) {
            return false;
          }
          if (!IsReadableStreamBYOBReader(reader)) {
            return false;
          }
          return true;
        }
        class ReadableStreamBYOBReader {
          constructor(stream) {
            assertRequiredArgument(stream, 1, "ReadableStreamBYOBReader");
            assertReadableStream(stream, "First parameter");
            if (IsReadableStreamLocked(stream)) {
              throw new TypeError("This stream has already been locked for exclusive reading by another reader");
            }
            if (!IsReadableByteStreamController(stream._readableStreamController)) {
              throw new TypeError("Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte source");
            }
            ReadableStreamReaderGenericInitialize(this, stream);
            this._readIntoRequests = new SimpleQueue();
          }
          get closed() {
            if (!IsReadableStreamBYOBReader(this)) {
              return promiseRejectedWith(byobReaderBrandCheckException("closed"));
            }
            return this._closedPromise;
          }
          cancel(reason = void 0) {
            if (!IsReadableStreamBYOBReader(this)) {
              return promiseRejectedWith(byobReaderBrandCheckException("cancel"));
            }
            if (this._ownerReadableStream === void 0) {
              return promiseRejectedWith(readerLockException("cancel"));
            }
            return ReadableStreamReaderGenericCancel(this, reason);
          }
          read(view) {
            if (!IsReadableStreamBYOBReader(this)) {
              return promiseRejectedWith(byobReaderBrandCheckException("read"));
            }
            if (!ArrayBuffer.isView(view)) {
              return promiseRejectedWith(new TypeError("view must be an array buffer view"));
            }
            if (view.byteLength === 0) {
              return promiseRejectedWith(new TypeError("view must have non-zero byteLength"));
            }
            if (view.buffer.byteLength === 0) {
              return promiseRejectedWith(new TypeError(`view's buffer must have non-zero byteLength`));
            }
            if (IsDetachedBuffer(view.buffer))
              ;
            if (this._ownerReadableStream === void 0) {
              return promiseRejectedWith(readerLockException("read from"));
            }
            let resolvePromise;
            let rejectPromise;
            const promise = newPromise((resolve2, reject) => {
              resolvePromise = resolve2;
              rejectPromise = reject;
            });
            const readIntoRequest = {
              _chunkSteps: (chunk) => resolvePromise({ value: chunk, done: false }),
              _closeSteps: (chunk) => resolvePromise({ value: chunk, done: true }),
              _errorSteps: (e) => rejectPromise(e)
            };
            ReadableStreamBYOBReaderRead(this, view, readIntoRequest);
            return promise;
          }
          releaseLock() {
            if (!IsReadableStreamBYOBReader(this)) {
              throw byobReaderBrandCheckException("releaseLock");
            }
            if (this._ownerReadableStream === void 0) {
              return;
            }
            if (this._readIntoRequests.length > 0) {
              throw new TypeError("Tried to release a reader lock when that reader has pending read() calls un-settled");
            }
            ReadableStreamReaderGenericRelease(this);
          }
        }
        Object.defineProperties(ReadableStreamBYOBReader.prototype, {
          cancel: { enumerable: true },
          read: { enumerable: true },
          releaseLock: { enumerable: true },
          closed: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(ReadableStreamBYOBReader.prototype, SymbolPolyfill.toStringTag, {
            value: "ReadableStreamBYOBReader",
            configurable: true
          });
        }
        function IsReadableStreamBYOBReader(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_readIntoRequests")) {
            return false;
          }
          return x instanceof ReadableStreamBYOBReader;
        }
        function ReadableStreamBYOBReaderRead(reader, view, readIntoRequest) {
          const stream = reader._ownerReadableStream;
          stream._disturbed = true;
          if (stream._state === "errored") {
            readIntoRequest._errorSteps(stream._storedError);
          } else {
            ReadableByteStreamControllerPullInto(stream._readableStreamController, view, readIntoRequest);
          }
        }
        function byobReaderBrandCheckException(name) {
          return new TypeError(`ReadableStreamBYOBReader.prototype.${name} can only be used on a ReadableStreamBYOBReader`);
        }
        function ExtractHighWaterMark(strategy, defaultHWM) {
          const { highWaterMark } = strategy;
          if (highWaterMark === void 0) {
            return defaultHWM;
          }
          if (NumberIsNaN(highWaterMark) || highWaterMark < 0) {
            throw new RangeError("Invalid highWaterMark");
          }
          return highWaterMark;
        }
        function ExtractSizeAlgorithm(strategy) {
          const { size } = strategy;
          if (!size) {
            return () => 1;
          }
          return size;
        }
        function convertQueuingStrategy(init2, context) {
          assertDictionary(init2, context);
          const highWaterMark = init2 === null || init2 === void 0 ? void 0 : init2.highWaterMark;
          const size = init2 === null || init2 === void 0 ? void 0 : init2.size;
          return {
            highWaterMark: highWaterMark === void 0 ? void 0 : convertUnrestrictedDouble(highWaterMark),
            size: size === void 0 ? void 0 : convertQueuingStrategySize(size, `${context} has member 'size' that`)
          };
        }
        function convertQueuingStrategySize(fn, context) {
          assertFunction(fn, context);
          return (chunk) => convertUnrestrictedDouble(fn(chunk));
        }
        function convertUnderlyingSink(original, context) {
          assertDictionary(original, context);
          const abort = original === null || original === void 0 ? void 0 : original.abort;
          const close = original === null || original === void 0 ? void 0 : original.close;
          const start = original === null || original === void 0 ? void 0 : original.start;
          const type = original === null || original === void 0 ? void 0 : original.type;
          const write = original === null || original === void 0 ? void 0 : original.write;
          return {
            abort: abort === void 0 ? void 0 : convertUnderlyingSinkAbortCallback(abort, original, `${context} has member 'abort' that`),
            close: close === void 0 ? void 0 : convertUnderlyingSinkCloseCallback(close, original, `${context} has member 'close' that`),
            start: start === void 0 ? void 0 : convertUnderlyingSinkStartCallback(start, original, `${context} has member 'start' that`),
            write: write === void 0 ? void 0 : convertUnderlyingSinkWriteCallback(write, original, `${context} has member 'write' that`),
            type
          };
        }
        function convertUnderlyingSinkAbortCallback(fn, original, context) {
          assertFunction(fn, context);
          return (reason) => promiseCall(fn, original, [reason]);
        }
        function convertUnderlyingSinkCloseCallback(fn, original, context) {
          assertFunction(fn, context);
          return () => promiseCall(fn, original, []);
        }
        function convertUnderlyingSinkStartCallback(fn, original, context) {
          assertFunction(fn, context);
          return (controller) => reflectCall(fn, original, [controller]);
        }
        function convertUnderlyingSinkWriteCallback(fn, original, context) {
          assertFunction(fn, context);
          return (chunk, controller) => promiseCall(fn, original, [chunk, controller]);
        }
        function assertWritableStream(x, context) {
          if (!IsWritableStream(x)) {
            throw new TypeError(`${context} is not a WritableStream.`);
          }
        }
        function isAbortSignal2(value) {
          if (typeof value !== "object" || value === null) {
            return false;
          }
          try {
            return typeof value.aborted === "boolean";
          } catch (_a) {
            return false;
          }
        }
        const supportsAbortController = typeof AbortController === "function";
        function createAbortController() {
          if (supportsAbortController) {
            return new AbortController();
          }
          return void 0;
        }
        class WritableStream {
          constructor(rawUnderlyingSink = {}, rawStrategy = {}) {
            if (rawUnderlyingSink === void 0) {
              rawUnderlyingSink = null;
            } else {
              assertObject(rawUnderlyingSink, "First parameter");
            }
            const strategy = convertQueuingStrategy(rawStrategy, "Second parameter");
            const underlyingSink = convertUnderlyingSink(rawUnderlyingSink, "First parameter");
            InitializeWritableStream(this);
            const type = underlyingSink.type;
            if (type !== void 0) {
              throw new RangeError("Invalid type is specified");
            }
            const sizeAlgorithm = ExtractSizeAlgorithm(strategy);
            const highWaterMark = ExtractHighWaterMark(strategy, 1);
            SetUpWritableStreamDefaultControllerFromUnderlyingSink(this, underlyingSink, highWaterMark, sizeAlgorithm);
          }
          get locked() {
            if (!IsWritableStream(this)) {
              throw streamBrandCheckException$2("locked");
            }
            return IsWritableStreamLocked(this);
          }
          abort(reason = void 0) {
            if (!IsWritableStream(this)) {
              return promiseRejectedWith(streamBrandCheckException$2("abort"));
            }
            if (IsWritableStreamLocked(this)) {
              return promiseRejectedWith(new TypeError("Cannot abort a stream that already has a writer"));
            }
            return WritableStreamAbort(this, reason);
          }
          close() {
            if (!IsWritableStream(this)) {
              return promiseRejectedWith(streamBrandCheckException$2("close"));
            }
            if (IsWritableStreamLocked(this)) {
              return promiseRejectedWith(new TypeError("Cannot close a stream that already has a writer"));
            }
            if (WritableStreamCloseQueuedOrInFlight(this)) {
              return promiseRejectedWith(new TypeError("Cannot close an already-closing stream"));
            }
            return WritableStreamClose(this);
          }
          getWriter() {
            if (!IsWritableStream(this)) {
              throw streamBrandCheckException$2("getWriter");
            }
            return AcquireWritableStreamDefaultWriter(this);
          }
        }
        Object.defineProperties(WritableStream.prototype, {
          abort: { enumerable: true },
          close: { enumerable: true },
          getWriter: { enumerable: true },
          locked: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(WritableStream.prototype, SymbolPolyfill.toStringTag, {
            value: "WritableStream",
            configurable: true
          });
        }
        function AcquireWritableStreamDefaultWriter(stream) {
          return new WritableStreamDefaultWriter(stream);
        }
        function CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark = 1, sizeAlgorithm = () => 1) {
          const stream = Object.create(WritableStream.prototype);
          InitializeWritableStream(stream);
          const controller = Object.create(WritableStreamDefaultController.prototype);
          SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);
          return stream;
        }
        function InitializeWritableStream(stream) {
          stream._state = "writable";
          stream._storedError = void 0;
          stream._writer = void 0;
          stream._writableStreamController = void 0;
          stream._writeRequests = new SimpleQueue();
          stream._inFlightWriteRequest = void 0;
          stream._closeRequest = void 0;
          stream._inFlightCloseRequest = void 0;
          stream._pendingAbortRequest = void 0;
          stream._backpressure = false;
        }
        function IsWritableStream(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_writableStreamController")) {
            return false;
          }
          return x instanceof WritableStream;
        }
        function IsWritableStreamLocked(stream) {
          if (stream._writer === void 0) {
            return false;
          }
          return true;
        }
        function WritableStreamAbort(stream, reason) {
          var _a;
          if (stream._state === "closed" || stream._state === "errored") {
            return promiseResolvedWith(void 0);
          }
          stream._writableStreamController._abortReason = reason;
          (_a = stream._writableStreamController._abortController) === null || _a === void 0 ? void 0 : _a.abort();
          const state = stream._state;
          if (state === "closed" || state === "errored") {
            return promiseResolvedWith(void 0);
          }
          if (stream._pendingAbortRequest !== void 0) {
            return stream._pendingAbortRequest._promise;
          }
          let wasAlreadyErroring = false;
          if (state === "erroring") {
            wasAlreadyErroring = true;
            reason = void 0;
          }
          const promise = newPromise((resolve2, reject) => {
            stream._pendingAbortRequest = {
              _promise: void 0,
              _resolve: resolve2,
              _reject: reject,
              _reason: reason,
              _wasAlreadyErroring: wasAlreadyErroring
            };
          });
          stream._pendingAbortRequest._promise = promise;
          if (!wasAlreadyErroring) {
            WritableStreamStartErroring(stream, reason);
          }
          return promise;
        }
        function WritableStreamClose(stream) {
          const state = stream._state;
          if (state === "closed" || state === "errored") {
            return promiseRejectedWith(new TypeError(`The stream (in ${state} state) is not in the writable state and cannot be closed`));
          }
          const promise = newPromise((resolve2, reject) => {
            const closeRequest = {
              _resolve: resolve2,
              _reject: reject
            };
            stream._closeRequest = closeRequest;
          });
          const writer = stream._writer;
          if (writer !== void 0 && stream._backpressure && state === "writable") {
            defaultWriterReadyPromiseResolve(writer);
          }
          WritableStreamDefaultControllerClose(stream._writableStreamController);
          return promise;
        }
        function WritableStreamAddWriteRequest(stream) {
          const promise = newPromise((resolve2, reject) => {
            const writeRequest = {
              _resolve: resolve2,
              _reject: reject
            };
            stream._writeRequests.push(writeRequest);
          });
          return promise;
        }
        function WritableStreamDealWithRejection(stream, error2) {
          const state = stream._state;
          if (state === "writable") {
            WritableStreamStartErroring(stream, error2);
            return;
          }
          WritableStreamFinishErroring(stream);
        }
        function WritableStreamStartErroring(stream, reason) {
          const controller = stream._writableStreamController;
          stream._state = "erroring";
          stream._storedError = reason;
          const writer = stream._writer;
          if (writer !== void 0) {
            WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);
          }
          if (!WritableStreamHasOperationMarkedInFlight(stream) && controller._started) {
            WritableStreamFinishErroring(stream);
          }
        }
        function WritableStreamFinishErroring(stream) {
          stream._state = "errored";
          stream._writableStreamController[ErrorSteps]();
          const storedError = stream._storedError;
          stream._writeRequests.forEach((writeRequest) => {
            writeRequest._reject(storedError);
          });
          stream._writeRequests = new SimpleQueue();
          if (stream._pendingAbortRequest === void 0) {
            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);
            return;
          }
          const abortRequest = stream._pendingAbortRequest;
          stream._pendingAbortRequest = void 0;
          if (abortRequest._wasAlreadyErroring) {
            abortRequest._reject(storedError);
            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);
            return;
          }
          const promise = stream._writableStreamController[AbortSteps](abortRequest._reason);
          uponPromise(promise, () => {
            abortRequest._resolve();
            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);
          }, (reason) => {
            abortRequest._reject(reason);
            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);
          });
        }
        function WritableStreamFinishInFlightWrite(stream) {
          stream._inFlightWriteRequest._resolve(void 0);
          stream._inFlightWriteRequest = void 0;
        }
        function WritableStreamFinishInFlightWriteWithError(stream, error2) {
          stream._inFlightWriteRequest._reject(error2);
          stream._inFlightWriteRequest = void 0;
          WritableStreamDealWithRejection(stream, error2);
        }
        function WritableStreamFinishInFlightClose(stream) {
          stream._inFlightCloseRequest._resolve(void 0);
          stream._inFlightCloseRequest = void 0;
          const state = stream._state;
          if (state === "erroring") {
            stream._storedError = void 0;
            if (stream._pendingAbortRequest !== void 0) {
              stream._pendingAbortRequest._resolve();
              stream._pendingAbortRequest = void 0;
            }
          }
          stream._state = "closed";
          const writer = stream._writer;
          if (writer !== void 0) {
            defaultWriterClosedPromiseResolve(writer);
          }
        }
        function WritableStreamFinishInFlightCloseWithError(stream, error2) {
          stream._inFlightCloseRequest._reject(error2);
          stream._inFlightCloseRequest = void 0;
          if (stream._pendingAbortRequest !== void 0) {
            stream._pendingAbortRequest._reject(error2);
            stream._pendingAbortRequest = void 0;
          }
          WritableStreamDealWithRejection(stream, error2);
        }
        function WritableStreamCloseQueuedOrInFlight(stream) {
          if (stream._closeRequest === void 0 && stream._inFlightCloseRequest === void 0) {
            return false;
          }
          return true;
        }
        function WritableStreamHasOperationMarkedInFlight(stream) {
          if (stream._inFlightWriteRequest === void 0 && stream._inFlightCloseRequest === void 0) {
            return false;
          }
          return true;
        }
        function WritableStreamMarkCloseRequestInFlight(stream) {
          stream._inFlightCloseRequest = stream._closeRequest;
          stream._closeRequest = void 0;
        }
        function WritableStreamMarkFirstWriteRequestInFlight(stream) {
          stream._inFlightWriteRequest = stream._writeRequests.shift();
        }
        function WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {
          if (stream._closeRequest !== void 0) {
            stream._closeRequest._reject(stream._storedError);
            stream._closeRequest = void 0;
          }
          const writer = stream._writer;
          if (writer !== void 0) {
            defaultWriterClosedPromiseReject(writer, stream._storedError);
          }
        }
        function WritableStreamUpdateBackpressure(stream, backpressure) {
          const writer = stream._writer;
          if (writer !== void 0 && backpressure !== stream._backpressure) {
            if (backpressure) {
              defaultWriterReadyPromiseReset(writer);
            } else {
              defaultWriterReadyPromiseResolve(writer);
            }
          }
          stream._backpressure = backpressure;
        }
        class WritableStreamDefaultWriter {
          constructor(stream) {
            assertRequiredArgument(stream, 1, "WritableStreamDefaultWriter");
            assertWritableStream(stream, "First parameter");
            if (IsWritableStreamLocked(stream)) {
              throw new TypeError("This stream has already been locked for exclusive writing by another writer");
            }
            this._ownerWritableStream = stream;
            stream._writer = this;
            const state = stream._state;
            if (state === "writable") {
              if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._backpressure) {
                defaultWriterReadyPromiseInitialize(this);
              } else {
                defaultWriterReadyPromiseInitializeAsResolved(this);
              }
              defaultWriterClosedPromiseInitialize(this);
            } else if (state === "erroring") {
              defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);
              defaultWriterClosedPromiseInitialize(this);
            } else if (state === "closed") {
              defaultWriterReadyPromiseInitializeAsResolved(this);
              defaultWriterClosedPromiseInitializeAsResolved(this);
            } else {
              const storedError = stream._storedError;
              defaultWriterReadyPromiseInitializeAsRejected(this, storedError);
              defaultWriterClosedPromiseInitializeAsRejected(this, storedError);
            }
          }
          get closed() {
            if (!IsWritableStreamDefaultWriter(this)) {
              return promiseRejectedWith(defaultWriterBrandCheckException("closed"));
            }
            return this._closedPromise;
          }
          get desiredSize() {
            if (!IsWritableStreamDefaultWriter(this)) {
              throw defaultWriterBrandCheckException("desiredSize");
            }
            if (this._ownerWritableStream === void 0) {
              throw defaultWriterLockException("desiredSize");
            }
            return WritableStreamDefaultWriterGetDesiredSize(this);
          }
          get ready() {
            if (!IsWritableStreamDefaultWriter(this)) {
              return promiseRejectedWith(defaultWriterBrandCheckException("ready"));
            }
            return this._readyPromise;
          }
          abort(reason = void 0) {
            if (!IsWritableStreamDefaultWriter(this)) {
              return promiseRejectedWith(defaultWriterBrandCheckException("abort"));
            }
            if (this._ownerWritableStream === void 0) {
              return promiseRejectedWith(defaultWriterLockException("abort"));
            }
            return WritableStreamDefaultWriterAbort(this, reason);
          }
          close() {
            if (!IsWritableStreamDefaultWriter(this)) {
              return promiseRejectedWith(defaultWriterBrandCheckException("close"));
            }
            const stream = this._ownerWritableStream;
            if (stream === void 0) {
              return promiseRejectedWith(defaultWriterLockException("close"));
            }
            if (WritableStreamCloseQueuedOrInFlight(stream)) {
              return promiseRejectedWith(new TypeError("Cannot close an already-closing stream"));
            }
            return WritableStreamDefaultWriterClose(this);
          }
          releaseLock() {
            if (!IsWritableStreamDefaultWriter(this)) {
              throw defaultWriterBrandCheckException("releaseLock");
            }
            const stream = this._ownerWritableStream;
            if (stream === void 0) {
              return;
            }
            WritableStreamDefaultWriterRelease(this);
          }
          write(chunk = void 0) {
            if (!IsWritableStreamDefaultWriter(this)) {
              return promiseRejectedWith(defaultWriterBrandCheckException("write"));
            }
            if (this._ownerWritableStream === void 0) {
              return promiseRejectedWith(defaultWriterLockException("write to"));
            }
            return WritableStreamDefaultWriterWrite(this, chunk);
          }
        }
        Object.defineProperties(WritableStreamDefaultWriter.prototype, {
          abort: { enumerable: true },
          close: { enumerable: true },
          releaseLock: { enumerable: true },
          write: { enumerable: true },
          closed: { enumerable: true },
          desiredSize: { enumerable: true },
          ready: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(WritableStreamDefaultWriter.prototype, SymbolPolyfill.toStringTag, {
            value: "WritableStreamDefaultWriter",
            configurable: true
          });
        }
        function IsWritableStreamDefaultWriter(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_ownerWritableStream")) {
            return false;
          }
          return x instanceof WritableStreamDefaultWriter;
        }
        function WritableStreamDefaultWriterAbort(writer, reason) {
          const stream = writer._ownerWritableStream;
          return WritableStreamAbort(stream, reason);
        }
        function WritableStreamDefaultWriterClose(writer) {
          const stream = writer._ownerWritableStream;
          return WritableStreamClose(stream);
        }
        function WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {
          const stream = writer._ownerWritableStream;
          const state = stream._state;
          if (WritableStreamCloseQueuedOrInFlight(stream) || state === "closed") {
            return promiseResolvedWith(void 0);
          }
          if (state === "errored") {
            return promiseRejectedWith(stream._storedError);
          }
          return WritableStreamDefaultWriterClose(writer);
        }
        function WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, error2) {
          if (writer._closedPromiseState === "pending") {
            defaultWriterClosedPromiseReject(writer, error2);
          } else {
            defaultWriterClosedPromiseResetToRejected(writer, error2);
          }
        }
        function WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error2) {
          if (writer._readyPromiseState === "pending") {
            defaultWriterReadyPromiseReject(writer, error2);
          } else {
            defaultWriterReadyPromiseResetToRejected(writer, error2);
          }
        }
        function WritableStreamDefaultWriterGetDesiredSize(writer) {
          const stream = writer._ownerWritableStream;
          const state = stream._state;
          if (state === "errored" || state === "erroring") {
            return null;
          }
          if (state === "closed") {
            return 0;
          }
          return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);
        }
        function WritableStreamDefaultWriterRelease(writer) {
          const stream = writer._ownerWritableStream;
          const releasedError = new TypeError(`Writer was released and can no longer be used to monitor the stream's closedness`);
          WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);
          WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);
          stream._writer = void 0;
          writer._ownerWritableStream = void 0;
        }
        function WritableStreamDefaultWriterWrite(writer, chunk) {
          const stream = writer._ownerWritableStream;
          const controller = stream._writableStreamController;
          const chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);
          if (stream !== writer._ownerWritableStream) {
            return promiseRejectedWith(defaultWriterLockException("write to"));
          }
          const state = stream._state;
          if (state === "errored") {
            return promiseRejectedWith(stream._storedError);
          }
          if (WritableStreamCloseQueuedOrInFlight(stream) || state === "closed") {
            return promiseRejectedWith(new TypeError("The stream is closing or closed and cannot be written to"));
          }
          if (state === "erroring") {
            return promiseRejectedWith(stream._storedError);
          }
          const promise = WritableStreamAddWriteRequest(stream);
          WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);
          return promise;
        }
        const closeSentinel = {};
        class WritableStreamDefaultController {
          constructor() {
            throw new TypeError("Illegal constructor");
          }
          get abortReason() {
            if (!IsWritableStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException$2("abortReason");
            }
            return this._abortReason;
          }
          get signal() {
            if (!IsWritableStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException$2("signal");
            }
            if (this._abortController === void 0) {
              throw new TypeError("WritableStreamDefaultController.prototype.signal is not supported");
            }
            return this._abortController.signal;
          }
          error(e = void 0) {
            if (!IsWritableStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException$2("error");
            }
            const state = this._controlledWritableStream._state;
            if (state !== "writable") {
              return;
            }
            WritableStreamDefaultControllerError(this, e);
          }
          [AbortSteps](reason) {
            const result = this._abortAlgorithm(reason);
            WritableStreamDefaultControllerClearAlgorithms(this);
            return result;
          }
          [ErrorSteps]() {
            ResetQueue(this);
          }
        }
        Object.defineProperties(WritableStreamDefaultController.prototype, {
          error: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(WritableStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {
            value: "WritableStreamDefaultController",
            configurable: true
          });
        }
        function IsWritableStreamDefaultController(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_controlledWritableStream")) {
            return false;
          }
          return x instanceof WritableStreamDefaultController;
        }
        function SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm) {
          controller._controlledWritableStream = stream;
          stream._writableStreamController = controller;
          controller._queue = void 0;
          controller._queueTotalSize = void 0;
          ResetQueue(controller);
          controller._abortReason = void 0;
          controller._abortController = createAbortController();
          controller._started = false;
          controller._strategySizeAlgorithm = sizeAlgorithm;
          controller._strategyHWM = highWaterMark;
          controller._writeAlgorithm = writeAlgorithm;
          controller._closeAlgorithm = closeAlgorithm;
          controller._abortAlgorithm = abortAlgorithm;
          const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);
          WritableStreamUpdateBackpressure(stream, backpressure);
          const startResult = startAlgorithm();
          const startPromise = promiseResolvedWith(startResult);
          uponPromise(startPromise, () => {
            controller._started = true;
            WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);
          }, (r) => {
            controller._started = true;
            WritableStreamDealWithRejection(stream, r);
          });
        }
        function SetUpWritableStreamDefaultControllerFromUnderlyingSink(stream, underlyingSink, highWaterMark, sizeAlgorithm) {
          const controller = Object.create(WritableStreamDefaultController.prototype);
          let startAlgorithm = () => void 0;
          let writeAlgorithm = () => promiseResolvedWith(void 0);
          let closeAlgorithm = () => promiseResolvedWith(void 0);
          let abortAlgorithm = () => promiseResolvedWith(void 0);
          if (underlyingSink.start !== void 0) {
            startAlgorithm = () => underlyingSink.start(controller);
          }
          if (underlyingSink.write !== void 0) {
            writeAlgorithm = (chunk) => underlyingSink.write(chunk, controller);
          }
          if (underlyingSink.close !== void 0) {
            closeAlgorithm = () => underlyingSink.close();
          }
          if (underlyingSink.abort !== void 0) {
            abortAlgorithm = (reason) => underlyingSink.abort(reason);
          }
          SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);
        }
        function WritableStreamDefaultControllerClearAlgorithms(controller) {
          controller._writeAlgorithm = void 0;
          controller._closeAlgorithm = void 0;
          controller._abortAlgorithm = void 0;
          controller._strategySizeAlgorithm = void 0;
        }
        function WritableStreamDefaultControllerClose(controller) {
          EnqueueValueWithSize(controller, closeSentinel, 0);
          WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);
        }
        function WritableStreamDefaultControllerGetChunkSize(controller, chunk) {
          try {
            return controller._strategySizeAlgorithm(chunk);
          } catch (chunkSizeE) {
            WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);
            return 1;
          }
        }
        function WritableStreamDefaultControllerGetDesiredSize(controller) {
          return controller._strategyHWM - controller._queueTotalSize;
        }
        function WritableStreamDefaultControllerWrite(controller, chunk, chunkSize) {
          try {
            EnqueueValueWithSize(controller, chunk, chunkSize);
          } catch (enqueueE) {
            WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);
            return;
          }
          const stream = controller._controlledWritableStream;
          if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._state === "writable") {
            const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);
            WritableStreamUpdateBackpressure(stream, backpressure);
          }
          WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);
        }
        function WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {
          const stream = controller._controlledWritableStream;
          if (!controller._started) {
            return;
          }
          if (stream._inFlightWriteRequest !== void 0) {
            return;
          }
          const state = stream._state;
          if (state === "erroring") {
            WritableStreamFinishErroring(stream);
            return;
          }
          if (controller._queue.length === 0) {
            return;
          }
          const value = PeekQueueValue(controller);
          if (value === closeSentinel) {
            WritableStreamDefaultControllerProcessClose(controller);
          } else {
            WritableStreamDefaultControllerProcessWrite(controller, value);
          }
        }
        function WritableStreamDefaultControllerErrorIfNeeded(controller, error2) {
          if (controller._controlledWritableStream._state === "writable") {
            WritableStreamDefaultControllerError(controller, error2);
          }
        }
        function WritableStreamDefaultControllerProcessClose(controller) {
          const stream = controller._controlledWritableStream;
          WritableStreamMarkCloseRequestInFlight(stream);
          DequeueValue(controller);
          const sinkClosePromise = controller._closeAlgorithm();
          WritableStreamDefaultControllerClearAlgorithms(controller);
          uponPromise(sinkClosePromise, () => {
            WritableStreamFinishInFlightClose(stream);
          }, (reason) => {
            WritableStreamFinishInFlightCloseWithError(stream, reason);
          });
        }
        function WritableStreamDefaultControllerProcessWrite(controller, chunk) {
          const stream = controller._controlledWritableStream;
          WritableStreamMarkFirstWriteRequestInFlight(stream);
          const sinkWritePromise = controller._writeAlgorithm(chunk);
          uponPromise(sinkWritePromise, () => {
            WritableStreamFinishInFlightWrite(stream);
            const state = stream._state;
            DequeueValue(controller);
            if (!WritableStreamCloseQueuedOrInFlight(stream) && state === "writable") {
              const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);
              WritableStreamUpdateBackpressure(stream, backpressure);
            }
            WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);
          }, (reason) => {
            if (stream._state === "writable") {
              WritableStreamDefaultControllerClearAlgorithms(controller);
            }
            WritableStreamFinishInFlightWriteWithError(stream, reason);
          });
        }
        function WritableStreamDefaultControllerGetBackpressure(controller) {
          const desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);
          return desiredSize <= 0;
        }
        function WritableStreamDefaultControllerError(controller, error2) {
          const stream = controller._controlledWritableStream;
          WritableStreamDefaultControllerClearAlgorithms(controller);
          WritableStreamStartErroring(stream, error2);
        }
        function streamBrandCheckException$2(name) {
          return new TypeError(`WritableStream.prototype.${name} can only be used on a WritableStream`);
        }
        function defaultControllerBrandCheckException$2(name) {
          return new TypeError(`WritableStreamDefaultController.prototype.${name} can only be used on a WritableStreamDefaultController`);
        }
        function defaultWriterBrandCheckException(name) {
          return new TypeError(`WritableStreamDefaultWriter.prototype.${name} can only be used on a WritableStreamDefaultWriter`);
        }
        function defaultWriterLockException(name) {
          return new TypeError("Cannot " + name + " a stream using a released writer");
        }
        function defaultWriterClosedPromiseInitialize(writer) {
          writer._closedPromise = newPromise((resolve2, reject) => {
            writer._closedPromise_resolve = resolve2;
            writer._closedPromise_reject = reject;
            writer._closedPromiseState = "pending";
          });
        }
        function defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {
          defaultWriterClosedPromiseInitialize(writer);
          defaultWriterClosedPromiseReject(writer, reason);
        }
        function defaultWriterClosedPromiseInitializeAsResolved(writer) {
          defaultWriterClosedPromiseInitialize(writer);
          defaultWriterClosedPromiseResolve(writer);
        }
        function defaultWriterClosedPromiseReject(writer, reason) {
          if (writer._closedPromise_reject === void 0) {
            return;
          }
          setPromiseIsHandledToTrue(writer._closedPromise);
          writer._closedPromise_reject(reason);
          writer._closedPromise_resolve = void 0;
          writer._closedPromise_reject = void 0;
          writer._closedPromiseState = "rejected";
        }
        function defaultWriterClosedPromiseResetToRejected(writer, reason) {
          defaultWriterClosedPromiseInitializeAsRejected(writer, reason);
        }
        function defaultWriterClosedPromiseResolve(writer) {
          if (writer._closedPromise_resolve === void 0) {
            return;
          }
          writer._closedPromise_resolve(void 0);
          writer._closedPromise_resolve = void 0;
          writer._closedPromise_reject = void 0;
          writer._closedPromiseState = "resolved";
        }
        function defaultWriterReadyPromiseInitialize(writer) {
          writer._readyPromise = newPromise((resolve2, reject) => {
            writer._readyPromise_resolve = resolve2;
            writer._readyPromise_reject = reject;
          });
          writer._readyPromiseState = "pending";
        }
        function defaultWriterReadyPromiseInitializeAsRejected(writer, reason) {
          defaultWriterReadyPromiseInitialize(writer);
          defaultWriterReadyPromiseReject(writer, reason);
        }
        function defaultWriterReadyPromiseInitializeAsResolved(writer) {
          defaultWriterReadyPromiseInitialize(writer);
          defaultWriterReadyPromiseResolve(writer);
        }
        function defaultWriterReadyPromiseReject(writer, reason) {
          if (writer._readyPromise_reject === void 0) {
            return;
          }
          setPromiseIsHandledToTrue(writer._readyPromise);
          writer._readyPromise_reject(reason);
          writer._readyPromise_resolve = void 0;
          writer._readyPromise_reject = void 0;
          writer._readyPromiseState = "rejected";
        }
        function defaultWriterReadyPromiseReset(writer) {
          defaultWriterReadyPromiseInitialize(writer);
        }
        function defaultWriterReadyPromiseResetToRejected(writer, reason) {
          defaultWriterReadyPromiseInitializeAsRejected(writer, reason);
        }
        function defaultWriterReadyPromiseResolve(writer) {
          if (writer._readyPromise_resolve === void 0) {
            return;
          }
          writer._readyPromise_resolve(void 0);
          writer._readyPromise_resolve = void 0;
          writer._readyPromise_reject = void 0;
          writer._readyPromiseState = "fulfilled";
        }
        const NativeDOMException = typeof DOMException !== "undefined" ? DOMException : void 0;
        function isDOMExceptionConstructor(ctor) {
          if (!(typeof ctor === "function" || typeof ctor === "object")) {
            return false;
          }
          try {
            new ctor();
            return true;
          } catch (_a) {
            return false;
          }
        }
        function createDOMExceptionPolyfill() {
          const ctor = function DOMException2(message, name) {
            this.message = message || "";
            this.name = name || "Error";
            if (Error.captureStackTrace) {
              Error.captureStackTrace(this, this.constructor);
            }
          };
          ctor.prototype = Object.create(Error.prototype);
          Object.defineProperty(ctor.prototype, "constructor", { value: ctor, writable: true, configurable: true });
          return ctor;
        }
        const DOMException$1 = isDOMExceptionConstructor(NativeDOMException) ? NativeDOMException : createDOMExceptionPolyfill();
        function ReadableStreamPipeTo(source, dest, preventClose, preventAbort, preventCancel, signal) {
          const reader = AcquireReadableStreamDefaultReader(source);
          const writer = AcquireWritableStreamDefaultWriter(dest);
          source._disturbed = true;
          let shuttingDown = false;
          let currentWrite = promiseResolvedWith(void 0);
          return newPromise((resolve2, reject) => {
            let abortAlgorithm;
            if (signal !== void 0) {
              abortAlgorithm = () => {
                const error2 = new DOMException$1("Aborted", "AbortError");
                const actions = [];
                if (!preventAbort) {
                  actions.push(() => {
                    if (dest._state === "writable") {
                      return WritableStreamAbort(dest, error2);
                    }
                    return promiseResolvedWith(void 0);
                  });
                }
                if (!preventCancel) {
                  actions.push(() => {
                    if (source._state === "readable") {
                      return ReadableStreamCancel(source, error2);
                    }
                    return promiseResolvedWith(void 0);
                  });
                }
                shutdownWithAction(() => Promise.all(actions.map((action) => action())), true, error2);
              };
              if (signal.aborted) {
                abortAlgorithm();
                return;
              }
              signal.addEventListener("abort", abortAlgorithm);
            }
            function pipeLoop() {
              return newPromise((resolveLoop, rejectLoop) => {
                function next(done) {
                  if (done) {
                    resolveLoop();
                  } else {
                    PerformPromiseThen(pipeStep(), next, rejectLoop);
                  }
                }
                next(false);
              });
            }
            function pipeStep() {
              if (shuttingDown) {
                return promiseResolvedWith(true);
              }
              return PerformPromiseThen(writer._readyPromise, () => {
                return newPromise((resolveRead, rejectRead) => {
                  ReadableStreamDefaultReaderRead(reader, {
                    _chunkSteps: (chunk) => {
                      currentWrite = PerformPromiseThen(WritableStreamDefaultWriterWrite(writer, chunk), void 0, noop2);
                      resolveRead(false);
                    },
                    _closeSteps: () => resolveRead(true),
                    _errorSteps: rejectRead
                  });
                });
              });
            }
            isOrBecomesErrored(source, reader._closedPromise, (storedError) => {
              if (!preventAbort) {
                shutdownWithAction(() => WritableStreamAbort(dest, storedError), true, storedError);
              } else {
                shutdown(true, storedError);
              }
            });
            isOrBecomesErrored(dest, writer._closedPromise, (storedError) => {
              if (!preventCancel) {
                shutdownWithAction(() => ReadableStreamCancel(source, storedError), true, storedError);
              } else {
                shutdown(true, storedError);
              }
            });
            isOrBecomesClosed(source, reader._closedPromise, () => {
              if (!preventClose) {
                shutdownWithAction(() => WritableStreamDefaultWriterCloseWithErrorPropagation(writer));
              } else {
                shutdown();
              }
            });
            if (WritableStreamCloseQueuedOrInFlight(dest) || dest._state === "closed") {
              const destClosed = new TypeError("the destination writable stream closed before all data could be piped to it");
              if (!preventCancel) {
                shutdownWithAction(() => ReadableStreamCancel(source, destClosed), true, destClosed);
              } else {
                shutdown(true, destClosed);
              }
            }
            setPromiseIsHandledToTrue(pipeLoop());
            function waitForWritesToFinish() {
              const oldCurrentWrite = currentWrite;
              return PerformPromiseThen(currentWrite, () => oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : void 0);
            }
            function isOrBecomesErrored(stream, promise, action) {
              if (stream._state === "errored") {
                action(stream._storedError);
              } else {
                uponRejection(promise, action);
              }
            }
            function isOrBecomesClosed(stream, promise, action) {
              if (stream._state === "closed") {
                action();
              } else {
                uponFulfillment(promise, action);
              }
            }
            function shutdownWithAction(action, originalIsError, originalError) {
              if (shuttingDown) {
                return;
              }
              shuttingDown = true;
              if (dest._state === "writable" && !WritableStreamCloseQueuedOrInFlight(dest)) {
                uponFulfillment(waitForWritesToFinish(), doTheRest);
              } else {
                doTheRest();
              }
              function doTheRest() {
                uponPromise(action(), () => finalize(originalIsError, originalError), (newError) => finalize(true, newError));
              }
            }
            function shutdown(isError, error2) {
              if (shuttingDown) {
                return;
              }
              shuttingDown = true;
              if (dest._state === "writable" && !WritableStreamCloseQueuedOrInFlight(dest)) {
                uponFulfillment(waitForWritesToFinish(), () => finalize(isError, error2));
              } else {
                finalize(isError, error2);
              }
            }
            function finalize(isError, error2) {
              WritableStreamDefaultWriterRelease(writer);
              ReadableStreamReaderGenericRelease(reader);
              if (signal !== void 0) {
                signal.removeEventListener("abort", abortAlgorithm);
              }
              if (isError) {
                reject(error2);
              } else {
                resolve2(void 0);
              }
            }
          });
        }
        class ReadableStreamDefaultController {
          constructor() {
            throw new TypeError("Illegal constructor");
          }
          get desiredSize() {
            if (!IsReadableStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException$1("desiredSize");
            }
            return ReadableStreamDefaultControllerGetDesiredSize(this);
          }
          close() {
            if (!IsReadableStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException$1("close");
            }
            if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {
              throw new TypeError("The stream is not in a state that permits close");
            }
            ReadableStreamDefaultControllerClose(this);
          }
          enqueue(chunk = void 0) {
            if (!IsReadableStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException$1("enqueue");
            }
            if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {
              throw new TypeError("The stream is not in a state that permits enqueue");
            }
            return ReadableStreamDefaultControllerEnqueue(this, chunk);
          }
          error(e = void 0) {
            if (!IsReadableStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException$1("error");
            }
            ReadableStreamDefaultControllerError(this, e);
          }
          [CancelSteps](reason) {
            ResetQueue(this);
            const result = this._cancelAlgorithm(reason);
            ReadableStreamDefaultControllerClearAlgorithms(this);
            return result;
          }
          [PullSteps](readRequest) {
            const stream = this._controlledReadableStream;
            if (this._queue.length > 0) {
              const chunk = DequeueValue(this);
              if (this._closeRequested && this._queue.length === 0) {
                ReadableStreamDefaultControllerClearAlgorithms(this);
                ReadableStreamClose(stream);
              } else {
                ReadableStreamDefaultControllerCallPullIfNeeded(this);
              }
              readRequest._chunkSteps(chunk);
            } else {
              ReadableStreamAddReadRequest(stream, readRequest);
              ReadableStreamDefaultControllerCallPullIfNeeded(this);
            }
          }
        }
        Object.defineProperties(ReadableStreamDefaultController.prototype, {
          close: { enumerable: true },
          enqueue: { enumerable: true },
          error: { enumerable: true },
          desiredSize: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(ReadableStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {
            value: "ReadableStreamDefaultController",
            configurable: true
          });
        }
        function IsReadableStreamDefaultController(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_controlledReadableStream")) {
            return false;
          }
          return x instanceof ReadableStreamDefaultController;
        }
        function ReadableStreamDefaultControllerCallPullIfNeeded(controller) {
          const shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);
          if (!shouldPull) {
            return;
          }
          if (controller._pulling) {
            controller._pullAgain = true;
            return;
          }
          controller._pulling = true;
          const pullPromise = controller._pullAlgorithm();
          uponPromise(pullPromise, () => {
            controller._pulling = false;
            if (controller._pullAgain) {
              controller._pullAgain = false;
              ReadableStreamDefaultControllerCallPullIfNeeded(controller);
            }
          }, (e) => {
            ReadableStreamDefaultControllerError(controller, e);
          });
        }
        function ReadableStreamDefaultControllerShouldCallPull(controller) {
          const stream = controller._controlledReadableStream;
          if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {
            return false;
          }
          if (!controller._started) {
            return false;
          }
          if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {
            return true;
          }
          const desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);
          if (desiredSize > 0) {
            return true;
          }
          return false;
        }
        function ReadableStreamDefaultControllerClearAlgorithms(controller) {
          controller._pullAlgorithm = void 0;
          controller._cancelAlgorithm = void 0;
          controller._strategySizeAlgorithm = void 0;
        }
        function ReadableStreamDefaultControllerClose(controller) {
          if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {
            return;
          }
          const stream = controller._controlledReadableStream;
          controller._closeRequested = true;
          if (controller._queue.length === 0) {
            ReadableStreamDefaultControllerClearAlgorithms(controller);
            ReadableStreamClose(stream);
          }
        }
        function ReadableStreamDefaultControllerEnqueue(controller, chunk) {
          if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {
            return;
          }
          const stream = controller._controlledReadableStream;
          if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {
            ReadableStreamFulfillReadRequest(stream, chunk, false);
          } else {
            let chunkSize;
            try {
              chunkSize = controller._strategySizeAlgorithm(chunk);
            } catch (chunkSizeE) {
              ReadableStreamDefaultControllerError(controller, chunkSizeE);
              throw chunkSizeE;
            }
            try {
              EnqueueValueWithSize(controller, chunk, chunkSize);
            } catch (enqueueE) {
              ReadableStreamDefaultControllerError(controller, enqueueE);
              throw enqueueE;
            }
          }
          ReadableStreamDefaultControllerCallPullIfNeeded(controller);
        }
        function ReadableStreamDefaultControllerError(controller, e) {
          const stream = controller._controlledReadableStream;
          if (stream._state !== "readable") {
            return;
          }
          ResetQueue(controller);
          ReadableStreamDefaultControllerClearAlgorithms(controller);
          ReadableStreamError(stream, e);
        }
        function ReadableStreamDefaultControllerGetDesiredSize(controller) {
          const state = controller._controlledReadableStream._state;
          if (state === "errored") {
            return null;
          }
          if (state === "closed") {
            return 0;
          }
          return controller._strategyHWM - controller._queueTotalSize;
        }
        function ReadableStreamDefaultControllerHasBackpressure(controller) {
          if (ReadableStreamDefaultControllerShouldCallPull(controller)) {
            return false;
          }
          return true;
        }
        function ReadableStreamDefaultControllerCanCloseOrEnqueue(controller) {
          const state = controller._controlledReadableStream._state;
          if (!controller._closeRequested && state === "readable") {
            return true;
          }
          return false;
        }
        function SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm) {
          controller._controlledReadableStream = stream;
          controller._queue = void 0;
          controller._queueTotalSize = void 0;
          ResetQueue(controller);
          controller._started = false;
          controller._closeRequested = false;
          controller._pullAgain = false;
          controller._pulling = false;
          controller._strategySizeAlgorithm = sizeAlgorithm;
          controller._strategyHWM = highWaterMark;
          controller._pullAlgorithm = pullAlgorithm;
          controller._cancelAlgorithm = cancelAlgorithm;
          stream._readableStreamController = controller;
          const startResult = startAlgorithm();
          uponPromise(promiseResolvedWith(startResult), () => {
            controller._started = true;
            ReadableStreamDefaultControllerCallPullIfNeeded(controller);
          }, (r) => {
            ReadableStreamDefaultControllerError(controller, r);
          });
        }
        function SetUpReadableStreamDefaultControllerFromUnderlyingSource(stream, underlyingSource, highWaterMark, sizeAlgorithm) {
          const controller = Object.create(ReadableStreamDefaultController.prototype);
          let startAlgorithm = () => void 0;
          let pullAlgorithm = () => promiseResolvedWith(void 0);
          let cancelAlgorithm = () => promiseResolvedWith(void 0);
          if (underlyingSource.start !== void 0) {
            startAlgorithm = () => underlyingSource.start(controller);
          }
          if (underlyingSource.pull !== void 0) {
            pullAlgorithm = () => underlyingSource.pull(controller);
          }
          if (underlyingSource.cancel !== void 0) {
            cancelAlgorithm = (reason) => underlyingSource.cancel(reason);
          }
          SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);
        }
        function defaultControllerBrandCheckException$1(name) {
          return new TypeError(`ReadableStreamDefaultController.prototype.${name} can only be used on a ReadableStreamDefaultController`);
        }
        function ReadableStreamTee(stream, cloneForBranch2) {
          if (IsReadableByteStreamController(stream._readableStreamController)) {
            return ReadableByteStreamTee(stream);
          }
          return ReadableStreamDefaultTee(stream);
        }
        function ReadableStreamDefaultTee(stream, cloneForBranch2) {
          const reader = AcquireReadableStreamDefaultReader(stream);
          let reading = false;
          let canceled1 = false;
          let canceled2 = false;
          let reason1;
          let reason2;
          let branch1;
          let branch2;
          let resolveCancelPromise;
          const cancelPromise = newPromise((resolve2) => {
            resolveCancelPromise = resolve2;
          });
          function pullAlgorithm() {
            if (reading) {
              return promiseResolvedWith(void 0);
            }
            reading = true;
            const readRequest = {
              _chunkSteps: (chunk) => {
                queueMicrotask(() => {
                  reading = false;
                  const chunk1 = chunk;
                  const chunk2 = chunk;
                  if (!canceled1) {
                    ReadableStreamDefaultControllerEnqueue(branch1._readableStreamController, chunk1);
                  }
                  if (!canceled2) {
                    ReadableStreamDefaultControllerEnqueue(branch2._readableStreamController, chunk2);
                  }
                });
              },
              _closeSteps: () => {
                reading = false;
                if (!canceled1) {
                  ReadableStreamDefaultControllerClose(branch1._readableStreamController);
                }
                if (!canceled2) {
                  ReadableStreamDefaultControllerClose(branch2._readableStreamController);
                }
                if (!canceled1 || !canceled2) {
                  resolveCancelPromise(void 0);
                }
              },
              _errorSteps: () => {
                reading = false;
              }
            };
            ReadableStreamDefaultReaderRead(reader, readRequest);
            return promiseResolvedWith(void 0);
          }
          function cancel1Algorithm(reason) {
            canceled1 = true;
            reason1 = reason;
            if (canceled2) {
              const compositeReason = CreateArrayFromList([reason1, reason2]);
              const cancelResult = ReadableStreamCancel(stream, compositeReason);
              resolveCancelPromise(cancelResult);
            }
            return cancelPromise;
          }
          function cancel2Algorithm(reason) {
            canceled2 = true;
            reason2 = reason;
            if (canceled1) {
              const compositeReason = CreateArrayFromList([reason1, reason2]);
              const cancelResult = ReadableStreamCancel(stream, compositeReason);
              resolveCancelPromise(cancelResult);
            }
            return cancelPromise;
          }
          function startAlgorithm() {
          }
          branch1 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel1Algorithm);
          branch2 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel2Algorithm);
          uponRejection(reader._closedPromise, (r) => {
            ReadableStreamDefaultControllerError(branch1._readableStreamController, r);
            ReadableStreamDefaultControllerError(branch2._readableStreamController, r);
            if (!canceled1 || !canceled2) {
              resolveCancelPromise(void 0);
            }
          });
          return [branch1, branch2];
        }
        function ReadableByteStreamTee(stream) {
          let reader = AcquireReadableStreamDefaultReader(stream);
          let reading = false;
          let canceled1 = false;
          let canceled2 = false;
          let reason1;
          let reason2;
          let branch1;
          let branch2;
          let resolveCancelPromise;
          const cancelPromise = newPromise((resolve2) => {
            resolveCancelPromise = resolve2;
          });
          function forwardReaderError(thisReader) {
            uponRejection(thisReader._closedPromise, (r) => {
              if (thisReader !== reader) {
                return;
              }
              ReadableByteStreamControllerError(branch1._readableStreamController, r);
              ReadableByteStreamControllerError(branch2._readableStreamController, r);
              if (!canceled1 || !canceled2) {
                resolveCancelPromise(void 0);
              }
            });
          }
          function pullWithDefaultReader() {
            if (IsReadableStreamBYOBReader(reader)) {
              ReadableStreamReaderGenericRelease(reader);
              reader = AcquireReadableStreamDefaultReader(stream);
              forwardReaderError(reader);
            }
            const readRequest = {
              _chunkSteps: (chunk) => {
                queueMicrotask(() => {
                  reading = false;
                  const chunk1 = chunk;
                  let chunk2 = chunk;
                  if (!canceled1 && !canceled2) {
                    try {
                      chunk2 = CloneAsUint8Array(chunk);
                    } catch (cloneE) {
                      ReadableByteStreamControllerError(branch1._readableStreamController, cloneE);
                      ReadableByteStreamControllerError(branch2._readableStreamController, cloneE);
                      resolveCancelPromise(ReadableStreamCancel(stream, cloneE));
                      return;
                    }
                  }
                  if (!canceled1) {
                    ReadableByteStreamControllerEnqueue(branch1._readableStreamController, chunk1);
                  }
                  if (!canceled2) {
                    ReadableByteStreamControllerEnqueue(branch2._readableStreamController, chunk2);
                  }
                });
              },
              _closeSteps: () => {
                reading = false;
                if (!canceled1) {
                  ReadableByteStreamControllerClose(branch1._readableStreamController);
                }
                if (!canceled2) {
                  ReadableByteStreamControllerClose(branch2._readableStreamController);
                }
                if (branch1._readableStreamController._pendingPullIntos.length > 0) {
                  ReadableByteStreamControllerRespond(branch1._readableStreamController, 0);
                }
                if (branch2._readableStreamController._pendingPullIntos.length > 0) {
                  ReadableByteStreamControllerRespond(branch2._readableStreamController, 0);
                }
                if (!canceled1 || !canceled2) {
                  resolveCancelPromise(void 0);
                }
              },
              _errorSteps: () => {
                reading = false;
              }
            };
            ReadableStreamDefaultReaderRead(reader, readRequest);
          }
          function pullWithBYOBReader(view, forBranch2) {
            if (IsReadableStreamDefaultReader(reader)) {
              ReadableStreamReaderGenericRelease(reader);
              reader = AcquireReadableStreamBYOBReader(stream);
              forwardReaderError(reader);
            }
            const byobBranch = forBranch2 ? branch2 : branch1;
            const otherBranch = forBranch2 ? branch1 : branch2;
            const readIntoRequest = {
              _chunkSteps: (chunk) => {
                queueMicrotask(() => {
                  reading = false;
                  const byobCanceled = forBranch2 ? canceled2 : canceled1;
                  const otherCanceled = forBranch2 ? canceled1 : canceled2;
                  if (!otherCanceled) {
                    let clonedChunk;
                    try {
                      clonedChunk = CloneAsUint8Array(chunk);
                    } catch (cloneE) {
                      ReadableByteStreamControllerError(byobBranch._readableStreamController, cloneE);
                      ReadableByteStreamControllerError(otherBranch._readableStreamController, cloneE);
                      resolveCancelPromise(ReadableStreamCancel(stream, cloneE));
                      return;
                    }
                    if (!byobCanceled) {
                      ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);
                    }
                    ReadableByteStreamControllerEnqueue(otherBranch._readableStreamController, clonedChunk);
                  } else if (!byobCanceled) {
                    ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);
                  }
                });
              },
              _closeSteps: (chunk) => {
                reading = false;
                const byobCanceled = forBranch2 ? canceled2 : canceled1;
                const otherCanceled = forBranch2 ? canceled1 : canceled2;
                if (!byobCanceled) {
                  ReadableByteStreamControllerClose(byobBranch._readableStreamController);
                }
                if (!otherCanceled) {
                  ReadableByteStreamControllerClose(otherBranch._readableStreamController);
                }
                if (chunk !== void 0) {
                  if (!byobCanceled) {
                    ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);
                  }
                  if (!otherCanceled && otherBranch._readableStreamController._pendingPullIntos.length > 0) {
                    ReadableByteStreamControllerRespond(otherBranch._readableStreamController, 0);
                  }
                }
                if (!byobCanceled || !otherCanceled) {
                  resolveCancelPromise(void 0);
                }
              },
              _errorSteps: () => {
                reading = false;
              }
            };
            ReadableStreamBYOBReaderRead(reader, view, readIntoRequest);
          }
          function pull1Algorithm() {
            if (reading) {
              return promiseResolvedWith(void 0);
            }
            reading = true;
            const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch1._readableStreamController);
            if (byobRequest === null) {
              pullWithDefaultReader();
            } else {
              pullWithBYOBReader(byobRequest._view, false);
            }
            return promiseResolvedWith(void 0);
          }
          function pull2Algorithm() {
            if (reading) {
              return promiseResolvedWith(void 0);
            }
            reading = true;
            const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch2._readableStreamController);
            if (byobRequest === null) {
              pullWithDefaultReader();
            } else {
              pullWithBYOBReader(byobRequest._view, true);
            }
            return promiseResolvedWith(void 0);
          }
          function cancel1Algorithm(reason) {
            canceled1 = true;
            reason1 = reason;
            if (canceled2) {
              const compositeReason = CreateArrayFromList([reason1, reason2]);
              const cancelResult = ReadableStreamCancel(stream, compositeReason);
              resolveCancelPromise(cancelResult);
            }
            return cancelPromise;
          }
          function cancel2Algorithm(reason) {
            canceled2 = true;
            reason2 = reason;
            if (canceled1) {
              const compositeReason = CreateArrayFromList([reason1, reason2]);
              const cancelResult = ReadableStreamCancel(stream, compositeReason);
              resolveCancelPromise(cancelResult);
            }
            return cancelPromise;
          }
          function startAlgorithm() {
            return;
          }
          branch1 = CreateReadableByteStream(startAlgorithm, pull1Algorithm, cancel1Algorithm);
          branch2 = CreateReadableByteStream(startAlgorithm, pull2Algorithm, cancel2Algorithm);
          forwardReaderError(reader);
          return [branch1, branch2];
        }
        function convertUnderlyingDefaultOrByteSource(source, context) {
          assertDictionary(source, context);
          const original = source;
          const autoAllocateChunkSize = original === null || original === void 0 ? void 0 : original.autoAllocateChunkSize;
          const cancel = original === null || original === void 0 ? void 0 : original.cancel;
          const pull = original === null || original === void 0 ? void 0 : original.pull;
          const start = original === null || original === void 0 ? void 0 : original.start;
          const type = original === null || original === void 0 ? void 0 : original.type;
          return {
            autoAllocateChunkSize: autoAllocateChunkSize === void 0 ? void 0 : convertUnsignedLongLongWithEnforceRange(autoAllocateChunkSize, `${context} has member 'autoAllocateChunkSize' that`),
            cancel: cancel === void 0 ? void 0 : convertUnderlyingSourceCancelCallback(cancel, original, `${context} has member 'cancel' that`),
            pull: pull === void 0 ? void 0 : convertUnderlyingSourcePullCallback(pull, original, `${context} has member 'pull' that`),
            start: start === void 0 ? void 0 : convertUnderlyingSourceStartCallback(start, original, `${context} has member 'start' that`),
            type: type === void 0 ? void 0 : convertReadableStreamType(type, `${context} has member 'type' that`)
          };
        }
        function convertUnderlyingSourceCancelCallback(fn, original, context) {
          assertFunction(fn, context);
          return (reason) => promiseCall(fn, original, [reason]);
        }
        function convertUnderlyingSourcePullCallback(fn, original, context) {
          assertFunction(fn, context);
          return (controller) => promiseCall(fn, original, [controller]);
        }
        function convertUnderlyingSourceStartCallback(fn, original, context) {
          assertFunction(fn, context);
          return (controller) => reflectCall(fn, original, [controller]);
        }
        function convertReadableStreamType(type, context) {
          type = `${type}`;
          if (type !== "bytes") {
            throw new TypeError(`${context} '${type}' is not a valid enumeration value for ReadableStreamType`);
          }
          return type;
        }
        function convertReaderOptions(options2, context) {
          assertDictionary(options2, context);
          const mode = options2 === null || options2 === void 0 ? void 0 : options2.mode;
          return {
            mode: mode === void 0 ? void 0 : convertReadableStreamReaderMode(mode, `${context} has member 'mode' that`)
          };
        }
        function convertReadableStreamReaderMode(mode, context) {
          mode = `${mode}`;
          if (mode !== "byob") {
            throw new TypeError(`${context} '${mode}' is not a valid enumeration value for ReadableStreamReaderMode`);
          }
          return mode;
        }
        function convertIteratorOptions(options2, context) {
          assertDictionary(options2, context);
          const preventCancel = options2 === null || options2 === void 0 ? void 0 : options2.preventCancel;
          return { preventCancel: Boolean(preventCancel) };
        }
        function convertPipeOptions(options2, context) {
          assertDictionary(options2, context);
          const preventAbort = options2 === null || options2 === void 0 ? void 0 : options2.preventAbort;
          const preventCancel = options2 === null || options2 === void 0 ? void 0 : options2.preventCancel;
          const preventClose = options2 === null || options2 === void 0 ? void 0 : options2.preventClose;
          const signal = options2 === null || options2 === void 0 ? void 0 : options2.signal;
          if (signal !== void 0) {
            assertAbortSignal(signal, `${context} has member 'signal' that`);
          }
          return {
            preventAbort: Boolean(preventAbort),
            preventCancel: Boolean(preventCancel),
            preventClose: Boolean(preventClose),
            signal
          };
        }
        function assertAbortSignal(signal, context) {
          if (!isAbortSignal2(signal)) {
            throw new TypeError(`${context} is not an AbortSignal.`);
          }
        }
        function convertReadableWritablePair(pair, context) {
          assertDictionary(pair, context);
          const readable2 = pair === null || pair === void 0 ? void 0 : pair.readable;
          assertRequiredField(readable2, "readable", "ReadableWritablePair");
          assertReadableStream(readable2, `${context} has member 'readable' that`);
          const writable2 = pair === null || pair === void 0 ? void 0 : pair.writable;
          assertRequiredField(writable2, "writable", "ReadableWritablePair");
          assertWritableStream(writable2, `${context} has member 'writable' that`);
          return { readable: readable2, writable: writable2 };
        }
        class ReadableStream2 {
          constructor(rawUnderlyingSource = {}, rawStrategy = {}) {
            if (rawUnderlyingSource === void 0) {
              rawUnderlyingSource = null;
            } else {
              assertObject(rawUnderlyingSource, "First parameter");
            }
            const strategy = convertQueuingStrategy(rawStrategy, "Second parameter");
            const underlyingSource = convertUnderlyingDefaultOrByteSource(rawUnderlyingSource, "First parameter");
            InitializeReadableStream(this);
            if (underlyingSource.type === "bytes") {
              if (strategy.size !== void 0) {
                throw new RangeError("The strategy for a byte stream cannot have a size function");
              }
              const highWaterMark = ExtractHighWaterMark(strategy, 0);
              SetUpReadableByteStreamControllerFromUnderlyingSource(this, underlyingSource, highWaterMark);
            } else {
              const sizeAlgorithm = ExtractSizeAlgorithm(strategy);
              const highWaterMark = ExtractHighWaterMark(strategy, 1);
              SetUpReadableStreamDefaultControllerFromUnderlyingSource(this, underlyingSource, highWaterMark, sizeAlgorithm);
            }
          }
          get locked() {
            if (!IsReadableStream(this)) {
              throw streamBrandCheckException$1("locked");
            }
            return IsReadableStreamLocked(this);
          }
          cancel(reason = void 0) {
            if (!IsReadableStream(this)) {
              return promiseRejectedWith(streamBrandCheckException$1("cancel"));
            }
            if (IsReadableStreamLocked(this)) {
              return promiseRejectedWith(new TypeError("Cannot cancel a stream that already has a reader"));
            }
            return ReadableStreamCancel(this, reason);
          }
          getReader(rawOptions = void 0) {
            if (!IsReadableStream(this)) {
              throw streamBrandCheckException$1("getReader");
            }
            const options2 = convertReaderOptions(rawOptions, "First parameter");
            if (options2.mode === void 0) {
              return AcquireReadableStreamDefaultReader(this);
            }
            return AcquireReadableStreamBYOBReader(this);
          }
          pipeThrough(rawTransform, rawOptions = {}) {
            if (!IsReadableStream(this)) {
              throw streamBrandCheckException$1("pipeThrough");
            }
            assertRequiredArgument(rawTransform, 1, "pipeThrough");
            const transform = convertReadableWritablePair(rawTransform, "First parameter");
            const options2 = convertPipeOptions(rawOptions, "Second parameter");
            if (IsReadableStreamLocked(this)) {
              throw new TypeError("ReadableStream.prototype.pipeThrough cannot be used on a locked ReadableStream");
            }
            if (IsWritableStreamLocked(transform.writable)) {
              throw new TypeError("ReadableStream.prototype.pipeThrough cannot be used on a locked WritableStream");
            }
            const promise = ReadableStreamPipeTo(this, transform.writable, options2.preventClose, options2.preventAbort, options2.preventCancel, options2.signal);
            setPromiseIsHandledToTrue(promise);
            return transform.readable;
          }
          pipeTo(destination, rawOptions = {}) {
            if (!IsReadableStream(this)) {
              return promiseRejectedWith(streamBrandCheckException$1("pipeTo"));
            }
            if (destination === void 0) {
              return promiseRejectedWith(`Parameter 1 is required in 'pipeTo'.`);
            }
            if (!IsWritableStream(destination)) {
              return promiseRejectedWith(new TypeError(`ReadableStream.prototype.pipeTo's first argument must be a WritableStream`));
            }
            let options2;
            try {
              options2 = convertPipeOptions(rawOptions, "Second parameter");
            } catch (e) {
              return promiseRejectedWith(e);
            }
            if (IsReadableStreamLocked(this)) {
              return promiseRejectedWith(new TypeError("ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream"));
            }
            if (IsWritableStreamLocked(destination)) {
              return promiseRejectedWith(new TypeError("ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream"));
            }
            return ReadableStreamPipeTo(this, destination, options2.preventClose, options2.preventAbort, options2.preventCancel, options2.signal);
          }
          tee() {
            if (!IsReadableStream(this)) {
              throw streamBrandCheckException$1("tee");
            }
            const branches = ReadableStreamTee(this);
            return CreateArrayFromList(branches);
          }
          values(rawOptions = void 0) {
            if (!IsReadableStream(this)) {
              throw streamBrandCheckException$1("values");
            }
            const options2 = convertIteratorOptions(rawOptions, "First parameter");
            return AcquireReadableStreamAsyncIterator(this, options2.preventCancel);
          }
        }
        Object.defineProperties(ReadableStream2.prototype, {
          cancel: { enumerable: true },
          getReader: { enumerable: true },
          pipeThrough: { enumerable: true },
          pipeTo: { enumerable: true },
          tee: { enumerable: true },
          values: { enumerable: true },
          locked: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(ReadableStream2.prototype, SymbolPolyfill.toStringTag, {
            value: "ReadableStream",
            configurable: true
          });
        }
        if (typeof SymbolPolyfill.asyncIterator === "symbol") {
          Object.defineProperty(ReadableStream2.prototype, SymbolPolyfill.asyncIterator, {
            value: ReadableStream2.prototype.values,
            writable: true,
            configurable: true
          });
        }
        function CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark = 1, sizeAlgorithm = () => 1) {
          const stream = Object.create(ReadableStream2.prototype);
          InitializeReadableStream(stream);
          const controller = Object.create(ReadableStreamDefaultController.prototype);
          SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);
          return stream;
        }
        function CreateReadableByteStream(startAlgorithm, pullAlgorithm, cancelAlgorithm) {
          const stream = Object.create(ReadableStream2.prototype);
          InitializeReadableStream(stream);
          const controller = Object.create(ReadableByteStreamController.prototype);
          SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, 0, void 0);
          return stream;
        }
        function InitializeReadableStream(stream) {
          stream._state = "readable";
          stream._reader = void 0;
          stream._storedError = void 0;
          stream._disturbed = false;
        }
        function IsReadableStream(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_readableStreamController")) {
            return false;
          }
          return x instanceof ReadableStream2;
        }
        function IsReadableStreamLocked(stream) {
          if (stream._reader === void 0) {
            return false;
          }
          return true;
        }
        function ReadableStreamCancel(stream, reason) {
          stream._disturbed = true;
          if (stream._state === "closed") {
            return promiseResolvedWith(void 0);
          }
          if (stream._state === "errored") {
            return promiseRejectedWith(stream._storedError);
          }
          ReadableStreamClose(stream);
          const reader = stream._reader;
          if (reader !== void 0 && IsReadableStreamBYOBReader(reader)) {
            reader._readIntoRequests.forEach((readIntoRequest) => {
              readIntoRequest._closeSteps(void 0);
            });
            reader._readIntoRequests = new SimpleQueue();
          }
          const sourceCancelPromise = stream._readableStreamController[CancelSteps](reason);
          return transformPromiseWith(sourceCancelPromise, noop2);
        }
        function ReadableStreamClose(stream) {
          stream._state = "closed";
          const reader = stream._reader;
          if (reader === void 0) {
            return;
          }
          defaultReaderClosedPromiseResolve(reader);
          if (IsReadableStreamDefaultReader(reader)) {
            reader._readRequests.forEach((readRequest) => {
              readRequest._closeSteps();
            });
            reader._readRequests = new SimpleQueue();
          }
        }
        function ReadableStreamError(stream, e) {
          stream._state = "errored";
          stream._storedError = e;
          const reader = stream._reader;
          if (reader === void 0) {
            return;
          }
          defaultReaderClosedPromiseReject(reader, e);
          if (IsReadableStreamDefaultReader(reader)) {
            reader._readRequests.forEach((readRequest) => {
              readRequest._errorSteps(e);
            });
            reader._readRequests = new SimpleQueue();
          } else {
            reader._readIntoRequests.forEach((readIntoRequest) => {
              readIntoRequest._errorSteps(e);
            });
            reader._readIntoRequests = new SimpleQueue();
          }
        }
        function streamBrandCheckException$1(name) {
          return new TypeError(`ReadableStream.prototype.${name} can only be used on a ReadableStream`);
        }
        function convertQueuingStrategyInit(init2, context) {
          assertDictionary(init2, context);
          const highWaterMark = init2 === null || init2 === void 0 ? void 0 : init2.highWaterMark;
          assertRequiredField(highWaterMark, "highWaterMark", "QueuingStrategyInit");
          return {
            highWaterMark: convertUnrestrictedDouble(highWaterMark)
          };
        }
        const byteLengthSizeFunction = (chunk) => {
          return chunk.byteLength;
        };
        Object.defineProperty(byteLengthSizeFunction, "name", {
          value: "size",
          configurable: true
        });
        class ByteLengthQueuingStrategy {
          constructor(options2) {
            assertRequiredArgument(options2, 1, "ByteLengthQueuingStrategy");
            options2 = convertQueuingStrategyInit(options2, "First parameter");
            this._byteLengthQueuingStrategyHighWaterMark = options2.highWaterMark;
          }
          get highWaterMark() {
            if (!IsByteLengthQueuingStrategy(this)) {
              throw byteLengthBrandCheckException("highWaterMark");
            }
            return this._byteLengthQueuingStrategyHighWaterMark;
          }
          get size() {
            if (!IsByteLengthQueuingStrategy(this)) {
              throw byteLengthBrandCheckException("size");
            }
            return byteLengthSizeFunction;
          }
        }
        Object.defineProperties(ByteLengthQueuingStrategy.prototype, {
          highWaterMark: { enumerable: true },
          size: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(ByteLengthQueuingStrategy.prototype, SymbolPolyfill.toStringTag, {
            value: "ByteLengthQueuingStrategy",
            configurable: true
          });
        }
        function byteLengthBrandCheckException(name) {
          return new TypeError(`ByteLengthQueuingStrategy.prototype.${name} can only be used on a ByteLengthQueuingStrategy`);
        }
        function IsByteLengthQueuingStrategy(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_byteLengthQueuingStrategyHighWaterMark")) {
            return false;
          }
          return x instanceof ByteLengthQueuingStrategy;
        }
        const countSizeFunction = () => {
          return 1;
        };
        Object.defineProperty(countSizeFunction, "name", {
          value: "size",
          configurable: true
        });
        class CountQueuingStrategy {
          constructor(options2) {
            assertRequiredArgument(options2, 1, "CountQueuingStrategy");
            options2 = convertQueuingStrategyInit(options2, "First parameter");
            this._countQueuingStrategyHighWaterMark = options2.highWaterMark;
          }
          get highWaterMark() {
            if (!IsCountQueuingStrategy(this)) {
              throw countBrandCheckException("highWaterMark");
            }
            return this._countQueuingStrategyHighWaterMark;
          }
          get size() {
            if (!IsCountQueuingStrategy(this)) {
              throw countBrandCheckException("size");
            }
            return countSizeFunction;
          }
        }
        Object.defineProperties(CountQueuingStrategy.prototype, {
          highWaterMark: { enumerable: true },
          size: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(CountQueuingStrategy.prototype, SymbolPolyfill.toStringTag, {
            value: "CountQueuingStrategy",
            configurable: true
          });
        }
        function countBrandCheckException(name) {
          return new TypeError(`CountQueuingStrategy.prototype.${name} can only be used on a CountQueuingStrategy`);
        }
        function IsCountQueuingStrategy(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_countQueuingStrategyHighWaterMark")) {
            return false;
          }
          return x instanceof CountQueuingStrategy;
        }
        function convertTransformer(original, context) {
          assertDictionary(original, context);
          const flush = original === null || original === void 0 ? void 0 : original.flush;
          const readableType = original === null || original === void 0 ? void 0 : original.readableType;
          const start = original === null || original === void 0 ? void 0 : original.start;
          const transform = original === null || original === void 0 ? void 0 : original.transform;
          const writableType = original === null || original === void 0 ? void 0 : original.writableType;
          return {
            flush: flush === void 0 ? void 0 : convertTransformerFlushCallback(flush, original, `${context} has member 'flush' that`),
            readableType,
            start: start === void 0 ? void 0 : convertTransformerStartCallback(start, original, `${context} has member 'start' that`),
            transform: transform === void 0 ? void 0 : convertTransformerTransformCallback(transform, original, `${context} has member 'transform' that`),
            writableType
          };
        }
        function convertTransformerFlushCallback(fn, original, context) {
          assertFunction(fn, context);
          return (controller) => promiseCall(fn, original, [controller]);
        }
        function convertTransformerStartCallback(fn, original, context) {
          assertFunction(fn, context);
          return (controller) => reflectCall(fn, original, [controller]);
        }
        function convertTransformerTransformCallback(fn, original, context) {
          assertFunction(fn, context);
          return (chunk, controller) => promiseCall(fn, original, [chunk, controller]);
        }
        class TransformStream {
          constructor(rawTransformer = {}, rawWritableStrategy = {}, rawReadableStrategy = {}) {
            if (rawTransformer === void 0) {
              rawTransformer = null;
            }
            const writableStrategy = convertQueuingStrategy(rawWritableStrategy, "Second parameter");
            const readableStrategy = convertQueuingStrategy(rawReadableStrategy, "Third parameter");
            const transformer = convertTransformer(rawTransformer, "First parameter");
            if (transformer.readableType !== void 0) {
              throw new RangeError("Invalid readableType specified");
            }
            if (transformer.writableType !== void 0) {
              throw new RangeError("Invalid writableType specified");
            }
            const readableHighWaterMark = ExtractHighWaterMark(readableStrategy, 0);
            const readableSizeAlgorithm = ExtractSizeAlgorithm(readableStrategy);
            const writableHighWaterMark = ExtractHighWaterMark(writableStrategy, 1);
            const writableSizeAlgorithm = ExtractSizeAlgorithm(writableStrategy);
            let startPromise_resolve;
            const startPromise = newPromise((resolve2) => {
              startPromise_resolve = resolve2;
            });
            InitializeTransformStream(this, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm);
            SetUpTransformStreamDefaultControllerFromTransformer(this, transformer);
            if (transformer.start !== void 0) {
              startPromise_resolve(transformer.start(this._transformStreamController));
            } else {
              startPromise_resolve(void 0);
            }
          }
          get readable() {
            if (!IsTransformStream(this)) {
              throw streamBrandCheckException("readable");
            }
            return this._readable;
          }
          get writable() {
            if (!IsTransformStream(this)) {
              throw streamBrandCheckException("writable");
            }
            return this._writable;
          }
        }
        Object.defineProperties(TransformStream.prototype, {
          readable: { enumerable: true },
          writable: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(TransformStream.prototype, SymbolPolyfill.toStringTag, {
            value: "TransformStream",
            configurable: true
          });
        }
        function InitializeTransformStream(stream, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm) {
          function startAlgorithm() {
            return startPromise;
          }
          function writeAlgorithm(chunk) {
            return TransformStreamDefaultSinkWriteAlgorithm(stream, chunk);
          }
          function abortAlgorithm(reason) {
            return TransformStreamDefaultSinkAbortAlgorithm(stream, reason);
          }
          function closeAlgorithm() {
            return TransformStreamDefaultSinkCloseAlgorithm(stream);
          }
          stream._writable = CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, writableHighWaterMark, writableSizeAlgorithm);
          function pullAlgorithm() {
            return TransformStreamDefaultSourcePullAlgorithm(stream);
          }
          function cancelAlgorithm(reason) {
            TransformStreamErrorWritableAndUnblockWrite(stream, reason);
            return promiseResolvedWith(void 0);
          }
          stream._readable = CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, readableHighWaterMark, readableSizeAlgorithm);
          stream._backpressure = void 0;
          stream._backpressureChangePromise = void 0;
          stream._backpressureChangePromise_resolve = void 0;
          TransformStreamSetBackpressure(stream, true);
          stream._transformStreamController = void 0;
        }
        function IsTransformStream(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_transformStreamController")) {
            return false;
          }
          return x instanceof TransformStream;
        }
        function TransformStreamError(stream, e) {
          ReadableStreamDefaultControllerError(stream._readable._readableStreamController, e);
          TransformStreamErrorWritableAndUnblockWrite(stream, e);
        }
        function TransformStreamErrorWritableAndUnblockWrite(stream, e) {
          TransformStreamDefaultControllerClearAlgorithms(stream._transformStreamController);
          WritableStreamDefaultControllerErrorIfNeeded(stream._writable._writableStreamController, e);
          if (stream._backpressure) {
            TransformStreamSetBackpressure(stream, false);
          }
        }
        function TransformStreamSetBackpressure(stream, backpressure) {
          if (stream._backpressureChangePromise !== void 0) {
            stream._backpressureChangePromise_resolve();
          }
          stream._backpressureChangePromise = newPromise((resolve2) => {
            stream._backpressureChangePromise_resolve = resolve2;
          });
          stream._backpressure = backpressure;
        }
        class TransformStreamDefaultController {
          constructor() {
            throw new TypeError("Illegal constructor");
          }
          get desiredSize() {
            if (!IsTransformStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException("desiredSize");
            }
            const readableController = this._controlledTransformStream._readable._readableStreamController;
            return ReadableStreamDefaultControllerGetDesiredSize(readableController);
          }
          enqueue(chunk = void 0) {
            if (!IsTransformStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException("enqueue");
            }
            TransformStreamDefaultControllerEnqueue(this, chunk);
          }
          error(reason = void 0) {
            if (!IsTransformStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException("error");
            }
            TransformStreamDefaultControllerError(this, reason);
          }
          terminate() {
            if (!IsTransformStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException("terminate");
            }
            TransformStreamDefaultControllerTerminate(this);
          }
        }
        Object.defineProperties(TransformStreamDefaultController.prototype, {
          enqueue: { enumerable: true },
          error: { enumerable: true },
          terminate: { enumerable: true },
          desiredSize: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(TransformStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {
            value: "TransformStreamDefaultController",
            configurable: true
          });
        }
        function IsTransformStreamDefaultController(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_controlledTransformStream")) {
            return false;
          }
          return x instanceof TransformStreamDefaultController;
        }
        function SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm) {
          controller._controlledTransformStream = stream;
          stream._transformStreamController = controller;
          controller._transformAlgorithm = transformAlgorithm;
          controller._flushAlgorithm = flushAlgorithm;
        }
        function SetUpTransformStreamDefaultControllerFromTransformer(stream, transformer) {
          const controller = Object.create(TransformStreamDefaultController.prototype);
          let transformAlgorithm = (chunk) => {
            try {
              TransformStreamDefaultControllerEnqueue(controller, chunk);
              return promiseResolvedWith(void 0);
            } catch (transformResultE) {
              return promiseRejectedWith(transformResultE);
            }
          };
          let flushAlgorithm = () => promiseResolvedWith(void 0);
          if (transformer.transform !== void 0) {
            transformAlgorithm = (chunk) => transformer.transform(chunk, controller);
          }
          if (transformer.flush !== void 0) {
            flushAlgorithm = () => transformer.flush(controller);
          }
          SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm);
        }
        function TransformStreamDefaultControllerClearAlgorithms(controller) {
          controller._transformAlgorithm = void 0;
          controller._flushAlgorithm = void 0;
        }
        function TransformStreamDefaultControllerEnqueue(controller, chunk) {
          const stream = controller._controlledTransformStream;
          const readableController = stream._readable._readableStreamController;
          if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(readableController)) {
            throw new TypeError("Readable side is not in a state that permits enqueue");
          }
          try {
            ReadableStreamDefaultControllerEnqueue(readableController, chunk);
          } catch (e) {
            TransformStreamErrorWritableAndUnblockWrite(stream, e);
            throw stream._readable._storedError;
          }
          const backpressure = ReadableStreamDefaultControllerHasBackpressure(readableController);
          if (backpressure !== stream._backpressure) {
            TransformStreamSetBackpressure(stream, true);
          }
        }
        function TransformStreamDefaultControllerError(controller, e) {
          TransformStreamError(controller._controlledTransformStream, e);
        }
        function TransformStreamDefaultControllerPerformTransform(controller, chunk) {
          const transformPromise = controller._transformAlgorithm(chunk);
          return transformPromiseWith(transformPromise, void 0, (r) => {
            TransformStreamError(controller._controlledTransformStream, r);
            throw r;
          });
        }
        function TransformStreamDefaultControllerTerminate(controller) {
          const stream = controller._controlledTransformStream;
          const readableController = stream._readable._readableStreamController;
          ReadableStreamDefaultControllerClose(readableController);
          const error2 = new TypeError("TransformStream terminated");
          TransformStreamErrorWritableAndUnblockWrite(stream, error2);
        }
        function TransformStreamDefaultSinkWriteAlgorithm(stream, chunk) {
          const controller = stream._transformStreamController;
          if (stream._backpressure) {
            const backpressureChangePromise = stream._backpressureChangePromise;
            return transformPromiseWith(backpressureChangePromise, () => {
              const writable2 = stream._writable;
              const state = writable2._state;
              if (state === "erroring") {
                throw writable2._storedError;
              }
              return TransformStreamDefaultControllerPerformTransform(controller, chunk);
            });
          }
          return TransformStreamDefaultControllerPerformTransform(controller, chunk);
        }
        function TransformStreamDefaultSinkAbortAlgorithm(stream, reason) {
          TransformStreamError(stream, reason);
          return promiseResolvedWith(void 0);
        }
        function TransformStreamDefaultSinkCloseAlgorithm(stream) {
          const readable2 = stream._readable;
          const controller = stream._transformStreamController;
          const flushPromise = controller._flushAlgorithm();
          TransformStreamDefaultControllerClearAlgorithms(controller);
          return transformPromiseWith(flushPromise, () => {
            if (readable2._state === "errored") {
              throw readable2._storedError;
            }
            ReadableStreamDefaultControllerClose(readable2._readableStreamController);
          }, (r) => {
            TransformStreamError(stream, r);
            throw readable2._storedError;
          });
        }
        function TransformStreamDefaultSourcePullAlgorithm(stream) {
          TransformStreamSetBackpressure(stream, false);
          return stream._backpressureChangePromise;
        }
        function defaultControllerBrandCheckException(name) {
          return new TypeError(`TransformStreamDefaultController.prototype.${name} can only be used on a TransformStreamDefaultController`);
        }
        function streamBrandCheckException(name) {
          return new TypeError(`TransformStream.prototype.${name} can only be used on a TransformStream`);
        }
        exports2.ByteLengthQueuingStrategy = ByteLengthQueuingStrategy;
        exports2.CountQueuingStrategy = CountQueuingStrategy;
        exports2.ReadableByteStreamController = ReadableByteStreamController;
        exports2.ReadableStream = ReadableStream2;
        exports2.ReadableStreamBYOBReader = ReadableStreamBYOBReader;
        exports2.ReadableStreamBYOBRequest = ReadableStreamBYOBRequest;
        exports2.ReadableStreamDefaultController = ReadableStreamDefaultController;
        exports2.ReadableStreamDefaultReader = ReadableStreamDefaultReader;
        exports2.TransformStream = TransformStream;
        exports2.TransformStreamDefaultController = TransformStreamDefaultController;
        exports2.WritableStream = WritableStream;
        exports2.WritableStreamDefaultController = WritableStreamDefaultController;
        exports2.WritableStreamDefaultWriter = WritableStreamDefaultWriter;
        Object.defineProperty(exports2, "__esModule", { value: true });
      });
    })(ponyfill_es2018, ponyfill_es2018.exports);
    POOL_SIZE$1 = 65536;
    if (!globalThis.ReadableStream) {
      try {
        Object.assign(globalThis, require("stream/web"));
      } catch (error2) {
        Object.assign(globalThis, ponyfill_es2018.exports);
      }
    }
    try {
      const { Blob: Blob3 } = require("buffer");
      if (Blob3 && !Blob3.prototype.stream) {
        Blob3.prototype.stream = function name(params) {
          let position = 0;
          const blob = this;
          return new ReadableStream({
            type: "bytes",
            async pull(ctrl) {
              const chunk = blob.slice(position, Math.min(blob.size, position + POOL_SIZE$1));
              const buffer = await chunk.arrayBuffer();
              position += buffer.byteLength;
              ctrl.enqueue(new Uint8Array(buffer));
              if (position === blob.size) {
                ctrl.close();
              }
            }
          });
        };
      }
    } catch (error2) {
    }
    POOL_SIZE = 65536;
    _Blob = class Blob {
      #parts = [];
      #type = "";
      #size = 0;
      constructor(blobParts = [], options2 = {}) {
        let size = 0;
        const parts = blobParts.map((element) => {
          let part;
          if (ArrayBuffer.isView(element)) {
            part = new Uint8Array(element.buffer.slice(element.byteOffset, element.byteOffset + element.byteLength));
          } else if (element instanceof ArrayBuffer) {
            part = new Uint8Array(element.slice(0));
          } else if (element instanceof Blob) {
            part = element;
          } else {
            part = new TextEncoder().encode(element);
          }
          size += ArrayBuffer.isView(part) ? part.byteLength : part.size;
          return part;
        });
        const type = options2.type === void 0 ? "" : String(options2.type);
        this.#type = /[^\u0020-\u007E]/.test(type) ? "" : type;
        this.#size = size;
        this.#parts = parts;
      }
      get size() {
        return this.#size;
      }
      get type() {
        return this.#type;
      }
      async text() {
        const decoder = new TextDecoder();
        let str = "";
        for await (let part of toIterator(this.#parts, false)) {
          str += decoder.decode(part, { stream: true });
        }
        str += decoder.decode();
        return str;
      }
      async arrayBuffer() {
        const data = new Uint8Array(this.size);
        let offset = 0;
        for await (const chunk of toIterator(this.#parts, false)) {
          data.set(chunk, offset);
          offset += chunk.length;
        }
        return data.buffer;
      }
      stream() {
        const it = toIterator(this.#parts, true);
        return new ReadableStream({
          type: "bytes",
          async pull(ctrl) {
            const chunk = await it.next();
            chunk.done ? ctrl.close() : ctrl.enqueue(chunk.value);
          }
        });
      }
      slice(start = 0, end = this.size, type = "") {
        const { size } = this;
        let relativeStart = start < 0 ? Math.max(size + start, 0) : Math.min(start, size);
        let relativeEnd = end < 0 ? Math.max(size + end, 0) : Math.min(end, size);
        const span = Math.max(relativeEnd - relativeStart, 0);
        const parts = this.#parts;
        const blobParts = [];
        let added = 0;
        for (const part of parts) {
          if (added >= span) {
            break;
          }
          const size2 = ArrayBuffer.isView(part) ? part.byteLength : part.size;
          if (relativeStart && size2 <= relativeStart) {
            relativeStart -= size2;
            relativeEnd -= size2;
          } else {
            let chunk;
            if (ArrayBuffer.isView(part)) {
              chunk = part.subarray(relativeStart, Math.min(size2, relativeEnd));
              added += chunk.byteLength;
            } else {
              chunk = part.slice(relativeStart, Math.min(size2, relativeEnd));
              added += chunk.size;
            }
            blobParts.push(chunk);
            relativeStart = 0;
          }
        }
        const blob = new Blob([], { type: String(type).toLowerCase() });
        blob.#size = span;
        blob.#parts = blobParts;
        return blob;
      }
      get [Symbol.toStringTag]() {
        return "Blob";
      }
      static [Symbol.hasInstance](object) {
        return object && typeof object === "object" && typeof object.constructor === "function" && (typeof object.stream === "function" || typeof object.arrayBuffer === "function") && /^(Blob|File)$/.test(object[Symbol.toStringTag]);
      }
    };
    Object.defineProperties(_Blob.prototype, {
      size: { enumerable: true },
      type: { enumerable: true },
      slice: { enumerable: true }
    });
    Blob2 = _Blob;
    Blob$1 = Blob2;
    FetchBaseError = class extends Error {
      constructor(message, type) {
        super(message);
        Error.captureStackTrace(this, this.constructor);
        this.type = type;
      }
      get name() {
        return this.constructor.name;
      }
      get [Symbol.toStringTag]() {
        return this.constructor.name;
      }
    };
    FetchError = class extends FetchBaseError {
      constructor(message, type, systemError) {
        super(message, type);
        if (systemError) {
          this.code = this.errno = systemError.code;
          this.erroredSysCall = systemError.syscall;
        }
      }
    };
    NAME = Symbol.toStringTag;
    isURLSearchParameters = (object) => {
      return typeof object === "object" && typeof object.append === "function" && typeof object.delete === "function" && typeof object.get === "function" && typeof object.getAll === "function" && typeof object.has === "function" && typeof object.set === "function" && typeof object.sort === "function" && object[NAME] === "URLSearchParams";
    };
    isBlob = (object) => {
      return typeof object === "object" && typeof object.arrayBuffer === "function" && typeof object.type === "string" && typeof object.stream === "function" && typeof object.constructor === "function" && /^(Blob|File)$/.test(object[NAME]);
    };
    isAbortSignal = (object) => {
      return typeof object === "object" && (object[NAME] === "AbortSignal" || object[NAME] === "EventTarget");
    };
    carriage = "\r\n";
    dashes = "-".repeat(2);
    carriageLength = Buffer.byteLength(carriage);
    getFooter = (boundary) => `${dashes}${boundary}${dashes}${carriage.repeat(2)}`;
    getBoundary = () => (0, import_crypto.randomBytes)(8).toString("hex");
    INTERNALS$2 = Symbol("Body internals");
    Body = class {
      constructor(body, {
        size = 0
      } = {}) {
        let boundary = null;
        if (body === null) {
          body = null;
        } else if (isURLSearchParameters(body)) {
          body = Buffer.from(body.toString());
        } else if (isBlob(body))
          ;
        else if (Buffer.isBuffer(body))
          ;
        else if (import_util.types.isAnyArrayBuffer(body)) {
          body = Buffer.from(body);
        } else if (ArrayBuffer.isView(body)) {
          body = Buffer.from(body.buffer, body.byteOffset, body.byteLength);
        } else if (body instanceof import_stream.default)
          ;
        else if (isFormData(body)) {
          boundary = `NodeFetchFormDataBoundary${getBoundary()}`;
          body = import_stream.default.Readable.from(formDataIterator(body, boundary));
        } else {
          body = Buffer.from(String(body));
        }
        this[INTERNALS$2] = {
          body,
          boundary,
          disturbed: false,
          error: null
        };
        this.size = size;
        if (body instanceof import_stream.default) {
          body.on("error", (error_) => {
            const error2 = error_ instanceof FetchBaseError ? error_ : new FetchError(`Invalid response body while trying to fetch ${this.url}: ${error_.message}`, "system", error_);
            this[INTERNALS$2].error = error2;
          });
        }
      }
      get body() {
        return this[INTERNALS$2].body;
      }
      get bodyUsed() {
        return this[INTERNALS$2].disturbed;
      }
      async arrayBuffer() {
        const { buffer, byteOffset, byteLength } = await consumeBody(this);
        return buffer.slice(byteOffset, byteOffset + byteLength);
      }
      async blob() {
        const ct = this.headers && this.headers.get("content-type") || this[INTERNALS$2].body && this[INTERNALS$2].body.type || "";
        const buf = await this.buffer();
        return new Blob$1([buf], {
          type: ct
        });
      }
      async json() {
        const buffer = await consumeBody(this);
        return JSON.parse(buffer.toString());
      }
      async text() {
        const buffer = await consumeBody(this);
        return buffer.toString();
      }
      buffer() {
        return consumeBody(this);
      }
    };
    Object.defineProperties(Body.prototype, {
      body: { enumerable: true },
      bodyUsed: { enumerable: true },
      arrayBuffer: { enumerable: true },
      blob: { enumerable: true },
      json: { enumerable: true },
      text: { enumerable: true }
    });
    clone = (instance, highWaterMark) => {
      let p1;
      let p2;
      let { body } = instance;
      if (instance.bodyUsed) {
        throw new Error("cannot clone body after it is used");
      }
      if (body instanceof import_stream.default && typeof body.getBoundary !== "function") {
        p1 = new import_stream.PassThrough({ highWaterMark });
        p2 = new import_stream.PassThrough({ highWaterMark });
        body.pipe(p1);
        body.pipe(p2);
        instance[INTERNALS$2].body = p1;
        body = p2;
      }
      return body;
    };
    extractContentType = (body, request) => {
      if (body === null) {
        return null;
      }
      if (typeof body === "string") {
        return "text/plain;charset=UTF-8";
      }
      if (isURLSearchParameters(body)) {
        return "application/x-www-form-urlencoded;charset=UTF-8";
      }
      if (isBlob(body)) {
        return body.type || null;
      }
      if (Buffer.isBuffer(body) || import_util.types.isAnyArrayBuffer(body) || ArrayBuffer.isView(body)) {
        return null;
      }
      if (body && typeof body.getBoundary === "function") {
        return `multipart/form-data;boundary=${body.getBoundary()}`;
      }
      if (isFormData(body)) {
        return `multipart/form-data; boundary=${request[INTERNALS$2].boundary}`;
      }
      if (body instanceof import_stream.default) {
        return null;
      }
      return "text/plain;charset=UTF-8";
    };
    getTotalBytes = (request) => {
      const { body } = request;
      if (body === null) {
        return 0;
      }
      if (isBlob(body)) {
        return body.size;
      }
      if (Buffer.isBuffer(body)) {
        return body.length;
      }
      if (body && typeof body.getLengthSync === "function") {
        return body.hasKnownLength && body.hasKnownLength() ? body.getLengthSync() : null;
      }
      if (isFormData(body)) {
        return getFormDataLength(request[INTERNALS$2].boundary);
      }
      return null;
    };
    writeToStream = (dest, { body }) => {
      if (body === null) {
        dest.end();
      } else if (isBlob(body)) {
        import_stream.default.Readable.from(body.stream()).pipe(dest);
      } else if (Buffer.isBuffer(body)) {
        dest.write(body);
        dest.end();
      } else {
        body.pipe(dest);
      }
    };
    validateHeaderName = typeof import_http.default.validateHeaderName === "function" ? import_http.default.validateHeaderName : (name) => {
      if (!/^[\^`\-\w!#$%&'*+.|~]+$/.test(name)) {
        const error2 = new TypeError(`Header name must be a valid HTTP token [${name}]`);
        Object.defineProperty(error2, "code", { value: "ERR_INVALID_HTTP_TOKEN" });
        throw error2;
      }
    };
    validateHeaderValue = typeof import_http.default.validateHeaderValue === "function" ? import_http.default.validateHeaderValue : (name, value) => {
      if (/[^\t\u0020-\u007E\u0080-\u00FF]/.test(value)) {
        const error2 = new TypeError(`Invalid character in header content ["${name}"]`);
        Object.defineProperty(error2, "code", { value: "ERR_INVALID_CHAR" });
        throw error2;
      }
    };
    Headers = class extends URLSearchParams {
      constructor(init2) {
        let result = [];
        if (init2 instanceof Headers) {
          const raw = init2.raw();
          for (const [name, values] of Object.entries(raw)) {
            result.push(...values.map((value) => [name, value]));
          }
        } else if (init2 == null)
          ;
        else if (typeof init2 === "object" && !import_util.types.isBoxedPrimitive(init2)) {
          const method = init2[Symbol.iterator];
          if (method == null) {
            result.push(...Object.entries(init2));
          } else {
            if (typeof method !== "function") {
              throw new TypeError("Header pairs must be iterable");
            }
            result = [...init2].map((pair) => {
              if (typeof pair !== "object" || import_util.types.isBoxedPrimitive(pair)) {
                throw new TypeError("Each header pair must be an iterable object");
              }
              return [...pair];
            }).map((pair) => {
              if (pair.length !== 2) {
                throw new TypeError("Each header pair must be a name/value tuple");
              }
              return [...pair];
            });
          }
        } else {
          throw new TypeError("Failed to construct 'Headers': The provided value is not of type '(sequence<sequence<ByteString>> or record<ByteString, ByteString>)");
        }
        result = result.length > 0 ? result.map(([name, value]) => {
          validateHeaderName(name);
          validateHeaderValue(name, String(value));
          return [String(name).toLowerCase(), String(value)];
        }) : void 0;
        super(result);
        return new Proxy(this, {
          get(target, p, receiver) {
            switch (p) {
              case "append":
              case "set":
                return (name, value) => {
                  validateHeaderName(name);
                  validateHeaderValue(name, String(value));
                  return URLSearchParams.prototype[p].call(target, String(name).toLowerCase(), String(value));
                };
              case "delete":
              case "has":
              case "getAll":
                return (name) => {
                  validateHeaderName(name);
                  return URLSearchParams.prototype[p].call(target, String(name).toLowerCase());
                };
              case "keys":
                return () => {
                  target.sort();
                  return new Set(URLSearchParams.prototype.keys.call(target)).keys();
                };
              default:
                return Reflect.get(target, p, receiver);
            }
          }
        });
      }
      get [Symbol.toStringTag]() {
        return this.constructor.name;
      }
      toString() {
        return Object.prototype.toString.call(this);
      }
      get(name) {
        const values = this.getAll(name);
        if (values.length === 0) {
          return null;
        }
        let value = values.join(", ");
        if (/^content-encoding$/i.test(name)) {
          value = value.toLowerCase();
        }
        return value;
      }
      forEach(callback, thisArg = void 0) {
        for (const name of this.keys()) {
          Reflect.apply(callback, thisArg, [this.get(name), name, this]);
        }
      }
      *values() {
        for (const name of this.keys()) {
          yield this.get(name);
        }
      }
      *entries() {
        for (const name of this.keys()) {
          yield [name, this.get(name)];
        }
      }
      [Symbol.iterator]() {
        return this.entries();
      }
      raw() {
        return [...this.keys()].reduce((result, key) => {
          result[key] = this.getAll(key);
          return result;
        }, {});
      }
      [Symbol.for("nodejs.util.inspect.custom")]() {
        return [...this.keys()].reduce((result, key) => {
          const values = this.getAll(key);
          if (key === "host") {
            result[key] = values[0];
          } else {
            result[key] = values.length > 1 ? values : values[0];
          }
          return result;
        }, {});
      }
    };
    Object.defineProperties(Headers.prototype, ["get", "entries", "forEach", "values"].reduce((result, property) => {
      result[property] = { enumerable: true };
      return result;
    }, {}));
    redirectStatus = new Set([301, 302, 303, 307, 308]);
    isRedirect = (code) => {
      return redirectStatus.has(code);
    };
    INTERNALS$1 = Symbol("Response internals");
    Response = class extends Body {
      constructor(body = null, options2 = {}) {
        super(body, options2);
        const status = options2.status != null ? options2.status : 200;
        const headers = new Headers(options2.headers);
        if (body !== null && !headers.has("Content-Type")) {
          const contentType = extractContentType(body);
          if (contentType) {
            headers.append("Content-Type", contentType);
          }
        }
        this[INTERNALS$1] = {
          type: "default",
          url: options2.url,
          status,
          statusText: options2.statusText || "",
          headers,
          counter: options2.counter,
          highWaterMark: options2.highWaterMark
        };
      }
      get type() {
        return this[INTERNALS$1].type;
      }
      get url() {
        return this[INTERNALS$1].url || "";
      }
      get status() {
        return this[INTERNALS$1].status;
      }
      get ok() {
        return this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;
      }
      get redirected() {
        return this[INTERNALS$1].counter > 0;
      }
      get statusText() {
        return this[INTERNALS$1].statusText;
      }
      get headers() {
        return this[INTERNALS$1].headers;
      }
      get highWaterMark() {
        return this[INTERNALS$1].highWaterMark;
      }
      clone() {
        return new Response(clone(this, this.highWaterMark), {
          type: this.type,
          url: this.url,
          status: this.status,
          statusText: this.statusText,
          headers: this.headers,
          ok: this.ok,
          redirected: this.redirected,
          size: this.size
        });
      }
      static redirect(url, status = 302) {
        if (!isRedirect(status)) {
          throw new RangeError('Failed to execute "redirect" on "response": Invalid status code');
        }
        return new Response(null, {
          headers: {
            location: new URL(url).toString()
          },
          status
        });
      }
      static error() {
        const response = new Response(null, { status: 0, statusText: "" });
        response[INTERNALS$1].type = "error";
        return response;
      }
      get [Symbol.toStringTag]() {
        return "Response";
      }
    };
    Object.defineProperties(Response.prototype, {
      type: { enumerable: true },
      url: { enumerable: true },
      status: { enumerable: true },
      ok: { enumerable: true },
      redirected: { enumerable: true },
      statusText: { enumerable: true },
      headers: { enumerable: true },
      clone: { enumerable: true }
    });
    getSearch = (parsedURL) => {
      if (parsedURL.search) {
        return parsedURL.search;
      }
      const lastOffset = parsedURL.href.length - 1;
      const hash2 = parsedURL.hash || (parsedURL.href[lastOffset] === "#" ? "#" : "");
      return parsedURL.href[lastOffset - hash2.length] === "?" ? "?" : "";
    };
    INTERNALS = Symbol("Request internals");
    isRequest = (object) => {
      return typeof object === "object" && typeof object[INTERNALS] === "object";
    };
    Request = class extends Body {
      constructor(input, init2 = {}) {
        let parsedURL;
        if (isRequest(input)) {
          parsedURL = new URL(input.url);
        } else {
          parsedURL = new URL(input);
          input = {};
        }
        let method = init2.method || input.method || "GET";
        method = method.toUpperCase();
        if ((init2.body != null || isRequest(input)) && input.body !== null && (method === "GET" || method === "HEAD")) {
          throw new TypeError("Request with GET/HEAD method cannot have body");
        }
        const inputBody = init2.body ? init2.body : isRequest(input) && input.body !== null ? clone(input) : null;
        super(inputBody, {
          size: init2.size || input.size || 0
        });
        const headers = new Headers(init2.headers || input.headers || {});
        if (inputBody !== null && !headers.has("Content-Type")) {
          const contentType = extractContentType(inputBody, this);
          if (contentType) {
            headers.append("Content-Type", contentType);
          }
        }
        let signal = isRequest(input) ? input.signal : null;
        if ("signal" in init2) {
          signal = init2.signal;
        }
        if (signal != null && !isAbortSignal(signal)) {
          throw new TypeError("Expected signal to be an instanceof AbortSignal or EventTarget");
        }
        this[INTERNALS] = {
          method,
          redirect: init2.redirect || input.redirect || "follow",
          headers,
          parsedURL,
          signal
        };
        this.follow = init2.follow === void 0 ? input.follow === void 0 ? 20 : input.follow : init2.follow;
        this.compress = init2.compress === void 0 ? input.compress === void 0 ? true : input.compress : init2.compress;
        this.counter = init2.counter || input.counter || 0;
        this.agent = init2.agent || input.agent;
        this.highWaterMark = init2.highWaterMark || input.highWaterMark || 16384;
        this.insecureHTTPParser = init2.insecureHTTPParser || input.insecureHTTPParser || false;
      }
      get method() {
        return this[INTERNALS].method;
      }
      get url() {
        return (0, import_url.format)(this[INTERNALS].parsedURL);
      }
      get headers() {
        return this[INTERNALS].headers;
      }
      get redirect() {
        return this[INTERNALS].redirect;
      }
      get signal() {
        return this[INTERNALS].signal;
      }
      clone() {
        return new Request(this);
      }
      get [Symbol.toStringTag]() {
        return "Request";
      }
    };
    Object.defineProperties(Request.prototype, {
      method: { enumerable: true },
      url: { enumerable: true },
      headers: { enumerable: true },
      redirect: { enumerable: true },
      clone: { enumerable: true },
      signal: { enumerable: true }
    });
    getNodeRequestOptions = (request) => {
      const { parsedURL } = request[INTERNALS];
      const headers = new Headers(request[INTERNALS].headers);
      if (!headers.has("Accept")) {
        headers.set("Accept", "*/*");
      }
      let contentLengthValue = null;
      if (request.body === null && /^(post|put)$/i.test(request.method)) {
        contentLengthValue = "0";
      }
      if (request.body !== null) {
        const totalBytes = getTotalBytes(request);
        if (typeof totalBytes === "number" && !Number.isNaN(totalBytes)) {
          contentLengthValue = String(totalBytes);
        }
      }
      if (contentLengthValue) {
        headers.set("Content-Length", contentLengthValue);
      }
      if (!headers.has("User-Agent")) {
        headers.set("User-Agent", "node-fetch");
      }
      if (request.compress && !headers.has("Accept-Encoding")) {
        headers.set("Accept-Encoding", "gzip,deflate,br");
      }
      let { agent } = request;
      if (typeof agent === "function") {
        agent = agent(parsedURL);
      }
      if (!headers.has("Connection") && !agent) {
        headers.set("Connection", "close");
      }
      const search = getSearch(parsedURL);
      const requestOptions = {
        path: parsedURL.pathname + search,
        pathname: parsedURL.pathname,
        hostname: parsedURL.hostname,
        protocol: parsedURL.protocol,
        port: parsedURL.port,
        hash: parsedURL.hash,
        search: parsedURL.search,
        query: parsedURL.query,
        href: parsedURL.href,
        method: request.method,
        headers: headers[Symbol.for("nodejs.util.inspect.custom")](),
        insecureHTTPParser: request.insecureHTTPParser,
        agent
      };
      return requestOptions;
    };
    AbortError = class extends FetchBaseError {
      constructor(message, type = "aborted") {
        super(message, type);
      }
    };
    supportedSchemas = new Set(["data:", "http:", "https:"]);
  }
});

// node_modules/@sveltejs/adapter-netlify/files/shims.js
var init_shims = __esm({
  "node_modules/@sveltejs/adapter-netlify/files/shims.js"() {
    init_install_fetch();
  }
});

// node_modules/lodash/_baseHas.js
var require_baseHas = __commonJS({
  "node_modules/lodash/_baseHas.js"(exports, module2) {
    init_shims();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function baseHas(object, key) {
      return object != null && hasOwnProperty.call(object, key);
    }
    module2.exports = baseHas;
  }
});

// node_modules/lodash/isArray.js
var require_isArray = __commonJS({
  "node_modules/lodash/isArray.js"(exports, module2) {
    init_shims();
    var isArray = Array.isArray;
    module2.exports = isArray;
  }
});

// node_modules/lodash/_freeGlobal.js
var require_freeGlobal = __commonJS({
  "node_modules/lodash/_freeGlobal.js"(exports, module2) {
    init_shims();
    var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
    module2.exports = freeGlobal;
  }
});

// node_modules/lodash/_root.js
var require_root = __commonJS({
  "node_modules/lodash/_root.js"(exports, module2) {
    init_shims();
    var freeGlobal = require_freeGlobal();
    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
    var root = freeGlobal || freeSelf || Function("return this")();
    module2.exports = root;
  }
});

// node_modules/lodash/_Symbol.js
var require_Symbol = __commonJS({
  "node_modules/lodash/_Symbol.js"(exports, module2) {
    init_shims();
    var root = require_root();
    var Symbol2 = root.Symbol;
    module2.exports = Symbol2;
  }
});

// node_modules/lodash/_getRawTag.js
var require_getRawTag = __commonJS({
  "node_modules/lodash/_getRawTag.js"(exports, module2) {
    init_shims();
    var Symbol2 = require_Symbol();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var nativeObjectToString = objectProto.toString;
    var symToStringTag = Symbol2 ? Symbol2.toStringTag : void 0;
    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];
      try {
        value[symToStringTag] = void 0;
        var unmasked = true;
      } catch (e) {
      }
      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }
    module2.exports = getRawTag;
  }
});

// node_modules/lodash/_objectToString.js
var require_objectToString = __commonJS({
  "node_modules/lodash/_objectToString.js"(exports, module2) {
    init_shims();
    var objectProto = Object.prototype;
    var nativeObjectToString = objectProto.toString;
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }
    module2.exports = objectToString;
  }
});

// node_modules/lodash/_baseGetTag.js
var require_baseGetTag = __commonJS({
  "node_modules/lodash/_baseGetTag.js"(exports, module2) {
    init_shims();
    var Symbol2 = require_Symbol();
    var getRawTag = require_getRawTag();
    var objectToString = require_objectToString();
    var nullTag = "[object Null]";
    var undefinedTag = "[object Undefined]";
    var symToStringTag = Symbol2 ? Symbol2.toStringTag : void 0;
    function baseGetTag(value) {
      if (value == null) {
        return value === void 0 ? undefinedTag : nullTag;
      }
      return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
    }
    module2.exports = baseGetTag;
  }
});

// node_modules/lodash/isObjectLike.js
var require_isObjectLike = __commonJS({
  "node_modules/lodash/isObjectLike.js"(exports, module2) {
    init_shims();
    function isObjectLike(value) {
      return value != null && typeof value == "object";
    }
    module2.exports = isObjectLike;
  }
});

// node_modules/lodash/isSymbol.js
var require_isSymbol = __commonJS({
  "node_modules/lodash/isSymbol.js"(exports, module2) {
    init_shims();
    var baseGetTag = require_baseGetTag();
    var isObjectLike = require_isObjectLike();
    var symbolTag = "[object Symbol]";
    function isSymbol(value) {
      return typeof value == "symbol" || isObjectLike(value) && baseGetTag(value) == symbolTag;
    }
    module2.exports = isSymbol;
  }
});

// node_modules/lodash/_isKey.js
var require_isKey = __commonJS({
  "node_modules/lodash/_isKey.js"(exports, module2) {
    init_shims();
    var isArray = require_isArray();
    var isSymbol = require_isSymbol();
    var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/;
    var reIsPlainProp = /^\w*$/;
    function isKey(value, object) {
      if (isArray(value)) {
        return false;
      }
      var type = typeof value;
      if (type == "number" || type == "symbol" || type == "boolean" || value == null || isSymbol(value)) {
        return true;
      }
      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);
    }
    module2.exports = isKey;
  }
});

// node_modules/lodash/isObject.js
var require_isObject = __commonJS({
  "node_modules/lodash/isObject.js"(exports, module2) {
    init_shims();
    function isObject(value) {
      var type = typeof value;
      return value != null && (type == "object" || type == "function");
    }
    module2.exports = isObject;
  }
});

// node_modules/lodash/isFunction.js
var require_isFunction = __commonJS({
  "node_modules/lodash/isFunction.js"(exports, module2) {
    init_shims();
    var baseGetTag = require_baseGetTag();
    var isObject = require_isObject();
    var asyncTag = "[object AsyncFunction]";
    var funcTag = "[object Function]";
    var genTag = "[object GeneratorFunction]";
    var proxyTag = "[object Proxy]";
    function isFunction(value) {
      if (!isObject(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }
    module2.exports = isFunction;
  }
});

// node_modules/lodash/_coreJsData.js
var require_coreJsData = __commonJS({
  "node_modules/lodash/_coreJsData.js"(exports, module2) {
    init_shims();
    var root = require_root();
    var coreJsData = root["__core-js_shared__"];
    module2.exports = coreJsData;
  }
});

// node_modules/lodash/_isMasked.js
var require_isMasked = __commonJS({
  "node_modules/lodash/_isMasked.js"(exports, module2) {
    init_shims();
    var coreJsData = require_coreJsData();
    var maskSrcKey = function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
      return uid ? "Symbol(src)_1." + uid : "";
    }();
    function isMasked(func) {
      return !!maskSrcKey && maskSrcKey in func;
    }
    module2.exports = isMasked;
  }
});

// node_modules/lodash/_toSource.js
var require_toSource = __commonJS({
  "node_modules/lodash/_toSource.js"(exports, module2) {
    init_shims();
    var funcProto = Function.prototype;
    var funcToString = funcProto.toString;
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {
        }
        try {
          return func + "";
        } catch (e) {
        }
      }
      return "";
    }
    module2.exports = toSource;
  }
});

// node_modules/lodash/_baseIsNative.js
var require_baseIsNative = __commonJS({
  "node_modules/lodash/_baseIsNative.js"(exports, module2) {
    init_shims();
    var isFunction = require_isFunction();
    var isMasked = require_isMasked();
    var isObject = require_isObject();
    var toSource = require_toSource();
    var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
    var reIsHostCtor = /^\[object .+?Constructor\]$/;
    var funcProto = Function.prototype;
    var objectProto = Object.prototype;
    var funcToString = funcProto.toString;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var reIsNative = RegExp("^" + funcToString.call(hasOwnProperty).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }
    module2.exports = baseIsNative;
  }
});

// node_modules/lodash/_getValue.js
var require_getValue = __commonJS({
  "node_modules/lodash/_getValue.js"(exports, module2) {
    init_shims();
    function getValue(object, key) {
      return object == null ? void 0 : object[key];
    }
    module2.exports = getValue;
  }
});

// node_modules/lodash/_getNative.js
var require_getNative = __commonJS({
  "node_modules/lodash/_getNative.js"(exports, module2) {
    init_shims();
    var baseIsNative = require_baseIsNative();
    var getValue = require_getValue();
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : void 0;
    }
    module2.exports = getNative;
  }
});

// node_modules/lodash/_nativeCreate.js
var require_nativeCreate = __commonJS({
  "node_modules/lodash/_nativeCreate.js"(exports, module2) {
    init_shims();
    var getNative = require_getNative();
    var nativeCreate = getNative(Object, "create");
    module2.exports = nativeCreate;
  }
});

// node_modules/lodash/_hashClear.js
var require_hashClear = __commonJS({
  "node_modules/lodash/_hashClear.js"(exports, module2) {
    init_shims();
    var nativeCreate = require_nativeCreate();
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }
    module2.exports = hashClear;
  }
});

// node_modules/lodash/_hashDelete.js
var require_hashDelete = __commonJS({
  "node_modules/lodash/_hashDelete.js"(exports, module2) {
    init_shims();
    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }
    module2.exports = hashDelete;
  }
});

// node_modules/lodash/_hashGet.js
var require_hashGet = __commonJS({
  "node_modules/lodash/_hashGet.js"(exports, module2) {
    init_shims();
    var nativeCreate = require_nativeCreate();
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? void 0 : result;
      }
      return hasOwnProperty.call(data, key) ? data[key] : void 0;
    }
    module2.exports = hashGet;
  }
});

// node_modules/lodash/_hashHas.js
var require_hashHas = __commonJS({
  "node_modules/lodash/_hashHas.js"(exports, module2) {
    init_shims();
    var nativeCreate = require_nativeCreate();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? data[key] !== void 0 : hasOwnProperty.call(data, key);
    }
    module2.exports = hashHas;
  }
});

// node_modules/lodash/_hashSet.js
var require_hashSet = __commonJS({
  "node_modules/lodash/_hashSet.js"(exports, module2) {
    init_shims();
    var nativeCreate = require_nativeCreate();
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = nativeCreate && value === void 0 ? HASH_UNDEFINED : value;
      return this;
    }
    module2.exports = hashSet;
  }
});

// node_modules/lodash/_Hash.js
var require_Hash = __commonJS({
  "node_modules/lodash/_Hash.js"(exports, module2) {
    init_shims();
    var hashClear = require_hashClear();
    var hashDelete = require_hashDelete();
    var hashGet = require_hashGet();
    var hashHas = require_hashHas();
    var hashSet = require_hashSet();
    function Hash(entries) {
      var index2 = -1, length = entries == null ? 0 : entries.length;
      this.clear();
      while (++index2 < length) {
        var entry = entries[index2];
        this.set(entry[0], entry[1]);
      }
    }
    Hash.prototype.clear = hashClear;
    Hash.prototype["delete"] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;
    module2.exports = Hash;
  }
});

// node_modules/lodash/_listCacheClear.js
var require_listCacheClear = __commonJS({
  "node_modules/lodash/_listCacheClear.js"(exports, module2) {
    init_shims();
    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }
    module2.exports = listCacheClear;
  }
});

// node_modules/lodash/eq.js
var require_eq = __commonJS({
  "node_modules/lodash/eq.js"(exports, module2) {
    init_shims();
    function eq(value, other) {
      return value === other || value !== value && other !== other;
    }
    module2.exports = eq;
  }
});

// node_modules/lodash/_assocIndexOf.js
var require_assocIndexOf = __commonJS({
  "node_modules/lodash/_assocIndexOf.js"(exports, module2) {
    init_shims();
    var eq = require_eq();
    function assocIndexOf(array, key) {
      var length = array.length;
      while (length--) {
        if (eq(array[length][0], key)) {
          return length;
        }
      }
      return -1;
    }
    module2.exports = assocIndexOf;
  }
});

// node_modules/lodash/_listCacheDelete.js
var require_listCacheDelete = __commonJS({
  "node_modules/lodash/_listCacheDelete.js"(exports, module2) {
    init_shims();
    var assocIndexOf = require_assocIndexOf();
    var arrayProto = Array.prototype;
    var splice = arrayProto.splice;
    function listCacheDelete(key) {
      var data = this.__data__, index2 = assocIndexOf(data, key);
      if (index2 < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index2 == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index2, 1);
      }
      --this.size;
      return true;
    }
    module2.exports = listCacheDelete;
  }
});

// node_modules/lodash/_listCacheGet.js
var require_listCacheGet = __commonJS({
  "node_modules/lodash/_listCacheGet.js"(exports, module2) {
    init_shims();
    var assocIndexOf = require_assocIndexOf();
    function listCacheGet(key) {
      var data = this.__data__, index2 = assocIndexOf(data, key);
      return index2 < 0 ? void 0 : data[index2][1];
    }
    module2.exports = listCacheGet;
  }
});

// node_modules/lodash/_listCacheHas.js
var require_listCacheHas = __commonJS({
  "node_modules/lodash/_listCacheHas.js"(exports, module2) {
    init_shims();
    var assocIndexOf = require_assocIndexOf();
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }
    module2.exports = listCacheHas;
  }
});

// node_modules/lodash/_listCacheSet.js
var require_listCacheSet = __commonJS({
  "node_modules/lodash/_listCacheSet.js"(exports, module2) {
    init_shims();
    var assocIndexOf = require_assocIndexOf();
    function listCacheSet(key, value) {
      var data = this.__data__, index2 = assocIndexOf(data, key);
      if (index2 < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index2][1] = value;
      }
      return this;
    }
    module2.exports = listCacheSet;
  }
});

// node_modules/lodash/_ListCache.js
var require_ListCache = __commonJS({
  "node_modules/lodash/_ListCache.js"(exports, module2) {
    init_shims();
    var listCacheClear = require_listCacheClear();
    var listCacheDelete = require_listCacheDelete();
    var listCacheGet = require_listCacheGet();
    var listCacheHas = require_listCacheHas();
    var listCacheSet = require_listCacheSet();
    function ListCache(entries) {
      var index2 = -1, length = entries == null ? 0 : entries.length;
      this.clear();
      while (++index2 < length) {
        var entry = entries[index2];
        this.set(entry[0], entry[1]);
      }
    }
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype["delete"] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;
    module2.exports = ListCache;
  }
});

// node_modules/lodash/_Map.js
var require_Map = __commonJS({
  "node_modules/lodash/_Map.js"(exports, module2) {
    init_shims();
    var getNative = require_getNative();
    var root = require_root();
    var Map2 = getNative(root, "Map");
    module2.exports = Map2;
  }
});

// node_modules/lodash/_mapCacheClear.js
var require_mapCacheClear = __commonJS({
  "node_modules/lodash/_mapCacheClear.js"(exports, module2) {
    init_shims();
    var Hash = require_Hash();
    var ListCache = require_ListCache();
    var Map2 = require_Map();
    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        "hash": new Hash(),
        "map": new (Map2 || ListCache)(),
        "string": new Hash()
      };
    }
    module2.exports = mapCacheClear;
  }
});

// node_modules/lodash/_isKeyable.js
var require_isKeyable = __commonJS({
  "node_modules/lodash/_isKeyable.js"(exports, module2) {
    init_shims();
    function isKeyable(value) {
      var type = typeof value;
      return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
    }
    module2.exports = isKeyable;
  }
});

// node_modules/lodash/_getMapData.js
var require_getMapData = __commonJS({
  "node_modules/lodash/_getMapData.js"(exports, module2) {
    init_shims();
    var isKeyable = require_isKeyable();
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
    }
    module2.exports = getMapData;
  }
});

// node_modules/lodash/_mapCacheDelete.js
var require_mapCacheDelete = __commonJS({
  "node_modules/lodash/_mapCacheDelete.js"(exports, module2) {
    init_shims();
    var getMapData = require_getMapData();
    function mapCacheDelete(key) {
      var result = getMapData(this, key)["delete"](key);
      this.size -= result ? 1 : 0;
      return result;
    }
    module2.exports = mapCacheDelete;
  }
});

// node_modules/lodash/_mapCacheGet.js
var require_mapCacheGet = __commonJS({
  "node_modules/lodash/_mapCacheGet.js"(exports, module2) {
    init_shims();
    var getMapData = require_getMapData();
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }
    module2.exports = mapCacheGet;
  }
});

// node_modules/lodash/_mapCacheHas.js
var require_mapCacheHas = __commonJS({
  "node_modules/lodash/_mapCacheHas.js"(exports, module2) {
    init_shims();
    var getMapData = require_getMapData();
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }
    module2.exports = mapCacheHas;
  }
});

// node_modules/lodash/_mapCacheSet.js
var require_mapCacheSet = __commonJS({
  "node_modules/lodash/_mapCacheSet.js"(exports, module2) {
    init_shims();
    var getMapData = require_getMapData();
    function mapCacheSet(key, value) {
      var data = getMapData(this, key), size = data.size;
      data.set(key, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    }
    module2.exports = mapCacheSet;
  }
});

// node_modules/lodash/_MapCache.js
var require_MapCache = __commonJS({
  "node_modules/lodash/_MapCache.js"(exports, module2) {
    init_shims();
    var mapCacheClear = require_mapCacheClear();
    var mapCacheDelete = require_mapCacheDelete();
    var mapCacheGet = require_mapCacheGet();
    var mapCacheHas = require_mapCacheHas();
    var mapCacheSet = require_mapCacheSet();
    function MapCache(entries) {
      var index2 = -1, length = entries == null ? 0 : entries.length;
      this.clear();
      while (++index2 < length) {
        var entry = entries[index2];
        this.set(entry[0], entry[1]);
      }
    }
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype["delete"] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;
    module2.exports = MapCache;
  }
});

// node_modules/lodash/memoize.js
var require_memoize = __commonJS({
  "node_modules/lodash/memoize.js"(exports, module2) {
    init_shims();
    var MapCache = require_MapCache();
    var FUNC_ERROR_TEXT = "Expected a function";
    function memoize(func, resolver) {
      if (typeof func != "function" || resolver != null && typeof resolver != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var memoized = function() {
        var args = arguments, key = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;
        if (cache.has(key)) {
          return cache.get(key);
        }
        var result = func.apply(this, args);
        memoized.cache = cache.set(key, result) || cache;
        return result;
      };
      memoized.cache = new (memoize.Cache || MapCache)();
      return memoized;
    }
    memoize.Cache = MapCache;
    module2.exports = memoize;
  }
});

// node_modules/lodash/_memoizeCapped.js
var require_memoizeCapped = __commonJS({
  "node_modules/lodash/_memoizeCapped.js"(exports, module2) {
    init_shims();
    var memoize = require_memoize();
    var MAX_MEMOIZE_SIZE = 500;
    function memoizeCapped(func) {
      var result = memoize(func, function(key) {
        if (cache.size === MAX_MEMOIZE_SIZE) {
          cache.clear();
        }
        return key;
      });
      var cache = result.cache;
      return result;
    }
    module2.exports = memoizeCapped;
  }
});

// node_modules/lodash/_stringToPath.js
var require_stringToPath = __commonJS({
  "node_modules/lodash/_stringToPath.js"(exports, module2) {
    init_shims();
    var memoizeCapped = require_memoizeCapped();
    var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
    var reEscapeChar = /\\(\\)?/g;
    var stringToPath = memoizeCapped(function(string) {
      var result = [];
      if (string.charCodeAt(0) === 46) {
        result.push("");
      }
      string.replace(rePropName, function(match, number, quote, subString) {
        result.push(quote ? subString.replace(reEscapeChar, "$1") : number || match);
      });
      return result;
    });
    module2.exports = stringToPath;
  }
});

// node_modules/lodash/_arrayMap.js
var require_arrayMap = __commonJS({
  "node_modules/lodash/_arrayMap.js"(exports, module2) {
    init_shims();
    function arrayMap(array, iteratee) {
      var index2 = -1, length = array == null ? 0 : array.length, result = Array(length);
      while (++index2 < length) {
        result[index2] = iteratee(array[index2], index2, array);
      }
      return result;
    }
    module2.exports = arrayMap;
  }
});

// node_modules/lodash/_baseToString.js
var require_baseToString = __commonJS({
  "node_modules/lodash/_baseToString.js"(exports, module2) {
    init_shims();
    var Symbol2 = require_Symbol();
    var arrayMap = require_arrayMap();
    var isArray = require_isArray();
    var isSymbol = require_isSymbol();
    var INFINITY = 1 / 0;
    var symbolProto = Symbol2 ? Symbol2.prototype : void 0;
    var symbolToString = symbolProto ? symbolProto.toString : void 0;
    function baseToString(value) {
      if (typeof value == "string") {
        return value;
      }
      if (isArray(value)) {
        return arrayMap(value, baseToString) + "";
      }
      if (isSymbol(value)) {
        return symbolToString ? symbolToString.call(value) : "";
      }
      var result = value + "";
      return result == "0" && 1 / value == -INFINITY ? "-0" : result;
    }
    module2.exports = baseToString;
  }
});

// node_modules/lodash/toString.js
var require_toString = __commonJS({
  "node_modules/lodash/toString.js"(exports, module2) {
    init_shims();
    var baseToString = require_baseToString();
    function toString(value) {
      return value == null ? "" : baseToString(value);
    }
    module2.exports = toString;
  }
});

// node_modules/lodash/_castPath.js
var require_castPath = __commonJS({
  "node_modules/lodash/_castPath.js"(exports, module2) {
    init_shims();
    var isArray = require_isArray();
    var isKey = require_isKey();
    var stringToPath = require_stringToPath();
    var toString = require_toString();
    function castPath(value, object) {
      if (isArray(value)) {
        return value;
      }
      return isKey(value, object) ? [value] : stringToPath(toString(value));
    }
    module2.exports = castPath;
  }
});

// node_modules/lodash/_baseIsArguments.js
var require_baseIsArguments = __commonJS({
  "node_modules/lodash/_baseIsArguments.js"(exports, module2) {
    init_shims();
    var baseGetTag = require_baseGetTag();
    var isObjectLike = require_isObjectLike();
    var argsTag = "[object Arguments]";
    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }
    module2.exports = baseIsArguments;
  }
});

// node_modules/lodash/isArguments.js
var require_isArguments = __commonJS({
  "node_modules/lodash/isArguments.js"(exports, module2) {
    init_shims();
    var baseIsArguments = require_baseIsArguments();
    var isObjectLike = require_isObjectLike();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var propertyIsEnumerable = objectProto.propertyIsEnumerable;
    var isArguments = baseIsArguments(function() {
      return arguments;
    }()) ? baseIsArguments : function(value) {
      return isObjectLike(value) && hasOwnProperty.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
    };
    module2.exports = isArguments;
  }
});

// node_modules/lodash/_isIndex.js
var require_isIndex = __commonJS({
  "node_modules/lodash/_isIndex.js"(exports, module2) {
    init_shims();
    var MAX_SAFE_INTEGER = 9007199254740991;
    var reIsUint = /^(?:0|[1-9]\d*)$/;
    function isIndex(value, length) {
      var type = typeof value;
      length = length == null ? MAX_SAFE_INTEGER : length;
      return !!length && (type == "number" || type != "symbol" && reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);
    }
    module2.exports = isIndex;
  }
});

// node_modules/lodash/isLength.js
var require_isLength = __commonJS({
  "node_modules/lodash/isLength.js"(exports, module2) {
    init_shims();
    var MAX_SAFE_INTEGER = 9007199254740991;
    function isLength(value) {
      return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }
    module2.exports = isLength;
  }
});

// node_modules/lodash/_toKey.js
var require_toKey = __commonJS({
  "node_modules/lodash/_toKey.js"(exports, module2) {
    init_shims();
    var isSymbol = require_isSymbol();
    var INFINITY = 1 / 0;
    function toKey(value) {
      if (typeof value == "string" || isSymbol(value)) {
        return value;
      }
      var result = value + "";
      return result == "0" && 1 / value == -INFINITY ? "-0" : result;
    }
    module2.exports = toKey;
  }
});

// node_modules/lodash/_hasPath.js
var require_hasPath = __commonJS({
  "node_modules/lodash/_hasPath.js"(exports, module2) {
    init_shims();
    var castPath = require_castPath();
    var isArguments = require_isArguments();
    var isArray = require_isArray();
    var isIndex = require_isIndex();
    var isLength = require_isLength();
    var toKey = require_toKey();
    function hasPath(object, path, hasFunc) {
      path = castPath(path, object);
      var index2 = -1, length = path.length, result = false;
      while (++index2 < length) {
        var key = toKey(path[index2]);
        if (!(result = object != null && hasFunc(object, key))) {
          break;
        }
        object = object[key];
      }
      if (result || ++index2 != length) {
        return result;
      }
      length = object == null ? 0 : object.length;
      return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));
    }
    module2.exports = hasPath;
  }
});

// node_modules/lodash/has.js
var require_has = __commonJS({
  "node_modules/lodash/has.js"(exports, module2) {
    init_shims();
    var baseHas = require_baseHas();
    var hasPath = require_hasPath();
    function has2(object, path) {
      return object != null && hasPath(object, path, baseHas);
    }
    module2.exports = has2;
  }
});

// node_modules/slugify/slugify.js
var require_slugify = __commonJS({
  "node_modules/slugify/slugify.js"(exports, module2) {
    init_shims();
    (function(name, root, factory) {
      if (typeof exports === "object") {
        module2.exports = factory();
        module2.exports["default"] = factory();
      } else if (typeof define === "function" && define.amd) {
        define(factory);
      } else {
        root[name] = factory();
      }
    })("slugify", exports, function() {
      var charMap = JSON.parse(`{"$":"dollar","%":"percent","&":"and","<":"less",">":"greater","|":"or","\xA2":"cent","\xA3":"pound","\xA4":"currency","\xA5":"yen","\xA9":"(c)","\xAA":"a","\xAE":"(r)","\xBA":"o","\xC0":"A","\xC1":"A","\xC2":"A","\xC3":"A","\xC4":"A","\xC5":"A","\xC6":"AE","\xC7":"C","\xC8":"E","\xC9":"E","\xCA":"E","\xCB":"E","\xCC":"I","\xCD":"I","\xCE":"I","\xCF":"I","\xD0":"D","\xD1":"N","\xD2":"O","\xD3":"O","\xD4":"O","\xD5":"O","\xD6":"O","\xD8":"O","\xD9":"U","\xDA":"U","\xDB":"U","\xDC":"U","\xDD":"Y","\xDE":"TH","\xDF":"ss","\xE0":"a","\xE1":"a","\xE2":"a","\xE3":"a","\xE4":"a","\xE5":"a","\xE6":"ae","\xE7":"c","\xE8":"e","\xE9":"e","\xEA":"e","\xEB":"e","\xEC":"i","\xED":"i","\xEE":"i","\xEF":"i","\xF0":"d","\xF1":"n","\xF2":"o","\xF3":"o","\xF4":"o","\xF5":"o","\xF6":"o","\xF8":"o","\xF9":"u","\xFA":"u","\xFB":"u","\xFC":"u","\xFD":"y","\xFE":"th","\xFF":"y","\u0100":"A","\u0101":"a","\u0102":"A","\u0103":"a","\u0104":"A","\u0105":"a","\u0106":"C","\u0107":"c","\u010C":"C","\u010D":"c","\u010E":"D","\u010F":"d","\u0110":"DJ","\u0111":"dj","\u0112":"E","\u0113":"e","\u0116":"E","\u0117":"e","\u0118":"e","\u0119":"e","\u011A":"E","\u011B":"e","\u011E":"G","\u011F":"g","\u0122":"G","\u0123":"g","\u0128":"I","\u0129":"i","\u012A":"i","\u012B":"i","\u012E":"I","\u012F":"i","\u0130":"I","\u0131":"i","\u0136":"k","\u0137":"k","\u013B":"L","\u013C":"l","\u013D":"L","\u013E":"l","\u0141":"L","\u0142":"l","\u0143":"N","\u0144":"n","\u0145":"N","\u0146":"n","\u0147":"N","\u0148":"n","\u014C":"O","\u014D":"o","\u0150":"O","\u0151":"o","\u0152":"OE","\u0153":"oe","\u0154":"R","\u0155":"r","\u0158":"R","\u0159":"r","\u015A":"S","\u015B":"s","\u015E":"S","\u015F":"s","\u0160":"S","\u0161":"s","\u0162":"T","\u0163":"t","\u0164":"T","\u0165":"t","\u0168":"U","\u0169":"u","\u016A":"u","\u016B":"u","\u016E":"U","\u016F":"u","\u0170":"U","\u0171":"u","\u0172":"U","\u0173":"u","\u0174":"W","\u0175":"w","\u0176":"Y","\u0177":"y","\u0178":"Y","\u0179":"Z","\u017A":"z","\u017B":"Z","\u017C":"z","\u017D":"Z","\u017E":"z","\u018F":"E","\u0192":"f","\u01A0":"O","\u01A1":"o","\u01AF":"U","\u01B0":"u","\u01C8":"LJ","\u01C9":"lj","\u01CB":"NJ","\u01CC":"nj","\u0218":"S","\u0219":"s","\u021A":"T","\u021B":"t","\u0259":"e","\u02DA":"o","\u0386":"A","\u0388":"E","\u0389":"H","\u038A":"I","\u038C":"O","\u038E":"Y","\u038F":"W","\u0390":"i","\u0391":"A","\u0392":"B","\u0393":"G","\u0394":"D","\u0395":"E","\u0396":"Z","\u0397":"H","\u0398":"8","\u0399":"I","\u039A":"K","\u039B":"L","\u039C":"M","\u039D":"N","\u039E":"3","\u039F":"O","\u03A0":"P","\u03A1":"R","\u03A3":"S","\u03A4":"T","\u03A5":"Y","\u03A6":"F","\u03A7":"X","\u03A8":"PS","\u03A9":"W","\u03AA":"I","\u03AB":"Y","\u03AC":"a","\u03AD":"e","\u03AE":"h","\u03AF":"i","\u03B0":"y","\u03B1":"a","\u03B2":"b","\u03B3":"g","\u03B4":"d","\u03B5":"e","\u03B6":"z","\u03B7":"h","\u03B8":"8","\u03B9":"i","\u03BA":"k","\u03BB":"l","\u03BC":"m","\u03BD":"n","\u03BE":"3","\u03BF":"o","\u03C0":"p","\u03C1":"r","\u03C2":"s","\u03C3":"s","\u03C4":"t","\u03C5":"y","\u03C6":"f","\u03C7":"x","\u03C8":"ps","\u03C9":"w","\u03CA":"i","\u03CB":"y","\u03CC":"o","\u03CD":"y","\u03CE":"w","\u0401":"Yo","\u0402":"DJ","\u0404":"Ye","\u0406":"I","\u0407":"Yi","\u0408":"J","\u0409":"LJ","\u040A":"NJ","\u040B":"C","\u040F":"DZ","\u0410":"A","\u0411":"B","\u0412":"V","\u0413":"G","\u0414":"D","\u0415":"E","\u0416":"Zh","\u0417":"Z","\u0418":"I","\u0419":"J","\u041A":"K","\u041B":"L","\u041C":"M","\u041D":"N","\u041E":"O","\u041F":"P","\u0420":"R","\u0421":"S","\u0422":"T","\u0423":"U","\u0424":"F","\u0425":"H","\u0426":"C","\u0427":"Ch","\u0428":"Sh","\u0429":"Sh","\u042A":"U","\u042B":"Y","\u042C":"","\u042D":"E","\u042E":"Yu","\u042F":"Ya","\u0430":"a","\u0431":"b","\u0432":"v","\u0433":"g","\u0434":"d","\u0435":"e","\u0436":"zh","\u0437":"z","\u0438":"i","\u0439":"j","\u043A":"k","\u043B":"l","\u043C":"m","\u043D":"n","\u043E":"o","\u043F":"p","\u0440":"r","\u0441":"s","\u0442":"t","\u0443":"u","\u0444":"f","\u0445":"h","\u0446":"c","\u0447":"ch","\u0448":"sh","\u0449":"sh","\u044A":"u","\u044B":"y","\u044C":"","\u044D":"e","\u044E":"yu","\u044F":"ya","\u0451":"yo","\u0452":"dj","\u0454":"ye","\u0456":"i","\u0457":"yi","\u0458":"j","\u0459":"lj","\u045A":"nj","\u045B":"c","\u045D":"u","\u045F":"dz","\u0490":"G","\u0491":"g","\u0492":"GH","\u0493":"gh","\u049A":"KH","\u049B":"kh","\u04A2":"NG","\u04A3":"ng","\u04AE":"UE","\u04AF":"ue","\u04B0":"U","\u04B1":"u","\u04BA":"H","\u04BB":"h","\u04D8":"AE","\u04D9":"ae","\u04E8":"OE","\u04E9":"oe","\u0531":"A","\u0532":"B","\u0533":"G","\u0534":"D","\u0535":"E","\u0536":"Z","\u0537":"E'","\u0538":"Y'","\u0539":"T'","\u053A":"JH","\u053B":"I","\u053C":"L","\u053D":"X","\u053E":"C'","\u053F":"K","\u0540":"H","\u0541":"D'","\u0542":"GH","\u0543":"TW","\u0544":"M","\u0545":"Y","\u0546":"N","\u0547":"SH","\u0549":"CH","\u054A":"P","\u054B":"J","\u054C":"R'","\u054D":"S","\u054E":"V","\u054F":"T","\u0550":"R","\u0551":"C","\u0553":"P'","\u0554":"Q'","\u0555":"O''","\u0556":"F","\u0587":"EV","\u0621":"a","\u0622":"aa","\u0623":"a","\u0624":"u","\u0625":"i","\u0626":"e","\u0627":"a","\u0628":"b","\u0629":"h","\u062A":"t","\u062B":"th","\u062C":"j","\u062D":"h","\u062E":"kh","\u062F":"d","\u0630":"th","\u0631":"r","\u0632":"z","\u0633":"s","\u0634":"sh","\u0635":"s","\u0636":"dh","\u0637":"t","\u0638":"z","\u0639":"a","\u063A":"gh","\u0641":"f","\u0642":"q","\u0643":"k","\u0644":"l","\u0645":"m","\u0646":"n","\u0647":"h","\u0648":"w","\u0649":"a","\u064A":"y","\u064B":"an","\u064C":"on","\u064D":"en","\u064E":"a","\u064F":"u","\u0650":"e","\u0652":"","\u0660":"0","\u0661":"1","\u0662":"2","\u0663":"3","\u0664":"4","\u0665":"5","\u0666":"6","\u0667":"7","\u0668":"8","\u0669":"9","\u067E":"p","\u0686":"ch","\u0698":"zh","\u06A9":"k","\u06AF":"g","\u06CC":"y","\u06F0":"0","\u06F1":"1","\u06F2":"2","\u06F3":"3","\u06F4":"4","\u06F5":"5","\u06F6":"6","\u06F7":"7","\u06F8":"8","\u06F9":"9","\u0E3F":"baht","\u10D0":"a","\u10D1":"b","\u10D2":"g","\u10D3":"d","\u10D4":"e","\u10D5":"v","\u10D6":"z","\u10D7":"t","\u10D8":"i","\u10D9":"k","\u10DA":"l","\u10DB":"m","\u10DC":"n","\u10DD":"o","\u10DE":"p","\u10DF":"zh","\u10E0":"r","\u10E1":"s","\u10E2":"t","\u10E3":"u","\u10E4":"f","\u10E5":"k","\u10E6":"gh","\u10E7":"q","\u10E8":"sh","\u10E9":"ch","\u10EA":"ts","\u10EB":"dz","\u10EC":"ts","\u10ED":"ch","\u10EE":"kh","\u10EF":"j","\u10F0":"h","\u1E62":"S","\u1E63":"s","\u1E80":"W","\u1E81":"w","\u1E82":"W","\u1E83":"w","\u1E84":"W","\u1E85":"w","\u1E9E":"SS","\u1EA0":"A","\u1EA1":"a","\u1EA2":"A","\u1EA3":"a","\u1EA4":"A","\u1EA5":"a","\u1EA6":"A","\u1EA7":"a","\u1EA8":"A","\u1EA9":"a","\u1EAA":"A","\u1EAB":"a","\u1EAC":"A","\u1EAD":"a","\u1EAE":"A","\u1EAF":"a","\u1EB0":"A","\u1EB1":"a","\u1EB2":"A","\u1EB3":"a","\u1EB4":"A","\u1EB5":"a","\u1EB6":"A","\u1EB7":"a","\u1EB8":"E","\u1EB9":"e","\u1EBA":"E","\u1EBB":"e","\u1EBC":"E","\u1EBD":"e","\u1EBE":"E","\u1EBF":"e","\u1EC0":"E","\u1EC1":"e","\u1EC2":"E","\u1EC3":"e","\u1EC4":"E","\u1EC5":"e","\u1EC6":"E","\u1EC7":"e","\u1EC8":"I","\u1EC9":"i","\u1ECA":"I","\u1ECB":"i","\u1ECC":"O","\u1ECD":"o","\u1ECE":"O","\u1ECF":"o","\u1ED0":"O","\u1ED1":"o","\u1ED2":"O","\u1ED3":"o","\u1ED4":"O","\u1ED5":"o","\u1ED6":"O","\u1ED7":"o","\u1ED8":"O","\u1ED9":"o","\u1EDA":"O","\u1EDB":"o","\u1EDC":"O","\u1EDD":"o","\u1EDE":"O","\u1EDF":"o","\u1EE0":"O","\u1EE1":"o","\u1EE2":"O","\u1EE3":"o","\u1EE4":"U","\u1EE5":"u","\u1EE6":"U","\u1EE7":"u","\u1EE8":"U","\u1EE9":"u","\u1EEA":"U","\u1EEB":"u","\u1EEC":"U","\u1EED":"u","\u1EEE":"U","\u1EEF":"u","\u1EF0":"U","\u1EF1":"u","\u1EF2":"Y","\u1EF3":"y","\u1EF4":"Y","\u1EF5":"y","\u1EF6":"Y","\u1EF7":"y","\u1EF8":"Y","\u1EF9":"y","\u2013":"-","\u2018":"'","\u2019":"'","\u201C":"\\"","\u201D":"\\"","\u201E":"\\"","\u2020":"+","\u2022":"*","\u2026":"...","\u20A0":"ecu","\u20A2":"cruzeiro","\u20A3":"french franc","\u20A4":"lira","\u20A5":"mill","\u20A6":"naira","\u20A7":"peseta","\u20A8":"rupee","\u20A9":"won","\u20AA":"new shequel","\u20AB":"dong","\u20AC":"euro","\u20AD":"kip","\u20AE":"tugrik","\u20AF":"drachma","\u20B0":"penny","\u20B1":"peso","\u20B2":"guarani","\u20B3":"austral","\u20B4":"hryvnia","\u20B5":"cedi","\u20B8":"kazakhstani tenge","\u20B9":"indian rupee","\u20BA":"turkish lira","\u20BD":"russian ruble","\u20BF":"bitcoin","\u2120":"sm","\u2122":"tm","\u2202":"d","\u2206":"delta","\u2211":"sum","\u221E":"infinity","\u2665":"love","\u5143":"yuan","\u5186":"yen","\uFDFC":"rial","\uFEF5":"laa","\uFEF7":"laa","\uFEF9":"lai","\uFEFB":"la"}`);
      var locales = JSON.parse('{"bg":{"\u0419":"Y","\u0426":"Ts","\u0429":"Sht","\u042A":"A","\u042C":"Y","\u0439":"y","\u0446":"ts","\u0449":"sht","\u044A":"a","\u044C":"y"},"de":{"\xC4":"AE","\xE4":"ae","\xD6":"OE","\xF6":"oe","\xDC":"UE","\xFC":"ue","\xDF":"ss","%":"prozent","&":"und","|":"oder","\u2211":"summe","\u221E":"unendlich","\u2665":"liebe"},"es":{"%":"por ciento","&":"y","<":"menor que",">":"mayor que","|":"o","\xA2":"centavos","\xA3":"libras","\xA4":"moneda","\u20A3":"francos","\u2211":"suma","\u221E":"infinito","\u2665":"amor"},"fr":{"%":"pourcent","&":"et","<":"plus petit",">":"plus grand","|":"ou","\xA2":"centime","\xA3":"livre","\xA4":"devise","\u20A3":"franc","\u2211":"somme","\u221E":"infini","\u2665":"amour"},"pt":{"%":"porcento","&":"e","<":"menor",">":"maior","|":"ou","\xA2":"centavo","\u2211":"soma","\xA3":"libra","\u221E":"infinito","\u2665":"amor"},"uk":{"\u0418":"Y","\u0438":"y","\u0419":"Y","\u0439":"y","\u0426":"Ts","\u0446":"ts","\u0425":"Kh","\u0445":"kh","\u0429":"Shch","\u0449":"shch","\u0413":"H","\u0433":"h"},"vi":{"\u0110":"D","\u0111":"d"},"da":{"\xD8":"OE","\xF8":"oe","\xC5":"AA","\xE5":"aa","%":"procent","&":"og","|":"eller","$":"dollar","<":"mindre end",">":"st\xF8rre end"},"nb":{"&":"og"},"it":{"&":"e"},"nl":{"&":"en"},"sv":{"&":"och"}}');
      function replace(string, options2) {
        if (typeof string !== "string") {
          throw new Error("slugify: string argument expected");
        }
        options2 = typeof options2 === "string" ? { replacement: options2 } : options2 || {};
        var locale = locales[options2.locale] || {};
        var replacement = options2.replacement === void 0 ? "-" : options2.replacement;
        var trim = options2.trim === void 0 ? true : options2.trim;
        var slug = string.normalize().split("").reduce(function(result, ch) {
          var appendChar = locale[ch] || charMap[ch] || ch;
          if (appendChar === replacement) {
            appendChar = " ";
          }
          return result + appendChar.replace(options2.remove || /[^\w\s$*_+~.()'"!\-:@]+/g, "");
        }, "");
        if (options2.strict) {
          slug = slug.replace(/[^A-Za-z0-9\s]/g, "");
        }
        if (trim) {
          slug = slug.trim();
        }
        slug = slug.replace(/\s+/g, replacement);
        if (options2.lower) {
          slug = slug.toLowerCase();
        }
        return slug;
      }
      replace.extend = function(customMap) {
        Object.assign(charMap, customMap);
      };
      return replace;
    });
  }
});

// node_modules/date-fns/_lib/toInteger/index.js
var require_toInteger = __commonJS({
  "node_modules/date-fns/_lib/toInteger/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = toInteger;
    function toInteger(dirtyNumber) {
      if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {
        return NaN;
      }
      var number = Number(dirtyNumber);
      if (isNaN(number)) {
        return number;
      }
      return number < 0 ? Math.ceil(number) : Math.floor(number);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/_lib/requiredArgs/index.js
var require_requiredArgs = __commonJS({
  "node_modules/date-fns/_lib/requiredArgs/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = requiredArgs;
    function requiredArgs(required, args) {
      if (args.length < required) {
        throw new TypeError(required + " argument" + (required > 1 ? "s" : "") + " required, but only " + args.length + " present");
      }
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/toDate/index.js
var require_toDate = __commonJS({
  "node_modules/date-fns/toDate/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = toDate;
    var _index = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function toDate(argument) {
      (0, _index.default)(1, arguments);
      var argStr = Object.prototype.toString.call(argument);
      if (argument instanceof Date || typeof argument === "object" && argStr === "[object Date]") {
        return new Date(argument.getTime());
      } else if (typeof argument === "number" || argStr === "[object Number]") {
        return new Date(argument);
      } else {
        if ((typeof argument === "string" || argStr === "[object String]") && typeof console !== "undefined") {
          console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule");
          console.warn(new Error().stack);
        }
        return new Date(NaN);
      }
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/addDays/index.js
var require_addDays = __commonJS({
  "node_modules/date-fns/addDays/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = addDays;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function addDays(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate);
      var amount = (0, _index.default)(dirtyAmount);
      if (isNaN(amount)) {
        return new Date(NaN);
      }
      if (!amount) {
        return date;
      }
      date.setDate(date.getDate() + amount);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/addMonths/index.js
var require_addMonths = __commonJS({
  "node_modules/date-fns/addMonths/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = addMonths;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function addMonths(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate);
      var amount = (0, _index.default)(dirtyAmount);
      if (isNaN(amount)) {
        return new Date(NaN);
      }
      if (!amount) {
        return date;
      }
      var dayOfMonth = date.getDate();
      var endOfDesiredMonth = new Date(date.getTime());
      endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);
      var daysInMonth = endOfDesiredMonth.getDate();
      if (dayOfMonth >= daysInMonth) {
        return endOfDesiredMonth;
      } else {
        date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);
        return date;
      }
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/add/index.js
var require_add = __commonJS({
  "node_modules/date-fns/add/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = add;
    var _index = _interopRequireDefault(require_addDays());
    var _index2 = _interopRequireDefault(require_addMonths());
    var _index3 = _interopRequireDefault(require_toDate());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    var _index5 = _interopRequireDefault(require_toInteger());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function add(dirtyDate, duration) {
      (0, _index4.default)(2, arguments);
      if (!duration || typeof duration !== "object")
        return new Date(NaN);
      var years = duration.years ? (0, _index5.default)(duration.years) : 0;
      var months = duration.months ? (0, _index5.default)(duration.months) : 0;
      var weeks = duration.weeks ? (0, _index5.default)(duration.weeks) : 0;
      var days = duration.days ? (0, _index5.default)(duration.days) : 0;
      var hours = duration.hours ? (0, _index5.default)(duration.hours) : 0;
      var minutes = duration.minutes ? (0, _index5.default)(duration.minutes) : 0;
      var seconds = duration.seconds ? (0, _index5.default)(duration.seconds) : 0;
      var date = (0, _index3.default)(dirtyDate);
      var dateWithMonths = months || years ? (0, _index2.default)(date, months + years * 12) : date;
      var dateWithDays = days || weeks ? (0, _index.default)(dateWithMonths, days + weeks * 7) : dateWithMonths;
      var minutesToAdd = minutes + hours * 60;
      var secondsToAdd = seconds + minutesToAdd * 60;
      var msToAdd = secondsToAdd * 1e3;
      var finalDate = new Date(dateWithDays.getTime() + msToAdd);
      return finalDate;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/isWeekend/index.js
var require_isWeekend = __commonJS({
  "node_modules/date-fns/isWeekend/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = isWeekend;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isWeekend(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var day = date.getDay();
      return day === 0 || day === 6;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/isSunday/index.js
var require_isSunday = __commonJS({
  "node_modules/date-fns/isSunday/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = isSunday;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isSunday(dirtyDate) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(dirtyDate).getDay() === 0;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/isSaturday/index.js
var require_isSaturday = __commonJS({
  "node_modules/date-fns/isSaturday/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = isSaturday;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isSaturday(dirtyDate) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(dirtyDate).getDay() === 6;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/addBusinessDays/index.js
var require_addBusinessDays = __commonJS({
  "node_modules/date-fns/addBusinessDays/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = addBusinessDays;
    var _index = _interopRequireDefault(require_isWeekend());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_toInteger());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    var _index5 = _interopRequireDefault(require_isSunday());
    var _index6 = _interopRequireDefault(require_isSaturday());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function addBusinessDays(dirtyDate, dirtyAmount) {
      (0, _index4.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate);
      var startedOnWeekend = (0, _index.default)(date);
      var amount = (0, _index3.default)(dirtyAmount);
      if (isNaN(amount))
        return new Date(NaN);
      var hours = date.getHours();
      var sign = amount < 0 ? -1 : 1;
      var fullWeeks = (0, _index3.default)(amount / 5);
      date.setDate(date.getDate() + fullWeeks * 7);
      var restDays = Math.abs(amount % 5);
      while (restDays > 0) {
        date.setDate(date.getDate() + sign);
        if (!(0, _index.default)(date))
          restDays -= 1;
      }
      if (startedOnWeekend && (0, _index.default)(date) && amount !== 0) {
        if ((0, _index6.default)(date))
          date.setDate(date.getDate() + (sign < 0 ? 2 : -1));
        if ((0, _index5.default)(date))
          date.setDate(date.getDate() + (sign < 0 ? 1 : -2));
      }
      date.setHours(hours);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/addMilliseconds/index.js
var require_addMilliseconds = __commonJS({
  "node_modules/date-fns/addMilliseconds/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = addMilliseconds;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function addMilliseconds(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var timestamp = (0, _index2.default)(dirtyDate).getTime();
      var amount = (0, _index.default)(dirtyAmount);
      return new Date(timestamp + amount);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/addHours/index.js
var require_addHours = __commonJS({
  "node_modules/date-fns/addHours/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = addHours;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_addMilliseconds());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var MILLISECONDS_IN_HOUR = 36e5;
    function addHours(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var amount = (0, _index.default)(dirtyAmount);
      return (0, _index2.default)(dirtyDate, amount * MILLISECONDS_IN_HOUR);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/startOfWeek/index.js
var require_startOfWeek = __commonJS({
  "node_modules/date-fns/startOfWeek/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = startOfWeek;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_toInteger());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfWeek(dirtyDate, dirtyOptions) {
      (0, _index3.default)(1, arguments);
      var options2 = dirtyOptions || {};
      var locale = options2.locale;
      var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
      var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : (0, _index2.default)(localeWeekStartsOn);
      var weekStartsOn = options2.weekStartsOn == null ? defaultWeekStartsOn : (0, _index2.default)(options2.weekStartsOn);
      if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
        throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
      }
      var date = (0, _index.default)(dirtyDate);
      var day = date.getDay();
      var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
      date.setDate(date.getDate() - diff);
      date.setHours(0, 0, 0, 0);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/startOfISOWeek/index.js
var require_startOfISOWeek = __commonJS({
  "node_modules/date-fns/startOfISOWeek/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = startOfISOWeek;
    var _index = _interopRequireDefault(require_startOfWeek());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfISOWeek(dirtyDate) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(dirtyDate, {
        weekStartsOn: 1
      });
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/getISOWeekYear/index.js
var require_getISOWeekYear = __commonJS({
  "node_modules/date-fns/getISOWeekYear/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = getISOWeekYear;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_startOfISOWeek());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getISOWeekYear(dirtyDate) {
      (0, _index3.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var year = date.getFullYear();
      var fourthOfJanuaryOfNextYear = new Date(0);
      fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);
      fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);
      var startOfNextYear = (0, _index2.default)(fourthOfJanuaryOfNextYear);
      var fourthOfJanuaryOfThisYear = new Date(0);
      fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);
      fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);
      var startOfThisYear = (0, _index2.default)(fourthOfJanuaryOfThisYear);
      if (date.getTime() >= startOfNextYear.getTime()) {
        return year + 1;
      } else if (date.getTime() >= startOfThisYear.getTime()) {
        return year;
      } else {
        return year - 1;
      }
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/startOfISOWeekYear/index.js
var require_startOfISOWeekYear = __commonJS({
  "node_modules/date-fns/startOfISOWeekYear/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = startOfISOWeekYear;
    var _index = _interopRequireDefault(require_getISOWeekYear());
    var _index2 = _interopRequireDefault(require_startOfISOWeek());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfISOWeekYear(dirtyDate) {
      (0, _index3.default)(1, arguments);
      var year = (0, _index.default)(dirtyDate);
      var fourthOfJanuary = new Date(0);
      fourthOfJanuary.setFullYear(year, 0, 4);
      fourthOfJanuary.setHours(0, 0, 0, 0);
      var date = (0, _index2.default)(fourthOfJanuary);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds/index.js
var require_getTimezoneOffsetInMilliseconds = __commonJS({
  "node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = getTimezoneOffsetInMilliseconds;
    function getTimezoneOffsetInMilliseconds(date) {
      var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));
      utcDate.setUTCFullYear(date.getFullYear());
      return date.getTime() - utcDate.getTime();
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/startOfDay/index.js
var require_startOfDay = __commonJS({
  "node_modules/date-fns/startOfDay/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = startOfDay;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfDay(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      date.setHours(0, 0, 0, 0);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/differenceInCalendarDays/index.js
var require_differenceInCalendarDays = __commonJS({
  "node_modules/date-fns/differenceInCalendarDays/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = differenceInCalendarDays;
    var _index = _interopRequireDefault(require_getTimezoneOffsetInMilliseconds());
    var _index2 = _interopRequireDefault(require_startOfDay());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var MILLISECONDS_IN_DAY = 864e5;
    function differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {
      (0, _index3.default)(2, arguments);
      var startOfDayLeft = (0, _index2.default)(dirtyDateLeft);
      var startOfDayRight = (0, _index2.default)(dirtyDateRight);
      var timestampLeft = startOfDayLeft.getTime() - (0, _index.default)(startOfDayLeft);
      var timestampRight = startOfDayRight.getTime() - (0, _index.default)(startOfDayRight);
      return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/setISOWeekYear/index.js
var require_setISOWeekYear = __commonJS({
  "node_modules/date-fns/setISOWeekYear/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = setISOWeekYear;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_startOfISOWeekYear());
    var _index4 = _interopRequireDefault(require_differenceInCalendarDays());
    var _index5 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setISOWeekYear(dirtyDate, dirtyISOWeekYear) {
      (0, _index5.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate);
      var isoWeekYear = (0, _index.default)(dirtyISOWeekYear);
      var diff = (0, _index4.default)(date, (0, _index3.default)(date));
      var fourthOfJanuary = new Date(0);
      fourthOfJanuary.setFullYear(isoWeekYear, 0, 4);
      fourthOfJanuary.setHours(0, 0, 0, 0);
      date = (0, _index3.default)(fourthOfJanuary);
      date.setDate(date.getDate() + diff);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/addISOWeekYears/index.js
var require_addISOWeekYears = __commonJS({
  "node_modules/date-fns/addISOWeekYears/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = addISOWeekYears;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_getISOWeekYear());
    var _index3 = _interopRequireDefault(require_setISOWeekYear());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function addISOWeekYears(dirtyDate, dirtyAmount) {
      (0, _index4.default)(2, arguments);
      var amount = (0, _index.default)(dirtyAmount);
      return (0, _index3.default)(dirtyDate, (0, _index2.default)(dirtyDate) + amount);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/addMinutes/index.js
var require_addMinutes = __commonJS({
  "node_modules/date-fns/addMinutes/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = addMinutes;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_addMilliseconds());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var MILLISECONDS_IN_MINUTE = 6e4;
    function addMinutes(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var amount = (0, _index.default)(dirtyAmount);
      return (0, _index2.default)(dirtyDate, amount * MILLISECONDS_IN_MINUTE);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/addQuarters/index.js
var require_addQuarters = __commonJS({
  "node_modules/date-fns/addQuarters/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = addQuarters;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_addMonths());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function addQuarters(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var amount = (0, _index.default)(dirtyAmount);
      var months = amount * 3;
      return (0, _index2.default)(dirtyDate, months);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/addSeconds/index.js
var require_addSeconds = __commonJS({
  "node_modules/date-fns/addSeconds/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = addSeconds;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_addMilliseconds());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function addSeconds(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var amount = (0, _index.default)(dirtyAmount);
      return (0, _index2.default)(dirtyDate, amount * 1e3);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/addWeeks/index.js
var require_addWeeks = __commonJS({
  "node_modules/date-fns/addWeeks/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = addWeeks;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_addDays());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function addWeeks(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var amount = (0, _index.default)(dirtyAmount);
      var days = amount * 7;
      return (0, _index2.default)(dirtyDate, days);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/addYears/index.js
var require_addYears = __commonJS({
  "node_modules/date-fns/addYears/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = addYears;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_addMonths());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function addYears(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var amount = (0, _index.default)(dirtyAmount);
      return (0, _index2.default)(dirtyDate, amount * 12);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/areIntervalsOverlapping/index.js
var require_areIntervalsOverlapping = __commonJS({
  "node_modules/date-fns/areIntervalsOverlapping/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = areIntervalsOverlapping;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function areIntervalsOverlapping(dirtyIntervalLeft, dirtyIntervalRight) {
      var options2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {
        inclusive: false
      };
      (0, _index2.default)(2, arguments);
      var intervalLeft = dirtyIntervalLeft || {};
      var intervalRight = dirtyIntervalRight || {};
      var leftStartTime = (0, _index.default)(intervalLeft.start).getTime();
      var leftEndTime = (0, _index.default)(intervalLeft.end).getTime();
      var rightStartTime = (0, _index.default)(intervalRight.start).getTime();
      var rightEndTime = (0, _index.default)(intervalRight.end).getTime();
      if (!(leftStartTime <= leftEndTime && rightStartTime <= rightEndTime)) {
        throw new RangeError("Invalid interval");
      }
      if (options2.inclusive) {
        return leftStartTime <= rightEndTime && rightStartTime <= leftEndTime;
      }
      return leftStartTime < rightEndTime && rightStartTime < leftEndTime;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/max/index.js
var require_max = __commonJS({
  "node_modules/date-fns/max/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = max;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function max(dirtyDatesArray) {
      (0, _index2.default)(1, arguments);
      var datesArray;
      if (dirtyDatesArray && typeof dirtyDatesArray.forEach === "function") {
        datesArray = dirtyDatesArray;
      } else if (typeof dirtyDatesArray === "object" && dirtyDatesArray !== null) {
        datesArray = Array.prototype.slice.call(dirtyDatesArray);
      } else {
        return new Date(NaN);
      }
      var result;
      datesArray.forEach(function(dirtyDate) {
        var currentDate = (0, _index.default)(dirtyDate);
        if (result === void 0 || result < currentDate || isNaN(Number(currentDate))) {
          result = currentDate;
        }
      });
      return result || new Date(NaN);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/min/index.js
var require_min = __commonJS({
  "node_modules/date-fns/min/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = min;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function min(dirtyDatesArray) {
      (0, _index2.default)(1, arguments);
      var datesArray;
      if (dirtyDatesArray && typeof dirtyDatesArray.forEach === "function") {
        datesArray = dirtyDatesArray;
      } else if (typeof dirtyDatesArray === "object" && dirtyDatesArray !== null) {
        datesArray = Array.prototype.slice.call(dirtyDatesArray);
      } else {
        return new Date(NaN);
      }
      var result;
      datesArray.forEach(function(dirtyDate) {
        var currentDate = (0, _index.default)(dirtyDate);
        if (result === void 0 || result > currentDate || isNaN(currentDate.getDate())) {
          result = currentDate;
        }
      });
      return result || new Date(NaN);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/clamp/index.js
var require_clamp = __commonJS({
  "node_modules/date-fns/clamp/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = clamp;
    var _index = _interopRequireDefault(require_max());
    var _index2 = _interopRequireDefault(require_min());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function clamp(date, _ref) {
      var start = _ref.start, end = _ref.end;
      (0, _index3.default)(2, arguments);
      return (0, _index2.default)([(0, _index.default)([date, start]), end]);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/closestIndexTo/index.js
var require_closestIndexTo = __commonJS({
  "node_modules/date-fns/closestIndexTo/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = closestIndexTo;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function closestIndexTo(dirtyDateToCompare, dirtyDatesArray) {
      (0, _index2.default)(2, arguments);
      var dateToCompare = (0, _index.default)(dirtyDateToCompare);
      if (isNaN(Number(dateToCompare)))
        return NaN;
      var timeToCompare = dateToCompare.getTime();
      var datesArray;
      if (dirtyDatesArray == null) {
        datesArray = [];
      } else if (typeof dirtyDatesArray.forEach === "function") {
        datesArray = dirtyDatesArray;
      } else {
        datesArray = Array.prototype.slice.call(dirtyDatesArray);
      }
      var result;
      var minDistance;
      datesArray.forEach(function(dirtyDate, index2) {
        var currentDate = (0, _index.default)(dirtyDate);
        if (isNaN(Number(currentDate))) {
          result = NaN;
          minDistance = NaN;
          return;
        }
        var distance = Math.abs(timeToCompare - currentDate.getTime());
        if (result == null || distance < Number(minDistance)) {
          result = index2;
          minDistance = distance;
        }
      });
      return result;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/closestTo/index.js
var require_closestTo = __commonJS({
  "node_modules/date-fns/closestTo/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = closestTo;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function closestTo(dirtyDateToCompare, dirtyDatesArray) {
      (0, _index2.default)(2, arguments);
      var dateToCompare = (0, _index.default)(dirtyDateToCompare);
      if (isNaN(Number(dateToCompare)))
        return new Date(NaN);
      var timeToCompare = dateToCompare.getTime();
      var datesArray;
      if (dirtyDatesArray == null) {
        datesArray = [];
      } else if (typeof dirtyDatesArray.forEach === "function") {
        datesArray = dirtyDatesArray;
      } else {
        datesArray = Array.prototype.slice.call(dirtyDatesArray);
      }
      var result;
      var minDistance;
      datesArray.forEach(function(dirtyDate) {
        var currentDate = (0, _index.default)(dirtyDate);
        if (isNaN(Number(currentDate))) {
          result = new Date(NaN);
          minDistance = NaN;
          return;
        }
        var distance = Math.abs(timeToCompare - currentDate.getTime());
        if (result == null || distance < Number(minDistance)) {
          result = currentDate;
          minDistance = distance;
        }
      });
      return result;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/compareAsc/index.js
var require_compareAsc = __commonJS({
  "node_modules/date-fns/compareAsc/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = compareAsc;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function compareAsc(dirtyDateLeft, dirtyDateRight) {
      (0, _index2.default)(2, arguments);
      var dateLeft = (0, _index.default)(dirtyDateLeft);
      var dateRight = (0, _index.default)(dirtyDateRight);
      var diff = dateLeft.getTime() - dateRight.getTime();
      if (diff < 0) {
        return -1;
      } else if (diff > 0) {
        return 1;
      } else {
        return diff;
      }
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/compareDesc/index.js
var require_compareDesc = __commonJS({
  "node_modules/date-fns/compareDesc/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = compareDesc;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function compareDesc(dirtyDateLeft, dirtyDateRight) {
      (0, _index2.default)(2, arguments);
      var dateLeft = (0, _index.default)(dirtyDateLeft);
      var dateRight = (0, _index.default)(dirtyDateRight);
      var diff = dateLeft.getTime() - dateRight.getTime();
      if (diff > 0) {
        return -1;
      } else if (diff < 0) {
        return 1;
      } else {
        return diff;
      }
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/constants/index.js
var require_constants = __commonJS({
  "node_modules/date-fns/constants/index.js"(exports) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.secondsInMinute = exports.secondsInHour = exports.quartersInYear = exports.monthsInYear = exports.monthsInQuarter = exports.minutesInHour = exports.minTime = exports.millisecondsInSecond = exports.millisecondsInHour = exports.millisecondsInMinute = exports.maxTime = exports.daysInWeek = void 0;
    var daysInWeek = 7;
    exports.daysInWeek = daysInWeek;
    var maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1e3;
    exports.maxTime = maxTime;
    var millisecondsInMinute = 6e4;
    exports.millisecondsInMinute = millisecondsInMinute;
    var millisecondsInHour = 36e5;
    exports.millisecondsInHour = millisecondsInHour;
    var millisecondsInSecond = 1e3;
    exports.millisecondsInSecond = millisecondsInSecond;
    var minTime = -maxTime;
    exports.minTime = minTime;
    var minutesInHour = 60;
    exports.minutesInHour = minutesInHour;
    var monthsInQuarter = 3;
    exports.monthsInQuarter = monthsInQuarter;
    var monthsInYear = 12;
    exports.monthsInYear = monthsInYear;
    var quartersInYear = 4;
    exports.quartersInYear = quartersInYear;
    var secondsInHour = 3600;
    exports.secondsInHour = secondsInHour;
    var secondsInMinute = 60;
    exports.secondsInMinute = secondsInMinute;
  }
});

// node_modules/date-fns/daysToWeeks/index.js
var require_daysToWeeks = __commonJS({
  "node_modules/date-fns/daysToWeeks/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = daysToWeeks;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function daysToWeeks(days) {
      (0, _index.default)(1, arguments);
      var weeks = days / _index2.daysInWeek;
      return Math.floor(weeks);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/isSameDay/index.js
var require_isSameDay = __commonJS({
  "node_modules/date-fns/isSameDay/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = isSameDay;
    var _index = _interopRequireDefault(require_startOfDay());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isSameDay(dirtyDateLeft, dirtyDateRight) {
      (0, _index2.default)(2, arguments);
      var dateLeftStartOfDay = (0, _index.default)(dirtyDateLeft);
      var dateRightStartOfDay = (0, _index.default)(dirtyDateRight);
      return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/isDate/index.js
var require_isDate = __commonJS({
  "node_modules/date-fns/isDate/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = isDate;
    var _index = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isDate(value) {
      (0, _index.default)(1, arguments);
      return value instanceof Date || typeof value === "object" && Object.prototype.toString.call(value) === "[object Date]";
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/isValid/index.js
var require_isValid = __commonJS({
  "node_modules/date-fns/isValid/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = isValid;
    var _index = _interopRequireDefault(require_isDate());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isValid(dirtyDate) {
      (0, _index3.default)(1, arguments);
      if (!(0, _index.default)(dirtyDate) && typeof dirtyDate !== "number") {
        return false;
      }
      var date = (0, _index2.default)(dirtyDate);
      return !isNaN(Number(date));
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/differenceInBusinessDays/index.js
var require_differenceInBusinessDays = __commonJS({
  "node_modules/date-fns/differenceInBusinessDays/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = differenceInBusinessDays;
    var _index = _interopRequireDefault(require_addDays());
    var _index2 = _interopRequireDefault(require_differenceInCalendarDays());
    var _index3 = _interopRequireDefault(require_isSameDay());
    var _index4 = _interopRequireDefault(require_isValid());
    var _index5 = _interopRequireDefault(require_isWeekend());
    var _index6 = _interopRequireDefault(require_toDate());
    var _index7 = _interopRequireDefault(require_requiredArgs());
    var _index8 = _interopRequireDefault(require_toInteger());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function differenceInBusinessDays(dirtyDateLeft, dirtyDateRight) {
      (0, _index7.default)(2, arguments);
      var dateLeft = (0, _index6.default)(dirtyDateLeft);
      var dateRight = (0, _index6.default)(dirtyDateRight);
      if (!(0, _index4.default)(dateLeft) || !(0, _index4.default)(dateRight))
        return NaN;
      var calendarDifference = (0, _index2.default)(dateLeft, dateRight);
      var sign = calendarDifference < 0 ? -1 : 1;
      var weeks = (0, _index8.default)(calendarDifference / 7);
      var result = weeks * 5;
      dateRight = (0, _index.default)(dateRight, weeks * 7);
      while (!(0, _index3.default)(dateLeft, dateRight)) {
        result += (0, _index5.default)(dateRight) ? 0 : sign;
        dateRight = (0, _index.default)(dateRight, sign);
      }
      return result === 0 ? 0 : result;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/differenceInCalendarISOWeekYears/index.js
var require_differenceInCalendarISOWeekYears = __commonJS({
  "node_modules/date-fns/differenceInCalendarISOWeekYears/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = differenceInCalendarISOWeekYears;
    var _index = _interopRequireDefault(require_getISOWeekYear());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function differenceInCalendarISOWeekYears(dirtyDateLeft, dirtyDateRight) {
      (0, _index2.default)(2, arguments);
      return (0, _index.default)(dirtyDateLeft) - (0, _index.default)(dirtyDateRight);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/differenceInCalendarISOWeeks/index.js
var require_differenceInCalendarISOWeeks = __commonJS({
  "node_modules/date-fns/differenceInCalendarISOWeeks/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = differenceInCalendarISOWeeks;
    var _index = _interopRequireDefault(require_getTimezoneOffsetInMilliseconds());
    var _index2 = _interopRequireDefault(require_startOfISOWeek());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var MILLISECONDS_IN_WEEK = 6048e5;
    function differenceInCalendarISOWeeks(dirtyDateLeft, dirtyDateRight) {
      (0, _index3.default)(2, arguments);
      var startOfISOWeekLeft = (0, _index2.default)(dirtyDateLeft);
      var startOfISOWeekRight = (0, _index2.default)(dirtyDateRight);
      var timestampLeft = startOfISOWeekLeft.getTime() - (0, _index.default)(startOfISOWeekLeft);
      var timestampRight = startOfISOWeekRight.getTime() - (0, _index.default)(startOfISOWeekRight);
      return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/differenceInCalendarMonths/index.js
var require_differenceInCalendarMonths = __commonJS({
  "node_modules/date-fns/differenceInCalendarMonths/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = differenceInCalendarMonths;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function differenceInCalendarMonths(dirtyDateLeft, dirtyDateRight) {
      (0, _index2.default)(2, arguments);
      var dateLeft = (0, _index.default)(dirtyDateLeft);
      var dateRight = (0, _index.default)(dirtyDateRight);
      var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();
      var monthDiff = dateLeft.getMonth() - dateRight.getMonth();
      return yearDiff * 12 + monthDiff;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/getQuarter/index.js
var require_getQuarter = __commonJS({
  "node_modules/date-fns/getQuarter/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = getQuarter;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getQuarter(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var quarter = Math.floor(date.getMonth() / 3) + 1;
      return quarter;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/differenceInCalendarQuarters/index.js
var require_differenceInCalendarQuarters = __commonJS({
  "node_modules/date-fns/differenceInCalendarQuarters/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = differenceInCalendarQuarters;
    var _index = _interopRequireDefault(require_getQuarter());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function differenceInCalendarQuarters(dirtyDateLeft, dirtyDateRight) {
      (0, _index3.default)(2, arguments);
      var dateLeft = (0, _index2.default)(dirtyDateLeft);
      var dateRight = (0, _index2.default)(dirtyDateRight);
      var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();
      var quarterDiff = (0, _index.default)(dateLeft) - (0, _index.default)(dateRight);
      return yearDiff * 4 + quarterDiff;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/differenceInCalendarWeeks/index.js
var require_differenceInCalendarWeeks = __commonJS({
  "node_modules/date-fns/differenceInCalendarWeeks/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = differenceInCalendarWeeks;
    var _index = _interopRequireDefault(require_startOfWeek());
    var _index2 = _interopRequireDefault(require_getTimezoneOffsetInMilliseconds());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var MILLISECONDS_IN_WEEK = 6048e5;
    function differenceInCalendarWeeks(dirtyDateLeft, dirtyDateRight, dirtyOptions) {
      (0, _index3.default)(2, arguments);
      var startOfWeekLeft = (0, _index.default)(dirtyDateLeft, dirtyOptions);
      var startOfWeekRight = (0, _index.default)(dirtyDateRight, dirtyOptions);
      var timestampLeft = startOfWeekLeft.getTime() - (0, _index2.default)(startOfWeekLeft);
      var timestampRight = startOfWeekRight.getTime() - (0, _index2.default)(startOfWeekRight);
      return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/differenceInCalendarYears/index.js
var require_differenceInCalendarYears = __commonJS({
  "node_modules/date-fns/differenceInCalendarYears/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = differenceInCalendarYears;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function differenceInCalendarYears(dirtyDateLeft, dirtyDateRight) {
      (0, _index2.default)(2, arguments);
      var dateLeft = (0, _index.default)(dirtyDateLeft);
      var dateRight = (0, _index.default)(dirtyDateRight);
      return dateLeft.getFullYear() - dateRight.getFullYear();
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/differenceInDays/index.js
var require_differenceInDays = __commonJS({
  "node_modules/date-fns/differenceInDays/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = differenceInDays;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_differenceInCalendarDays());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function compareLocalAsc(dateLeft, dateRight) {
      var diff = dateLeft.getFullYear() - dateRight.getFullYear() || dateLeft.getMonth() - dateRight.getMonth() || dateLeft.getDate() - dateRight.getDate() || dateLeft.getHours() - dateRight.getHours() || dateLeft.getMinutes() - dateRight.getMinutes() || dateLeft.getSeconds() - dateRight.getSeconds() || dateLeft.getMilliseconds() - dateRight.getMilliseconds();
      if (diff < 0) {
        return -1;
      } else if (diff > 0) {
        return 1;
      } else {
        return diff;
      }
    }
    function differenceInDays(dirtyDateLeft, dirtyDateRight) {
      (0, _index3.default)(2, arguments);
      var dateLeft = (0, _index.default)(dirtyDateLeft);
      var dateRight = (0, _index.default)(dirtyDateRight);
      var sign = compareLocalAsc(dateLeft, dateRight);
      var difference = Math.abs((0, _index2.default)(dateLeft, dateRight));
      dateLeft.setDate(dateLeft.getDate() - sign * difference);
      var isLastDayNotFull = Number(compareLocalAsc(dateLeft, dateRight) === -sign);
      var result = sign * (difference - isLastDayNotFull);
      return result === 0 ? 0 : result;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/differenceInMilliseconds/index.js
var require_differenceInMilliseconds = __commonJS({
  "node_modules/date-fns/differenceInMilliseconds/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = differenceInMilliseconds;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function differenceInMilliseconds(dateLeft, dateRight) {
      (0, _index2.default)(2, arguments);
      return (0, _index.default)(dateLeft).getTime() - (0, _index.default)(dateRight).getTime();
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/_lib/roundingMethods/index.js
var require_roundingMethods = __commonJS({
  "node_modules/date-fns/_lib/roundingMethods/index.js"(exports) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.getRoundingMethod = getRoundingMethod;
    var roundingMap = {
      ceil: Math.ceil,
      round: Math.round,
      floor: Math.floor,
      trunc: function(value) {
        return value < 0 ? Math.ceil(value) : Math.floor(value);
      }
    };
    var defaultRoundingMethod = "trunc";
    function getRoundingMethod(method) {
      return method ? roundingMap[method] : roundingMap[defaultRoundingMethod];
    }
  }
});

// node_modules/date-fns/differenceInHours/index.js
var require_differenceInHours = __commonJS({
  "node_modules/date-fns/differenceInHours/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = differenceInHours;
    var _index = require_constants();
    var _index2 = _interopRequireDefault(require_differenceInMilliseconds());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    var _index4 = require_roundingMethods();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function differenceInHours(dateLeft, dateRight, options2) {
      (0, _index3.default)(2, arguments);
      var diff = (0, _index2.default)(dateLeft, dateRight) / _index.millisecondsInHour;
      return (0, _index4.getRoundingMethod)(options2 === null || options2 === void 0 ? void 0 : options2.roundingMethod)(diff);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/subISOWeekYears/index.js
var require_subISOWeekYears = __commonJS({
  "node_modules/date-fns/subISOWeekYears/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = subISOWeekYears;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_addISOWeekYears());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function subISOWeekYears(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var amount = (0, _index.default)(dirtyAmount);
      return (0, _index2.default)(dirtyDate, -amount);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/differenceInISOWeekYears/index.js
var require_differenceInISOWeekYears = __commonJS({
  "node_modules/date-fns/differenceInISOWeekYears/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = differenceInISOWeekYears;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_differenceInCalendarISOWeekYears());
    var _index3 = _interopRequireDefault(require_compareAsc());
    var _index4 = _interopRequireDefault(require_subISOWeekYears());
    var _index5 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function differenceInISOWeekYears(dirtyDateLeft, dirtyDateRight) {
      (0, _index5.default)(2, arguments);
      var dateLeft = (0, _index.default)(dirtyDateLeft);
      var dateRight = (0, _index.default)(dirtyDateRight);
      var sign = (0, _index3.default)(dateLeft, dateRight);
      var difference = Math.abs((0, _index2.default)(dateLeft, dateRight));
      dateLeft = (0, _index4.default)(dateLeft, sign * difference);
      var isLastISOWeekYearNotFull = Number((0, _index3.default)(dateLeft, dateRight) === -sign);
      var result = sign * (difference - isLastISOWeekYearNotFull);
      return result === 0 ? 0 : result;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/differenceInMinutes/index.js
var require_differenceInMinutes = __commonJS({
  "node_modules/date-fns/differenceInMinutes/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = differenceInMinutes;
    var _index = require_constants();
    var _index2 = _interopRequireDefault(require_differenceInMilliseconds());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    var _index4 = require_roundingMethods();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function differenceInMinutes(dateLeft, dateRight, options2) {
      (0, _index3.default)(2, arguments);
      var diff = (0, _index2.default)(dateLeft, dateRight) / _index.millisecondsInMinute;
      return (0, _index4.getRoundingMethod)(options2 === null || options2 === void 0 ? void 0 : options2.roundingMethod)(diff);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/endOfDay/index.js
var require_endOfDay = __commonJS({
  "node_modules/date-fns/endOfDay/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = endOfDay;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function endOfDay(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      date.setHours(23, 59, 59, 999);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/endOfMonth/index.js
var require_endOfMonth = __commonJS({
  "node_modules/date-fns/endOfMonth/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = endOfMonth;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function endOfMonth(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var month = date.getMonth();
      date.setFullYear(date.getFullYear(), month + 1, 0);
      date.setHours(23, 59, 59, 999);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/isLastDayOfMonth/index.js
var require_isLastDayOfMonth = __commonJS({
  "node_modules/date-fns/isLastDayOfMonth/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = isLastDayOfMonth;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_endOfDay());
    var _index3 = _interopRequireDefault(require_endOfMonth());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isLastDayOfMonth(dirtyDate) {
      (0, _index4.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      return (0, _index2.default)(date).getTime() === (0, _index3.default)(date).getTime();
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/differenceInMonths/index.js
var require_differenceInMonths = __commonJS({
  "node_modules/date-fns/differenceInMonths/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = differenceInMonths;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_differenceInCalendarMonths());
    var _index3 = _interopRequireDefault(require_compareAsc());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    var _index5 = _interopRequireDefault(require_isLastDayOfMonth());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function differenceInMonths(dirtyDateLeft, dirtyDateRight) {
      (0, _index4.default)(2, arguments);
      var dateLeft = (0, _index.default)(dirtyDateLeft);
      var dateRight = (0, _index.default)(dirtyDateRight);
      var sign = (0, _index3.default)(dateLeft, dateRight);
      var difference = Math.abs((0, _index2.default)(dateLeft, dateRight));
      var result;
      if (difference < 1) {
        result = 0;
      } else {
        if (dateLeft.getMonth() === 1 && dateLeft.getDate() > 27) {
          dateLeft.setDate(30);
        }
        dateLeft.setMonth(dateLeft.getMonth() - sign * difference);
        var isLastMonthNotFull = (0, _index3.default)(dateLeft, dateRight) === -sign;
        if ((0, _index5.default)((0, _index.default)(dirtyDateLeft)) && difference === 1 && (0, _index3.default)(dirtyDateLeft, dateRight) === 1) {
          isLastMonthNotFull = false;
        }
        result = sign * (difference - Number(isLastMonthNotFull));
      }
      return result === 0 ? 0 : result;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/differenceInQuarters/index.js
var require_differenceInQuarters = __commonJS({
  "node_modules/date-fns/differenceInQuarters/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = differenceInQuarters;
    var _index = _interopRequireDefault(require_differenceInMonths());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    var _index3 = require_roundingMethods();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function differenceInQuarters(dateLeft, dateRight, options2) {
      (0, _index2.default)(2, arguments);
      var diff = (0, _index.default)(dateLeft, dateRight) / 3;
      return (0, _index3.getRoundingMethod)(options2 === null || options2 === void 0 ? void 0 : options2.roundingMethod)(diff);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/differenceInSeconds/index.js
var require_differenceInSeconds = __commonJS({
  "node_modules/date-fns/differenceInSeconds/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = differenceInSeconds;
    var _index = _interopRequireDefault(require_differenceInMilliseconds());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    var _index3 = require_roundingMethods();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function differenceInSeconds(dateLeft, dateRight, options2) {
      (0, _index2.default)(2, arguments);
      var diff = (0, _index.default)(dateLeft, dateRight) / 1e3;
      return (0, _index3.getRoundingMethod)(options2 === null || options2 === void 0 ? void 0 : options2.roundingMethod)(diff);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/differenceInWeeks/index.js
var require_differenceInWeeks = __commonJS({
  "node_modules/date-fns/differenceInWeeks/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = differenceInWeeks;
    var _index = _interopRequireDefault(require_differenceInDays());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    var _index3 = require_roundingMethods();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function differenceInWeeks(dateLeft, dateRight, options2) {
      (0, _index2.default)(2, arguments);
      var diff = (0, _index.default)(dateLeft, dateRight) / 7;
      return (0, _index3.getRoundingMethod)(options2 === null || options2 === void 0 ? void 0 : options2.roundingMethod)(diff);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/differenceInYears/index.js
var require_differenceInYears = __commonJS({
  "node_modules/date-fns/differenceInYears/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = differenceInYears;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_differenceInCalendarYears());
    var _index3 = _interopRequireDefault(require_compareAsc());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function differenceInYears(dirtyDateLeft, dirtyDateRight) {
      (0, _index4.default)(2, arguments);
      var dateLeft = (0, _index.default)(dirtyDateLeft);
      var dateRight = (0, _index.default)(dirtyDateRight);
      var sign = (0, _index3.default)(dateLeft, dateRight);
      var difference = Math.abs((0, _index2.default)(dateLeft, dateRight));
      dateLeft.setFullYear(1584);
      dateRight.setFullYear(1584);
      var isLastYearNotFull = (0, _index3.default)(dateLeft, dateRight) === -sign;
      var result = sign * (difference - Number(isLastYearNotFull));
      return result === 0 ? 0 : result;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/eachDayOfInterval/index.js
var require_eachDayOfInterval = __commonJS({
  "node_modules/date-fns/eachDayOfInterval/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = eachDayOfInterval;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function eachDayOfInterval(dirtyInterval, options2) {
      (0, _index2.default)(1, arguments);
      var interval = dirtyInterval || {};
      var startDate = (0, _index.default)(interval.start);
      var endDate = (0, _index.default)(interval.end);
      var endTime = endDate.getTime();
      if (!(startDate.getTime() <= endTime)) {
        throw new RangeError("Invalid interval");
      }
      var dates = [];
      var currentDate = startDate;
      currentDate.setHours(0, 0, 0, 0);
      var step = options2 && "step" in options2 ? Number(options2.step) : 1;
      if (step < 1 || isNaN(step))
        throw new RangeError("`options.step` must be a number greater than 1");
      while (currentDate.getTime() <= endTime) {
        dates.push((0, _index.default)(currentDate));
        currentDate.setDate(currentDate.getDate() + step);
        currentDate.setHours(0, 0, 0, 0);
      }
      return dates;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/eachHourOfInterval/index.js
var require_eachHourOfInterval = __commonJS({
  "node_modules/date-fns/eachHourOfInterval/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = eachHourOfInterval;
    var _index = _interopRequireDefault(require_addHours());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function eachHourOfInterval(dirtyInterval, options2) {
      (0, _index3.default)(1, arguments);
      var interval = dirtyInterval || {};
      var startDate = (0, _index2.default)(interval.start);
      var endDate = (0, _index2.default)(interval.end);
      var startTime = startDate.getTime();
      var endTime = endDate.getTime();
      if (!(startTime <= endTime)) {
        throw new RangeError("Invalid interval");
      }
      var dates = [];
      var currentDate = startDate;
      currentDate.setMinutes(0, 0, 0);
      var step = options2 && "step" in options2 ? Number(options2.step) : 1;
      if (step < 1 || isNaN(step))
        throw new RangeError("`options.step` must be a number greater than 1");
      while (currentDate.getTime() <= endTime) {
        dates.push((0, _index2.default)(currentDate));
        currentDate = (0, _index.default)(currentDate, step);
      }
      return dates;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/startOfMinute/index.js
var require_startOfMinute = __commonJS({
  "node_modules/date-fns/startOfMinute/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = startOfMinute;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfMinute(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      date.setSeconds(0, 0);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/eachMinuteOfInterval/index.js
var require_eachMinuteOfInterval = __commonJS({
  "node_modules/date-fns/eachMinuteOfInterval/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = eachMinuteOfInterval;
    var _index = _interopRequireDefault(require_addMinutes());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_startOfMinute());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function eachMinuteOfInterval(interval, options2) {
      (0, _index4.default)(1, arguments);
      var startDate = (0, _index3.default)((0, _index2.default)(interval.start));
      var endDate = (0, _index2.default)(interval.end);
      var startTime = startDate.getTime();
      var endTime = endDate.getTime();
      if (startTime >= endTime) {
        throw new RangeError("Invalid interval");
      }
      var dates = [];
      var currentDate = startDate;
      var step = options2 && "step" in options2 ? Number(options2.step) : 1;
      if (step < 1 || isNaN(step))
        throw new RangeError("`options.step` must be a number equal or greater than 1");
      while (currentDate.getTime() <= endTime) {
        dates.push((0, _index2.default)(currentDate));
        currentDate = (0, _index.default)(currentDate, step);
      }
      return dates;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/eachMonthOfInterval/index.js
var require_eachMonthOfInterval = __commonJS({
  "node_modules/date-fns/eachMonthOfInterval/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = eachMonthOfInterval;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function eachMonthOfInterval(dirtyInterval) {
      (0, _index2.default)(1, arguments);
      var interval = dirtyInterval || {};
      var startDate = (0, _index.default)(interval.start);
      var endDate = (0, _index.default)(interval.end);
      var endTime = endDate.getTime();
      var dates = [];
      if (!(startDate.getTime() <= endTime)) {
        throw new RangeError("Invalid interval");
      }
      var currentDate = startDate;
      currentDate.setHours(0, 0, 0, 0);
      currentDate.setDate(1);
      while (currentDate.getTime() <= endTime) {
        dates.push((0, _index.default)(currentDate));
        currentDate.setMonth(currentDate.getMonth() + 1);
      }
      return dates;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/startOfQuarter/index.js
var require_startOfQuarter = __commonJS({
  "node_modules/date-fns/startOfQuarter/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = startOfQuarter;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfQuarter(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var currentMonth = date.getMonth();
      var month = currentMonth - currentMonth % 3;
      date.setMonth(month, 1);
      date.setHours(0, 0, 0, 0);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/eachQuarterOfInterval/index.js
var require_eachQuarterOfInterval = __commonJS({
  "node_modules/date-fns/eachQuarterOfInterval/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = eachQuarterOfInterval;
    var _index = _interopRequireDefault(require_addQuarters());
    var _index2 = _interopRequireDefault(require_startOfQuarter());
    var _index3 = _interopRequireDefault(require_toDate());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function eachQuarterOfInterval(dirtyInterval) {
      (0, _index4.default)(1, arguments);
      var interval = dirtyInterval || {};
      var startDate = (0, _index3.default)(interval.start);
      var endDate = (0, _index3.default)(interval.end);
      var endTime = endDate.getTime();
      if (!(startDate.getTime() <= endTime)) {
        throw new RangeError("Invalid interval");
      }
      var startDateQuarter = (0, _index2.default)(startDate);
      var endDateQuarter = (0, _index2.default)(endDate);
      endTime = endDateQuarter.getTime();
      var quarters = [];
      var currentQuarter = startDateQuarter;
      while (currentQuarter.getTime() <= endTime) {
        quarters.push((0, _index3.default)(currentQuarter));
        currentQuarter = (0, _index.default)(currentQuarter, 1);
      }
      return quarters;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/eachWeekOfInterval/index.js
var require_eachWeekOfInterval = __commonJS({
  "node_modules/date-fns/eachWeekOfInterval/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = eachWeekOfInterval;
    var _index = _interopRequireDefault(require_addWeeks());
    var _index2 = _interopRequireDefault(require_startOfWeek());
    var _index3 = _interopRequireDefault(require_toDate());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function eachWeekOfInterval(dirtyInterval, options2) {
      (0, _index4.default)(1, arguments);
      var interval = dirtyInterval || {};
      var startDate = (0, _index3.default)(interval.start);
      var endDate = (0, _index3.default)(interval.end);
      var endTime = endDate.getTime();
      if (!(startDate.getTime() <= endTime)) {
        throw new RangeError("Invalid interval");
      }
      var startDateWeek = (0, _index2.default)(startDate, options2);
      var endDateWeek = (0, _index2.default)(endDate, options2);
      startDateWeek.setHours(15);
      endDateWeek.setHours(15);
      endTime = endDateWeek.getTime();
      var weeks = [];
      var currentWeek = startDateWeek;
      while (currentWeek.getTime() <= endTime) {
        currentWeek.setHours(0);
        weeks.push((0, _index3.default)(currentWeek));
        currentWeek = (0, _index.default)(currentWeek, 1);
        currentWeek.setHours(15);
      }
      return weeks;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/eachWeekendOfInterval/index.js
var require_eachWeekendOfInterval = __commonJS({
  "node_modules/date-fns/eachWeekendOfInterval/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = eachWeekendOfInterval;
    var _index = _interopRequireDefault(require_eachDayOfInterval());
    var _index2 = _interopRequireDefault(require_isSunday());
    var _index3 = _interopRequireDefault(require_isWeekend());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function eachWeekendOfInterval(interval) {
      (0, _index4.default)(1, arguments);
      var dateInterval = (0, _index.default)(interval);
      var weekends = [];
      var index2 = 0;
      while (index2 < dateInterval.length) {
        var date = dateInterval[index2++];
        if ((0, _index3.default)(date)) {
          weekends.push(date);
          if ((0, _index2.default)(date))
            index2 = index2 + 5;
        }
      }
      return weekends;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/startOfMonth/index.js
var require_startOfMonth = __commonJS({
  "node_modules/date-fns/startOfMonth/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = startOfMonth;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfMonth(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      date.setDate(1);
      date.setHours(0, 0, 0, 0);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/eachWeekendOfMonth/index.js
var require_eachWeekendOfMonth = __commonJS({
  "node_modules/date-fns/eachWeekendOfMonth/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = eachWeekendOfMonth;
    var _index = _interopRequireDefault(require_eachWeekendOfInterval());
    var _index2 = _interopRequireDefault(require_startOfMonth());
    var _index3 = _interopRequireDefault(require_endOfMonth());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function eachWeekendOfMonth(dirtyDate) {
      (0, _index4.default)(1, arguments);
      var startDate = (0, _index2.default)(dirtyDate);
      if (isNaN(startDate.getTime()))
        throw new RangeError("The passed date is invalid");
      var endDate = (0, _index3.default)(dirtyDate);
      return (0, _index.default)({
        start: startDate,
        end: endDate
      });
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/startOfYear/index.js
var require_startOfYear = __commonJS({
  "node_modules/date-fns/startOfYear/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = startOfYear;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfYear(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var cleanDate = (0, _index.default)(dirtyDate);
      var date = new Date(0);
      date.setFullYear(cleanDate.getFullYear(), 0, 1);
      date.setHours(0, 0, 0, 0);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/endOfYear/index.js
var require_endOfYear = __commonJS({
  "node_modules/date-fns/endOfYear/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = endOfYear;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function endOfYear(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var year = date.getFullYear();
      date.setFullYear(year + 1, 0, 0);
      date.setHours(23, 59, 59, 999);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/eachWeekendOfYear/index.js
var require_eachWeekendOfYear = __commonJS({
  "node_modules/date-fns/eachWeekendOfYear/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = eachWeekendOfYear;
    var _index = _interopRequireDefault(require_eachWeekendOfInterval());
    var _index2 = _interopRequireDefault(require_startOfYear());
    var _index3 = _interopRequireDefault(require_endOfYear());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function eachWeekendOfYear(dirtyDate) {
      (0, _index4.default)(1, arguments);
      var startDate = (0, _index2.default)(dirtyDate);
      if (isNaN(startDate))
        throw new RangeError("The passed date is invalid");
      var endDate = (0, _index3.default)(dirtyDate);
      return (0, _index.default)({
        start: startDate,
        end: endDate
      });
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/eachYearOfInterval/index.js
var require_eachYearOfInterval = __commonJS({
  "node_modules/date-fns/eachYearOfInterval/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = eachYearOfInterval;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function eachYearOfInterval(dirtyInterval) {
      (0, _index2.default)(1, arguments);
      var interval = dirtyInterval || {};
      var startDate = (0, _index.default)(interval.start);
      var endDate = (0, _index.default)(interval.end);
      var endTime = endDate.getTime();
      if (!(startDate.getTime() <= endTime)) {
        throw new RangeError("Invalid interval");
      }
      var dates = [];
      var currentDate = startDate;
      currentDate.setHours(0, 0, 0, 0);
      currentDate.setMonth(0, 1);
      while (currentDate.getTime() <= endTime) {
        dates.push((0, _index.default)(currentDate));
        currentDate.setFullYear(currentDate.getFullYear() + 1);
      }
      return dates;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/endOfDecade/index.js
var require_endOfDecade = __commonJS({
  "node_modules/date-fns/endOfDecade/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = endOfDecade;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function endOfDecade(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var year = date.getFullYear();
      var decade = 9 + Math.floor(year / 10) * 10;
      date.setFullYear(decade, 11, 31);
      date.setHours(23, 59, 59, 999);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/endOfHour/index.js
var require_endOfHour = __commonJS({
  "node_modules/date-fns/endOfHour/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = endOfHour;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function endOfHour(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      date.setMinutes(59, 59, 999);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/endOfWeek/index.js
var require_endOfWeek = __commonJS({
  "node_modules/date-fns/endOfWeek/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = endOfWeek;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_toInteger());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function endOfWeek(dirtyDate, dirtyOptions) {
      (0, _index3.default)(1, arguments);
      var options2 = dirtyOptions || {};
      var locale = options2.locale;
      var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
      var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : (0, _index2.default)(localeWeekStartsOn);
      var weekStartsOn = options2.weekStartsOn == null ? defaultWeekStartsOn : (0, _index2.default)(options2.weekStartsOn);
      if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
        throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
      }
      var date = (0, _index.default)(dirtyDate);
      var day = date.getDay();
      var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);
      date.setDate(date.getDate() + diff);
      date.setHours(23, 59, 59, 999);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/endOfISOWeek/index.js
var require_endOfISOWeek = __commonJS({
  "node_modules/date-fns/endOfISOWeek/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = endOfISOWeek;
    var _index = _interopRequireDefault(require_endOfWeek());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function endOfISOWeek(dirtyDate) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(dirtyDate, {
        weekStartsOn: 1
      });
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/endOfISOWeekYear/index.js
var require_endOfISOWeekYear = __commonJS({
  "node_modules/date-fns/endOfISOWeekYear/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = endOfISOWeekYear;
    var _index = _interopRequireDefault(require_getISOWeekYear());
    var _index2 = _interopRequireDefault(require_startOfISOWeek());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function endOfISOWeekYear(dirtyDate) {
      (0, _index3.default)(1, arguments);
      var year = (0, _index.default)(dirtyDate);
      var fourthOfJanuaryOfNextYear = new Date(0);
      fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);
      fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);
      var date = (0, _index2.default)(fourthOfJanuaryOfNextYear);
      date.setMilliseconds(date.getMilliseconds() - 1);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/endOfMinute/index.js
var require_endOfMinute = __commonJS({
  "node_modules/date-fns/endOfMinute/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = endOfMinute;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function endOfMinute(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      date.setSeconds(59, 999);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/endOfQuarter/index.js
var require_endOfQuarter = __commonJS({
  "node_modules/date-fns/endOfQuarter/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = endOfQuarter;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function endOfQuarter(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var currentMonth = date.getMonth();
      var month = currentMonth - currentMonth % 3 + 3;
      date.setMonth(month, 0);
      date.setHours(23, 59, 59, 999);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/endOfSecond/index.js
var require_endOfSecond = __commonJS({
  "node_modules/date-fns/endOfSecond/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = endOfSecond;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function endOfSecond(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      date.setMilliseconds(999);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/endOfToday/index.js
var require_endOfToday = __commonJS({
  "node_modules/date-fns/endOfToday/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = endOfToday;
    var _index = _interopRequireDefault(require_endOfDay());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function endOfToday() {
      return (0, _index.default)(Date.now());
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/endOfTomorrow/index.js
var require_endOfTomorrow = __commonJS({
  "node_modules/date-fns/endOfTomorrow/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = endOfTomorrow;
    function endOfTomorrow() {
      var now = new Date();
      var year = now.getFullYear();
      var month = now.getMonth();
      var day = now.getDate();
      var date = new Date(0);
      date.setFullYear(year, month, day + 1);
      date.setHours(23, 59, 59, 999);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/endOfYesterday/index.js
var require_endOfYesterday = __commonJS({
  "node_modules/date-fns/endOfYesterday/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = endOfYesterday;
    function endOfYesterday() {
      var now = new Date();
      var year = now.getFullYear();
      var month = now.getMonth();
      var day = now.getDate();
      var date = new Date(0);
      date.setFullYear(year, month, day - 1);
      date.setHours(23, 59, 59, 999);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/locale/en-US/_lib/formatDistance/index.js
var require_formatDistance = __commonJS({
  "node_modules/date-fns/locale/en-US/_lib/formatDistance/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var formatDistanceLocale = {
      lessThanXSeconds: {
        one: "less than a second",
        other: "less than {{count}} seconds"
      },
      xSeconds: {
        one: "1 second",
        other: "{{count}} seconds"
      },
      halfAMinute: "half a minute",
      lessThanXMinutes: {
        one: "less than a minute",
        other: "less than {{count}} minutes"
      },
      xMinutes: {
        one: "1 minute",
        other: "{{count}} minutes"
      },
      aboutXHours: {
        one: "about 1 hour",
        other: "about {{count}} hours"
      },
      xHours: {
        one: "1 hour",
        other: "{{count}} hours"
      },
      xDays: {
        one: "1 day",
        other: "{{count}} days"
      },
      aboutXWeeks: {
        one: "about 1 week",
        other: "about {{count}} weeks"
      },
      xWeeks: {
        one: "1 week",
        other: "{{count}} weeks"
      },
      aboutXMonths: {
        one: "about 1 month",
        other: "about {{count}} months"
      },
      xMonths: {
        one: "1 month",
        other: "{{count}} months"
      },
      aboutXYears: {
        one: "about 1 year",
        other: "about {{count}} years"
      },
      xYears: {
        one: "1 year",
        other: "{{count}} years"
      },
      overXYears: {
        one: "over 1 year",
        other: "over {{count}} years"
      },
      almostXYears: {
        one: "almost 1 year",
        other: "almost {{count}} years"
      }
    };
    var formatDistance = function(token, count, options2) {
      var result;
      var tokenValue = formatDistanceLocale[token];
      if (typeof tokenValue === "string") {
        result = tokenValue;
      } else if (count === 1) {
        result = tokenValue.one;
      } else {
        result = tokenValue.other.replace("{{count}}", count.toString());
      }
      if (options2 !== null && options2 !== void 0 && options2.addSuffix) {
        if (options2.comparison && options2.comparison > 0) {
          return "in " + result;
        } else {
          return result + " ago";
        }
      }
      return result;
    };
    var _default = formatDistance;
    exports.default = _default;
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/locale/_lib/buildFormatLongFn/index.js
var require_buildFormatLongFn = __commonJS({
  "node_modules/date-fns/locale/_lib/buildFormatLongFn/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = buildFormatLongFn;
    function buildFormatLongFn(args) {
      return function() {
        var options2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
        var width = options2.width ? String(options2.width) : args.defaultWidth;
        var format3 = args.formats[width] || args.formats[args.defaultWidth];
        return format3;
      };
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/locale/en-US/_lib/formatLong/index.js
var require_formatLong = __commonJS({
  "node_modules/date-fns/locale/en-US/_lib/formatLong/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _index = _interopRequireDefault(require_buildFormatLongFn());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var dateFormats = {
      full: "EEEE, MMMM do, y",
      long: "MMMM do, y",
      medium: "MMM d, y",
      short: "MM/dd/yyyy"
    };
    var timeFormats = {
      full: "h:mm:ss a zzzz",
      long: "h:mm:ss a z",
      medium: "h:mm:ss a",
      short: "h:mm a"
    };
    var dateTimeFormats = {
      full: "{{date}} 'at' {{time}}",
      long: "{{date}} 'at' {{time}}",
      medium: "{{date}}, {{time}}",
      short: "{{date}}, {{time}}"
    };
    var formatLong = {
      date: (0, _index.default)({
        formats: dateFormats,
        defaultWidth: "full"
      }),
      time: (0, _index.default)({
        formats: timeFormats,
        defaultWidth: "full"
      }),
      dateTime: (0, _index.default)({
        formats: dateTimeFormats,
        defaultWidth: "full"
      })
    };
    var _default = formatLong;
    exports.default = _default;
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/locale/en-US/_lib/formatRelative/index.js
var require_formatRelative = __commonJS({
  "node_modules/date-fns/locale/en-US/_lib/formatRelative/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var formatRelativeLocale = {
      lastWeek: "'last' eeee 'at' p",
      yesterday: "'yesterday at' p",
      today: "'today at' p",
      tomorrow: "'tomorrow at' p",
      nextWeek: "eeee 'at' p",
      other: "P"
    };
    var formatRelative = function(token, _date, _baseDate, _options) {
      return formatRelativeLocale[token];
    };
    var _default = formatRelative;
    exports.default = _default;
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/locale/_lib/buildLocalizeFn/index.js
var require_buildLocalizeFn = __commonJS({
  "node_modules/date-fns/locale/_lib/buildLocalizeFn/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = buildLocalizeFn;
    function buildLocalizeFn(args) {
      return function(dirtyIndex, dirtyOptions) {
        var options2 = dirtyOptions || {};
        var context = options2.context ? String(options2.context) : "standalone";
        var valuesArray;
        if (context === "formatting" && args.formattingValues) {
          var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;
          var width = options2.width ? String(options2.width) : defaultWidth;
          valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];
        } else {
          var _defaultWidth = args.defaultWidth;
          var _width = options2.width ? String(options2.width) : args.defaultWidth;
          valuesArray = args.values[_width] || args.values[_defaultWidth];
        }
        var index2 = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;
        return valuesArray[index2];
      };
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/locale/en-US/_lib/localize/index.js
var require_localize = __commonJS({
  "node_modules/date-fns/locale/en-US/_lib/localize/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _index = _interopRequireDefault(require_buildLocalizeFn());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var eraValues = {
      narrow: ["B", "A"],
      abbreviated: ["BC", "AD"],
      wide: ["Before Christ", "Anno Domini"]
    };
    var quarterValues = {
      narrow: ["1", "2", "3", "4"],
      abbreviated: ["Q1", "Q2", "Q3", "Q4"],
      wide: ["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"]
    };
    var monthValues = {
      narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
      abbreviated: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
      wide: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
    };
    var dayValues = {
      narrow: ["S", "M", "T", "W", "T", "F", "S"],
      short: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
      abbreviated: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
      wide: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]
    };
    var dayPeriodValues = {
      narrow: {
        am: "a",
        pm: "p",
        midnight: "mi",
        noon: "n",
        morning: "morning",
        afternoon: "afternoon",
        evening: "evening",
        night: "night"
      },
      abbreviated: {
        am: "AM",
        pm: "PM",
        midnight: "midnight",
        noon: "noon",
        morning: "morning",
        afternoon: "afternoon",
        evening: "evening",
        night: "night"
      },
      wide: {
        am: "a.m.",
        pm: "p.m.",
        midnight: "midnight",
        noon: "noon",
        morning: "morning",
        afternoon: "afternoon",
        evening: "evening",
        night: "night"
      }
    };
    var formattingDayPeriodValues = {
      narrow: {
        am: "a",
        pm: "p",
        midnight: "mi",
        noon: "n",
        morning: "in the morning",
        afternoon: "in the afternoon",
        evening: "in the evening",
        night: "at night"
      },
      abbreviated: {
        am: "AM",
        pm: "PM",
        midnight: "midnight",
        noon: "noon",
        morning: "in the morning",
        afternoon: "in the afternoon",
        evening: "in the evening",
        night: "at night"
      },
      wide: {
        am: "a.m.",
        pm: "p.m.",
        midnight: "midnight",
        noon: "noon",
        morning: "in the morning",
        afternoon: "in the afternoon",
        evening: "in the evening",
        night: "at night"
      }
    };
    var ordinalNumber = function(dirtyNumber, _options) {
      var number = Number(dirtyNumber);
      var rem100 = number % 100;
      if (rem100 > 20 || rem100 < 10) {
        switch (rem100 % 10) {
          case 1:
            return number + "st";
          case 2:
            return number + "nd";
          case 3:
            return number + "rd";
        }
      }
      return number + "th";
    };
    var localize = {
      ordinalNumber,
      era: (0, _index.default)({
        values: eraValues,
        defaultWidth: "wide"
      }),
      quarter: (0, _index.default)({
        values: quarterValues,
        defaultWidth: "wide",
        argumentCallback: function(quarter) {
          return quarter - 1;
        }
      }),
      month: (0, _index.default)({
        values: monthValues,
        defaultWidth: "wide"
      }),
      day: (0, _index.default)({
        values: dayValues,
        defaultWidth: "wide"
      }),
      dayPeriod: (0, _index.default)({
        values: dayPeriodValues,
        defaultWidth: "wide",
        formattingValues: formattingDayPeriodValues,
        defaultFormattingWidth: "wide"
      })
    };
    var _default = localize;
    exports.default = _default;
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/locale/_lib/buildMatchFn/index.js
var require_buildMatchFn = __commonJS({
  "node_modules/date-fns/locale/_lib/buildMatchFn/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = buildMatchFn;
    function buildMatchFn(args) {
      return function(string) {
        var options2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        var width = options2.width;
        var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];
        var matchResult = string.match(matchPattern);
        if (!matchResult) {
          return null;
        }
        var matchedString = matchResult[0];
        var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];
        var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function(pattern) {
          return pattern.test(matchedString);
        }) : findKey(parsePatterns, function(pattern) {
          return pattern.test(matchedString);
        });
        var value;
        value = args.valueCallback ? args.valueCallback(key) : key;
        value = options2.valueCallback ? options2.valueCallback(value) : value;
        var rest = string.slice(matchedString.length);
        return {
          value,
          rest
        };
      };
    }
    function findKey(object, predicate) {
      for (var key in object) {
        if (object.hasOwnProperty(key) && predicate(object[key])) {
          return key;
        }
      }
      return void 0;
    }
    function findIndex(array, predicate) {
      for (var key = 0; key < array.length; key++) {
        if (predicate(array[key])) {
          return key;
        }
      }
      return void 0;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/locale/_lib/buildMatchPatternFn/index.js
var require_buildMatchPatternFn = __commonJS({
  "node_modules/date-fns/locale/_lib/buildMatchPatternFn/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = buildMatchPatternFn;
    function buildMatchPatternFn(args) {
      return function(string) {
        var options2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        var matchResult = string.match(args.matchPattern);
        if (!matchResult)
          return null;
        var matchedString = matchResult[0];
        var parseResult = string.match(args.parsePattern);
        if (!parseResult)
          return null;
        var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];
        value = options2.valueCallback ? options2.valueCallback(value) : value;
        var rest = string.slice(matchedString.length);
        return {
          value,
          rest
        };
      };
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/locale/en-US/_lib/match/index.js
var require_match = __commonJS({
  "node_modules/date-fns/locale/en-US/_lib/match/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _index = _interopRequireDefault(require_buildMatchFn());
    var _index2 = _interopRequireDefault(require_buildMatchPatternFn());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
    var parseOrdinalNumberPattern = /\d+/i;
    var matchEraPatterns = {
      narrow: /^(b|a)/i,
      abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
      wide: /^(before christ|before common era|anno domini|common era)/i
    };
    var parseEraPatterns = {
      any: [/^b/i, /^(a|c)/i]
    };
    var matchQuarterPatterns = {
      narrow: /^[1234]/i,
      abbreviated: /^q[1234]/i,
      wide: /^[1234](th|st|nd|rd)? quarter/i
    };
    var parseQuarterPatterns = {
      any: [/1/i, /2/i, /3/i, /4/i]
    };
    var matchMonthPatterns = {
      narrow: /^[jfmasond]/i,
      abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
      wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i
    };
    var parseMonthPatterns = {
      narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
      any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]
    };
    var matchDayPatterns = {
      narrow: /^[smtwf]/i,
      short: /^(su|mo|tu|we|th|fr|sa)/i,
      abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
      wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i
    };
    var parseDayPatterns = {
      narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
      any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]
    };
    var matchDayPeriodPatterns = {
      narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
      any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i
    };
    var parseDayPeriodPatterns = {
      any: {
        am: /^a/i,
        pm: /^p/i,
        midnight: /^mi/i,
        noon: /^no/i,
        morning: /morning/i,
        afternoon: /afternoon/i,
        evening: /evening/i,
        night: /night/i
      }
    };
    var match = {
      ordinalNumber: (0, _index2.default)({
        matchPattern: matchOrdinalNumberPattern,
        parsePattern: parseOrdinalNumberPattern,
        valueCallback: function(value) {
          return parseInt(value, 10);
        }
      }),
      era: (0, _index.default)({
        matchPatterns: matchEraPatterns,
        defaultMatchWidth: "wide",
        parsePatterns: parseEraPatterns,
        defaultParseWidth: "any"
      }),
      quarter: (0, _index.default)({
        matchPatterns: matchQuarterPatterns,
        defaultMatchWidth: "wide",
        parsePatterns: parseQuarterPatterns,
        defaultParseWidth: "any",
        valueCallback: function(index2) {
          return index2 + 1;
        }
      }),
      month: (0, _index.default)({
        matchPatterns: matchMonthPatterns,
        defaultMatchWidth: "wide",
        parsePatterns: parseMonthPatterns,
        defaultParseWidth: "any"
      }),
      day: (0, _index.default)({
        matchPatterns: matchDayPatterns,
        defaultMatchWidth: "wide",
        parsePatterns: parseDayPatterns,
        defaultParseWidth: "any"
      }),
      dayPeriod: (0, _index.default)({
        matchPatterns: matchDayPeriodPatterns,
        defaultMatchWidth: "any",
        parsePatterns: parseDayPeriodPatterns,
        defaultParseWidth: "any"
      })
    };
    var _default = match;
    exports.default = _default;
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/locale/en-US/index.js
var require_en_US = __commonJS({
  "node_modules/date-fns/locale/en-US/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _index = _interopRequireDefault(require_formatDistance());
    var _index2 = _interopRequireDefault(require_formatLong());
    var _index3 = _interopRequireDefault(require_formatRelative());
    var _index4 = _interopRequireDefault(require_localize());
    var _index5 = _interopRequireDefault(require_match());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var locale = {
      code: "en-US",
      formatDistance: _index.default,
      formatLong: _index2.default,
      formatRelative: _index3.default,
      localize: _index4.default,
      match: _index5.default,
      options: {
        weekStartsOn: 0,
        firstWeekContainsDate: 1
      }
    };
    var _default = locale;
    exports.default = _default;
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/subMilliseconds/index.js
var require_subMilliseconds = __commonJS({
  "node_modules/date-fns/subMilliseconds/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = subMilliseconds;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_addMilliseconds());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function subMilliseconds(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var amount = (0, _index.default)(dirtyAmount);
      return (0, _index2.default)(dirtyDate, -amount);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/_lib/addLeadingZeros/index.js
var require_addLeadingZeros = __commonJS({
  "node_modules/date-fns/_lib/addLeadingZeros/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = addLeadingZeros;
    function addLeadingZeros(number, targetLength) {
      var sign = number < 0 ? "-" : "";
      var output = Math.abs(number).toString();
      while (output.length < targetLength) {
        output = "0" + output;
      }
      return sign + output;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/_lib/format/lightFormatters/index.js
var require_lightFormatters = __commonJS({
  "node_modules/date-fns/_lib/format/lightFormatters/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _index = _interopRequireDefault(require_addLeadingZeros());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var formatters = {
      y: function(date, token) {
        var signedYear = date.getUTCFullYear();
        var year = signedYear > 0 ? signedYear : 1 - signedYear;
        return (0, _index.default)(token === "yy" ? year % 100 : year, token.length);
      },
      M: function(date, token) {
        var month = date.getUTCMonth();
        return token === "M" ? String(month + 1) : (0, _index.default)(month + 1, 2);
      },
      d: function(date, token) {
        return (0, _index.default)(date.getUTCDate(), token.length);
      },
      a: function(date, token) {
        var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? "pm" : "am";
        switch (token) {
          case "a":
          case "aa":
            return dayPeriodEnumValue.toUpperCase();
          case "aaa":
            return dayPeriodEnumValue;
          case "aaaaa":
            return dayPeriodEnumValue[0];
          case "aaaa":
          default:
            return dayPeriodEnumValue === "am" ? "a.m." : "p.m.";
        }
      },
      h: function(date, token) {
        return (0, _index.default)(date.getUTCHours() % 12 || 12, token.length);
      },
      H: function(date, token) {
        return (0, _index.default)(date.getUTCHours(), token.length);
      },
      m: function(date, token) {
        return (0, _index.default)(date.getUTCMinutes(), token.length);
      },
      s: function(date, token) {
        return (0, _index.default)(date.getUTCSeconds(), token.length);
      },
      S: function(date, token) {
        var numberOfDigits = token.length;
        var milliseconds = date.getUTCMilliseconds();
        var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));
        return (0, _index.default)(fractionalSeconds, token.length);
      }
    };
    var _default = formatters;
    exports.default = _default;
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/_lib/getUTCDayOfYear/index.js
var require_getUTCDayOfYear = __commonJS({
  "node_modules/date-fns/_lib/getUTCDayOfYear/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = getUTCDayOfYear;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var MILLISECONDS_IN_DAY = 864e5;
    function getUTCDayOfYear(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var timestamp = date.getTime();
      date.setUTCMonth(0, 1);
      date.setUTCHours(0, 0, 0, 0);
      var startOfYearTimestamp = date.getTime();
      var difference = timestamp - startOfYearTimestamp;
      return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/_lib/startOfUTCISOWeek/index.js
var require_startOfUTCISOWeek = __commonJS({
  "node_modules/date-fns/_lib/startOfUTCISOWeek/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = startOfUTCISOWeek;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfUTCISOWeek(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var weekStartsOn = 1;
      var date = (0, _index.default)(dirtyDate);
      var day = date.getUTCDay();
      var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
      date.setUTCDate(date.getUTCDate() - diff);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/_lib/getUTCISOWeekYear/index.js
var require_getUTCISOWeekYear = __commonJS({
  "node_modules/date-fns/_lib/getUTCISOWeekYear/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = getUTCISOWeekYear;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    var _index3 = _interopRequireDefault(require_startOfUTCISOWeek());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getUTCISOWeekYear(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var year = date.getUTCFullYear();
      var fourthOfJanuaryOfNextYear = new Date(0);
      fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);
      fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);
      var startOfNextYear = (0, _index3.default)(fourthOfJanuaryOfNextYear);
      var fourthOfJanuaryOfThisYear = new Date(0);
      fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);
      fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);
      var startOfThisYear = (0, _index3.default)(fourthOfJanuaryOfThisYear);
      if (date.getTime() >= startOfNextYear.getTime()) {
        return year + 1;
      } else if (date.getTime() >= startOfThisYear.getTime()) {
        return year;
      } else {
        return year - 1;
      }
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/_lib/startOfUTCISOWeekYear/index.js
var require_startOfUTCISOWeekYear = __commonJS({
  "node_modules/date-fns/_lib/startOfUTCISOWeekYear/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = startOfUTCISOWeekYear;
    var _index = _interopRequireDefault(require_getUTCISOWeekYear());
    var _index2 = _interopRequireDefault(require_startOfUTCISOWeek());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfUTCISOWeekYear(dirtyDate) {
      (0, _index3.default)(1, arguments);
      var year = (0, _index.default)(dirtyDate);
      var fourthOfJanuary = new Date(0);
      fourthOfJanuary.setUTCFullYear(year, 0, 4);
      fourthOfJanuary.setUTCHours(0, 0, 0, 0);
      var date = (0, _index2.default)(fourthOfJanuary);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/_lib/getUTCISOWeek/index.js
var require_getUTCISOWeek = __commonJS({
  "node_modules/date-fns/_lib/getUTCISOWeek/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = getUTCISOWeek;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_startOfUTCISOWeek());
    var _index3 = _interopRequireDefault(require_startOfUTCISOWeekYear());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var MILLISECONDS_IN_WEEK = 6048e5;
    function getUTCISOWeek(dirtyDate) {
      (0, _index4.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var diff = (0, _index2.default)(date).getTime() - (0, _index3.default)(date).getTime();
      return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/_lib/startOfUTCWeek/index.js
var require_startOfUTCWeek = __commonJS({
  "node_modules/date-fns/_lib/startOfUTCWeek/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = startOfUTCWeek;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    var _index3 = _interopRequireDefault(require_toInteger());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfUTCWeek(dirtyDate, dirtyOptions) {
      (0, _index2.default)(1, arguments);
      var options2 = dirtyOptions || {};
      var locale = options2.locale;
      var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
      var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : (0, _index3.default)(localeWeekStartsOn);
      var weekStartsOn = options2.weekStartsOn == null ? defaultWeekStartsOn : (0, _index3.default)(options2.weekStartsOn);
      if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
        throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
      }
      var date = (0, _index.default)(dirtyDate);
      var day = date.getUTCDay();
      var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
      date.setUTCDate(date.getUTCDate() - diff);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/_lib/getUTCWeekYear/index.js
var require_getUTCWeekYear = __commonJS({
  "node_modules/date-fns/_lib/getUTCWeekYear/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = getUTCWeekYear;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    var _index3 = _interopRequireDefault(require_startOfUTCWeek());
    var _index4 = _interopRequireDefault(require_toInteger());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getUTCWeekYear(dirtyDate, dirtyOptions) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var year = date.getUTCFullYear();
      var options2 = dirtyOptions || {};
      var locale = options2.locale;
      var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;
      var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : (0, _index4.default)(localeFirstWeekContainsDate);
      var firstWeekContainsDate = options2.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : (0, _index4.default)(options2.firstWeekContainsDate);
      if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
        throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
      }
      var firstWeekOfNextYear = new Date(0);
      firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);
      firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);
      var startOfNextYear = (0, _index3.default)(firstWeekOfNextYear, dirtyOptions);
      var firstWeekOfThisYear = new Date(0);
      firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);
      firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);
      var startOfThisYear = (0, _index3.default)(firstWeekOfThisYear, dirtyOptions);
      if (date.getTime() >= startOfNextYear.getTime()) {
        return year + 1;
      } else if (date.getTime() >= startOfThisYear.getTime()) {
        return year;
      } else {
        return year - 1;
      }
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/_lib/startOfUTCWeekYear/index.js
var require_startOfUTCWeekYear = __commonJS({
  "node_modules/date-fns/_lib/startOfUTCWeekYear/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = startOfUTCWeekYear;
    var _index = _interopRequireDefault(require_getUTCWeekYear());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    var _index3 = _interopRequireDefault(require_startOfUTCWeek());
    var _index4 = _interopRequireDefault(require_toInteger());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfUTCWeekYear(dirtyDate, dirtyOptions) {
      (0, _index2.default)(1, arguments);
      var options2 = dirtyOptions || {};
      var locale = options2.locale;
      var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;
      var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : (0, _index4.default)(localeFirstWeekContainsDate);
      var firstWeekContainsDate = options2.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : (0, _index4.default)(options2.firstWeekContainsDate);
      var year = (0, _index.default)(dirtyDate, dirtyOptions);
      var firstWeek = new Date(0);
      firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);
      firstWeek.setUTCHours(0, 0, 0, 0);
      var date = (0, _index3.default)(firstWeek, dirtyOptions);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/_lib/getUTCWeek/index.js
var require_getUTCWeek = __commonJS({
  "node_modules/date-fns/_lib/getUTCWeek/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = getUTCWeek;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_startOfUTCWeek());
    var _index3 = _interopRequireDefault(require_startOfUTCWeekYear());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var MILLISECONDS_IN_WEEK = 6048e5;
    function getUTCWeek(dirtyDate, options2) {
      (0, _index4.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var diff = (0, _index2.default)(date, options2).getTime() - (0, _index3.default)(date, options2).getTime();
      return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/_lib/format/formatters/index.js
var require_formatters = __commonJS({
  "node_modules/date-fns/_lib/format/formatters/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _index = _interopRequireDefault(require_lightFormatters());
    var _index2 = _interopRequireDefault(require_getUTCDayOfYear());
    var _index3 = _interopRequireDefault(require_getUTCISOWeek());
    var _index4 = _interopRequireDefault(require_getUTCISOWeekYear());
    var _index5 = _interopRequireDefault(require_getUTCWeek());
    var _index6 = _interopRequireDefault(require_getUTCWeekYear());
    var _index7 = _interopRequireDefault(require_addLeadingZeros());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var dayPeriodEnum = {
      am: "am",
      pm: "pm",
      midnight: "midnight",
      noon: "noon",
      morning: "morning",
      afternoon: "afternoon",
      evening: "evening",
      night: "night"
    };
    var formatters = {
      G: function(date, token, localize) {
        var era = date.getUTCFullYear() > 0 ? 1 : 0;
        switch (token) {
          case "G":
          case "GG":
          case "GGG":
            return localize.era(era, {
              width: "abbreviated"
            });
          case "GGGGG":
            return localize.era(era, {
              width: "narrow"
            });
          case "GGGG":
          default:
            return localize.era(era, {
              width: "wide"
            });
        }
      },
      y: function(date, token, localize) {
        if (token === "yo") {
          var signedYear = date.getUTCFullYear();
          var year = signedYear > 0 ? signedYear : 1 - signedYear;
          return localize.ordinalNumber(year, {
            unit: "year"
          });
        }
        return _index.default.y(date, token);
      },
      Y: function(date, token, localize, options2) {
        var signedWeekYear = (0, _index6.default)(date, options2);
        var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;
        if (token === "YY") {
          var twoDigitYear = weekYear % 100;
          return (0, _index7.default)(twoDigitYear, 2);
        }
        if (token === "Yo") {
          return localize.ordinalNumber(weekYear, {
            unit: "year"
          });
        }
        return (0, _index7.default)(weekYear, token.length);
      },
      R: function(date, token) {
        var isoWeekYear = (0, _index4.default)(date);
        return (0, _index7.default)(isoWeekYear, token.length);
      },
      u: function(date, token) {
        var year = date.getUTCFullYear();
        return (0, _index7.default)(year, token.length);
      },
      Q: function(date, token, localize) {
        var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);
        switch (token) {
          case "Q":
            return String(quarter);
          case "QQ":
            return (0, _index7.default)(quarter, 2);
          case "Qo":
            return localize.ordinalNumber(quarter, {
              unit: "quarter"
            });
          case "QQQ":
            return localize.quarter(quarter, {
              width: "abbreviated",
              context: "formatting"
            });
          case "QQQQQ":
            return localize.quarter(quarter, {
              width: "narrow",
              context: "formatting"
            });
          case "QQQQ":
          default:
            return localize.quarter(quarter, {
              width: "wide",
              context: "formatting"
            });
        }
      },
      q: function(date, token, localize) {
        var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);
        switch (token) {
          case "q":
            return String(quarter);
          case "qq":
            return (0, _index7.default)(quarter, 2);
          case "qo":
            return localize.ordinalNumber(quarter, {
              unit: "quarter"
            });
          case "qqq":
            return localize.quarter(quarter, {
              width: "abbreviated",
              context: "standalone"
            });
          case "qqqqq":
            return localize.quarter(quarter, {
              width: "narrow",
              context: "standalone"
            });
          case "qqqq":
          default:
            return localize.quarter(quarter, {
              width: "wide",
              context: "standalone"
            });
        }
      },
      M: function(date, token, localize) {
        var month = date.getUTCMonth();
        switch (token) {
          case "M":
          case "MM":
            return _index.default.M(date, token);
          case "Mo":
            return localize.ordinalNumber(month + 1, {
              unit: "month"
            });
          case "MMM":
            return localize.month(month, {
              width: "abbreviated",
              context: "formatting"
            });
          case "MMMMM":
            return localize.month(month, {
              width: "narrow",
              context: "formatting"
            });
          case "MMMM":
          default:
            return localize.month(month, {
              width: "wide",
              context: "formatting"
            });
        }
      },
      L: function(date, token, localize) {
        var month = date.getUTCMonth();
        switch (token) {
          case "L":
            return String(month + 1);
          case "LL":
            return (0, _index7.default)(month + 1, 2);
          case "Lo":
            return localize.ordinalNumber(month + 1, {
              unit: "month"
            });
          case "LLL":
            return localize.month(month, {
              width: "abbreviated",
              context: "standalone"
            });
          case "LLLLL":
            return localize.month(month, {
              width: "narrow",
              context: "standalone"
            });
          case "LLLL":
          default:
            return localize.month(month, {
              width: "wide",
              context: "standalone"
            });
        }
      },
      w: function(date, token, localize, options2) {
        var week = (0, _index5.default)(date, options2);
        if (token === "wo") {
          return localize.ordinalNumber(week, {
            unit: "week"
          });
        }
        return (0, _index7.default)(week, token.length);
      },
      I: function(date, token, localize) {
        var isoWeek = (0, _index3.default)(date);
        if (token === "Io") {
          return localize.ordinalNumber(isoWeek, {
            unit: "week"
          });
        }
        return (0, _index7.default)(isoWeek, token.length);
      },
      d: function(date, token, localize) {
        if (token === "do") {
          return localize.ordinalNumber(date.getUTCDate(), {
            unit: "date"
          });
        }
        return _index.default.d(date, token);
      },
      D: function(date, token, localize) {
        var dayOfYear = (0, _index2.default)(date);
        if (token === "Do") {
          return localize.ordinalNumber(dayOfYear, {
            unit: "dayOfYear"
          });
        }
        return (0, _index7.default)(dayOfYear, token.length);
      },
      E: function(date, token, localize) {
        var dayOfWeek = date.getUTCDay();
        switch (token) {
          case "E":
          case "EE":
          case "EEE":
            return localize.day(dayOfWeek, {
              width: "abbreviated",
              context: "formatting"
            });
          case "EEEEE":
            return localize.day(dayOfWeek, {
              width: "narrow",
              context: "formatting"
            });
          case "EEEEEE":
            return localize.day(dayOfWeek, {
              width: "short",
              context: "formatting"
            });
          case "EEEE":
          default:
            return localize.day(dayOfWeek, {
              width: "wide",
              context: "formatting"
            });
        }
      },
      e: function(date, token, localize, options2) {
        var dayOfWeek = date.getUTCDay();
        var localDayOfWeek = (dayOfWeek - options2.weekStartsOn + 8) % 7 || 7;
        switch (token) {
          case "e":
            return String(localDayOfWeek);
          case "ee":
            return (0, _index7.default)(localDayOfWeek, 2);
          case "eo":
            return localize.ordinalNumber(localDayOfWeek, {
              unit: "day"
            });
          case "eee":
            return localize.day(dayOfWeek, {
              width: "abbreviated",
              context: "formatting"
            });
          case "eeeee":
            return localize.day(dayOfWeek, {
              width: "narrow",
              context: "formatting"
            });
          case "eeeeee":
            return localize.day(dayOfWeek, {
              width: "short",
              context: "formatting"
            });
          case "eeee":
          default:
            return localize.day(dayOfWeek, {
              width: "wide",
              context: "formatting"
            });
        }
      },
      c: function(date, token, localize, options2) {
        var dayOfWeek = date.getUTCDay();
        var localDayOfWeek = (dayOfWeek - options2.weekStartsOn + 8) % 7 || 7;
        switch (token) {
          case "c":
            return String(localDayOfWeek);
          case "cc":
            return (0, _index7.default)(localDayOfWeek, token.length);
          case "co":
            return localize.ordinalNumber(localDayOfWeek, {
              unit: "day"
            });
          case "ccc":
            return localize.day(dayOfWeek, {
              width: "abbreviated",
              context: "standalone"
            });
          case "ccccc":
            return localize.day(dayOfWeek, {
              width: "narrow",
              context: "standalone"
            });
          case "cccccc":
            return localize.day(dayOfWeek, {
              width: "short",
              context: "standalone"
            });
          case "cccc":
          default:
            return localize.day(dayOfWeek, {
              width: "wide",
              context: "standalone"
            });
        }
      },
      i: function(date, token, localize) {
        var dayOfWeek = date.getUTCDay();
        var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;
        switch (token) {
          case "i":
            return String(isoDayOfWeek);
          case "ii":
            return (0, _index7.default)(isoDayOfWeek, token.length);
          case "io":
            return localize.ordinalNumber(isoDayOfWeek, {
              unit: "day"
            });
          case "iii":
            return localize.day(dayOfWeek, {
              width: "abbreviated",
              context: "formatting"
            });
          case "iiiii":
            return localize.day(dayOfWeek, {
              width: "narrow",
              context: "formatting"
            });
          case "iiiiii":
            return localize.day(dayOfWeek, {
              width: "short",
              context: "formatting"
            });
          case "iiii":
          default:
            return localize.day(dayOfWeek, {
              width: "wide",
              context: "formatting"
            });
        }
      },
      a: function(date, token, localize) {
        var hours = date.getUTCHours();
        var dayPeriodEnumValue = hours / 12 >= 1 ? "pm" : "am";
        switch (token) {
          case "a":
          case "aa":
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: "abbreviated",
              context: "formatting"
            });
          case "aaa":
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: "abbreviated",
              context: "formatting"
            }).toLowerCase();
          case "aaaaa":
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: "narrow",
              context: "formatting"
            });
          case "aaaa":
          default:
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: "wide",
              context: "formatting"
            });
        }
      },
      b: function(date, token, localize) {
        var hours = date.getUTCHours();
        var dayPeriodEnumValue;
        if (hours === 12) {
          dayPeriodEnumValue = dayPeriodEnum.noon;
        } else if (hours === 0) {
          dayPeriodEnumValue = dayPeriodEnum.midnight;
        } else {
          dayPeriodEnumValue = hours / 12 >= 1 ? "pm" : "am";
        }
        switch (token) {
          case "b":
          case "bb":
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: "abbreviated",
              context: "formatting"
            });
          case "bbb":
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: "abbreviated",
              context: "formatting"
            }).toLowerCase();
          case "bbbbb":
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: "narrow",
              context: "formatting"
            });
          case "bbbb":
          default:
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: "wide",
              context: "formatting"
            });
        }
      },
      B: function(date, token, localize) {
        var hours = date.getUTCHours();
        var dayPeriodEnumValue;
        if (hours >= 17) {
          dayPeriodEnumValue = dayPeriodEnum.evening;
        } else if (hours >= 12) {
          dayPeriodEnumValue = dayPeriodEnum.afternoon;
        } else if (hours >= 4) {
          dayPeriodEnumValue = dayPeriodEnum.morning;
        } else {
          dayPeriodEnumValue = dayPeriodEnum.night;
        }
        switch (token) {
          case "B":
          case "BB":
          case "BBB":
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: "abbreviated",
              context: "formatting"
            });
          case "BBBBB":
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: "narrow",
              context: "formatting"
            });
          case "BBBB":
          default:
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: "wide",
              context: "formatting"
            });
        }
      },
      h: function(date, token, localize) {
        if (token === "ho") {
          var hours = date.getUTCHours() % 12;
          if (hours === 0)
            hours = 12;
          return localize.ordinalNumber(hours, {
            unit: "hour"
          });
        }
        return _index.default.h(date, token);
      },
      H: function(date, token, localize) {
        if (token === "Ho") {
          return localize.ordinalNumber(date.getUTCHours(), {
            unit: "hour"
          });
        }
        return _index.default.H(date, token);
      },
      K: function(date, token, localize) {
        var hours = date.getUTCHours() % 12;
        if (token === "Ko") {
          return localize.ordinalNumber(hours, {
            unit: "hour"
          });
        }
        return (0, _index7.default)(hours, token.length);
      },
      k: function(date, token, localize) {
        var hours = date.getUTCHours();
        if (hours === 0)
          hours = 24;
        if (token === "ko") {
          return localize.ordinalNumber(hours, {
            unit: "hour"
          });
        }
        return (0, _index7.default)(hours, token.length);
      },
      m: function(date, token, localize) {
        if (token === "mo") {
          return localize.ordinalNumber(date.getUTCMinutes(), {
            unit: "minute"
          });
        }
        return _index.default.m(date, token);
      },
      s: function(date, token, localize) {
        if (token === "so") {
          return localize.ordinalNumber(date.getUTCSeconds(), {
            unit: "second"
          });
        }
        return _index.default.s(date, token);
      },
      S: function(date, token) {
        return _index.default.S(date, token);
      },
      X: function(date, token, _localize, options2) {
        var originalDate = options2._originalDate || date;
        var timezoneOffset = originalDate.getTimezoneOffset();
        if (timezoneOffset === 0) {
          return "Z";
        }
        switch (token) {
          case "X":
            return formatTimezoneWithOptionalMinutes(timezoneOffset);
          case "XXXX":
          case "XX":
            return formatTimezone(timezoneOffset);
          case "XXXXX":
          case "XXX":
          default:
            return formatTimezone(timezoneOffset, ":");
        }
      },
      x: function(date, token, _localize, options2) {
        var originalDate = options2._originalDate || date;
        var timezoneOffset = originalDate.getTimezoneOffset();
        switch (token) {
          case "x":
            return formatTimezoneWithOptionalMinutes(timezoneOffset);
          case "xxxx":
          case "xx":
            return formatTimezone(timezoneOffset);
          case "xxxxx":
          case "xxx":
          default:
            return formatTimezone(timezoneOffset, ":");
        }
      },
      O: function(date, token, _localize, options2) {
        var originalDate = options2._originalDate || date;
        var timezoneOffset = originalDate.getTimezoneOffset();
        switch (token) {
          case "O":
          case "OO":
          case "OOO":
            return "GMT" + formatTimezoneShort(timezoneOffset, ":");
          case "OOOO":
          default:
            return "GMT" + formatTimezone(timezoneOffset, ":");
        }
      },
      z: function(date, token, _localize, options2) {
        var originalDate = options2._originalDate || date;
        var timezoneOffset = originalDate.getTimezoneOffset();
        switch (token) {
          case "z":
          case "zz":
          case "zzz":
            return "GMT" + formatTimezoneShort(timezoneOffset, ":");
          case "zzzz":
          default:
            return "GMT" + formatTimezone(timezoneOffset, ":");
        }
      },
      t: function(date, token, _localize, options2) {
        var originalDate = options2._originalDate || date;
        var timestamp = Math.floor(originalDate.getTime() / 1e3);
        return (0, _index7.default)(timestamp, token.length);
      },
      T: function(date, token, _localize, options2) {
        var originalDate = options2._originalDate || date;
        var timestamp = originalDate.getTime();
        return (0, _index7.default)(timestamp, token.length);
      }
    };
    function formatTimezoneShort(offset, delimiter) {
      var sign = offset > 0 ? "-" : "+";
      var absOffset = Math.abs(offset);
      var hours = Math.floor(absOffset / 60);
      var minutes = absOffset % 60;
      if (minutes === 0) {
        return sign + String(hours);
      }
      return sign + String(hours) + delimiter + (0, _index7.default)(minutes, 2);
    }
    function formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {
      if (offset % 60 === 0) {
        var sign = offset > 0 ? "-" : "+";
        return sign + (0, _index7.default)(Math.abs(offset) / 60, 2);
      }
      return formatTimezone(offset, dirtyDelimiter);
    }
    function formatTimezone(offset, dirtyDelimiter) {
      var delimiter = dirtyDelimiter || "";
      var sign = offset > 0 ? "-" : "+";
      var absOffset = Math.abs(offset);
      var hours = (0, _index7.default)(Math.floor(absOffset / 60), 2);
      var minutes = (0, _index7.default)(absOffset % 60, 2);
      return sign + hours + delimiter + minutes;
    }
    var _default = formatters;
    exports.default = _default;
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/_lib/format/longFormatters/index.js
var require_longFormatters = __commonJS({
  "node_modules/date-fns/_lib/format/longFormatters/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    function dateLongFormatter(pattern, formatLong) {
      switch (pattern) {
        case "P":
          return formatLong.date({
            width: "short"
          });
        case "PP":
          return formatLong.date({
            width: "medium"
          });
        case "PPP":
          return formatLong.date({
            width: "long"
          });
        case "PPPP":
        default:
          return formatLong.date({
            width: "full"
          });
      }
    }
    function timeLongFormatter(pattern, formatLong) {
      switch (pattern) {
        case "p":
          return formatLong.time({
            width: "short"
          });
        case "pp":
          return formatLong.time({
            width: "medium"
          });
        case "ppp":
          return formatLong.time({
            width: "long"
          });
        case "pppp":
        default:
          return formatLong.time({
            width: "full"
          });
      }
    }
    function dateTimeLongFormatter(pattern, formatLong) {
      var matchResult = pattern.match(/(P+)(p+)?/) || [];
      var datePattern = matchResult[1];
      var timePattern = matchResult[2];
      if (!timePattern) {
        return dateLongFormatter(pattern, formatLong);
      }
      var dateTimeFormat;
      switch (datePattern) {
        case "P":
          dateTimeFormat = formatLong.dateTime({
            width: "short"
          });
          break;
        case "PP":
          dateTimeFormat = formatLong.dateTime({
            width: "medium"
          });
          break;
        case "PPP":
          dateTimeFormat = formatLong.dateTime({
            width: "long"
          });
          break;
        case "PPPP":
        default:
          dateTimeFormat = formatLong.dateTime({
            width: "full"
          });
          break;
      }
      return dateTimeFormat.replace("{{date}}", dateLongFormatter(datePattern, formatLong)).replace("{{time}}", timeLongFormatter(timePattern, formatLong));
    }
    var longFormatters = {
      p: timeLongFormatter,
      P: dateTimeLongFormatter
    };
    var _default = longFormatters;
    exports.default = _default;
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/_lib/protectedTokens/index.js
var require_protectedTokens = __commonJS({
  "node_modules/date-fns/_lib/protectedTokens/index.js"(exports) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.isProtectedDayOfYearToken = isProtectedDayOfYearToken;
    exports.isProtectedWeekYearToken = isProtectedWeekYearToken;
    exports.throwProtectedError = throwProtectedError;
    var protectedDayOfYearTokens = ["D", "DD"];
    var protectedWeekYearTokens = ["YY", "YYYY"];
    function isProtectedDayOfYearToken(token) {
      return protectedDayOfYearTokens.indexOf(token) !== -1;
    }
    function isProtectedWeekYearToken(token) {
      return protectedWeekYearTokens.indexOf(token) !== -1;
    }
    function throwProtectedError(token, format3, input) {
      if (token === "YYYY") {
        throw new RangeError("Use `yyyy` instead of `YYYY` (in `".concat(format3, "`) for formatting years to the input `").concat(input, "`; see: https://git.io/fxCyr"));
      } else if (token === "YY") {
        throw new RangeError("Use `yy` instead of `YY` (in `".concat(format3, "`) for formatting years to the input `").concat(input, "`; see: https://git.io/fxCyr"));
      } else if (token === "D") {
        throw new RangeError("Use `d` instead of `D` (in `".concat(format3, "`) for formatting days of the month to the input `").concat(input, "`; see: https://git.io/fxCyr"));
      } else if (token === "DD") {
        throw new RangeError("Use `dd` instead of `DD` (in `".concat(format3, "`) for formatting days of the month to the input `").concat(input, "`; see: https://git.io/fxCyr"));
      }
    }
  }
});

// node_modules/date-fns/format/index.js
var require_format = __commonJS({
  "node_modules/date-fns/format/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = format3;
    var _index = _interopRequireDefault(require_isValid());
    var _index2 = _interopRequireDefault(require_en_US());
    var _index3 = _interopRequireDefault(require_subMilliseconds());
    var _index4 = _interopRequireDefault(require_toDate());
    var _index5 = _interopRequireDefault(require_formatters());
    var _index6 = _interopRequireDefault(require_longFormatters());
    var _index7 = _interopRequireDefault(require_getTimezoneOffsetInMilliseconds());
    var _index8 = require_protectedTokens();
    var _index9 = _interopRequireDefault(require_toInteger());
    var _index10 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g;
    var longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;
    var escapedStringRegExp = /^'([^]*?)'?$/;
    var doubleQuoteRegExp = /''/g;
    var unescapedLatinCharacterRegExp = /[a-zA-Z]/;
    function format3(dirtyDate, dirtyFormatStr, dirtyOptions) {
      (0, _index10.default)(2, arguments);
      var formatStr = String(dirtyFormatStr);
      var options2 = dirtyOptions || {};
      var locale = options2.locale || _index2.default;
      var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;
      var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : (0, _index9.default)(localeFirstWeekContainsDate);
      var firstWeekContainsDate = options2.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : (0, _index9.default)(options2.firstWeekContainsDate);
      if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
        throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
      }
      var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;
      var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : (0, _index9.default)(localeWeekStartsOn);
      var weekStartsOn = options2.weekStartsOn == null ? defaultWeekStartsOn : (0, _index9.default)(options2.weekStartsOn);
      if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
        throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
      }
      if (!locale.localize) {
        throw new RangeError("locale must contain localize property");
      }
      if (!locale.formatLong) {
        throw new RangeError("locale must contain formatLong property");
      }
      var originalDate = (0, _index4.default)(dirtyDate);
      if (!(0, _index.default)(originalDate)) {
        throw new RangeError("Invalid time value");
      }
      var timezoneOffset = (0, _index7.default)(originalDate);
      var utcDate = (0, _index3.default)(originalDate, timezoneOffset);
      var formatterOptions = {
        firstWeekContainsDate,
        weekStartsOn,
        locale,
        _originalDate: originalDate
      };
      var result = formatStr.match(longFormattingTokensRegExp).map(function(substring) {
        var firstCharacter = substring[0];
        if (firstCharacter === "p" || firstCharacter === "P") {
          var longFormatter = _index6.default[firstCharacter];
          return longFormatter(substring, locale.formatLong, formatterOptions);
        }
        return substring;
      }).join("").match(formattingTokensRegExp).map(function(substring) {
        if (substring === "''") {
          return "'";
        }
        var firstCharacter = substring[0];
        if (firstCharacter === "'") {
          return cleanEscapedString(substring);
        }
        var formatter = _index5.default[firstCharacter];
        if (formatter) {
          if (!options2.useAdditionalWeekYearTokens && (0, _index8.isProtectedWeekYearToken)(substring)) {
            (0, _index8.throwProtectedError)(substring, dirtyFormatStr, dirtyDate);
          }
          if (!options2.useAdditionalDayOfYearTokens && (0, _index8.isProtectedDayOfYearToken)(substring)) {
            (0, _index8.throwProtectedError)(substring, dirtyFormatStr, dirtyDate);
          }
          return formatter(utcDate, substring, locale.localize, formatterOptions);
        }
        if (firstCharacter.match(unescapedLatinCharacterRegExp)) {
          throw new RangeError("Format string contains an unescaped latin alphabet character `" + firstCharacter + "`");
        }
        return substring;
      }).join("");
      return result;
    }
    function cleanEscapedString(input) {
      return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, "'");
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/_lib/assign/index.js
var require_assign = __commonJS({
  "node_modules/date-fns/_lib/assign/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = assign;
    function assign(target, dirtyObject) {
      if (target == null) {
        throw new TypeError("assign requires that input parameter not be null or undefined");
      }
      dirtyObject = dirtyObject || {};
      for (var property in dirtyObject) {
        if (Object.prototype.hasOwnProperty.call(dirtyObject, property)) {
          target[property] = dirtyObject[property];
        }
      }
      return target;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/_lib/cloneObject/index.js
var require_cloneObject = __commonJS({
  "node_modules/date-fns/_lib/cloneObject/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = cloneObject;
    var _index = _interopRequireDefault(require_assign());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function cloneObject(dirtyObject) {
      return (0, _index.default)({}, dirtyObject);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/formatDistance/index.js
var require_formatDistance2 = __commonJS({
  "node_modules/date-fns/formatDistance/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = formatDistance;
    var _index = _interopRequireDefault(require_compareAsc());
    var _index2 = _interopRequireDefault(require_differenceInMonths());
    var _index3 = _interopRequireDefault(require_differenceInSeconds());
    var _index4 = _interopRequireDefault(require_en_US());
    var _index5 = _interopRequireDefault(require_toDate());
    var _index6 = _interopRequireDefault(require_cloneObject());
    var _index7 = _interopRequireDefault(require_getTimezoneOffsetInMilliseconds());
    var _index8 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var MINUTES_IN_DAY = 1440;
    var MINUTES_IN_ALMOST_TWO_DAYS = 2520;
    var MINUTES_IN_MONTH = 43200;
    var MINUTES_IN_TWO_MONTHS = 86400;
    function formatDistance(dirtyDate, dirtyBaseDate) {
      var options2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      (0, _index8.default)(2, arguments);
      var locale = options2.locale || _index4.default;
      if (!locale.formatDistance) {
        throw new RangeError("locale must contain formatDistance property");
      }
      var comparison = (0, _index.default)(dirtyDate, dirtyBaseDate);
      if (isNaN(comparison)) {
        throw new RangeError("Invalid time value");
      }
      var localizeOptions = (0, _index6.default)(options2);
      localizeOptions.addSuffix = Boolean(options2.addSuffix);
      localizeOptions.comparison = comparison;
      var dateLeft;
      var dateRight;
      if (comparison > 0) {
        dateLeft = (0, _index5.default)(dirtyBaseDate);
        dateRight = (0, _index5.default)(dirtyDate);
      } else {
        dateLeft = (0, _index5.default)(dirtyDate);
        dateRight = (0, _index5.default)(dirtyBaseDate);
      }
      var seconds = (0, _index3.default)(dateRight, dateLeft);
      var offsetInSeconds = ((0, _index7.default)(dateRight) - (0, _index7.default)(dateLeft)) / 1e3;
      var minutes = Math.round((seconds - offsetInSeconds) / 60);
      var months;
      if (minutes < 2) {
        if (options2.includeSeconds) {
          if (seconds < 5) {
            return locale.formatDistance("lessThanXSeconds", 5, localizeOptions);
          } else if (seconds < 10) {
            return locale.formatDistance("lessThanXSeconds", 10, localizeOptions);
          } else if (seconds < 20) {
            return locale.formatDistance("lessThanXSeconds", 20, localizeOptions);
          } else if (seconds < 40) {
            return locale.formatDistance("halfAMinute", null, localizeOptions);
          } else if (seconds < 60) {
            return locale.formatDistance("lessThanXMinutes", 1, localizeOptions);
          } else {
            return locale.formatDistance("xMinutes", 1, localizeOptions);
          }
        } else {
          if (minutes === 0) {
            return locale.formatDistance("lessThanXMinutes", 1, localizeOptions);
          } else {
            return locale.formatDistance("xMinutes", minutes, localizeOptions);
          }
        }
      } else if (minutes < 45) {
        return locale.formatDistance("xMinutes", minutes, localizeOptions);
      } else if (minutes < 90) {
        return locale.formatDistance("aboutXHours", 1, localizeOptions);
      } else if (minutes < MINUTES_IN_DAY) {
        var hours = Math.round(minutes / 60);
        return locale.formatDistance("aboutXHours", hours, localizeOptions);
      } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {
        return locale.formatDistance("xDays", 1, localizeOptions);
      } else if (minutes < MINUTES_IN_MONTH) {
        var days = Math.round(minutes / MINUTES_IN_DAY);
        return locale.formatDistance("xDays", days, localizeOptions);
      } else if (minutes < MINUTES_IN_TWO_MONTHS) {
        months = Math.round(minutes / MINUTES_IN_MONTH);
        return locale.formatDistance("aboutXMonths", months, localizeOptions);
      }
      months = (0, _index2.default)(dateRight, dateLeft);
      if (months < 12) {
        var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);
        return locale.formatDistance("xMonths", nearestMonth, localizeOptions);
      } else {
        var monthsSinceStartOfYear = months % 12;
        var years = Math.floor(months / 12);
        if (monthsSinceStartOfYear < 3) {
          return locale.formatDistance("aboutXYears", years, localizeOptions);
        } else if (monthsSinceStartOfYear < 9) {
          return locale.formatDistance("overXYears", years, localizeOptions);
        } else {
          return locale.formatDistance("almostXYears", years + 1, localizeOptions);
        }
      }
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/formatDistanceStrict/index.js
var require_formatDistanceStrict = __commonJS({
  "node_modules/date-fns/formatDistanceStrict/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = formatDistanceStrict;
    var _index = _interopRequireDefault(require_getTimezoneOffsetInMilliseconds());
    var _index2 = _interopRequireDefault(require_compareAsc());
    var _index3 = _interopRequireDefault(require_toDate());
    var _index4 = _interopRequireDefault(require_cloneObject());
    var _index5 = _interopRequireDefault(require_en_US());
    var _index6 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var MILLISECONDS_IN_MINUTE = 1e3 * 60;
    var MINUTES_IN_DAY = 60 * 24;
    var MINUTES_IN_MONTH = MINUTES_IN_DAY * 30;
    var MINUTES_IN_YEAR = MINUTES_IN_DAY * 365;
    function formatDistanceStrict(dirtyDate, dirtyBaseDate) {
      var options2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      (0, _index6.default)(2, arguments);
      var locale = options2.locale || _index5.default;
      if (!locale.formatDistance) {
        throw new RangeError("locale must contain localize.formatDistance property");
      }
      var comparison = (0, _index2.default)(dirtyDate, dirtyBaseDate);
      if (isNaN(comparison)) {
        throw new RangeError("Invalid time value");
      }
      var localizeOptions = (0, _index4.default)(options2);
      localizeOptions.addSuffix = Boolean(options2.addSuffix);
      localizeOptions.comparison = comparison;
      var dateLeft;
      var dateRight;
      if (comparison > 0) {
        dateLeft = (0, _index3.default)(dirtyBaseDate);
        dateRight = (0, _index3.default)(dirtyDate);
      } else {
        dateLeft = (0, _index3.default)(dirtyDate);
        dateRight = (0, _index3.default)(dirtyBaseDate);
      }
      var roundingMethod = options2.roundingMethod == null ? "round" : String(options2.roundingMethod);
      var roundingMethodFn;
      if (roundingMethod === "floor") {
        roundingMethodFn = Math.floor;
      } else if (roundingMethod === "ceil") {
        roundingMethodFn = Math.ceil;
      } else if (roundingMethod === "round") {
        roundingMethodFn = Math.round;
      } else {
        throw new RangeError("roundingMethod must be 'floor', 'ceil' or 'round'");
      }
      var milliseconds = dateRight.getTime() - dateLeft.getTime();
      var minutes = milliseconds / MILLISECONDS_IN_MINUTE;
      var timezoneOffset = (0, _index.default)(dateRight) - (0, _index.default)(dateLeft);
      var dstNormalizedMinutes = (milliseconds - timezoneOffset) / MILLISECONDS_IN_MINUTE;
      var unit;
      if (options2.unit == null) {
        if (minutes < 1) {
          unit = "second";
        } else if (minutes < 60) {
          unit = "minute";
        } else if (minutes < MINUTES_IN_DAY) {
          unit = "hour";
        } else if (dstNormalizedMinutes < MINUTES_IN_MONTH) {
          unit = "day";
        } else if (dstNormalizedMinutes < MINUTES_IN_YEAR) {
          unit = "month";
        } else {
          unit = "year";
        }
      } else {
        unit = String(options2.unit);
      }
      if (unit === "second") {
        var seconds = roundingMethodFn(milliseconds / 1e3);
        return locale.formatDistance("xSeconds", seconds, localizeOptions);
      } else if (unit === "minute") {
        var roundedMinutes = roundingMethodFn(minutes);
        return locale.formatDistance("xMinutes", roundedMinutes, localizeOptions);
      } else if (unit === "hour") {
        var hours = roundingMethodFn(minutes / 60);
        return locale.formatDistance("xHours", hours, localizeOptions);
      } else if (unit === "day") {
        var days = roundingMethodFn(dstNormalizedMinutes / MINUTES_IN_DAY);
        return locale.formatDistance("xDays", days, localizeOptions);
      } else if (unit === "month") {
        var months = roundingMethodFn(dstNormalizedMinutes / MINUTES_IN_MONTH);
        return months === 12 && options2.unit !== "month" ? locale.formatDistance("xYears", 1, localizeOptions) : locale.formatDistance("xMonths", months, localizeOptions);
      } else if (unit === "year") {
        var years = roundingMethodFn(dstNormalizedMinutes / MINUTES_IN_YEAR);
        return locale.formatDistance("xYears", years, localizeOptions);
      }
      throw new RangeError("unit must be 'second', 'minute', 'hour', 'day', 'month' or 'year'");
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/formatDistanceToNow/index.js
var require_formatDistanceToNow = __commonJS({
  "node_modules/date-fns/formatDistanceToNow/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = formatDistanceToNow2;
    var _index = _interopRequireDefault(require_formatDistance2());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function formatDistanceToNow2(dirtyDate, dirtyOptions) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(dirtyDate, Date.now(), dirtyOptions);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/formatDistanceToNowStrict/index.js
var require_formatDistanceToNowStrict = __commonJS({
  "node_modules/date-fns/formatDistanceToNowStrict/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = formatDistanceToNowStrict;
    var _index = _interopRequireDefault(require_formatDistanceStrict());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function formatDistanceToNowStrict(dirtyDate, dirtyOptions) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(dirtyDate, Date.now(), dirtyOptions);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/formatDuration/index.js
var require_formatDuration = __commonJS({
  "node_modules/date-fns/formatDuration/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = formatDuration;
    var _index = _interopRequireDefault(require_en_US());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var defaultFormat = ["years", "months", "weeks", "days", "hours", "minutes", "seconds"];
    function formatDuration(duration) {
      var options2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      if (arguments.length < 1) {
        throw new TypeError("1 argument required, but only ".concat(arguments.length, " present"));
      }
      var format3 = (options2 === null || options2 === void 0 ? void 0 : options2.format) || defaultFormat;
      var locale = (options2 === null || options2 === void 0 ? void 0 : options2.locale) || _index.default;
      var zero = (options2 === null || options2 === void 0 ? void 0 : options2.zero) || false;
      var delimiter = (options2 === null || options2 === void 0 ? void 0 : options2.delimiter) || " ";
      var result = format3.reduce(function(acc, unit) {
        var token = "x".concat(unit.replace(/(^.)/, function(m) {
          return m.toUpperCase();
        }));
        var addChunk = typeof duration[unit] === "number" && (zero || duration[unit]);
        return addChunk && locale.formatDistance ? acc.concat(locale.formatDistance(token, duration[unit])) : acc;
      }, []).join(delimiter);
      return result;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/formatISO/index.js
var require_formatISO = __commonJS({
  "node_modules/date-fns/formatISO/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = formatISO;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_addLeadingZeros());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function formatISO(date, options2) {
      (0, _index3.default)(1, arguments);
      var originalDate = (0, _index.default)(date);
      if (isNaN(originalDate.getTime())) {
        throw new RangeError("Invalid time value");
      }
      var format3 = !(options2 !== null && options2 !== void 0 && options2.format) ? "extended" : String(options2.format);
      var representation = !(options2 !== null && options2 !== void 0 && options2.representation) ? "complete" : String(options2.representation);
      if (format3 !== "extended" && format3 !== "basic") {
        throw new RangeError("format must be 'extended' or 'basic'");
      }
      if (representation !== "date" && representation !== "time" && representation !== "complete") {
        throw new RangeError("representation must be 'date', 'time', or 'complete'");
      }
      var result = "";
      var tzOffset = "";
      var dateDelimiter = format3 === "extended" ? "-" : "";
      var timeDelimiter = format3 === "extended" ? ":" : "";
      if (representation !== "time") {
        var day = (0, _index2.default)(originalDate.getDate(), 2);
        var month = (0, _index2.default)(originalDate.getMonth() + 1, 2);
        var year = (0, _index2.default)(originalDate.getFullYear(), 4);
        result = "".concat(year).concat(dateDelimiter).concat(month).concat(dateDelimiter).concat(day);
      }
      if (representation !== "date") {
        var offset = originalDate.getTimezoneOffset();
        if (offset !== 0) {
          var absoluteOffset = Math.abs(offset);
          var hourOffset = (0, _index2.default)(Math.floor(absoluteOffset / 60), 2);
          var minuteOffset = (0, _index2.default)(absoluteOffset % 60, 2);
          var sign = offset < 0 ? "+" : "-";
          tzOffset = "".concat(sign).concat(hourOffset, ":").concat(minuteOffset);
        } else {
          tzOffset = "Z";
        }
        var hour = (0, _index2.default)(originalDate.getHours(), 2);
        var minute = (0, _index2.default)(originalDate.getMinutes(), 2);
        var second = (0, _index2.default)(originalDate.getSeconds(), 2);
        var separator = result === "" ? "" : "T";
        var time = [hour, minute, second].join(timeDelimiter);
        result = "".concat(result).concat(separator).concat(time).concat(tzOffset);
      }
      return result;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/formatISO9075/index.js
var require_formatISO9075 = __commonJS({
  "node_modules/date-fns/formatISO9075/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = formatISO9075;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_isValid());
    var _index3 = _interopRequireDefault(require_addLeadingZeros());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function formatISO9075(dirtyDate, dirtyOptions) {
      if (arguments.length < 1) {
        throw new TypeError("1 argument required, but only ".concat(arguments.length, " present"));
      }
      var originalDate = (0, _index.default)(dirtyDate);
      if (!(0, _index2.default)(originalDate)) {
        throw new RangeError("Invalid time value");
      }
      var options2 = dirtyOptions || {};
      var format3 = options2.format == null ? "extended" : String(options2.format);
      var representation = options2.representation == null ? "complete" : String(options2.representation);
      if (format3 !== "extended" && format3 !== "basic") {
        throw new RangeError("format must be 'extended' or 'basic'");
      }
      if (representation !== "date" && representation !== "time" && representation !== "complete") {
        throw new RangeError("representation must be 'date', 'time', or 'complete'");
      }
      var result = "";
      var dateDelimiter = format3 === "extended" ? "-" : "";
      var timeDelimiter = format3 === "extended" ? ":" : "";
      if (representation !== "time") {
        var day = (0, _index3.default)(originalDate.getDate(), 2);
        var month = (0, _index3.default)(originalDate.getMonth() + 1, 2);
        var year = (0, _index3.default)(originalDate.getFullYear(), 4);
        result = "".concat(year).concat(dateDelimiter).concat(month).concat(dateDelimiter).concat(day);
      }
      if (representation !== "date") {
        var hour = (0, _index3.default)(originalDate.getHours(), 2);
        var minute = (0, _index3.default)(originalDate.getMinutes(), 2);
        var second = (0, _index3.default)(originalDate.getSeconds(), 2);
        var separator = result === "" ? "" : " ";
        result = "".concat(result).concat(separator).concat(hour).concat(timeDelimiter).concat(minute).concat(timeDelimiter).concat(second);
      }
      return result;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/formatISODuration/index.js
var require_formatISODuration = __commonJS({
  "node_modules/date-fns/formatISODuration/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = formatISODuration;
    var _index = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function formatISODuration(duration) {
      (0, _index.default)(1, arguments);
      if (typeof duration !== "object")
        throw new Error("Duration must be an object");
      var _duration$years = duration.years, years = _duration$years === void 0 ? 0 : _duration$years, _duration$months = duration.months, months = _duration$months === void 0 ? 0 : _duration$months, _duration$days = duration.days, days = _duration$days === void 0 ? 0 : _duration$days, _duration$hours = duration.hours, hours = _duration$hours === void 0 ? 0 : _duration$hours, _duration$minutes = duration.minutes, minutes = _duration$minutes === void 0 ? 0 : _duration$minutes, _duration$seconds = duration.seconds, seconds = _duration$seconds === void 0 ? 0 : _duration$seconds;
      return "P".concat(years, "Y").concat(months, "M").concat(days, "DT").concat(hours, "H").concat(minutes, "M").concat(seconds, "S");
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/formatRFC3339/index.js
var require_formatRFC3339 = __commonJS({
  "node_modules/date-fns/formatRFC3339/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = formatRFC3339;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_isValid());
    var _index3 = _interopRequireDefault(require_addLeadingZeros());
    var _index4 = _interopRequireDefault(require_toInteger());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function formatRFC3339(dirtyDate, dirtyOptions) {
      if (arguments.length < 1) {
        throw new TypeError("1 arguments required, but only ".concat(arguments.length, " present"));
      }
      var originalDate = (0, _index.default)(dirtyDate);
      if (!(0, _index2.default)(originalDate)) {
        throw new RangeError("Invalid time value");
      }
      var _ref = dirtyOptions || {}, _ref$fractionDigits = _ref.fractionDigits, fractionDigits = _ref$fractionDigits === void 0 ? 0 : _ref$fractionDigits;
      if (!(fractionDigits >= 0 && fractionDigits <= 3)) {
        throw new RangeError("fractionDigits must be between 0 and 3 inclusively");
      }
      var day = (0, _index3.default)(originalDate.getDate(), 2);
      var month = (0, _index3.default)(originalDate.getMonth() + 1, 2);
      var year = originalDate.getFullYear();
      var hour = (0, _index3.default)(originalDate.getHours(), 2);
      var minute = (0, _index3.default)(originalDate.getMinutes(), 2);
      var second = (0, _index3.default)(originalDate.getSeconds(), 2);
      var fractionalSecond = "";
      if (fractionDigits > 0) {
        var milliseconds = originalDate.getMilliseconds();
        var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, fractionDigits - 3));
        fractionalSecond = "." + (0, _index3.default)(fractionalSeconds, fractionDigits);
      }
      var offset = "";
      var tzOffset = originalDate.getTimezoneOffset();
      if (tzOffset !== 0) {
        var absoluteOffset = Math.abs(tzOffset);
        var hourOffset = (0, _index3.default)((0, _index4.default)(absoluteOffset / 60), 2);
        var minuteOffset = (0, _index3.default)(absoluteOffset % 60, 2);
        var sign = tzOffset < 0 ? "+" : "-";
        offset = "".concat(sign).concat(hourOffset, ":").concat(minuteOffset);
      } else {
        offset = "Z";
      }
      return "".concat(year, "-").concat(month, "-").concat(day, "T").concat(hour, ":").concat(minute, ":").concat(second).concat(fractionalSecond).concat(offset);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/formatRFC7231/index.js
var require_formatRFC7231 = __commonJS({
  "node_modules/date-fns/formatRFC7231/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = formatRFC7231;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_isValid());
    var _index3 = _interopRequireDefault(require_addLeadingZeros());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var days = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];
    var months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
    function formatRFC7231(dirtyDate) {
      if (arguments.length < 1) {
        throw new TypeError("1 arguments required, but only ".concat(arguments.length, " present"));
      }
      var originalDate = (0, _index.default)(dirtyDate);
      if (!(0, _index2.default)(originalDate)) {
        throw new RangeError("Invalid time value");
      }
      var dayName = days[originalDate.getUTCDay()];
      var dayOfMonth = (0, _index3.default)(originalDate.getUTCDate(), 2);
      var monthName = months[originalDate.getUTCMonth()];
      var year = originalDate.getUTCFullYear();
      var hour = (0, _index3.default)(originalDate.getUTCHours(), 2);
      var minute = (0, _index3.default)(originalDate.getUTCMinutes(), 2);
      var second = (0, _index3.default)(originalDate.getUTCSeconds(), 2);
      return "".concat(dayName, ", ").concat(dayOfMonth, " ").concat(monthName, " ").concat(year, " ").concat(hour, ":").concat(minute, ":").concat(second, " GMT");
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/formatRelative/index.js
var require_formatRelative2 = __commonJS({
  "node_modules/date-fns/formatRelative/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = formatRelative;
    var _index = _interopRequireDefault(require_differenceInCalendarDays());
    var _index2 = _interopRequireDefault(require_format());
    var _index3 = _interopRequireDefault(require_en_US());
    var _index4 = _interopRequireDefault(require_subMilliseconds());
    var _index5 = _interopRequireDefault(require_toDate());
    var _index6 = _interopRequireDefault(require_getTimezoneOffsetInMilliseconds());
    var _index7 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function formatRelative(dirtyDate, dirtyBaseDate, dirtyOptions) {
      (0, _index7.default)(2, arguments);
      var date = (0, _index5.default)(dirtyDate);
      var baseDate = (0, _index5.default)(dirtyBaseDate);
      var _ref = dirtyOptions || {}, _ref$locale = _ref.locale, locale = _ref$locale === void 0 ? _index3.default : _ref$locale, _ref$weekStartsOn = _ref.weekStartsOn, weekStartsOn = _ref$weekStartsOn === void 0 ? 0 : _ref$weekStartsOn;
      if (!locale.localize) {
        throw new RangeError("locale must contain localize property");
      }
      if (!locale.formatLong) {
        throw new RangeError("locale must contain formatLong property");
      }
      if (!locale.formatRelative) {
        throw new RangeError("locale must contain formatRelative property");
      }
      var diff = (0, _index.default)(date, baseDate);
      if (isNaN(diff)) {
        throw new RangeError("Invalid time value");
      }
      var token;
      if (diff < -6) {
        token = "other";
      } else if (diff < -1) {
        token = "lastWeek";
      } else if (diff < 0) {
        token = "yesterday";
      } else if (diff < 1) {
        token = "today";
      } else if (diff < 2) {
        token = "tomorrow";
      } else if (diff < 7) {
        token = "nextWeek";
      } else {
        token = "other";
      }
      var utcDate = (0, _index4.default)(date, (0, _index6.default)(date));
      var utcBaseDate = (0, _index4.default)(baseDate, (0, _index6.default)(baseDate));
      var formatStr = locale.formatRelative(token, utcDate, utcBaseDate, {
        locale,
        weekStartsOn
      });
      return (0, _index2.default)(date, formatStr, {
        locale,
        weekStartsOn
      });
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/fromUnixTime/index.js
var require_fromUnixTime = __commonJS({
  "node_modules/date-fns/fromUnixTime/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = fromUnixTime;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_toInteger());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function fromUnixTime(dirtyUnixTime) {
      (0, _index3.default)(1, arguments);
      var unixTime = (0, _index2.default)(dirtyUnixTime);
      return (0, _index.default)(unixTime * 1e3);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/getDate/index.js
var require_getDate = __commonJS({
  "node_modules/date-fns/getDate/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = getDate;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getDate(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var dayOfMonth = date.getDate();
      return dayOfMonth;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/getDay/index.js
var require_getDay = __commonJS({
  "node_modules/date-fns/getDay/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = getDay;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getDay(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var day = date.getDay();
      return day;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/getDayOfYear/index.js
var require_getDayOfYear = __commonJS({
  "node_modules/date-fns/getDayOfYear/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = getDayOfYear;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_startOfYear());
    var _index3 = _interopRequireDefault(require_differenceInCalendarDays());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getDayOfYear(dirtyDate) {
      (0, _index4.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var diff = (0, _index3.default)(date, (0, _index2.default)(date));
      var dayOfYear = diff + 1;
      return dayOfYear;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/getDaysInMonth/index.js
var require_getDaysInMonth = __commonJS({
  "node_modules/date-fns/getDaysInMonth/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = getDaysInMonth;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getDaysInMonth(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var year = date.getFullYear();
      var monthIndex = date.getMonth();
      var lastDayOfMonth = new Date(0);
      lastDayOfMonth.setFullYear(year, monthIndex + 1, 0);
      lastDayOfMonth.setHours(0, 0, 0, 0);
      return lastDayOfMonth.getDate();
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/isLeapYear/index.js
var require_isLeapYear = __commonJS({
  "node_modules/date-fns/isLeapYear/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = isLeapYear;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isLeapYear(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var year = date.getFullYear();
      return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/getDaysInYear/index.js
var require_getDaysInYear = __commonJS({
  "node_modules/date-fns/getDaysInYear/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = getDaysInYear;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_isLeapYear());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getDaysInYear(dirtyDate) {
      (0, _index3.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      if (String(new Date(date)) === "Invalid Date") {
        return NaN;
      }
      return (0, _index2.default)(date) ? 366 : 365;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/getDecade/index.js
var require_getDecade = __commonJS({
  "node_modules/date-fns/getDecade/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = getDecade;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getDecade(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var year = date.getFullYear();
      var decade = Math.floor(year / 10) * 10;
      return decade;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/getHours/index.js
var require_getHours = __commonJS({
  "node_modules/date-fns/getHours/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = getHours;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getHours(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var hours = date.getHours();
      return hours;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/getISODay/index.js
var require_getISODay = __commonJS({
  "node_modules/date-fns/getISODay/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = getISODay;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getISODay(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var day = date.getDay();
      if (day === 0) {
        day = 7;
      }
      return day;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/getISOWeek/index.js
var require_getISOWeek = __commonJS({
  "node_modules/date-fns/getISOWeek/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = getISOWeek;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_startOfISOWeek());
    var _index3 = _interopRequireDefault(require_startOfISOWeekYear());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var MILLISECONDS_IN_WEEK = 6048e5;
    function getISOWeek(dirtyDate) {
      (0, _index4.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var diff = (0, _index2.default)(date).getTime() - (0, _index3.default)(date).getTime();
      return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/getISOWeeksInYear/index.js
var require_getISOWeeksInYear = __commonJS({
  "node_modules/date-fns/getISOWeeksInYear/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = getISOWeeksInYear;
    var _index = _interopRequireDefault(require_startOfISOWeekYear());
    var _index2 = _interopRequireDefault(require_addWeeks());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var MILLISECONDS_IN_WEEK = 6048e5;
    function getISOWeeksInYear(dirtyDate) {
      (0, _index3.default)(1, arguments);
      var thisYear = (0, _index.default)(dirtyDate);
      var nextYear = (0, _index.default)((0, _index2.default)(thisYear, 60));
      var diff = nextYear.valueOf() - thisYear.valueOf();
      return Math.round(diff / MILLISECONDS_IN_WEEK);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/getMilliseconds/index.js
var require_getMilliseconds = __commonJS({
  "node_modules/date-fns/getMilliseconds/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = getMilliseconds;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getMilliseconds(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var milliseconds = date.getMilliseconds();
      return milliseconds;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/getMinutes/index.js
var require_getMinutes = __commonJS({
  "node_modules/date-fns/getMinutes/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = getMinutes;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getMinutes(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var minutes = date.getMinutes();
      return minutes;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/getMonth/index.js
var require_getMonth = __commonJS({
  "node_modules/date-fns/getMonth/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = getMonth;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getMonth(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var month = date.getMonth();
      return month;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/getOverlappingDaysInIntervals/index.js
var require_getOverlappingDaysInIntervals = __commonJS({
  "node_modules/date-fns/getOverlappingDaysInIntervals/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = getOverlappingDaysInIntervals;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var MILLISECONDS_IN_DAY = 24 * 60 * 60 * 1e3;
    function getOverlappingDaysInIntervals(dirtyIntervalLeft, dirtyIntervalRight) {
      (0, _index2.default)(2, arguments);
      var intervalLeft = dirtyIntervalLeft || {};
      var intervalRight = dirtyIntervalRight || {};
      var leftStartTime = (0, _index.default)(intervalLeft.start).getTime();
      var leftEndTime = (0, _index.default)(intervalLeft.end).getTime();
      var rightStartTime = (0, _index.default)(intervalRight.start).getTime();
      var rightEndTime = (0, _index.default)(intervalRight.end).getTime();
      if (!(leftStartTime <= leftEndTime && rightStartTime <= rightEndTime)) {
        throw new RangeError("Invalid interval");
      }
      var isOverlapping = leftStartTime < rightEndTime && rightStartTime < leftEndTime;
      if (!isOverlapping) {
        return 0;
      }
      var overlapStartDate = rightStartTime < leftStartTime ? leftStartTime : rightStartTime;
      var overlapEndDate = rightEndTime > leftEndTime ? leftEndTime : rightEndTime;
      var differenceInMs = overlapEndDate - overlapStartDate;
      return Math.ceil(differenceInMs / MILLISECONDS_IN_DAY);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/getSeconds/index.js
var require_getSeconds = __commonJS({
  "node_modules/date-fns/getSeconds/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = getSeconds;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getSeconds(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var seconds = date.getSeconds();
      return seconds;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/getTime/index.js
var require_getTime = __commonJS({
  "node_modules/date-fns/getTime/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = getTime;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getTime(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var timestamp = date.getTime();
      return timestamp;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/getUnixTime/index.js
var require_getUnixTime = __commonJS({
  "node_modules/date-fns/getUnixTime/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = getUnixTime;
    var _index = _interopRequireDefault(require_getTime());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getUnixTime(dirtyDate) {
      (0, _index2.default)(1, arguments);
      return Math.floor((0, _index.default)(dirtyDate) / 1e3);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/getWeekYear/index.js
var require_getWeekYear = __commonJS({
  "node_modules/date-fns/getWeekYear/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = getWeekYear;
    var _index = _interopRequireDefault(require_startOfWeek());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_toInteger());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getWeekYear(dirtyDate, options2) {
      var _options$locale, _options$locale$optio;
      (0, _index4.default)(1, arguments);
      var date = (0, _index2.default)(dirtyDate);
      var year = date.getFullYear();
      var localeFirstWeekContainsDate = options2 === null || options2 === void 0 ? void 0 : (_options$locale = options2.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate;
      var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : (0, _index3.default)(localeFirstWeekContainsDate);
      var firstWeekContainsDate = (options2 === null || options2 === void 0 ? void 0 : options2.firstWeekContainsDate) == null ? defaultFirstWeekContainsDate : (0, _index3.default)(options2.firstWeekContainsDate);
      if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
        throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
      }
      var firstWeekOfNextYear = new Date(0);
      firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);
      firstWeekOfNextYear.setHours(0, 0, 0, 0);
      var startOfNextYear = (0, _index.default)(firstWeekOfNextYear, options2);
      var firstWeekOfThisYear = new Date(0);
      firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);
      firstWeekOfThisYear.setHours(0, 0, 0, 0);
      var startOfThisYear = (0, _index.default)(firstWeekOfThisYear, options2);
      if (date.getTime() >= startOfNextYear.getTime()) {
        return year + 1;
      } else if (date.getTime() >= startOfThisYear.getTime()) {
        return year;
      } else {
        return year - 1;
      }
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/startOfWeekYear/index.js
var require_startOfWeekYear = __commonJS({
  "node_modules/date-fns/startOfWeekYear/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = startOfWeekYear;
    var _index = _interopRequireDefault(require_getWeekYear());
    var _index2 = _interopRequireDefault(require_startOfWeek());
    var _index3 = _interopRequireDefault(require_toInteger());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfWeekYear(dirtyDate, dirtyOptions) {
      (0, _index4.default)(1, arguments);
      var options2 = dirtyOptions || {};
      var locale = options2.locale;
      var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;
      var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : (0, _index3.default)(localeFirstWeekContainsDate);
      var firstWeekContainsDate = options2.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : (0, _index3.default)(options2.firstWeekContainsDate);
      var year = (0, _index.default)(dirtyDate, dirtyOptions);
      var firstWeek = new Date(0);
      firstWeek.setFullYear(year, 0, firstWeekContainsDate);
      firstWeek.setHours(0, 0, 0, 0);
      var date = (0, _index2.default)(firstWeek, dirtyOptions);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/getWeek/index.js
var require_getWeek = __commonJS({
  "node_modules/date-fns/getWeek/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = getWeek;
    var _index = _interopRequireDefault(require_startOfWeek());
    var _index2 = _interopRequireDefault(require_startOfWeekYear());
    var _index3 = _interopRequireDefault(require_toDate());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var MILLISECONDS_IN_WEEK = 6048e5;
    function getWeek(dirtyDate, options2) {
      (0, _index4.default)(1, arguments);
      var date = (0, _index3.default)(dirtyDate);
      var diff = (0, _index.default)(date, options2).getTime() - (0, _index2.default)(date, options2).getTime();
      return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/getWeekOfMonth/index.js
var require_getWeekOfMonth = __commonJS({
  "node_modules/date-fns/getWeekOfMonth/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = getWeekOfMonth;
    var _index = _interopRequireDefault(require_getDate());
    var _index2 = _interopRequireDefault(require_getDay());
    var _index3 = _interopRequireDefault(require_startOfMonth());
    var _index4 = _interopRequireDefault(require_toInteger());
    var _index5 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getWeekOfMonth(date, dirtyOptions) {
      (0, _index5.default)(1, arguments);
      var options2 = dirtyOptions || {};
      var locale = options2.locale;
      var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
      var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : (0, _index4.default)(localeWeekStartsOn);
      var weekStartsOn = options2.weekStartsOn == null ? defaultWeekStartsOn : (0, _index4.default)(options2.weekStartsOn);
      if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
        throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
      }
      var currentDayOfMonth = (0, _index.default)(date);
      if (isNaN(currentDayOfMonth)) {
        return currentDayOfMonth;
      }
      var startWeekDay = (0, _index2.default)((0, _index3.default)(date));
      var lastDayOfFirstWeek = 0;
      if (startWeekDay >= weekStartsOn) {
        lastDayOfFirstWeek = weekStartsOn + 7 - startWeekDay;
      } else {
        lastDayOfFirstWeek = weekStartsOn - startWeekDay;
      }
      var weekNumber = 1;
      if (currentDayOfMonth > lastDayOfFirstWeek) {
        var remainingDaysAfterFirstWeek = currentDayOfMonth - lastDayOfFirstWeek;
        weekNumber = weekNumber + Math.ceil(remainingDaysAfterFirstWeek / 7);
      }
      return weekNumber;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/lastDayOfMonth/index.js
var require_lastDayOfMonth = __commonJS({
  "node_modules/date-fns/lastDayOfMonth/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = lastDayOfMonth;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function lastDayOfMonth(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var month = date.getMonth();
      date.setFullYear(date.getFullYear(), month + 1, 0);
      date.setHours(0, 0, 0, 0);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/getWeeksInMonth/index.js
var require_getWeeksInMonth = __commonJS({
  "node_modules/date-fns/getWeeksInMonth/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = getWeeksInMonth;
    var _index = _interopRequireDefault(require_differenceInCalendarWeeks());
    var _index2 = _interopRequireDefault(require_lastDayOfMonth());
    var _index3 = _interopRequireDefault(require_startOfMonth());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getWeeksInMonth(date, options2) {
      (0, _index4.default)(1, arguments);
      return (0, _index.default)((0, _index2.default)(date), (0, _index3.default)(date), options2) + 1;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/getYear/index.js
var require_getYear = __commonJS({
  "node_modules/date-fns/getYear/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = getYear;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getYear(dirtyDate) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(dirtyDate).getFullYear();
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/hoursToMilliseconds/index.js
var require_hoursToMilliseconds = __commonJS({
  "node_modules/date-fns/hoursToMilliseconds/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = hoursToMilliseconds;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function hoursToMilliseconds(hours) {
      (0, _index.default)(1, arguments);
      return Math.floor(hours * _index2.millisecondsInHour);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/hoursToMinutes/index.js
var require_hoursToMinutes = __commonJS({
  "node_modules/date-fns/hoursToMinutes/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = hoursToMinutes;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function hoursToMinutes(hours) {
      (0, _index.default)(1, arguments);
      return Math.floor(hours * _index2.minutesInHour);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/hoursToSeconds/index.js
var require_hoursToSeconds = __commonJS({
  "node_modules/date-fns/hoursToSeconds/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = hoursToSeconds;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function hoursToSeconds(hours) {
      (0, _index.default)(1, arguments);
      return Math.floor(hours * _index2.secondsInHour);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/subDays/index.js
var require_subDays = __commonJS({
  "node_modules/date-fns/subDays/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = subDays;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_addDays());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function subDays(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var amount = (0, _index.default)(dirtyAmount);
      return (0, _index2.default)(dirtyDate, -amount);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/subMonths/index.js
var require_subMonths = __commonJS({
  "node_modules/date-fns/subMonths/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = subMonths;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_addMonths());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function subMonths(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var amount = (0, _index.default)(dirtyAmount);
      return (0, _index2.default)(dirtyDate, -amount);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/sub/index.js
var require_sub = __commonJS({
  "node_modules/date-fns/sub/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = sub;
    var _index = _interopRequireDefault(require_subDays());
    var _index2 = _interopRequireDefault(require_subMonths());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    var _index4 = _interopRequireDefault(require_toInteger());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function sub(date, duration) {
      (0, _index3.default)(2, arguments);
      if (!duration || typeof duration !== "object")
        return new Date(NaN);
      var years = duration.years ? (0, _index4.default)(duration.years) : 0;
      var months = duration.months ? (0, _index4.default)(duration.months) : 0;
      var weeks = duration.weeks ? (0, _index4.default)(duration.weeks) : 0;
      var days = duration.days ? (0, _index4.default)(duration.days) : 0;
      var hours = duration.hours ? (0, _index4.default)(duration.hours) : 0;
      var minutes = duration.minutes ? (0, _index4.default)(duration.minutes) : 0;
      var seconds = duration.seconds ? (0, _index4.default)(duration.seconds) : 0;
      var dateWithoutMonths = (0, _index2.default)(date, months + years * 12);
      var dateWithoutDays = (0, _index.default)(dateWithoutMonths, days + weeks * 7);
      var minutestoSub = minutes + hours * 60;
      var secondstoSub = seconds + minutestoSub * 60;
      var mstoSub = secondstoSub * 1e3;
      var finalDate = new Date(dateWithoutDays.getTime() - mstoSub);
      return finalDate;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/intervalToDuration/index.js
var require_intervalToDuration = __commonJS({
  "node_modules/date-fns/intervalToDuration/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = intervalToDuration;
    var _index = _interopRequireDefault(require_compareAsc());
    var _index2 = _interopRequireDefault(require_differenceInYears());
    var _index3 = _interopRequireDefault(require_differenceInMonths());
    var _index4 = _interopRequireDefault(require_differenceInDays());
    var _index5 = _interopRequireDefault(require_differenceInHours());
    var _index6 = _interopRequireDefault(require_differenceInMinutes());
    var _index7 = _interopRequireDefault(require_differenceInSeconds());
    var _index8 = _interopRequireDefault(require_isValid());
    var _index9 = _interopRequireDefault(require_requiredArgs());
    var _index10 = _interopRequireDefault(require_toDate());
    var _index11 = _interopRequireDefault(require_sub());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function intervalToDuration(_ref) {
      var start = _ref.start, end = _ref.end;
      (0, _index9.default)(1, arguments);
      var dateLeft = (0, _index10.default)(start);
      var dateRight = (0, _index10.default)(end);
      if (!(0, _index8.default)(dateLeft)) {
        throw new RangeError("Start Date is invalid");
      }
      if (!(0, _index8.default)(dateRight)) {
        throw new RangeError("End Date is invalid");
      }
      var duration = {
        years: 0,
        months: 0,
        days: 0,
        hours: 0,
        minutes: 0,
        seconds: 0
      };
      var sign = (0, _index.default)(dateLeft, dateRight);
      duration.years = Math.abs((0, _index2.default)(dateLeft, dateRight));
      var remainingMonths = (0, _index11.default)(dateLeft, {
        years: sign * duration.years
      });
      duration.months = Math.abs((0, _index3.default)(remainingMonths, dateRight));
      var remainingDays = (0, _index11.default)(remainingMonths, {
        months: sign * duration.months
      });
      duration.days = Math.abs((0, _index4.default)(remainingDays, dateRight));
      var remainingHours = (0, _index11.default)(remainingDays, {
        days: sign * duration.days
      });
      duration.hours = Math.abs((0, _index5.default)(remainingHours, dateRight));
      var remainingMinutes = (0, _index11.default)(remainingHours, {
        hours: sign * duration.hours
      });
      duration.minutes = Math.abs((0, _index6.default)(remainingMinutes, dateRight));
      var remainingSeconds = (0, _index11.default)(remainingMinutes, {
        minutes: sign * duration.minutes
      });
      duration.seconds = Math.abs((0, _index7.default)(remainingSeconds, dateRight));
      return duration;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/intlFormat/index.js
var require_intlFormat = __commonJS({
  "node_modules/date-fns/intlFormat/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = intlFormat;
    var _index = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function intlFormat(date, formatOrLocale, localeOptions) {
      var _localeOptions;
      (0, _index.default)(1, arguments);
      var formatOptions;
      if (isFormatOptions(formatOrLocale)) {
        formatOptions = formatOrLocale;
      } else {
        localeOptions = formatOrLocale;
      }
      return new Intl.DateTimeFormat((_localeOptions = localeOptions) === null || _localeOptions === void 0 ? void 0 : _localeOptions.locale, formatOptions).format(date);
    }
    function isFormatOptions(opts) {
      return opts !== void 0 && !("locale" in opts);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/isAfter/index.js
var require_isAfter = __commonJS({
  "node_modules/date-fns/isAfter/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = isAfter;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isAfter(dirtyDate, dirtyDateToCompare) {
      (0, _index2.default)(2, arguments);
      var date = (0, _index.default)(dirtyDate);
      var dateToCompare = (0, _index.default)(dirtyDateToCompare);
      return date.getTime() > dateToCompare.getTime();
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/isBefore/index.js
var require_isBefore = __commonJS({
  "node_modules/date-fns/isBefore/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = isBefore;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isBefore(dirtyDate, dirtyDateToCompare) {
      (0, _index2.default)(2, arguments);
      var date = (0, _index.default)(dirtyDate);
      var dateToCompare = (0, _index.default)(dirtyDateToCompare);
      return date.getTime() < dateToCompare.getTime();
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/isEqual/index.js
var require_isEqual = __commonJS({
  "node_modules/date-fns/isEqual/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = isEqual;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isEqual(dirtyLeftDate, dirtyRightDate) {
      (0, _index2.default)(2, arguments);
      var dateLeft = (0, _index.default)(dirtyLeftDate);
      var dateRight = (0, _index.default)(dirtyRightDate);
      return dateLeft.getTime() === dateRight.getTime();
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/isExists/index.js
var require_isExists = __commonJS({
  "node_modules/date-fns/isExists/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = isExists;
    function isExists(year, month, day) {
      if (arguments.length < 3) {
        throw new TypeError("3 argument required, but only " + arguments.length + " present");
      }
      var date = new Date(year, month, day);
      return date.getFullYear() === year && date.getMonth() === month && date.getDate() === day;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/isFirstDayOfMonth/index.js
var require_isFirstDayOfMonth = __commonJS({
  "node_modules/date-fns/isFirstDayOfMonth/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = isFirstDayOfMonth;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isFirstDayOfMonth(dirtyDate) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(dirtyDate).getDate() === 1;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/isFriday/index.js
var require_isFriday = __commonJS({
  "node_modules/date-fns/isFriday/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = isFriday;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isFriday(dirtyDate) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(dirtyDate).getDay() === 5;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/isFuture/index.js
var require_isFuture = __commonJS({
  "node_modules/date-fns/isFuture/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = isFuture2;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isFuture2(dirtyDate) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(dirtyDate).getTime() > Date.now();
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/_lib/setUTCDay/index.js
var require_setUTCDay = __commonJS({
  "node_modules/date-fns/_lib/setUTCDay/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = setUTCDay;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    var _index3 = _interopRequireDefault(require_toInteger());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setUTCDay(dirtyDate, dirtyDay, dirtyOptions) {
      (0, _index2.default)(2, arguments);
      var options2 = dirtyOptions || {};
      var locale = options2.locale;
      var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
      var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : (0, _index3.default)(localeWeekStartsOn);
      var weekStartsOn = options2.weekStartsOn == null ? defaultWeekStartsOn : (0, _index3.default)(options2.weekStartsOn);
      if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
        throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
      }
      var date = (0, _index.default)(dirtyDate);
      var day = (0, _index3.default)(dirtyDay);
      var currentDay = date.getUTCDay();
      var remainder = day % 7;
      var dayIndex = (remainder + 7) % 7;
      var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;
      date.setUTCDate(date.getUTCDate() + diff);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/_lib/setUTCISODay/index.js
var require_setUTCISODay = __commonJS({
  "node_modules/date-fns/_lib/setUTCISODay/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = setUTCISODay;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    var _index3 = _interopRequireDefault(require_toInteger());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setUTCISODay(dirtyDate, dirtyDay) {
      (0, _index2.default)(2, arguments);
      var day = (0, _index3.default)(dirtyDay);
      if (day % 7 === 0) {
        day = day - 7;
      }
      var weekStartsOn = 1;
      var date = (0, _index.default)(dirtyDate);
      var currentDay = date.getUTCDay();
      var remainder = day % 7;
      var dayIndex = (remainder + 7) % 7;
      var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;
      date.setUTCDate(date.getUTCDate() + diff);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/_lib/setUTCISOWeek/index.js
var require_setUTCISOWeek = __commonJS({
  "node_modules/date-fns/_lib/setUTCISOWeek/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = setUTCISOWeek;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_getUTCISOWeek());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setUTCISOWeek(dirtyDate, dirtyISOWeek) {
      (0, _index4.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate);
      var isoWeek = (0, _index.default)(dirtyISOWeek);
      var diff = (0, _index3.default)(date) - isoWeek;
      date.setUTCDate(date.getUTCDate() - diff * 7);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/_lib/setUTCWeek/index.js
var require_setUTCWeek = __commonJS({
  "node_modules/date-fns/_lib/setUTCWeek/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = setUTCWeek;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_getUTCWeek());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setUTCWeek(dirtyDate, dirtyWeek, options2) {
      (0, _index4.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate);
      var week = (0, _index.default)(dirtyWeek);
      var diff = (0, _index3.default)(date, options2) - week;
      date.setUTCDate(date.getUTCDate() - diff * 7);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/parse/_lib/parsers/index.js
var require_parsers = __commonJS({
  "node_modules/date-fns/parse/_lib/parsers/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _index = _interopRequireDefault(require_getUTCWeekYear());
    var _index2 = _interopRequireDefault(require_setUTCDay());
    var _index3 = _interopRequireDefault(require_setUTCISODay());
    var _index4 = _interopRequireDefault(require_setUTCISOWeek());
    var _index5 = _interopRequireDefault(require_setUTCWeek());
    var _index6 = _interopRequireDefault(require_startOfUTCISOWeek());
    var _index7 = _interopRequireDefault(require_startOfUTCWeek());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var MILLISECONDS_IN_HOUR = 36e5;
    var MILLISECONDS_IN_MINUTE = 6e4;
    var MILLISECONDS_IN_SECOND = 1e3;
    var numericPatterns = {
      month: /^(1[0-2]|0?\d)/,
      date: /^(3[0-1]|[0-2]?\d)/,
      dayOfYear: /^(36[0-6]|3[0-5]\d|[0-2]?\d?\d)/,
      week: /^(5[0-3]|[0-4]?\d)/,
      hour23h: /^(2[0-3]|[0-1]?\d)/,
      hour24h: /^(2[0-4]|[0-1]?\d)/,
      hour11h: /^(1[0-1]|0?\d)/,
      hour12h: /^(1[0-2]|0?\d)/,
      minute: /^[0-5]?\d/,
      second: /^[0-5]?\d/,
      singleDigit: /^\d/,
      twoDigits: /^\d{1,2}/,
      threeDigits: /^\d{1,3}/,
      fourDigits: /^\d{1,4}/,
      anyDigitsSigned: /^-?\d+/,
      singleDigitSigned: /^-?\d/,
      twoDigitsSigned: /^-?\d{1,2}/,
      threeDigitsSigned: /^-?\d{1,3}/,
      fourDigitsSigned: /^-?\d{1,4}/
    };
    var timezonePatterns = {
      basicOptionalMinutes: /^([+-])(\d{2})(\d{2})?|Z/,
      basic: /^([+-])(\d{2})(\d{2})|Z/,
      basicOptionalSeconds: /^([+-])(\d{2})(\d{2})((\d{2}))?|Z/,
      extended: /^([+-])(\d{2}):(\d{2})|Z/,
      extendedOptionalSeconds: /^([+-])(\d{2}):(\d{2})(:(\d{2}))?|Z/
    };
    function parseNumericPattern(pattern, string, valueCallback) {
      var matchResult = string.match(pattern);
      if (!matchResult) {
        return null;
      }
      var value = parseInt(matchResult[0], 10);
      return {
        value: valueCallback ? valueCallback(value) : value,
        rest: string.slice(matchResult[0].length)
      };
    }
    function parseTimezonePattern(pattern, string) {
      var matchResult = string.match(pattern);
      if (!matchResult) {
        return null;
      }
      if (matchResult[0] === "Z") {
        return {
          value: 0,
          rest: string.slice(1)
        };
      }
      var sign = matchResult[1] === "+" ? 1 : -1;
      var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;
      var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;
      var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;
      return {
        value: sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * MILLISECONDS_IN_SECOND),
        rest: string.slice(matchResult[0].length)
      };
    }
    function parseAnyDigitsSigned(string, valueCallback) {
      return parseNumericPattern(numericPatterns.anyDigitsSigned, string, valueCallback);
    }
    function parseNDigits(n, string, valueCallback) {
      switch (n) {
        case 1:
          return parseNumericPattern(numericPatterns.singleDigit, string, valueCallback);
        case 2:
          return parseNumericPattern(numericPatterns.twoDigits, string, valueCallback);
        case 3:
          return parseNumericPattern(numericPatterns.threeDigits, string, valueCallback);
        case 4:
          return parseNumericPattern(numericPatterns.fourDigits, string, valueCallback);
        default:
          return parseNumericPattern(new RegExp("^\\d{1," + n + "}"), string, valueCallback);
      }
    }
    function parseNDigitsSigned(n, string, valueCallback) {
      switch (n) {
        case 1:
          return parseNumericPattern(numericPatterns.singleDigitSigned, string, valueCallback);
        case 2:
          return parseNumericPattern(numericPatterns.twoDigitsSigned, string, valueCallback);
        case 3:
          return parseNumericPattern(numericPatterns.threeDigitsSigned, string, valueCallback);
        case 4:
          return parseNumericPattern(numericPatterns.fourDigitsSigned, string, valueCallback);
        default:
          return parseNumericPattern(new RegExp("^-?\\d{1," + n + "}"), string, valueCallback);
      }
    }
    function dayPeriodEnumToHours(enumValue) {
      switch (enumValue) {
        case "morning":
          return 4;
        case "evening":
          return 17;
        case "pm":
        case "noon":
        case "afternoon":
          return 12;
        case "am":
        case "midnight":
        case "night":
        default:
          return 0;
      }
    }
    function normalizeTwoDigitYear(twoDigitYear, currentYear) {
      var isCommonEra = currentYear > 0;
      var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;
      var result;
      if (absCurrentYear <= 50) {
        result = twoDigitYear || 100;
      } else {
        var rangeEnd = absCurrentYear + 50;
        var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;
        var isPreviousCentury = twoDigitYear >= rangeEnd % 100;
        result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);
      }
      return isCommonEra ? result : 1 - result;
    }
    var DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
    var DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
    function isLeapYearIndex(year) {
      return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;
    }
    var parsers = {
      G: {
        priority: 140,
        parse: function(string, token, match, _options) {
          switch (token) {
            case "G":
            case "GG":
            case "GGG":
              return match.era(string, {
                width: "abbreviated"
              }) || match.era(string, {
                width: "narrow"
              });
            case "GGGGG":
              return match.era(string, {
                width: "narrow"
              });
            case "GGGG":
            default:
              return match.era(string, {
                width: "wide"
              }) || match.era(string, {
                width: "abbreviated"
              }) || match.era(string, {
                width: "narrow"
              });
          }
        },
        set: function(date, flags, value, _options) {
          flags.era = value;
          date.setUTCFullYear(value, 0, 1);
          date.setUTCHours(0, 0, 0, 0);
          return date;
        },
        incompatibleTokens: ["R", "u", "t", "T"]
      },
      y: {
        priority: 130,
        parse: function(string, token, match, _options) {
          var valueCallback = function(year) {
            return {
              year,
              isTwoDigitYear: token === "yy"
            };
          };
          switch (token) {
            case "y":
              return parseNDigits(4, string, valueCallback);
            case "yo":
              return match.ordinalNumber(string, {
                unit: "year",
                valueCallback
              });
            default:
              return parseNDigits(token.length, string, valueCallback);
          }
        },
        validate: function(_date, value, _options) {
          return value.isTwoDigitYear || value.year > 0;
        },
        set: function(date, flags, value, _options) {
          var currentYear = date.getUTCFullYear();
          if (value.isTwoDigitYear) {
            var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);
            date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);
            date.setUTCHours(0, 0, 0, 0);
            return date;
          }
          var year = !("era" in flags) || flags.era === 1 ? value.year : 1 - value.year;
          date.setUTCFullYear(year, 0, 1);
          date.setUTCHours(0, 0, 0, 0);
          return date;
        },
        incompatibleTokens: ["Y", "R", "u", "w", "I", "i", "e", "c", "t", "T"]
      },
      Y: {
        priority: 130,
        parse: function(string, token, match, _options) {
          var valueCallback = function(year) {
            return {
              year,
              isTwoDigitYear: token === "YY"
            };
          };
          switch (token) {
            case "Y":
              return parseNDigits(4, string, valueCallback);
            case "Yo":
              return match.ordinalNumber(string, {
                unit: "year",
                valueCallback
              });
            default:
              return parseNDigits(token.length, string, valueCallback);
          }
        },
        validate: function(_date, value, _options) {
          return value.isTwoDigitYear || value.year > 0;
        },
        set: function(date, flags, value, options2) {
          var currentYear = (0, _index.default)(date, options2);
          if (value.isTwoDigitYear) {
            var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);
            date.setUTCFullYear(normalizedTwoDigitYear, 0, options2.firstWeekContainsDate);
            date.setUTCHours(0, 0, 0, 0);
            return (0, _index7.default)(date, options2);
          }
          var year = !("era" in flags) || flags.era === 1 ? value.year : 1 - value.year;
          date.setUTCFullYear(year, 0, options2.firstWeekContainsDate);
          date.setUTCHours(0, 0, 0, 0);
          return (0, _index7.default)(date, options2);
        },
        incompatibleTokens: ["y", "R", "u", "Q", "q", "M", "L", "I", "d", "D", "i", "t", "T"]
      },
      R: {
        priority: 130,
        parse: function(string, token, _match, _options) {
          if (token === "R") {
            return parseNDigitsSigned(4, string);
          }
          return parseNDigitsSigned(token.length, string);
        },
        set: function(_date, _flags, value, _options) {
          var firstWeekOfYear = new Date(0);
          firstWeekOfYear.setUTCFullYear(value, 0, 4);
          firstWeekOfYear.setUTCHours(0, 0, 0, 0);
          return (0, _index6.default)(firstWeekOfYear);
        },
        incompatibleTokens: ["G", "y", "Y", "u", "Q", "q", "M", "L", "w", "d", "D", "e", "c", "t", "T"]
      },
      u: {
        priority: 130,
        parse: function(string, token, _match, _options) {
          if (token === "u") {
            return parseNDigitsSigned(4, string);
          }
          return parseNDigitsSigned(token.length, string);
        },
        set: function(date, _flags, value, _options) {
          date.setUTCFullYear(value, 0, 1);
          date.setUTCHours(0, 0, 0, 0);
          return date;
        },
        incompatibleTokens: ["G", "y", "Y", "R", "w", "I", "i", "e", "c", "t", "T"]
      },
      Q: {
        priority: 120,
        parse: function(string, token, match, _options) {
          switch (token) {
            case "Q":
            case "QQ":
              return parseNDigits(token.length, string);
            case "Qo":
              return match.ordinalNumber(string, {
                unit: "quarter"
              });
            case "QQQ":
              return match.quarter(string, {
                width: "abbreviated",
                context: "formatting"
              }) || match.quarter(string, {
                width: "narrow",
                context: "formatting"
              });
            case "QQQQQ":
              return match.quarter(string, {
                width: "narrow",
                context: "formatting"
              });
            case "QQQQ":
            default:
              return match.quarter(string, {
                width: "wide",
                context: "formatting"
              }) || match.quarter(string, {
                width: "abbreviated",
                context: "formatting"
              }) || match.quarter(string, {
                width: "narrow",
                context: "formatting"
              });
          }
        },
        validate: function(_date, value, _options) {
          return value >= 1 && value <= 4;
        },
        set: function(date, _flags, value, _options) {
          date.setUTCMonth((value - 1) * 3, 1);
          date.setUTCHours(0, 0, 0, 0);
          return date;
        },
        incompatibleTokens: ["Y", "R", "q", "M", "L", "w", "I", "d", "D", "i", "e", "c", "t", "T"]
      },
      q: {
        priority: 120,
        parse: function(string, token, match, _options) {
          switch (token) {
            case "q":
            case "qq":
              return parseNDigits(token.length, string);
            case "qo":
              return match.ordinalNumber(string, {
                unit: "quarter"
              });
            case "qqq":
              return match.quarter(string, {
                width: "abbreviated",
                context: "standalone"
              }) || match.quarter(string, {
                width: "narrow",
                context: "standalone"
              });
            case "qqqqq":
              return match.quarter(string, {
                width: "narrow",
                context: "standalone"
              });
            case "qqqq":
            default:
              return match.quarter(string, {
                width: "wide",
                context: "standalone"
              }) || match.quarter(string, {
                width: "abbreviated",
                context: "standalone"
              }) || match.quarter(string, {
                width: "narrow",
                context: "standalone"
              });
          }
        },
        validate: function(_date, value, _options) {
          return value >= 1 && value <= 4;
        },
        set: function(date, _flags, value, _options) {
          date.setUTCMonth((value - 1) * 3, 1);
          date.setUTCHours(0, 0, 0, 0);
          return date;
        },
        incompatibleTokens: ["Y", "R", "Q", "M", "L", "w", "I", "d", "D", "i", "e", "c", "t", "T"]
      },
      M: {
        priority: 110,
        parse: function(string, token, match, _options) {
          var valueCallback = function(value) {
            return value - 1;
          };
          switch (token) {
            case "M":
              return parseNumericPattern(numericPatterns.month, string, valueCallback);
            case "MM":
              return parseNDigits(2, string, valueCallback);
            case "Mo":
              return match.ordinalNumber(string, {
                unit: "month",
                valueCallback
              });
            case "MMM":
              return match.month(string, {
                width: "abbreviated",
                context: "formatting"
              }) || match.month(string, {
                width: "narrow",
                context: "formatting"
              });
            case "MMMMM":
              return match.month(string, {
                width: "narrow",
                context: "formatting"
              });
            case "MMMM":
            default:
              return match.month(string, {
                width: "wide",
                context: "formatting"
              }) || match.month(string, {
                width: "abbreviated",
                context: "formatting"
              }) || match.month(string, {
                width: "narrow",
                context: "formatting"
              });
          }
        },
        validate: function(_date, value, _options) {
          return value >= 0 && value <= 11;
        },
        set: function(date, _flags, value, _options) {
          date.setUTCMonth(value, 1);
          date.setUTCHours(0, 0, 0, 0);
          return date;
        },
        incompatibleTokens: ["Y", "R", "q", "Q", "L", "w", "I", "D", "i", "e", "c", "t", "T"]
      },
      L: {
        priority: 110,
        parse: function(string, token, match, _options) {
          var valueCallback = function(value) {
            return value - 1;
          };
          switch (token) {
            case "L":
              return parseNumericPattern(numericPatterns.month, string, valueCallback);
            case "LL":
              return parseNDigits(2, string, valueCallback);
            case "Lo":
              return match.ordinalNumber(string, {
                unit: "month",
                valueCallback
              });
            case "LLL":
              return match.month(string, {
                width: "abbreviated",
                context: "standalone"
              }) || match.month(string, {
                width: "narrow",
                context: "standalone"
              });
            case "LLLLL":
              return match.month(string, {
                width: "narrow",
                context: "standalone"
              });
            case "LLLL":
            default:
              return match.month(string, {
                width: "wide",
                context: "standalone"
              }) || match.month(string, {
                width: "abbreviated",
                context: "standalone"
              }) || match.month(string, {
                width: "narrow",
                context: "standalone"
              });
          }
        },
        validate: function(_date, value, _options) {
          return value >= 0 && value <= 11;
        },
        set: function(date, _flags, value, _options) {
          date.setUTCMonth(value, 1);
          date.setUTCHours(0, 0, 0, 0);
          return date;
        },
        incompatibleTokens: ["Y", "R", "q", "Q", "M", "w", "I", "D", "i", "e", "c", "t", "T"]
      },
      w: {
        priority: 100,
        parse: function(string, token, match, _options) {
          switch (token) {
            case "w":
              return parseNumericPattern(numericPatterns.week, string);
            case "wo":
              return match.ordinalNumber(string, {
                unit: "week"
              });
            default:
              return parseNDigits(token.length, string);
          }
        },
        validate: function(_date, value, _options) {
          return value >= 1 && value <= 53;
        },
        set: function(date, _flags, value, options2) {
          return (0, _index7.default)((0, _index5.default)(date, value, options2), options2);
        },
        incompatibleTokens: ["y", "R", "u", "q", "Q", "M", "L", "I", "d", "D", "i", "t", "T"]
      },
      I: {
        priority: 100,
        parse: function(string, token, match, _options) {
          switch (token) {
            case "I":
              return parseNumericPattern(numericPatterns.week, string);
            case "Io":
              return match.ordinalNumber(string, {
                unit: "week"
              });
            default:
              return parseNDigits(token.length, string);
          }
        },
        validate: function(_date, value, _options) {
          return value >= 1 && value <= 53;
        },
        set: function(date, _flags, value, options2) {
          return (0, _index6.default)((0, _index4.default)(date, value, options2), options2);
        },
        incompatibleTokens: ["y", "Y", "u", "q", "Q", "M", "L", "w", "d", "D", "e", "c", "t", "T"]
      },
      d: {
        priority: 90,
        subPriority: 1,
        parse: function(string, token, match, _options) {
          switch (token) {
            case "d":
              return parseNumericPattern(numericPatterns.date, string);
            case "do":
              return match.ordinalNumber(string, {
                unit: "date"
              });
            default:
              return parseNDigits(token.length, string);
          }
        },
        validate: function(date, value, _options) {
          var year = date.getUTCFullYear();
          var isLeapYear = isLeapYearIndex(year);
          var month = date.getUTCMonth();
          if (isLeapYear) {
            return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];
          } else {
            return value >= 1 && value <= DAYS_IN_MONTH[month];
          }
        },
        set: function(date, _flags, value, _options) {
          date.setUTCDate(value);
          date.setUTCHours(0, 0, 0, 0);
          return date;
        },
        incompatibleTokens: ["Y", "R", "q", "Q", "w", "I", "D", "i", "e", "c", "t", "T"]
      },
      D: {
        priority: 90,
        subPriority: 1,
        parse: function(string, token, match, _options) {
          switch (token) {
            case "D":
            case "DD":
              return parseNumericPattern(numericPatterns.dayOfYear, string);
            case "Do":
              return match.ordinalNumber(string, {
                unit: "date"
              });
            default:
              return parseNDigits(token.length, string);
          }
        },
        validate: function(date, value, _options) {
          var year = date.getUTCFullYear();
          var isLeapYear = isLeapYearIndex(year);
          if (isLeapYear) {
            return value >= 1 && value <= 366;
          } else {
            return value >= 1 && value <= 365;
          }
        },
        set: function(date, _flags, value, _options) {
          date.setUTCMonth(0, value);
          date.setUTCHours(0, 0, 0, 0);
          return date;
        },
        incompatibleTokens: ["Y", "R", "q", "Q", "M", "L", "w", "I", "d", "E", "i", "e", "c", "t", "T"]
      },
      E: {
        priority: 90,
        parse: function(string, token, match, _options) {
          switch (token) {
            case "E":
            case "EE":
            case "EEE":
              return match.day(string, {
                width: "abbreviated",
                context: "formatting"
              }) || match.day(string, {
                width: "short",
                context: "formatting"
              }) || match.day(string, {
                width: "narrow",
                context: "formatting"
              });
            case "EEEEE":
              return match.day(string, {
                width: "narrow",
                context: "formatting"
              });
            case "EEEEEE":
              return match.day(string, {
                width: "short",
                context: "formatting"
              }) || match.day(string, {
                width: "narrow",
                context: "formatting"
              });
            case "EEEE":
            default:
              return match.day(string, {
                width: "wide",
                context: "formatting"
              }) || match.day(string, {
                width: "abbreviated",
                context: "formatting"
              }) || match.day(string, {
                width: "short",
                context: "formatting"
              }) || match.day(string, {
                width: "narrow",
                context: "formatting"
              });
          }
        },
        validate: function(_date, value, _options) {
          return value >= 0 && value <= 6;
        },
        set: function(date, _flags, value, options2) {
          date = (0, _index2.default)(date, value, options2);
          date.setUTCHours(0, 0, 0, 0);
          return date;
        },
        incompatibleTokens: ["D", "i", "e", "c", "t", "T"]
      },
      e: {
        priority: 90,
        parse: function(string, token, match, options2) {
          var valueCallback = function(value) {
            var wholeWeekDays = Math.floor((value - 1) / 7) * 7;
            return (value + options2.weekStartsOn + 6) % 7 + wholeWeekDays;
          };
          switch (token) {
            case "e":
            case "ee":
              return parseNDigits(token.length, string, valueCallback);
            case "eo":
              return match.ordinalNumber(string, {
                unit: "day",
                valueCallback
              });
            case "eee":
              return match.day(string, {
                width: "abbreviated",
                context: "formatting"
              }) || match.day(string, {
                width: "short",
                context: "formatting"
              }) || match.day(string, {
                width: "narrow",
                context: "formatting"
              });
            case "eeeee":
              return match.day(string, {
                width: "narrow",
                context: "formatting"
              });
            case "eeeeee":
              return match.day(string, {
                width: "short",
                context: "formatting"
              }) || match.day(string, {
                width: "narrow",
                context: "formatting"
              });
            case "eeee":
            default:
              return match.day(string, {
                width: "wide",
                context: "formatting"
              }) || match.day(string, {
                width: "abbreviated",
                context: "formatting"
              }) || match.day(string, {
                width: "short",
                context: "formatting"
              }) || match.day(string, {
                width: "narrow",
                context: "formatting"
              });
          }
        },
        validate: function(_date, value, _options) {
          return value >= 0 && value <= 6;
        },
        set: function(date, _flags, value, options2) {
          date = (0, _index2.default)(date, value, options2);
          date.setUTCHours(0, 0, 0, 0);
          return date;
        },
        incompatibleTokens: ["y", "R", "u", "q", "Q", "M", "L", "I", "d", "D", "E", "i", "c", "t", "T"]
      },
      c: {
        priority: 90,
        parse: function(string, token, match, options2) {
          var valueCallback = function(value) {
            var wholeWeekDays = Math.floor((value - 1) / 7) * 7;
            return (value + options2.weekStartsOn + 6) % 7 + wholeWeekDays;
          };
          switch (token) {
            case "c":
            case "cc":
              return parseNDigits(token.length, string, valueCallback);
            case "co":
              return match.ordinalNumber(string, {
                unit: "day",
                valueCallback
              });
            case "ccc":
              return match.day(string, {
                width: "abbreviated",
                context: "standalone"
              }) || match.day(string, {
                width: "short",
                context: "standalone"
              }) || match.day(string, {
                width: "narrow",
                context: "standalone"
              });
            case "ccccc":
              return match.day(string, {
                width: "narrow",
                context: "standalone"
              });
            case "cccccc":
              return match.day(string, {
                width: "short",
                context: "standalone"
              }) || match.day(string, {
                width: "narrow",
                context: "standalone"
              });
            case "cccc":
            default:
              return match.day(string, {
                width: "wide",
                context: "standalone"
              }) || match.day(string, {
                width: "abbreviated",
                context: "standalone"
              }) || match.day(string, {
                width: "short",
                context: "standalone"
              }) || match.day(string, {
                width: "narrow",
                context: "standalone"
              });
          }
        },
        validate: function(_date, value, _options) {
          return value >= 0 && value <= 6;
        },
        set: function(date, _flags, value, options2) {
          date = (0, _index2.default)(date, value, options2);
          date.setUTCHours(0, 0, 0, 0);
          return date;
        },
        incompatibleTokens: ["y", "R", "u", "q", "Q", "M", "L", "I", "d", "D", "E", "i", "e", "t", "T"]
      },
      i: {
        priority: 90,
        parse: function(string, token, match, _options) {
          var valueCallback = function(value) {
            if (value === 0) {
              return 7;
            }
            return value;
          };
          switch (token) {
            case "i":
            case "ii":
              return parseNDigits(token.length, string);
            case "io":
              return match.ordinalNumber(string, {
                unit: "day"
              });
            case "iii":
              return match.day(string, {
                width: "abbreviated",
                context: "formatting",
                valueCallback
              }) || match.day(string, {
                width: "short",
                context: "formatting",
                valueCallback
              }) || match.day(string, {
                width: "narrow",
                context: "formatting",
                valueCallback
              });
            case "iiiii":
              return match.day(string, {
                width: "narrow",
                context: "formatting",
                valueCallback
              });
            case "iiiiii":
              return match.day(string, {
                width: "short",
                context: "formatting",
                valueCallback
              }) || match.day(string, {
                width: "narrow",
                context: "formatting",
                valueCallback
              });
            case "iiii":
            default:
              return match.day(string, {
                width: "wide",
                context: "formatting",
                valueCallback
              }) || match.day(string, {
                width: "abbreviated",
                context: "formatting",
                valueCallback
              }) || match.day(string, {
                width: "short",
                context: "formatting",
                valueCallback
              }) || match.day(string, {
                width: "narrow",
                context: "formatting",
                valueCallback
              });
          }
        },
        validate: function(_date, value, _options) {
          return value >= 1 && value <= 7;
        },
        set: function(date, _flags, value, options2) {
          date = (0, _index3.default)(date, value, options2);
          date.setUTCHours(0, 0, 0, 0);
          return date;
        },
        incompatibleTokens: ["y", "Y", "u", "q", "Q", "M", "L", "w", "d", "D", "E", "e", "c", "t", "T"]
      },
      a: {
        priority: 80,
        parse: function(string, token, match, _options) {
          switch (token) {
            case "a":
            case "aa":
            case "aaa":
              return match.dayPeriod(string, {
                width: "abbreviated",
                context: "formatting"
              }) || match.dayPeriod(string, {
                width: "narrow",
                context: "formatting"
              });
            case "aaaaa":
              return match.dayPeriod(string, {
                width: "narrow",
                context: "formatting"
              });
            case "aaaa":
            default:
              return match.dayPeriod(string, {
                width: "wide",
                context: "formatting"
              }) || match.dayPeriod(string, {
                width: "abbreviated",
                context: "formatting"
              }) || match.dayPeriod(string, {
                width: "narrow",
                context: "formatting"
              });
          }
        },
        set: function(date, _flags, value, _options) {
          date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
          return date;
        },
        incompatibleTokens: ["b", "B", "H", "K", "k", "t", "T"]
      },
      b: {
        priority: 80,
        parse: function(string, token, match, _options) {
          switch (token) {
            case "b":
            case "bb":
            case "bbb":
              return match.dayPeriod(string, {
                width: "abbreviated",
                context: "formatting"
              }) || match.dayPeriod(string, {
                width: "narrow",
                context: "formatting"
              });
            case "bbbbb":
              return match.dayPeriod(string, {
                width: "narrow",
                context: "formatting"
              });
            case "bbbb":
            default:
              return match.dayPeriod(string, {
                width: "wide",
                context: "formatting"
              }) || match.dayPeriod(string, {
                width: "abbreviated",
                context: "formatting"
              }) || match.dayPeriod(string, {
                width: "narrow",
                context: "formatting"
              });
          }
        },
        set: function(date, _flags, value, _options) {
          date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
          return date;
        },
        incompatibleTokens: ["a", "B", "H", "K", "k", "t", "T"]
      },
      B: {
        priority: 80,
        parse: function(string, token, match, _options) {
          switch (token) {
            case "B":
            case "BB":
            case "BBB":
              return match.dayPeriod(string, {
                width: "abbreviated",
                context: "formatting"
              }) || match.dayPeriod(string, {
                width: "narrow",
                context: "formatting"
              });
            case "BBBBB":
              return match.dayPeriod(string, {
                width: "narrow",
                context: "formatting"
              });
            case "BBBB":
            default:
              return match.dayPeriod(string, {
                width: "wide",
                context: "formatting"
              }) || match.dayPeriod(string, {
                width: "abbreviated",
                context: "formatting"
              }) || match.dayPeriod(string, {
                width: "narrow",
                context: "formatting"
              });
          }
        },
        set: function(date, _flags, value, _options) {
          date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
          return date;
        },
        incompatibleTokens: ["a", "b", "t", "T"]
      },
      h: {
        priority: 70,
        parse: function(string, token, match, _options) {
          switch (token) {
            case "h":
              return parseNumericPattern(numericPatterns.hour12h, string);
            case "ho":
              return match.ordinalNumber(string, {
                unit: "hour"
              });
            default:
              return parseNDigits(token.length, string);
          }
        },
        validate: function(_date, value, _options) {
          return value >= 1 && value <= 12;
        },
        set: function(date, _flags, value, _options) {
          var isPM = date.getUTCHours() >= 12;
          if (isPM && value < 12) {
            date.setUTCHours(value + 12, 0, 0, 0);
          } else if (!isPM && value === 12) {
            date.setUTCHours(0, 0, 0, 0);
          } else {
            date.setUTCHours(value, 0, 0, 0);
          }
          return date;
        },
        incompatibleTokens: ["H", "K", "k", "t", "T"]
      },
      H: {
        priority: 70,
        parse: function(string, token, match, _options) {
          switch (token) {
            case "H":
              return parseNumericPattern(numericPatterns.hour23h, string);
            case "Ho":
              return match.ordinalNumber(string, {
                unit: "hour"
              });
            default:
              return parseNDigits(token.length, string);
          }
        },
        validate: function(_date, value, _options) {
          return value >= 0 && value <= 23;
        },
        set: function(date, _flags, value, _options) {
          date.setUTCHours(value, 0, 0, 0);
          return date;
        },
        incompatibleTokens: ["a", "b", "h", "K", "k", "t", "T"]
      },
      K: {
        priority: 70,
        parse: function(string, token, match, _options) {
          switch (token) {
            case "K":
              return parseNumericPattern(numericPatterns.hour11h, string);
            case "Ko":
              return match.ordinalNumber(string, {
                unit: "hour"
              });
            default:
              return parseNDigits(token.length, string);
          }
        },
        validate: function(_date, value, _options) {
          return value >= 0 && value <= 11;
        },
        set: function(date, _flags, value, _options) {
          var isPM = date.getUTCHours() >= 12;
          if (isPM && value < 12) {
            date.setUTCHours(value + 12, 0, 0, 0);
          } else {
            date.setUTCHours(value, 0, 0, 0);
          }
          return date;
        },
        incompatibleTokens: ["a", "b", "h", "H", "k", "t", "T"]
      },
      k: {
        priority: 70,
        parse: function(string, token, match, _options) {
          switch (token) {
            case "k":
              return parseNumericPattern(numericPatterns.hour24h, string);
            case "ko":
              return match.ordinalNumber(string, {
                unit: "hour"
              });
            default:
              return parseNDigits(token.length, string);
          }
        },
        validate: function(_date, value, _options) {
          return value >= 1 && value <= 24;
        },
        set: function(date, _flags, value, _options) {
          var hours = value <= 24 ? value % 24 : value;
          date.setUTCHours(hours, 0, 0, 0);
          return date;
        },
        incompatibleTokens: ["a", "b", "h", "H", "K", "t", "T"]
      },
      m: {
        priority: 60,
        parse: function(string, token, match, _options) {
          switch (token) {
            case "m":
              return parseNumericPattern(numericPatterns.minute, string);
            case "mo":
              return match.ordinalNumber(string, {
                unit: "minute"
              });
            default:
              return parseNDigits(token.length, string);
          }
        },
        validate: function(_date, value, _options) {
          return value >= 0 && value <= 59;
        },
        set: function(date, _flags, value, _options) {
          date.setUTCMinutes(value, 0, 0);
          return date;
        },
        incompatibleTokens: ["t", "T"]
      },
      s: {
        priority: 50,
        parse: function(string, token, match, _options) {
          switch (token) {
            case "s":
              return parseNumericPattern(numericPatterns.second, string);
            case "so":
              return match.ordinalNumber(string, {
                unit: "second"
              });
            default:
              return parseNDigits(token.length, string);
          }
        },
        validate: function(_date, value, _options) {
          return value >= 0 && value <= 59;
        },
        set: function(date, _flags, value, _options) {
          date.setUTCSeconds(value, 0);
          return date;
        },
        incompatibleTokens: ["t", "T"]
      },
      S: {
        priority: 30,
        parse: function(string, token, _match, _options) {
          var valueCallback = function(value) {
            return Math.floor(value * Math.pow(10, -token.length + 3));
          };
          return parseNDigits(token.length, string, valueCallback);
        },
        set: function(date, _flags, value, _options) {
          date.setUTCMilliseconds(value);
          return date;
        },
        incompatibleTokens: ["t", "T"]
      },
      X: {
        priority: 10,
        parse: function(string, token, _match, _options) {
          switch (token) {
            case "X":
              return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);
            case "XX":
              return parseTimezonePattern(timezonePatterns.basic, string);
            case "XXXX":
              return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);
            case "XXXXX":
              return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);
            case "XXX":
            default:
              return parseTimezonePattern(timezonePatterns.extended, string);
          }
        },
        set: function(date, flags, value, _options) {
          if (flags.timestampIsSet) {
            return date;
          }
          return new Date(date.getTime() - value);
        },
        incompatibleTokens: ["t", "T", "x"]
      },
      x: {
        priority: 10,
        parse: function(string, token, _match, _options) {
          switch (token) {
            case "x":
              return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);
            case "xx":
              return parseTimezonePattern(timezonePatterns.basic, string);
            case "xxxx":
              return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);
            case "xxxxx":
              return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);
            case "xxx":
            default:
              return parseTimezonePattern(timezonePatterns.extended, string);
          }
        },
        set: function(date, flags, value, _options) {
          if (flags.timestampIsSet) {
            return date;
          }
          return new Date(date.getTime() - value);
        },
        incompatibleTokens: ["t", "T", "X"]
      },
      t: {
        priority: 40,
        parse: function(string, _token, _match, _options) {
          return parseAnyDigitsSigned(string);
        },
        set: function(_date, _flags, value, _options) {
          return [new Date(value * 1e3), {
            timestampIsSet: true
          }];
        },
        incompatibleTokens: "*"
      },
      T: {
        priority: 20,
        parse: function(string, _token, _match, _options) {
          return parseAnyDigitsSigned(string);
        },
        set: function(_date, _flags, value, _options) {
          return [new Date(value), {
            timestampIsSet: true
          }];
        },
        incompatibleTokens: "*"
      }
    };
    var _default = parsers;
    exports.default = _default;
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/parse/index.js
var require_parse = __commonJS({
  "node_modules/date-fns/parse/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = parse;
    var _index = _interopRequireDefault(require_en_US());
    var _index2 = _interopRequireDefault(require_subMilliseconds());
    var _index3 = _interopRequireDefault(require_toDate());
    var _index4 = _interopRequireDefault(require_assign());
    var _index5 = _interopRequireDefault(require_longFormatters());
    var _index6 = _interopRequireDefault(require_getTimezoneOffsetInMilliseconds());
    var _index7 = require_protectedTokens();
    var _index8 = _interopRequireDefault(require_toInteger());
    var _index9 = _interopRequireDefault(require_parsers());
    var _index10 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var TIMEZONE_UNIT_PRIORITY = 10;
    var formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g;
    var longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;
    var escapedStringRegExp = /^'([^]*?)'?$/;
    var doubleQuoteRegExp = /''/g;
    var notWhitespaceRegExp = /\S/;
    var unescapedLatinCharacterRegExp = /[a-zA-Z]/;
    function parse(dirtyDateString, dirtyFormatString, dirtyReferenceDate, dirtyOptions) {
      (0, _index10.default)(3, arguments);
      var dateString = String(dirtyDateString);
      var formatString = String(dirtyFormatString);
      var options2 = dirtyOptions || {};
      var locale = options2.locale || _index.default;
      if (!locale.match) {
        throw new RangeError("locale must contain match property");
      }
      var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;
      var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : (0, _index8.default)(localeFirstWeekContainsDate);
      var firstWeekContainsDate = options2.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : (0, _index8.default)(options2.firstWeekContainsDate);
      if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
        throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
      }
      var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;
      var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : (0, _index8.default)(localeWeekStartsOn);
      var weekStartsOn = options2.weekStartsOn == null ? defaultWeekStartsOn : (0, _index8.default)(options2.weekStartsOn);
      if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
        throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
      }
      if (formatString === "") {
        if (dateString === "") {
          return (0, _index3.default)(dirtyReferenceDate);
        } else {
          return new Date(NaN);
        }
      }
      var subFnOptions = {
        firstWeekContainsDate,
        weekStartsOn,
        locale
      };
      var setters = [{
        priority: TIMEZONE_UNIT_PRIORITY,
        subPriority: -1,
        set: dateToSystemTimezone,
        index: 0
      }];
      var i;
      var tokens = formatString.match(longFormattingTokensRegExp).map(function(substring) {
        var firstCharacter2 = substring[0];
        if (firstCharacter2 === "p" || firstCharacter2 === "P") {
          var longFormatter = _index5.default[firstCharacter2];
          return longFormatter(substring, locale.formatLong, subFnOptions);
        }
        return substring;
      }).join("").match(formattingTokensRegExp);
      var usedTokens = [];
      for (i = 0; i < tokens.length; i++) {
        var token = tokens[i];
        if (!options2.useAdditionalWeekYearTokens && (0, _index7.isProtectedWeekYearToken)(token)) {
          (0, _index7.throwProtectedError)(token, formatString, dirtyDateString);
        }
        if (!options2.useAdditionalDayOfYearTokens && (0, _index7.isProtectedDayOfYearToken)(token)) {
          (0, _index7.throwProtectedError)(token, formatString, dirtyDateString);
        }
        var firstCharacter = token[0];
        var parser = _index9.default[firstCharacter];
        if (parser) {
          var incompatibleTokens = parser.incompatibleTokens;
          if (Array.isArray(incompatibleTokens)) {
            var incompatibleToken = void 0;
            for (var _i = 0; _i < usedTokens.length; _i++) {
              var usedToken = usedTokens[_i].token;
              if (incompatibleTokens.indexOf(usedToken) !== -1 || usedToken === firstCharacter) {
                incompatibleToken = usedTokens[_i];
                break;
              }
            }
            if (incompatibleToken) {
              throw new RangeError("The format string mustn't contain `".concat(incompatibleToken.fullToken, "` and `").concat(token, "` at the same time"));
            }
          } else if (parser.incompatibleTokens === "*" && usedTokens.length) {
            throw new RangeError("The format string mustn't contain `".concat(token, "` and any other token at the same time"));
          }
          usedTokens.push({
            token: firstCharacter,
            fullToken: token
          });
          var parseResult = parser.parse(dateString, token, locale.match, subFnOptions);
          if (!parseResult) {
            return new Date(NaN);
          }
          setters.push({
            priority: parser.priority,
            subPriority: parser.subPriority || 0,
            set: parser.set,
            validate: parser.validate,
            value: parseResult.value,
            index: setters.length
          });
          dateString = parseResult.rest;
        } else {
          if (firstCharacter.match(unescapedLatinCharacterRegExp)) {
            throw new RangeError("Format string contains an unescaped latin alphabet character `" + firstCharacter + "`");
          }
          if (token === "''") {
            token = "'";
          } else if (firstCharacter === "'") {
            token = cleanEscapedString(token);
          }
          if (dateString.indexOf(token) === 0) {
            dateString = dateString.slice(token.length);
          } else {
            return new Date(NaN);
          }
        }
      }
      if (dateString.length > 0 && notWhitespaceRegExp.test(dateString)) {
        return new Date(NaN);
      }
      var uniquePrioritySetters = setters.map(function(setter2) {
        return setter2.priority;
      }).sort(function(a, b) {
        return b - a;
      }).filter(function(priority, index2, array) {
        return array.indexOf(priority) === index2;
      }).map(function(priority) {
        return setters.filter(function(setter2) {
          return setter2.priority === priority;
        }).sort(function(a, b) {
          return b.subPriority - a.subPriority;
        });
      }).map(function(setterArray) {
        return setterArray[0];
      });
      var date = (0, _index3.default)(dirtyReferenceDate);
      if (isNaN(date)) {
        return new Date(NaN);
      }
      var utcDate = (0, _index2.default)(date, (0, _index6.default)(date));
      var flags = {};
      for (i = 0; i < uniquePrioritySetters.length; i++) {
        var setter = uniquePrioritySetters[i];
        if (setter.validate && !setter.validate(utcDate, setter.value, subFnOptions)) {
          return new Date(NaN);
        }
        var result = setter.set(utcDate, flags, setter.value, subFnOptions);
        if (result[0]) {
          utcDate = result[0];
          (0, _index4.default)(flags, result[1]);
        } else {
          utcDate = result;
        }
      }
      return utcDate;
    }
    function dateToSystemTimezone(date, flags) {
      if (flags.timestampIsSet) {
        return date;
      }
      var convertedDate = new Date(0);
      convertedDate.setFullYear(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());
      convertedDate.setHours(date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());
      return convertedDate;
    }
    function cleanEscapedString(input) {
      return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, "'");
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/isMatch/index.js
var require_isMatch = __commonJS({
  "node_modules/date-fns/isMatch/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = isMatch;
    var _index = _interopRequireDefault(require_parse());
    var _index2 = _interopRequireDefault(require_isValid());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isMatch(dateString, formatString, options2) {
      (0, _index3.default)(2, arguments);
      return (0, _index2.default)((0, _index.default)(dateString, formatString, new Date(), options2));
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/isMonday/index.js
var require_isMonday = __commonJS({
  "node_modules/date-fns/isMonday/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = isMonday;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isMonday(date) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(date).getDay() === 1;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/isPast/index.js
var require_isPast = __commonJS({
  "node_modules/date-fns/isPast/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = isPast;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isPast(dirtyDate) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(dirtyDate).getTime() < Date.now();
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/startOfHour/index.js
var require_startOfHour = __commonJS({
  "node_modules/date-fns/startOfHour/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = startOfHour;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfHour(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      date.setMinutes(0, 0, 0);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/isSameHour/index.js
var require_isSameHour = __commonJS({
  "node_modules/date-fns/isSameHour/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = isSameHour;
    var _index = _interopRequireDefault(require_startOfHour());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isSameHour(dirtyDateLeft, dirtyDateRight) {
      (0, _index2.default)(2, arguments);
      var dateLeftStartOfHour = (0, _index.default)(dirtyDateLeft);
      var dateRightStartOfHour = (0, _index.default)(dirtyDateRight);
      return dateLeftStartOfHour.getTime() === dateRightStartOfHour.getTime();
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/isSameWeek/index.js
var require_isSameWeek = __commonJS({
  "node_modules/date-fns/isSameWeek/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = isSameWeek;
    var _index = _interopRequireDefault(require_startOfWeek());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isSameWeek(dirtyDateLeft, dirtyDateRight, dirtyOptions) {
      (0, _index2.default)(2, arguments);
      var dateLeftStartOfWeek = (0, _index.default)(dirtyDateLeft, dirtyOptions);
      var dateRightStartOfWeek = (0, _index.default)(dirtyDateRight, dirtyOptions);
      return dateLeftStartOfWeek.getTime() === dateRightStartOfWeek.getTime();
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/isSameISOWeek/index.js
var require_isSameISOWeek = __commonJS({
  "node_modules/date-fns/isSameISOWeek/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = isSameISOWeek;
    var _index = _interopRequireDefault(require_isSameWeek());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isSameISOWeek(dirtyDateLeft, dirtyDateRight) {
      (0, _index2.default)(2, arguments);
      return (0, _index.default)(dirtyDateLeft, dirtyDateRight, {
        weekStartsOn: 1
      });
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/isSameISOWeekYear/index.js
var require_isSameISOWeekYear = __commonJS({
  "node_modules/date-fns/isSameISOWeekYear/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = isSameISOWeekYear;
    var _index = _interopRequireDefault(require_startOfISOWeekYear());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isSameISOWeekYear(dirtyDateLeft, dirtyDateRight) {
      (0, _index2.default)(2, arguments);
      var dateLeftStartOfYear = (0, _index.default)(dirtyDateLeft);
      var dateRightStartOfYear = (0, _index.default)(dirtyDateRight);
      return dateLeftStartOfYear.getTime() === dateRightStartOfYear.getTime();
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/isSameMinute/index.js
var require_isSameMinute = __commonJS({
  "node_modules/date-fns/isSameMinute/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = isSameMinute;
    var _index = _interopRequireDefault(require_startOfMinute());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isSameMinute(dirtyDateLeft, dirtyDateRight) {
      (0, _index2.default)(2, arguments);
      var dateLeftStartOfMinute = (0, _index.default)(dirtyDateLeft);
      var dateRightStartOfMinute = (0, _index.default)(dirtyDateRight);
      return dateLeftStartOfMinute.getTime() === dateRightStartOfMinute.getTime();
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/isSameMonth/index.js
var require_isSameMonth = __commonJS({
  "node_modules/date-fns/isSameMonth/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = isSameMonth;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isSameMonth(dirtyDateLeft, dirtyDateRight) {
      (0, _index2.default)(2, arguments);
      var dateLeft = (0, _index.default)(dirtyDateLeft);
      var dateRight = (0, _index.default)(dirtyDateRight);
      return dateLeft.getFullYear() === dateRight.getFullYear() && dateLeft.getMonth() === dateRight.getMonth();
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/isSameQuarter/index.js
var require_isSameQuarter = __commonJS({
  "node_modules/date-fns/isSameQuarter/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = isSameQuarter;
    var _index = _interopRequireDefault(require_startOfQuarter());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isSameQuarter(dirtyDateLeft, dirtyDateRight) {
      (0, _index2.default)(2, arguments);
      var dateLeftStartOfQuarter = (0, _index.default)(dirtyDateLeft);
      var dateRightStartOfQuarter = (0, _index.default)(dirtyDateRight);
      return dateLeftStartOfQuarter.getTime() === dateRightStartOfQuarter.getTime();
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/startOfSecond/index.js
var require_startOfSecond = __commonJS({
  "node_modules/date-fns/startOfSecond/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = startOfSecond;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfSecond(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      date.setMilliseconds(0);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/isSameSecond/index.js
var require_isSameSecond = __commonJS({
  "node_modules/date-fns/isSameSecond/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = isSameSecond;
    var _index = _interopRequireDefault(require_startOfSecond());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isSameSecond(dirtyDateLeft, dirtyDateRight) {
      (0, _index2.default)(2, arguments);
      var dateLeftStartOfSecond = (0, _index.default)(dirtyDateLeft);
      var dateRightStartOfSecond = (0, _index.default)(dirtyDateRight);
      return dateLeftStartOfSecond.getTime() === dateRightStartOfSecond.getTime();
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/isSameYear/index.js
var require_isSameYear = __commonJS({
  "node_modules/date-fns/isSameYear/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = isSameYear;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isSameYear(dirtyDateLeft, dirtyDateRight) {
      (0, _index2.default)(2, arguments);
      var dateLeft = (0, _index.default)(dirtyDateLeft);
      var dateRight = (0, _index.default)(dirtyDateRight);
      return dateLeft.getFullYear() === dateRight.getFullYear();
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/isThisHour/index.js
var require_isThisHour = __commonJS({
  "node_modules/date-fns/isThisHour/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = isThisHour;
    var _index = _interopRequireDefault(require_isSameHour());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isThisHour(dirtyDate) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(Date.now(), dirtyDate);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/isThisISOWeek/index.js
var require_isThisISOWeek = __commonJS({
  "node_modules/date-fns/isThisISOWeek/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = isThisISOWeek;
    var _index = _interopRequireDefault(require_isSameISOWeek());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isThisISOWeek(dirtyDate) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(dirtyDate, Date.now());
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/isThisMinute/index.js
var require_isThisMinute = __commonJS({
  "node_modules/date-fns/isThisMinute/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = isThisMinute;
    var _index = _interopRequireDefault(require_isSameMinute());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isThisMinute(dirtyDate) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(Date.now(), dirtyDate);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/isThisMonth/index.js
var require_isThisMonth = __commonJS({
  "node_modules/date-fns/isThisMonth/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = isThisMonth;
    var _index = _interopRequireDefault(require_isSameMonth());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isThisMonth(dirtyDate) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(Date.now(), dirtyDate);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/isThisQuarter/index.js
var require_isThisQuarter = __commonJS({
  "node_modules/date-fns/isThisQuarter/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = isThisQuarter;
    var _index = _interopRequireDefault(require_isSameQuarter());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isThisQuarter(dirtyDate) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(Date.now(), dirtyDate);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/isThisSecond/index.js
var require_isThisSecond = __commonJS({
  "node_modules/date-fns/isThisSecond/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = isThisSecond;
    var _index = _interopRequireDefault(require_isSameSecond());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isThisSecond(dirtyDate) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(Date.now(), dirtyDate);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/isThisWeek/index.js
var require_isThisWeek = __commonJS({
  "node_modules/date-fns/isThisWeek/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = isThisWeek;
    var _index = _interopRequireDefault(require_isSameWeek());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isThisWeek(dirtyDate, options2) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(dirtyDate, Date.now(), options2);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/isThisYear/index.js
var require_isThisYear = __commonJS({
  "node_modules/date-fns/isThisYear/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = isThisYear;
    var _index = _interopRequireDefault(require_isSameYear());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isThisYear(dirtyDate) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(dirtyDate, Date.now());
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/isThursday/index.js
var require_isThursday = __commonJS({
  "node_modules/date-fns/isThursday/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = isThursday;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isThursday(dirtyDate) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(dirtyDate).getDay() === 4;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/isToday/index.js
var require_isToday = __commonJS({
  "node_modules/date-fns/isToday/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = isToday;
    var _index = _interopRequireDefault(require_isSameDay());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isToday(dirtyDate) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(dirtyDate, Date.now());
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/isTomorrow/index.js
var require_isTomorrow = __commonJS({
  "node_modules/date-fns/isTomorrow/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = isTomorrow;
    var _index = _interopRequireDefault(require_addDays());
    var _index2 = _interopRequireDefault(require_isSameDay());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isTomorrow(dirtyDate) {
      (0, _index3.default)(1, arguments);
      return (0, _index2.default)(dirtyDate, (0, _index.default)(Date.now(), 1));
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/isTuesday/index.js
var require_isTuesday = __commonJS({
  "node_modules/date-fns/isTuesday/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = isTuesday;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isTuesday(dirtyDate) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(dirtyDate).getDay() === 2;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/isWednesday/index.js
var require_isWednesday = __commonJS({
  "node_modules/date-fns/isWednesday/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = isWednesday;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isWednesday(dirtyDate) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(dirtyDate).getDay() === 3;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/isWithinInterval/index.js
var require_isWithinInterval = __commonJS({
  "node_modules/date-fns/isWithinInterval/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = isWithinInterval;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isWithinInterval(dirtyDate, interval) {
      (0, _index2.default)(2, arguments);
      var time = (0, _index.default)(dirtyDate).getTime();
      var startTime = (0, _index.default)(interval.start).getTime();
      var endTime = (0, _index.default)(interval.end).getTime();
      if (!(startTime <= endTime)) {
        throw new RangeError("Invalid interval");
      }
      return time >= startTime && time <= endTime;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/isYesterday/index.js
var require_isYesterday = __commonJS({
  "node_modules/date-fns/isYesterday/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = isYesterday;
    var _index = _interopRequireDefault(require_isSameDay());
    var _index2 = _interopRequireDefault(require_subDays());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isYesterday(dirtyDate) {
      (0, _index3.default)(1, arguments);
      return (0, _index.default)(dirtyDate, (0, _index2.default)(Date.now(), 1));
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/lastDayOfDecade/index.js
var require_lastDayOfDecade = __commonJS({
  "node_modules/date-fns/lastDayOfDecade/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = lastDayOfDecade;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function lastDayOfDecade(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var year = date.getFullYear();
      var decade = 9 + Math.floor(year / 10) * 10;
      date.setFullYear(decade + 1, 0, 0);
      date.setHours(0, 0, 0, 0);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/lastDayOfWeek/index.js
var require_lastDayOfWeek = __commonJS({
  "node_modules/date-fns/lastDayOfWeek/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = lastDayOfWeek;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_toInteger());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function lastDayOfWeek(dirtyDate, dirtyOptions) {
      (0, _index3.default)(1, arguments);
      var options2 = dirtyOptions || {};
      var locale = options2.locale;
      var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
      var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : (0, _index2.default)(localeWeekStartsOn);
      var weekStartsOn = options2.weekStartsOn == null ? defaultWeekStartsOn : (0, _index2.default)(options2.weekStartsOn);
      if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
        throw new RangeError("weekStartsOn must be between 0 and 6");
      }
      var date = (0, _index.default)(dirtyDate);
      var day = date.getDay();
      var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);
      date.setHours(0, 0, 0, 0);
      date.setDate(date.getDate() + diff);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/lastDayOfISOWeek/index.js
var require_lastDayOfISOWeek = __commonJS({
  "node_modules/date-fns/lastDayOfISOWeek/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = lastDayOfISOWeek;
    var _index = _interopRequireDefault(require_lastDayOfWeek());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function lastDayOfISOWeek(dirtyDate) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(dirtyDate, {
        weekStartsOn: 1
      });
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/lastDayOfISOWeekYear/index.js
var require_lastDayOfISOWeekYear = __commonJS({
  "node_modules/date-fns/lastDayOfISOWeekYear/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = lastDayOfISOWeekYear;
    var _index = _interopRequireDefault(require_getISOWeekYear());
    var _index2 = _interopRequireDefault(require_startOfISOWeek());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function lastDayOfISOWeekYear(dirtyDate) {
      (0, _index3.default)(1, arguments);
      var year = (0, _index.default)(dirtyDate);
      var fourthOfJanuary = new Date(0);
      fourthOfJanuary.setFullYear(year + 1, 0, 4);
      fourthOfJanuary.setHours(0, 0, 0, 0);
      var date = (0, _index2.default)(fourthOfJanuary);
      date.setDate(date.getDate() - 1);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/lastDayOfQuarter/index.js
var require_lastDayOfQuarter = __commonJS({
  "node_modules/date-fns/lastDayOfQuarter/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = lastDayOfQuarter;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function lastDayOfQuarter(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var currentMonth = date.getMonth();
      var month = currentMonth - currentMonth % 3 + 3;
      date.setMonth(month, 0);
      date.setHours(0, 0, 0, 0);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/lastDayOfYear/index.js
var require_lastDayOfYear = __commonJS({
  "node_modules/date-fns/lastDayOfYear/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = lastDayOfYear;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function lastDayOfYear(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var year = date.getFullYear();
      date.setFullYear(year + 1, 0, 0);
      date.setHours(0, 0, 0, 0);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/lightFormat/index.js
var require_lightFormat = __commonJS({
  "node_modules/date-fns/lightFormat/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = lightFormat;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_lightFormatters());
    var _index3 = _interopRequireDefault(require_getTimezoneOffsetInMilliseconds());
    var _index4 = _interopRequireDefault(require_isValid());
    var _index5 = _interopRequireDefault(require_subMilliseconds());
    var _index6 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var formattingTokensRegExp = /(\w)\1*|''|'(''|[^'])+('|$)|./g;
    var escapedStringRegExp = /^'([^]*?)'?$/;
    var doubleQuoteRegExp = /''/g;
    var unescapedLatinCharacterRegExp = /[a-zA-Z]/;
    function lightFormat(dirtyDate, formatStr) {
      (0, _index6.default)(2, arguments);
      var originalDate = (0, _index.default)(dirtyDate);
      if (!(0, _index4.default)(originalDate)) {
        throw new RangeError("Invalid time value");
      }
      var timezoneOffset = (0, _index3.default)(originalDate);
      var utcDate = (0, _index5.default)(originalDate, timezoneOffset);
      var tokens = formatStr.match(formattingTokensRegExp);
      if (!tokens)
        return "";
      var result = tokens.map(function(substring) {
        if (substring === "''") {
          return "'";
        }
        var firstCharacter = substring[0];
        if (firstCharacter === "'") {
          return cleanEscapedString(substring);
        }
        var formatter = _index2.default[firstCharacter];
        if (formatter) {
          return formatter(utcDate, substring);
        }
        if (firstCharacter.match(unescapedLatinCharacterRegExp)) {
          throw new RangeError("Format string contains an unescaped latin alphabet character `" + firstCharacter + "`");
        }
        return substring;
      }).join("");
      return result;
    }
    function cleanEscapedString(input) {
      var matches = input.match(escapedStringRegExp);
      if (!matches) {
        return input;
      }
      return matches[1].replace(doubleQuoteRegExp, "'");
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/milliseconds/index.js
var require_milliseconds = __commonJS({
  "node_modules/date-fns/milliseconds/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = milliseconds;
    var _index = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var daysInYear = 365.2425;
    function milliseconds(_ref) {
      var years = _ref.years, months = _ref.months, weeks = _ref.weeks, days = _ref.days, hours = _ref.hours, minutes = _ref.minutes, seconds = _ref.seconds;
      (0, _index.default)(1, arguments);
      var totalDays = 0;
      if (years)
        totalDays += years * daysInYear;
      if (months)
        totalDays += months * (daysInYear / 12);
      if (weeks)
        totalDays += weeks * 7;
      if (days)
        totalDays += days;
      var totalSeconds = totalDays * 24 * 60 * 60;
      if (hours)
        totalSeconds += hours * 60 * 60;
      if (minutes)
        totalSeconds += minutes * 60;
      if (seconds)
        totalSeconds += seconds;
      return Math.round(totalSeconds * 1e3);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/millisecondsToHours/index.js
var require_millisecondsToHours = __commonJS({
  "node_modules/date-fns/millisecondsToHours/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = millisecondsToHours;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function millisecondsToHours(milliseconds) {
      (0, _index.default)(1, arguments);
      var hours = milliseconds / _index2.millisecondsInHour;
      return Math.floor(hours);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/millisecondsToMinutes/index.js
var require_millisecondsToMinutes = __commonJS({
  "node_modules/date-fns/millisecondsToMinutes/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = millisecondsToMinutes;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function millisecondsToMinutes(milliseconds) {
      (0, _index.default)(1, arguments);
      var minutes = milliseconds / _index2.millisecondsInMinute;
      return Math.floor(minutes);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/millisecondsToSeconds/index.js
var require_millisecondsToSeconds = __commonJS({
  "node_modules/date-fns/millisecondsToSeconds/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = millisecondsToSeconds;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function millisecondsToSeconds(milliseconds) {
      (0, _index.default)(1, arguments);
      var seconds = milliseconds / _index2.millisecondsInSecond;
      return Math.floor(seconds);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/minutesToHours/index.js
var require_minutesToHours = __commonJS({
  "node_modules/date-fns/minutesToHours/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = minutesToHours;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function minutesToHours(minutes) {
      (0, _index.default)(1, arguments);
      var hours = minutes / _index2.minutesInHour;
      return Math.floor(hours);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/minutesToMilliseconds/index.js
var require_minutesToMilliseconds = __commonJS({
  "node_modules/date-fns/minutesToMilliseconds/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = minutesToMilliseconds;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function minutesToMilliseconds(minutes) {
      (0, _index.default)(1, arguments);
      return Math.floor(minutes * _index2.millisecondsInMinute);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/minutesToSeconds/index.js
var require_minutesToSeconds = __commonJS({
  "node_modules/date-fns/minutesToSeconds/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = minutesToSeconds;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function minutesToSeconds(minutes) {
      (0, _index.default)(1, arguments);
      return Math.floor(minutes * _index2.secondsInMinute);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/monthsToQuarters/index.js
var require_monthsToQuarters = __commonJS({
  "node_modules/date-fns/monthsToQuarters/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = monthsToQuarters;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function monthsToQuarters(months) {
      (0, _index.default)(1, arguments);
      var quarters = months / _index2.monthsInQuarter;
      return Math.floor(quarters);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/monthsToYears/index.js
var require_monthsToYears = __commonJS({
  "node_modules/date-fns/monthsToYears/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = monthsToYears;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function monthsToYears(months) {
      (0, _index.default)(1, arguments);
      var years = months / _index2.monthsInYear;
      return Math.floor(years);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/nextDay/index.js
var require_nextDay = __commonJS({
  "node_modules/date-fns/nextDay/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = nextDay;
    var _index = _interopRequireDefault(require_addDays());
    var _index2 = _interopRequireDefault(require_getDay());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function nextDay(date, day) {
      (0, _index3.default)(2, arguments);
      var delta = day - (0, _index2.default)(date);
      if (delta <= 0)
        delta += 7;
      return (0, _index.default)(date, delta);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/nextFriday/index.js
var require_nextFriday = __commonJS({
  "node_modules/date-fns/nextFriday/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = nextFriday;
    var _index = _interopRequireDefault(require_nextDay());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function nextFriday(date) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(date, 5);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/nextMonday/index.js
var require_nextMonday = __commonJS({
  "node_modules/date-fns/nextMonday/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = nextMonday;
    var _index = _interopRequireDefault(require_nextDay());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function nextMonday(date) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(date, 1);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/nextSaturday/index.js
var require_nextSaturday = __commonJS({
  "node_modules/date-fns/nextSaturday/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = nextSaturday;
    var _index = _interopRequireDefault(require_nextDay());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function nextSaturday(date) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(date, 6);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/nextSunday/index.js
var require_nextSunday = __commonJS({
  "node_modules/date-fns/nextSunday/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = nextSunday;
    var _index = _interopRequireDefault(require_nextDay());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function nextSunday(date) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(date, 0);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/nextThursday/index.js
var require_nextThursday = __commonJS({
  "node_modules/date-fns/nextThursday/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = nextThursday;
    var _index = _interopRequireDefault(require_nextDay());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function nextThursday(date) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(date, 4);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/nextTuesday/index.js
var require_nextTuesday = __commonJS({
  "node_modules/date-fns/nextTuesday/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = nextTuesday;
    var _index = _interopRequireDefault(require_nextDay());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function nextTuesday(date) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(date, 2);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/nextWednesday/index.js
var require_nextWednesday = __commonJS({
  "node_modules/date-fns/nextWednesday/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = nextWednesday;
    var _index = _interopRequireDefault(require_nextDay());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function nextWednesday(date) {
      (0, _index2.default)(1, arguments);
      return (0, _index.default)(date, 3);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/parseISO/index.js
var require_parseISO = __commonJS({
  "node_modules/date-fns/parseISO/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = parseISO2;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var MILLISECONDS_IN_HOUR = 36e5;
    var MILLISECONDS_IN_MINUTE = 6e4;
    var DEFAULT_ADDITIONAL_DIGITS = 2;
    var patterns = {
      dateTimeDelimiter: /[T ]/,
      timeZoneDelimiter: /[Z ]/i,
      timezone: /([Z+-].*)$/
    };
    var dateRegex = /^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/;
    var timeRegex = /^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/;
    var timezoneRegex = /^([+-])(\d{2})(?::?(\d{2}))?$/;
    function parseISO2(argument, dirtyOptions) {
      (0, _index2.default)(1, arguments);
      var options2 = dirtyOptions || {};
      var additionalDigits = options2.additionalDigits == null ? DEFAULT_ADDITIONAL_DIGITS : (0, _index.default)(options2.additionalDigits);
      if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {
        throw new RangeError("additionalDigits must be 0, 1 or 2");
      }
      if (!(typeof argument === "string" || Object.prototype.toString.call(argument) === "[object String]")) {
        return new Date(NaN);
      }
      var dateStrings = splitDateString(argument);
      var date;
      if (dateStrings.date) {
        var parseYearResult = parseYear(dateStrings.date, additionalDigits);
        date = parseDate(parseYearResult.restDateString, parseYearResult.year);
      }
      if (isNaN(date) || !date) {
        return new Date(NaN);
      }
      var timestamp = date.getTime();
      var time = 0;
      var offset;
      if (dateStrings.time) {
        time = parseTime(dateStrings.time);
        if (isNaN(time) || time === null) {
          return new Date(NaN);
        }
      }
      if (dateStrings.timezone) {
        offset = parseTimezone(dateStrings.timezone);
        if (isNaN(offset)) {
          return new Date(NaN);
        }
      } else {
        var dirtyDate = new Date(timestamp + time);
        var result = new Date(0);
        result.setFullYear(dirtyDate.getUTCFullYear(), dirtyDate.getUTCMonth(), dirtyDate.getUTCDate());
        result.setHours(dirtyDate.getUTCHours(), dirtyDate.getUTCMinutes(), dirtyDate.getUTCSeconds(), dirtyDate.getUTCMilliseconds());
        return result;
      }
      return new Date(timestamp + time + offset);
    }
    function splitDateString(dateString) {
      var dateStrings = {};
      var array = dateString.split(patterns.dateTimeDelimiter);
      var timeString;
      if (array.length > 2) {
        return dateStrings;
      }
      if (/:/.test(array[0])) {
        dateStrings.date = null;
        timeString = array[0];
      } else {
        dateStrings.date = array[0];
        timeString = array[1];
        if (patterns.timeZoneDelimiter.test(dateStrings.date)) {
          dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];
          timeString = dateString.substr(dateStrings.date.length, dateString.length);
        }
      }
      if (timeString) {
        var token = patterns.timezone.exec(timeString);
        if (token) {
          dateStrings.time = timeString.replace(token[1], "");
          dateStrings.timezone = token[1];
        } else {
          dateStrings.time = timeString;
        }
      }
      return dateStrings;
    }
    function parseYear(dateString, additionalDigits) {
      var regex = new RegExp("^(?:(\\d{4}|[+-]\\d{" + (4 + additionalDigits) + "})|(\\d{2}|[+-]\\d{" + (2 + additionalDigits) + "})$)");
      var captures = dateString.match(regex);
      if (!captures)
        return {
          year: null
        };
      var year = captures[1] && parseInt(captures[1]);
      var century = captures[2] && parseInt(captures[2]);
      return {
        year: century == null ? year : century * 100,
        restDateString: dateString.slice((captures[1] || captures[2]).length)
      };
    }
    function parseDate(dateString, year) {
      if (year === null)
        return null;
      var captures = dateString.match(dateRegex);
      if (!captures)
        return null;
      var isWeekDate = !!captures[4];
      var dayOfYear = parseDateUnit(captures[1]);
      var month = parseDateUnit(captures[2]) - 1;
      var day = parseDateUnit(captures[3]);
      var week = parseDateUnit(captures[4]);
      var dayOfWeek = parseDateUnit(captures[5]) - 1;
      if (isWeekDate) {
        if (!validateWeekDate(year, week, dayOfWeek)) {
          return new Date(NaN);
        }
        return dayOfISOWeekYear(year, week, dayOfWeek);
      } else {
        var date = new Date(0);
        if (!validateDate(year, month, day) || !validateDayOfYearDate(year, dayOfYear)) {
          return new Date(NaN);
        }
        date.setUTCFullYear(year, month, Math.max(dayOfYear, day));
        return date;
      }
    }
    function parseDateUnit(value) {
      return value ? parseInt(value) : 1;
    }
    function parseTime(timeString) {
      var captures = timeString.match(timeRegex);
      if (!captures)
        return null;
      var hours = parseTimeUnit(captures[1]);
      var minutes = parseTimeUnit(captures[2]);
      var seconds = parseTimeUnit(captures[3]);
      if (!validateTime(hours, minutes, seconds)) {
        return NaN;
      }
      return hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * 1e3;
    }
    function parseTimeUnit(value) {
      return value && parseFloat(value.replace(",", ".")) || 0;
    }
    function parseTimezone(timezoneString) {
      if (timezoneString === "Z")
        return 0;
      var captures = timezoneString.match(timezoneRegex);
      if (!captures)
        return 0;
      var sign = captures[1] === "+" ? -1 : 1;
      var hours = parseInt(captures[2]);
      var minutes = captures[3] && parseInt(captures[3]) || 0;
      if (!validateTimezone(hours, minutes)) {
        return NaN;
      }
      return sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE);
    }
    function dayOfISOWeekYear(isoWeekYear, week, day) {
      var date = new Date(0);
      date.setUTCFullYear(isoWeekYear, 0, 4);
      var fourthOfJanuaryDay = date.getUTCDay() || 7;
      var diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;
      date.setUTCDate(date.getUTCDate() + diff);
      return date;
    }
    var daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
    function isLeapYearIndex(year) {
      return year % 400 === 0 || year % 4 === 0 && year % 100;
    }
    function validateDate(year, month, date) {
      return month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28));
    }
    function validateDayOfYearDate(year, dayOfYear) {
      return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);
    }
    function validateWeekDate(_year, week, day) {
      return week >= 1 && week <= 53 && day >= 0 && day <= 6;
    }
    function validateTime(hours, minutes, seconds) {
      if (hours === 24) {
        return minutes === 0 && seconds === 0;
      }
      return seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25;
    }
    function validateTimezone(_hours, minutes) {
      return minutes >= 0 && minutes <= 59;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/parseJSON/index.js
var require_parseJSON = __commonJS({
  "node_modules/date-fns/parseJSON/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = parseJSON;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function parseJSON(argument) {
      (0, _index2.default)(1, arguments);
      if (typeof argument === "string") {
        var parts = argument.match(/(\d{4})-(\d{2})-(\d{2})[T ](\d{2}):(\d{2}):(\d{2})(?:\.(\d{0,7}))?(?:Z|(.)(\d{2}):?(\d{2})?)?/);
        if (parts) {
          return new Date(Date.UTC(+parts[1], +parts[2] - 1, +parts[3], +parts[4] - (+parts[9] || 0) * (parts[8] == "-" ? -1 : 1), +parts[5] - (+parts[10] || 0) * (parts[8] == "-" ? -1 : 1), +parts[6], +((parts[7] || "0") + "00").substring(0, 3)));
        }
        return new Date(NaN);
      }
      return (0, _index.default)(argument);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/previousDay/index.js
var require_previousDay = __commonJS({
  "node_modules/date-fns/previousDay/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = previousDay;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = _interopRequireDefault(require_getDay());
    var _index3 = _interopRequireDefault(require_subDays());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function previousDay(date, day) {
      (0, _index.default)(2, arguments);
      var delta = (0, _index2.default)(date) - day;
      if (delta <= 0)
        delta += 7;
      return (0, _index3.default)(date, delta);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/previousFriday/index.js
var require_previousFriday = __commonJS({
  "node_modules/date-fns/previousFriday/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = previousFriday;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = _interopRequireDefault(require_previousDay());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function previousFriday(date) {
      (0, _index.default)(1, arguments);
      return (0, _index2.default)(date, 5);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/previousMonday/index.js
var require_previousMonday = __commonJS({
  "node_modules/date-fns/previousMonday/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = previousMonday;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = _interopRequireDefault(require_previousDay());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function previousMonday(date) {
      (0, _index.default)(1, arguments);
      return (0, _index2.default)(date, 1);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/previousSaturday/index.js
var require_previousSaturday = __commonJS({
  "node_modules/date-fns/previousSaturday/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = previousSaturday;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = _interopRequireDefault(require_previousDay());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function previousSaturday(date) {
      (0, _index.default)(1, arguments);
      return (0, _index2.default)(date, 6);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/previousSunday/index.js
var require_previousSunday = __commonJS({
  "node_modules/date-fns/previousSunday/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = previousSunday;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = _interopRequireDefault(require_previousDay());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function previousSunday(date) {
      (0, _index.default)(1, arguments);
      return (0, _index2.default)(date, 0);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/previousThursday/index.js
var require_previousThursday = __commonJS({
  "node_modules/date-fns/previousThursday/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = previousThursday;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = _interopRequireDefault(require_previousDay());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function previousThursday(date) {
      (0, _index.default)(1, arguments);
      return (0, _index2.default)(date, 4);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/previousTuesday/index.js
var require_previousTuesday = __commonJS({
  "node_modules/date-fns/previousTuesday/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = previousTuesday;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = _interopRequireDefault(require_previousDay());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function previousTuesday(date) {
      (0, _index.default)(1, arguments);
      return (0, _index2.default)(date, 2);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/previousWednesday/index.js
var require_previousWednesday = __commonJS({
  "node_modules/date-fns/previousWednesday/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = previousWednesday;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = _interopRequireDefault(require_previousDay());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function previousWednesday(date) {
      (0, _index.default)(1, arguments);
      return (0, _index2.default)(date, 3);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/quartersToMonths/index.js
var require_quartersToMonths = __commonJS({
  "node_modules/date-fns/quartersToMonths/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = quartersToMonths;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function quartersToMonths(quarters) {
      (0, _index.default)(1, arguments);
      return Math.floor(quarters * _index2.monthsInQuarter);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/quartersToYears/index.js
var require_quartersToYears = __commonJS({
  "node_modules/date-fns/quartersToYears/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = quartersToYears;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function quartersToYears(quarters) {
      (0, _index.default)(1, arguments);
      var years = quarters / _index2.quartersInYear;
      return Math.floor(years);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/roundToNearestMinutes/index.js
var require_roundToNearestMinutes = __commonJS({
  "node_modules/date-fns/roundToNearestMinutes/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = roundToNearestMinutes;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_toInteger());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function roundToNearestMinutes(dirtyDate, options2) {
      if (arguments.length < 1) {
        throw new TypeError("1 argument required, but only none provided present");
      }
      var nearestTo = options2 && "nearestTo" in options2 ? (0, _index2.default)(options2.nearestTo) : 1;
      if (nearestTo < 1 || nearestTo > 30) {
        throw new RangeError("`options.nearestTo` must be between 1 and 30");
      }
      var date = (0, _index.default)(dirtyDate);
      var seconds = date.getSeconds();
      var minutes = date.getMinutes() + seconds / 60;
      var roundedMinutes = Math.floor(minutes / nearestTo) * nearestTo;
      var remainderMinutes = minutes % nearestTo;
      var addedMinutes = Math.round(remainderMinutes / nearestTo) * nearestTo;
      return new Date(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), roundedMinutes + addedMinutes);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/secondsToHours/index.js
var require_secondsToHours = __commonJS({
  "node_modules/date-fns/secondsToHours/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = secondsToHours;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function secondsToHours(seconds) {
      (0, _index.default)(1, arguments);
      var hours = seconds / _index2.secondsInHour;
      return Math.floor(hours);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/secondsToMilliseconds/index.js
var require_secondsToMilliseconds = __commonJS({
  "node_modules/date-fns/secondsToMilliseconds/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = secondsToMilliseconds;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function secondsToMilliseconds(seconds) {
      (0, _index.default)(1, arguments);
      return seconds * _index2.millisecondsInSecond;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/secondsToMinutes/index.js
var require_secondsToMinutes = __commonJS({
  "node_modules/date-fns/secondsToMinutes/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = secondsToMinutes;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function secondsToMinutes(seconds) {
      (0, _index.default)(1, arguments);
      var minutes = seconds / _index2.secondsInMinute;
      return Math.floor(minutes);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/setMonth/index.js
var require_setMonth = __commonJS({
  "node_modules/date-fns/setMonth/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = setMonth;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_getDaysInMonth());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setMonth(dirtyDate, dirtyMonth) {
      (0, _index4.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate);
      var month = (0, _index.default)(dirtyMonth);
      var year = date.getFullYear();
      var day = date.getDate();
      var dateWithDesiredMonth = new Date(0);
      dateWithDesiredMonth.setFullYear(year, month, 15);
      dateWithDesiredMonth.setHours(0, 0, 0, 0);
      var daysInMonth = (0, _index3.default)(dateWithDesiredMonth);
      date.setMonth(month, Math.min(day, daysInMonth));
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/set/index.js
var require_set = __commonJS({
  "node_modules/date-fns/set/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = set;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_setMonth());
    var _index3 = _interopRequireDefault(require_toInteger());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function set(dirtyDate, values) {
      (0, _index4.default)(2, arguments);
      if (typeof values !== "object" || values === null) {
        throw new RangeError("values parameter must be an object");
      }
      var date = (0, _index.default)(dirtyDate);
      if (isNaN(date.getTime())) {
        return new Date(NaN);
      }
      if (values.year != null) {
        date.setFullYear(values.year);
      }
      if (values.month != null) {
        date = (0, _index2.default)(date, values.month);
      }
      if (values.date != null) {
        date.setDate((0, _index3.default)(values.date));
      }
      if (values.hours != null) {
        date.setHours((0, _index3.default)(values.hours));
      }
      if (values.minutes != null) {
        date.setMinutes((0, _index3.default)(values.minutes));
      }
      if (values.seconds != null) {
        date.setSeconds((0, _index3.default)(values.seconds));
      }
      if (values.milliseconds != null) {
        date.setMilliseconds((0, _index3.default)(values.milliseconds));
      }
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/setDate/index.js
var require_setDate = __commonJS({
  "node_modules/date-fns/setDate/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = setDate;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setDate(dirtyDate, dirtyDayOfMonth) {
      (0, _index3.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate);
      var dayOfMonth = (0, _index.default)(dirtyDayOfMonth);
      date.setDate(dayOfMonth);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/setDay/index.js
var require_setDay = __commonJS({
  "node_modules/date-fns/setDay/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = setDay;
    var _index = _interopRequireDefault(require_addDays());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_toInteger());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setDay(dirtyDate, dirtyDay, dirtyOptions) {
      (0, _index4.default)(2, arguments);
      var options2 = dirtyOptions || {};
      var locale = options2.locale;
      var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
      var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : (0, _index3.default)(localeWeekStartsOn);
      var weekStartsOn = options2.weekStartsOn == null ? defaultWeekStartsOn : (0, _index3.default)(options2.weekStartsOn);
      if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
        throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
      }
      var date = (0, _index2.default)(dirtyDate);
      var day = (0, _index3.default)(dirtyDay);
      var currentDay = date.getDay();
      var remainder = day % 7;
      var dayIndex = (remainder + 7) % 7;
      var delta = 7 - weekStartsOn;
      var diff = day < 0 || day > 6 ? day - (currentDay + delta) % 7 : (dayIndex + delta) % 7 - (currentDay + delta) % 7;
      return (0, _index.default)(date, diff);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/setDayOfYear/index.js
var require_setDayOfYear = __commonJS({
  "node_modules/date-fns/setDayOfYear/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = setDayOfYear;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setDayOfYear(dirtyDate, dirtyDayOfYear) {
      (0, _index3.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate);
      var dayOfYear = (0, _index.default)(dirtyDayOfYear);
      date.setMonth(0);
      date.setDate(dayOfYear);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/setHours/index.js
var require_setHours = __commonJS({
  "node_modules/date-fns/setHours/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = setHours;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setHours(dirtyDate, dirtyHours) {
      (0, _index3.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate);
      var hours = (0, _index.default)(dirtyHours);
      date.setHours(hours);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/setISODay/index.js
var require_setISODay = __commonJS({
  "node_modules/date-fns/setISODay/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = setISODay;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_addDays());
    var _index4 = _interopRequireDefault(require_getISODay());
    var _index5 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setISODay(dirtyDate, dirtyDay) {
      (0, _index5.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate);
      var day = (0, _index.default)(dirtyDay);
      var currentDay = (0, _index4.default)(date);
      var diff = day - currentDay;
      return (0, _index3.default)(date, diff);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/setISOWeek/index.js
var require_setISOWeek = __commonJS({
  "node_modules/date-fns/setISOWeek/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = setISOWeek;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_getISOWeek());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setISOWeek(dirtyDate, dirtyISOWeek) {
      (0, _index4.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate);
      var isoWeek = (0, _index.default)(dirtyISOWeek);
      var diff = (0, _index3.default)(date) - isoWeek;
      date.setDate(date.getDate() - diff * 7);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/setMilliseconds/index.js
var require_setMilliseconds = __commonJS({
  "node_modules/date-fns/setMilliseconds/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = setMilliseconds;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setMilliseconds(dirtyDate, dirtyMilliseconds) {
      (0, _index3.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate);
      var milliseconds = (0, _index.default)(dirtyMilliseconds);
      date.setMilliseconds(milliseconds);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/setMinutes/index.js
var require_setMinutes = __commonJS({
  "node_modules/date-fns/setMinutes/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = setMinutes;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setMinutes(dirtyDate, dirtyMinutes) {
      (0, _index3.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate);
      var minutes = (0, _index.default)(dirtyMinutes);
      date.setMinutes(minutes);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/setQuarter/index.js
var require_setQuarter = __commonJS({
  "node_modules/date-fns/setQuarter/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = setQuarter;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_setMonth());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setQuarter(dirtyDate, dirtyQuarter) {
      (0, _index4.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate);
      var quarter = (0, _index.default)(dirtyQuarter);
      var oldQuarter = Math.floor(date.getMonth() / 3) + 1;
      var diff = quarter - oldQuarter;
      return (0, _index3.default)(date, date.getMonth() + diff * 3);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/setSeconds/index.js
var require_setSeconds = __commonJS({
  "node_modules/date-fns/setSeconds/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = setSeconds;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setSeconds(dirtyDate, dirtySeconds) {
      (0, _index3.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate);
      var seconds = (0, _index.default)(dirtySeconds);
      date.setSeconds(seconds);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/setWeek/index.js
var require_setWeek = __commonJS({
  "node_modules/date-fns/setWeek/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = setWeek;
    var _index = _interopRequireDefault(require_getWeek());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_toInteger());
    var _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setWeek(dirtyDate, dirtyWeek, options2) {
      (0, _index4.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate);
      var week = (0, _index3.default)(dirtyWeek);
      var diff = (0, _index.default)(date, options2) - week;
      date.setDate(date.getDate() - diff * 7);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/setWeekYear/index.js
var require_setWeekYear = __commonJS({
  "node_modules/date-fns/setWeekYear/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = setWeekYear;
    var _index = _interopRequireDefault(require_differenceInCalendarDays());
    var _index2 = _interopRequireDefault(require_startOfWeekYear());
    var _index3 = _interopRequireDefault(require_toDate());
    var _index4 = _interopRequireDefault(require_toInteger());
    var _index5 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setWeekYear(dirtyDate, dirtyWeekYear) {
      var options2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      (0, _index5.default)(2, arguments);
      var locale = options2.locale;
      var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;
      var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : (0, _index4.default)(localeFirstWeekContainsDate);
      var firstWeekContainsDate = options2.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : (0, _index4.default)(options2.firstWeekContainsDate);
      var date = (0, _index3.default)(dirtyDate);
      var weekYear = (0, _index4.default)(dirtyWeekYear);
      var diff = (0, _index.default)(date, (0, _index2.default)(date, options2));
      var firstWeek = new Date(0);
      firstWeek.setFullYear(weekYear, 0, firstWeekContainsDate);
      firstWeek.setHours(0, 0, 0, 0);
      date = (0, _index2.default)(firstWeek, options2);
      date.setDate(date.getDate() + diff);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/setYear/index.js
var require_setYear = __commonJS({
  "node_modules/date-fns/setYear/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = setYear;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_toDate());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setYear(dirtyDate, dirtyYear) {
      (0, _index3.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate);
      var year = (0, _index.default)(dirtyYear);
      if (isNaN(date.getTime())) {
        return new Date(NaN);
      }
      date.setFullYear(year);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/startOfDecade/index.js
var require_startOfDecade = __commonJS({
  "node_modules/date-fns/startOfDecade/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = startOfDecade;
    var _index = _interopRequireDefault(require_toDate());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfDecade(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      var year = date.getFullYear();
      var decade = Math.floor(year / 10) * 10;
      date.setFullYear(decade, 0, 1);
      date.setHours(0, 0, 0, 0);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/startOfToday/index.js
var require_startOfToday = __commonJS({
  "node_modules/date-fns/startOfToday/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = startOfToday;
    var _index = _interopRequireDefault(require_startOfDay());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfToday() {
      return (0, _index.default)(Date.now());
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/startOfTomorrow/index.js
var require_startOfTomorrow = __commonJS({
  "node_modules/date-fns/startOfTomorrow/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = startOfTomorrow;
    function startOfTomorrow() {
      var now = new Date();
      var year = now.getFullYear();
      var month = now.getMonth();
      var day = now.getDate();
      var date = new Date(0);
      date.setFullYear(year, month, day + 1);
      date.setHours(0, 0, 0, 0);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/startOfYesterday/index.js
var require_startOfYesterday = __commonJS({
  "node_modules/date-fns/startOfYesterday/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = startOfYesterday;
    function startOfYesterday() {
      var now = new Date();
      var year = now.getFullYear();
      var month = now.getMonth();
      var day = now.getDate();
      var date = new Date(0);
      date.setFullYear(year, month, day - 1);
      date.setHours(0, 0, 0, 0);
      return date;
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/subBusinessDays/index.js
var require_subBusinessDays = __commonJS({
  "node_modules/date-fns/subBusinessDays/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = subBusinessDays;
    var _index = _interopRequireDefault(require_addBusinessDays());
    var _index2 = _interopRequireDefault(require_requiredArgs());
    var _index3 = _interopRequireDefault(require_toInteger());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function subBusinessDays(dirtyDate, dirtyAmount) {
      (0, _index2.default)(2, arguments);
      var amount = (0, _index3.default)(dirtyAmount);
      return (0, _index.default)(dirtyDate, -amount);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/subHours/index.js
var require_subHours = __commonJS({
  "node_modules/date-fns/subHours/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = subHours;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_addHours());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function subHours(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var amount = (0, _index.default)(dirtyAmount);
      return (0, _index2.default)(dirtyDate, -amount);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/subMinutes/index.js
var require_subMinutes = __commonJS({
  "node_modules/date-fns/subMinutes/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = subMinutes;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_addMinutes());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function subMinutes(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var amount = (0, _index.default)(dirtyAmount);
      return (0, _index2.default)(dirtyDate, -amount);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/subQuarters/index.js
var require_subQuarters = __commonJS({
  "node_modules/date-fns/subQuarters/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = subQuarters;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_addQuarters());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function subQuarters(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var amount = (0, _index.default)(dirtyAmount);
      return (0, _index2.default)(dirtyDate, -amount);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/subSeconds/index.js
var require_subSeconds = __commonJS({
  "node_modules/date-fns/subSeconds/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = subSeconds;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_addSeconds());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function subSeconds(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var amount = (0, _index.default)(dirtyAmount);
      return (0, _index2.default)(dirtyDate, -amount);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/subWeeks/index.js
var require_subWeeks = __commonJS({
  "node_modules/date-fns/subWeeks/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = subWeeks;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_addWeeks());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function subWeeks(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var amount = (0, _index.default)(dirtyAmount);
      return (0, _index2.default)(dirtyDate, -amount);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/subYears/index.js
var require_subYears = __commonJS({
  "node_modules/date-fns/subYears/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = subYears;
    var _index = _interopRequireDefault(require_toInteger());
    var _index2 = _interopRequireDefault(require_addYears());
    var _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function subYears(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var amount = (0, _index.default)(dirtyAmount);
      return (0, _index2.default)(dirtyDate, -amount);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/weeksToDays/index.js
var require_weeksToDays = __commonJS({
  "node_modules/date-fns/weeksToDays/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = weeksToDays;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function weeksToDays(weeks) {
      (0, _index.default)(1, arguments);
      return Math.floor(weeks * _index2.daysInWeek);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/yearsToMonths/index.js
var require_yearsToMonths = __commonJS({
  "node_modules/date-fns/yearsToMonths/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = yearsToMonths;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function yearsToMonths(years) {
      (0, _index.default)(1, arguments);
      return Math.floor(years * _index2.monthsInYear);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/yearsToQuarters/index.js
var require_yearsToQuarters = __commonJS({
  "node_modules/date-fns/yearsToQuarters/index.js"(exports, module2) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = yearsToQuarters;
    var _index = _interopRequireDefault(require_requiredArgs());
    var _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function yearsToQuarters(years) {
      (0, _index.default)(1, arguments);
      return Math.floor(years * _index2.quartersInYear);
    }
    module2.exports = exports.default;
  }
});

// node_modules/date-fns/index.js
var require_date_fns = __commonJS({
  "node_modules/date-fns/index.js"(exports) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _exportNames = {
      add: true,
      addBusinessDays: true,
      addDays: true,
      addHours: true,
      addISOWeekYears: true,
      addMilliseconds: true,
      addMinutes: true,
      addMonths: true,
      addQuarters: true,
      addSeconds: true,
      addWeeks: true,
      addYears: true,
      areIntervalsOverlapping: true,
      clamp: true,
      closestIndexTo: true,
      closestTo: true,
      compareAsc: true,
      compareDesc: true,
      daysToWeeks: true,
      differenceInBusinessDays: true,
      differenceInCalendarDays: true,
      differenceInCalendarISOWeekYears: true,
      differenceInCalendarISOWeeks: true,
      differenceInCalendarMonths: true,
      differenceInCalendarQuarters: true,
      differenceInCalendarWeeks: true,
      differenceInCalendarYears: true,
      differenceInDays: true,
      differenceInHours: true,
      differenceInISOWeekYears: true,
      differenceInMilliseconds: true,
      differenceInMinutes: true,
      differenceInMonths: true,
      differenceInQuarters: true,
      differenceInSeconds: true,
      differenceInWeeks: true,
      differenceInYears: true,
      eachDayOfInterval: true,
      eachHourOfInterval: true,
      eachMinuteOfInterval: true,
      eachMonthOfInterval: true,
      eachQuarterOfInterval: true,
      eachWeekOfInterval: true,
      eachWeekendOfInterval: true,
      eachWeekendOfMonth: true,
      eachWeekendOfYear: true,
      eachYearOfInterval: true,
      endOfDay: true,
      endOfDecade: true,
      endOfHour: true,
      endOfISOWeek: true,
      endOfISOWeekYear: true,
      endOfMinute: true,
      endOfMonth: true,
      endOfQuarter: true,
      endOfSecond: true,
      endOfToday: true,
      endOfTomorrow: true,
      endOfWeek: true,
      endOfYear: true,
      endOfYesterday: true,
      format: true,
      formatDistance: true,
      formatDistanceStrict: true,
      formatDistanceToNow: true,
      formatDistanceToNowStrict: true,
      formatDuration: true,
      formatISO: true,
      formatISO9075: true,
      formatISODuration: true,
      formatRFC3339: true,
      formatRFC7231: true,
      formatRelative: true,
      fromUnixTime: true,
      getDate: true,
      getDay: true,
      getDayOfYear: true,
      getDaysInMonth: true,
      getDaysInYear: true,
      getDecade: true,
      getHours: true,
      getISODay: true,
      getISOWeek: true,
      getISOWeekYear: true,
      getISOWeeksInYear: true,
      getMilliseconds: true,
      getMinutes: true,
      getMonth: true,
      getOverlappingDaysInIntervals: true,
      getQuarter: true,
      getSeconds: true,
      getTime: true,
      getUnixTime: true,
      getWeek: true,
      getWeekOfMonth: true,
      getWeekYear: true,
      getWeeksInMonth: true,
      getYear: true,
      hoursToMilliseconds: true,
      hoursToMinutes: true,
      hoursToSeconds: true,
      intervalToDuration: true,
      intlFormat: true,
      isAfter: true,
      isBefore: true,
      isDate: true,
      isEqual: true,
      isExists: true,
      isFirstDayOfMonth: true,
      isFriday: true,
      isFuture: true,
      isLastDayOfMonth: true,
      isLeapYear: true,
      isMatch: true,
      isMonday: true,
      isPast: true,
      isSameDay: true,
      isSameHour: true,
      isSameISOWeek: true,
      isSameISOWeekYear: true,
      isSameMinute: true,
      isSameMonth: true,
      isSameQuarter: true,
      isSameSecond: true,
      isSameWeek: true,
      isSameYear: true,
      isSaturday: true,
      isSunday: true,
      isThisHour: true,
      isThisISOWeek: true,
      isThisMinute: true,
      isThisMonth: true,
      isThisQuarter: true,
      isThisSecond: true,
      isThisWeek: true,
      isThisYear: true,
      isThursday: true,
      isToday: true,
      isTomorrow: true,
      isTuesday: true,
      isValid: true,
      isWednesday: true,
      isWeekend: true,
      isWithinInterval: true,
      isYesterday: true,
      lastDayOfDecade: true,
      lastDayOfISOWeek: true,
      lastDayOfISOWeekYear: true,
      lastDayOfMonth: true,
      lastDayOfQuarter: true,
      lastDayOfWeek: true,
      lastDayOfYear: true,
      lightFormat: true,
      max: true,
      milliseconds: true,
      millisecondsToHours: true,
      millisecondsToMinutes: true,
      millisecondsToSeconds: true,
      min: true,
      minutesToHours: true,
      minutesToMilliseconds: true,
      minutesToSeconds: true,
      monthsToQuarters: true,
      monthsToYears: true,
      nextDay: true,
      nextFriday: true,
      nextMonday: true,
      nextSaturday: true,
      nextSunday: true,
      nextThursday: true,
      nextTuesday: true,
      nextWednesday: true,
      parse: true,
      parseISO: true,
      parseJSON: true,
      previousDay: true,
      previousFriday: true,
      previousMonday: true,
      previousSaturday: true,
      previousSunday: true,
      previousThursday: true,
      previousTuesday: true,
      previousWednesday: true,
      quartersToMonths: true,
      quartersToYears: true,
      roundToNearestMinutes: true,
      secondsToHours: true,
      secondsToMilliseconds: true,
      secondsToMinutes: true,
      set: true,
      setDate: true,
      setDay: true,
      setDayOfYear: true,
      setHours: true,
      setISODay: true,
      setISOWeek: true,
      setISOWeekYear: true,
      setMilliseconds: true,
      setMinutes: true,
      setMonth: true,
      setQuarter: true,
      setSeconds: true,
      setWeek: true,
      setWeekYear: true,
      setYear: true,
      startOfDay: true,
      startOfDecade: true,
      startOfHour: true,
      startOfISOWeek: true,
      startOfISOWeekYear: true,
      startOfMinute: true,
      startOfMonth: true,
      startOfQuarter: true,
      startOfSecond: true,
      startOfToday: true,
      startOfTomorrow: true,
      startOfWeek: true,
      startOfWeekYear: true,
      startOfYear: true,
      startOfYesterday: true,
      sub: true,
      subBusinessDays: true,
      subDays: true,
      subHours: true,
      subISOWeekYears: true,
      subMilliseconds: true,
      subMinutes: true,
      subMonths: true,
      subQuarters: true,
      subSeconds: true,
      subWeeks: true,
      subYears: true,
      toDate: true,
      weeksToDays: true,
      yearsToMonths: true,
      yearsToQuarters: true
    };
    Object.defineProperty(exports, "add", {
      enumerable: true,
      get: function() {
        return _index.default;
      }
    });
    Object.defineProperty(exports, "addBusinessDays", {
      enumerable: true,
      get: function() {
        return _index2.default;
      }
    });
    Object.defineProperty(exports, "addDays", {
      enumerable: true,
      get: function() {
        return _index3.default;
      }
    });
    Object.defineProperty(exports, "addHours", {
      enumerable: true,
      get: function() {
        return _index4.default;
      }
    });
    Object.defineProperty(exports, "addISOWeekYears", {
      enumerable: true,
      get: function() {
        return _index5.default;
      }
    });
    Object.defineProperty(exports, "addMilliseconds", {
      enumerable: true,
      get: function() {
        return _index6.default;
      }
    });
    Object.defineProperty(exports, "addMinutes", {
      enumerable: true,
      get: function() {
        return _index7.default;
      }
    });
    Object.defineProperty(exports, "addMonths", {
      enumerable: true,
      get: function() {
        return _index8.default;
      }
    });
    Object.defineProperty(exports, "addQuarters", {
      enumerable: true,
      get: function() {
        return _index9.default;
      }
    });
    Object.defineProperty(exports, "addSeconds", {
      enumerable: true,
      get: function() {
        return _index10.default;
      }
    });
    Object.defineProperty(exports, "addWeeks", {
      enumerable: true,
      get: function() {
        return _index11.default;
      }
    });
    Object.defineProperty(exports, "addYears", {
      enumerable: true,
      get: function() {
        return _index12.default;
      }
    });
    Object.defineProperty(exports, "areIntervalsOverlapping", {
      enumerable: true,
      get: function() {
        return _index13.default;
      }
    });
    Object.defineProperty(exports, "clamp", {
      enumerable: true,
      get: function() {
        return _index14.default;
      }
    });
    Object.defineProperty(exports, "closestIndexTo", {
      enumerable: true,
      get: function() {
        return _index15.default;
      }
    });
    Object.defineProperty(exports, "closestTo", {
      enumerable: true,
      get: function() {
        return _index16.default;
      }
    });
    Object.defineProperty(exports, "compareAsc", {
      enumerable: true,
      get: function() {
        return _index17.default;
      }
    });
    Object.defineProperty(exports, "compareDesc", {
      enumerable: true,
      get: function() {
        return _index18.default;
      }
    });
    Object.defineProperty(exports, "daysToWeeks", {
      enumerable: true,
      get: function() {
        return _index19.default;
      }
    });
    Object.defineProperty(exports, "differenceInBusinessDays", {
      enumerable: true,
      get: function() {
        return _index20.default;
      }
    });
    Object.defineProperty(exports, "differenceInCalendarDays", {
      enumerable: true,
      get: function() {
        return _index21.default;
      }
    });
    Object.defineProperty(exports, "differenceInCalendarISOWeekYears", {
      enumerable: true,
      get: function() {
        return _index22.default;
      }
    });
    Object.defineProperty(exports, "differenceInCalendarISOWeeks", {
      enumerable: true,
      get: function() {
        return _index23.default;
      }
    });
    Object.defineProperty(exports, "differenceInCalendarMonths", {
      enumerable: true,
      get: function() {
        return _index24.default;
      }
    });
    Object.defineProperty(exports, "differenceInCalendarQuarters", {
      enumerable: true,
      get: function() {
        return _index25.default;
      }
    });
    Object.defineProperty(exports, "differenceInCalendarWeeks", {
      enumerable: true,
      get: function() {
        return _index26.default;
      }
    });
    Object.defineProperty(exports, "differenceInCalendarYears", {
      enumerable: true,
      get: function() {
        return _index27.default;
      }
    });
    Object.defineProperty(exports, "differenceInDays", {
      enumerable: true,
      get: function() {
        return _index28.default;
      }
    });
    Object.defineProperty(exports, "differenceInHours", {
      enumerable: true,
      get: function() {
        return _index29.default;
      }
    });
    Object.defineProperty(exports, "differenceInISOWeekYears", {
      enumerable: true,
      get: function() {
        return _index30.default;
      }
    });
    Object.defineProperty(exports, "differenceInMilliseconds", {
      enumerable: true,
      get: function() {
        return _index31.default;
      }
    });
    Object.defineProperty(exports, "differenceInMinutes", {
      enumerable: true,
      get: function() {
        return _index32.default;
      }
    });
    Object.defineProperty(exports, "differenceInMonths", {
      enumerable: true,
      get: function() {
        return _index33.default;
      }
    });
    Object.defineProperty(exports, "differenceInQuarters", {
      enumerable: true,
      get: function() {
        return _index34.default;
      }
    });
    Object.defineProperty(exports, "differenceInSeconds", {
      enumerable: true,
      get: function() {
        return _index35.default;
      }
    });
    Object.defineProperty(exports, "differenceInWeeks", {
      enumerable: true,
      get: function() {
        return _index36.default;
      }
    });
    Object.defineProperty(exports, "differenceInYears", {
      enumerable: true,
      get: function() {
        return _index37.default;
      }
    });
    Object.defineProperty(exports, "eachDayOfInterval", {
      enumerable: true,
      get: function() {
        return _index38.default;
      }
    });
    Object.defineProperty(exports, "eachHourOfInterval", {
      enumerable: true,
      get: function() {
        return _index39.default;
      }
    });
    Object.defineProperty(exports, "eachMinuteOfInterval", {
      enumerable: true,
      get: function() {
        return _index40.default;
      }
    });
    Object.defineProperty(exports, "eachMonthOfInterval", {
      enumerable: true,
      get: function() {
        return _index41.default;
      }
    });
    Object.defineProperty(exports, "eachQuarterOfInterval", {
      enumerable: true,
      get: function() {
        return _index42.default;
      }
    });
    Object.defineProperty(exports, "eachWeekOfInterval", {
      enumerable: true,
      get: function() {
        return _index43.default;
      }
    });
    Object.defineProperty(exports, "eachWeekendOfInterval", {
      enumerable: true,
      get: function() {
        return _index44.default;
      }
    });
    Object.defineProperty(exports, "eachWeekendOfMonth", {
      enumerable: true,
      get: function() {
        return _index45.default;
      }
    });
    Object.defineProperty(exports, "eachWeekendOfYear", {
      enumerable: true,
      get: function() {
        return _index46.default;
      }
    });
    Object.defineProperty(exports, "eachYearOfInterval", {
      enumerable: true,
      get: function() {
        return _index47.default;
      }
    });
    Object.defineProperty(exports, "endOfDay", {
      enumerable: true,
      get: function() {
        return _index48.default;
      }
    });
    Object.defineProperty(exports, "endOfDecade", {
      enumerable: true,
      get: function() {
        return _index49.default;
      }
    });
    Object.defineProperty(exports, "endOfHour", {
      enumerable: true,
      get: function() {
        return _index50.default;
      }
    });
    Object.defineProperty(exports, "endOfISOWeek", {
      enumerable: true,
      get: function() {
        return _index51.default;
      }
    });
    Object.defineProperty(exports, "endOfISOWeekYear", {
      enumerable: true,
      get: function() {
        return _index52.default;
      }
    });
    Object.defineProperty(exports, "endOfMinute", {
      enumerable: true,
      get: function() {
        return _index53.default;
      }
    });
    Object.defineProperty(exports, "endOfMonth", {
      enumerable: true,
      get: function() {
        return _index54.default;
      }
    });
    Object.defineProperty(exports, "endOfQuarter", {
      enumerable: true,
      get: function() {
        return _index55.default;
      }
    });
    Object.defineProperty(exports, "endOfSecond", {
      enumerable: true,
      get: function() {
        return _index56.default;
      }
    });
    Object.defineProperty(exports, "endOfToday", {
      enumerable: true,
      get: function() {
        return _index57.default;
      }
    });
    Object.defineProperty(exports, "endOfTomorrow", {
      enumerable: true,
      get: function() {
        return _index58.default;
      }
    });
    Object.defineProperty(exports, "endOfWeek", {
      enumerable: true,
      get: function() {
        return _index59.default;
      }
    });
    Object.defineProperty(exports, "endOfYear", {
      enumerable: true,
      get: function() {
        return _index60.default;
      }
    });
    Object.defineProperty(exports, "endOfYesterday", {
      enumerable: true,
      get: function() {
        return _index61.default;
      }
    });
    Object.defineProperty(exports, "format", {
      enumerable: true,
      get: function() {
        return _index62.default;
      }
    });
    Object.defineProperty(exports, "formatDistance", {
      enumerable: true,
      get: function() {
        return _index63.default;
      }
    });
    Object.defineProperty(exports, "formatDistanceStrict", {
      enumerable: true,
      get: function() {
        return _index64.default;
      }
    });
    Object.defineProperty(exports, "formatDistanceToNow", {
      enumerable: true,
      get: function() {
        return _index65.default;
      }
    });
    Object.defineProperty(exports, "formatDistanceToNowStrict", {
      enumerable: true,
      get: function() {
        return _index66.default;
      }
    });
    Object.defineProperty(exports, "formatDuration", {
      enumerable: true,
      get: function() {
        return _index67.default;
      }
    });
    Object.defineProperty(exports, "formatISO", {
      enumerable: true,
      get: function() {
        return _index68.default;
      }
    });
    Object.defineProperty(exports, "formatISO9075", {
      enumerable: true,
      get: function() {
        return _index69.default;
      }
    });
    Object.defineProperty(exports, "formatISODuration", {
      enumerable: true,
      get: function() {
        return _index70.default;
      }
    });
    Object.defineProperty(exports, "formatRFC3339", {
      enumerable: true,
      get: function() {
        return _index71.default;
      }
    });
    Object.defineProperty(exports, "formatRFC7231", {
      enumerable: true,
      get: function() {
        return _index72.default;
      }
    });
    Object.defineProperty(exports, "formatRelative", {
      enumerable: true,
      get: function() {
        return _index73.default;
      }
    });
    Object.defineProperty(exports, "fromUnixTime", {
      enumerable: true,
      get: function() {
        return _index74.default;
      }
    });
    Object.defineProperty(exports, "getDate", {
      enumerable: true,
      get: function() {
        return _index75.default;
      }
    });
    Object.defineProperty(exports, "getDay", {
      enumerable: true,
      get: function() {
        return _index76.default;
      }
    });
    Object.defineProperty(exports, "getDayOfYear", {
      enumerable: true,
      get: function() {
        return _index77.default;
      }
    });
    Object.defineProperty(exports, "getDaysInMonth", {
      enumerable: true,
      get: function() {
        return _index78.default;
      }
    });
    Object.defineProperty(exports, "getDaysInYear", {
      enumerable: true,
      get: function() {
        return _index79.default;
      }
    });
    Object.defineProperty(exports, "getDecade", {
      enumerable: true,
      get: function() {
        return _index80.default;
      }
    });
    Object.defineProperty(exports, "getHours", {
      enumerable: true,
      get: function() {
        return _index81.default;
      }
    });
    Object.defineProperty(exports, "getISODay", {
      enumerable: true,
      get: function() {
        return _index82.default;
      }
    });
    Object.defineProperty(exports, "getISOWeek", {
      enumerable: true,
      get: function() {
        return _index83.default;
      }
    });
    Object.defineProperty(exports, "getISOWeekYear", {
      enumerable: true,
      get: function() {
        return _index84.default;
      }
    });
    Object.defineProperty(exports, "getISOWeeksInYear", {
      enumerable: true,
      get: function() {
        return _index85.default;
      }
    });
    Object.defineProperty(exports, "getMilliseconds", {
      enumerable: true,
      get: function() {
        return _index86.default;
      }
    });
    Object.defineProperty(exports, "getMinutes", {
      enumerable: true,
      get: function() {
        return _index87.default;
      }
    });
    Object.defineProperty(exports, "getMonth", {
      enumerable: true,
      get: function() {
        return _index88.default;
      }
    });
    Object.defineProperty(exports, "getOverlappingDaysInIntervals", {
      enumerable: true,
      get: function() {
        return _index89.default;
      }
    });
    Object.defineProperty(exports, "getQuarter", {
      enumerable: true,
      get: function() {
        return _index90.default;
      }
    });
    Object.defineProperty(exports, "getSeconds", {
      enumerable: true,
      get: function() {
        return _index91.default;
      }
    });
    Object.defineProperty(exports, "getTime", {
      enumerable: true,
      get: function() {
        return _index92.default;
      }
    });
    Object.defineProperty(exports, "getUnixTime", {
      enumerable: true,
      get: function() {
        return _index93.default;
      }
    });
    Object.defineProperty(exports, "getWeek", {
      enumerable: true,
      get: function() {
        return _index94.default;
      }
    });
    Object.defineProperty(exports, "getWeekOfMonth", {
      enumerable: true,
      get: function() {
        return _index95.default;
      }
    });
    Object.defineProperty(exports, "getWeekYear", {
      enumerable: true,
      get: function() {
        return _index96.default;
      }
    });
    Object.defineProperty(exports, "getWeeksInMonth", {
      enumerable: true,
      get: function() {
        return _index97.default;
      }
    });
    Object.defineProperty(exports, "getYear", {
      enumerable: true,
      get: function() {
        return _index98.default;
      }
    });
    Object.defineProperty(exports, "hoursToMilliseconds", {
      enumerable: true,
      get: function() {
        return _index99.default;
      }
    });
    Object.defineProperty(exports, "hoursToMinutes", {
      enumerable: true,
      get: function() {
        return _index100.default;
      }
    });
    Object.defineProperty(exports, "hoursToSeconds", {
      enumerable: true,
      get: function() {
        return _index101.default;
      }
    });
    Object.defineProperty(exports, "intervalToDuration", {
      enumerable: true,
      get: function() {
        return _index102.default;
      }
    });
    Object.defineProperty(exports, "intlFormat", {
      enumerable: true,
      get: function() {
        return _index103.default;
      }
    });
    Object.defineProperty(exports, "isAfter", {
      enumerable: true,
      get: function() {
        return _index104.default;
      }
    });
    Object.defineProperty(exports, "isBefore", {
      enumerable: true,
      get: function() {
        return _index105.default;
      }
    });
    Object.defineProperty(exports, "isDate", {
      enumerable: true,
      get: function() {
        return _index106.default;
      }
    });
    Object.defineProperty(exports, "isEqual", {
      enumerable: true,
      get: function() {
        return _index107.default;
      }
    });
    Object.defineProperty(exports, "isExists", {
      enumerable: true,
      get: function() {
        return _index108.default;
      }
    });
    Object.defineProperty(exports, "isFirstDayOfMonth", {
      enumerable: true,
      get: function() {
        return _index109.default;
      }
    });
    Object.defineProperty(exports, "isFriday", {
      enumerable: true,
      get: function() {
        return _index110.default;
      }
    });
    Object.defineProperty(exports, "isFuture", {
      enumerable: true,
      get: function() {
        return _index111.default;
      }
    });
    Object.defineProperty(exports, "isLastDayOfMonth", {
      enumerable: true,
      get: function() {
        return _index112.default;
      }
    });
    Object.defineProperty(exports, "isLeapYear", {
      enumerable: true,
      get: function() {
        return _index113.default;
      }
    });
    Object.defineProperty(exports, "isMatch", {
      enumerable: true,
      get: function() {
        return _index114.default;
      }
    });
    Object.defineProperty(exports, "isMonday", {
      enumerable: true,
      get: function() {
        return _index115.default;
      }
    });
    Object.defineProperty(exports, "isPast", {
      enumerable: true,
      get: function() {
        return _index116.default;
      }
    });
    Object.defineProperty(exports, "isSameDay", {
      enumerable: true,
      get: function() {
        return _index117.default;
      }
    });
    Object.defineProperty(exports, "isSameHour", {
      enumerable: true,
      get: function() {
        return _index118.default;
      }
    });
    Object.defineProperty(exports, "isSameISOWeek", {
      enumerable: true,
      get: function() {
        return _index119.default;
      }
    });
    Object.defineProperty(exports, "isSameISOWeekYear", {
      enumerable: true,
      get: function() {
        return _index120.default;
      }
    });
    Object.defineProperty(exports, "isSameMinute", {
      enumerable: true,
      get: function() {
        return _index121.default;
      }
    });
    Object.defineProperty(exports, "isSameMonth", {
      enumerable: true,
      get: function() {
        return _index122.default;
      }
    });
    Object.defineProperty(exports, "isSameQuarter", {
      enumerable: true,
      get: function() {
        return _index123.default;
      }
    });
    Object.defineProperty(exports, "isSameSecond", {
      enumerable: true,
      get: function() {
        return _index124.default;
      }
    });
    Object.defineProperty(exports, "isSameWeek", {
      enumerable: true,
      get: function() {
        return _index125.default;
      }
    });
    Object.defineProperty(exports, "isSameYear", {
      enumerable: true,
      get: function() {
        return _index126.default;
      }
    });
    Object.defineProperty(exports, "isSaturday", {
      enumerable: true,
      get: function() {
        return _index127.default;
      }
    });
    Object.defineProperty(exports, "isSunday", {
      enumerable: true,
      get: function() {
        return _index128.default;
      }
    });
    Object.defineProperty(exports, "isThisHour", {
      enumerable: true,
      get: function() {
        return _index129.default;
      }
    });
    Object.defineProperty(exports, "isThisISOWeek", {
      enumerable: true,
      get: function() {
        return _index130.default;
      }
    });
    Object.defineProperty(exports, "isThisMinute", {
      enumerable: true,
      get: function() {
        return _index131.default;
      }
    });
    Object.defineProperty(exports, "isThisMonth", {
      enumerable: true,
      get: function() {
        return _index132.default;
      }
    });
    Object.defineProperty(exports, "isThisQuarter", {
      enumerable: true,
      get: function() {
        return _index133.default;
      }
    });
    Object.defineProperty(exports, "isThisSecond", {
      enumerable: true,
      get: function() {
        return _index134.default;
      }
    });
    Object.defineProperty(exports, "isThisWeek", {
      enumerable: true,
      get: function() {
        return _index135.default;
      }
    });
    Object.defineProperty(exports, "isThisYear", {
      enumerable: true,
      get: function() {
        return _index136.default;
      }
    });
    Object.defineProperty(exports, "isThursday", {
      enumerable: true,
      get: function() {
        return _index137.default;
      }
    });
    Object.defineProperty(exports, "isToday", {
      enumerable: true,
      get: function() {
        return _index138.default;
      }
    });
    Object.defineProperty(exports, "isTomorrow", {
      enumerable: true,
      get: function() {
        return _index139.default;
      }
    });
    Object.defineProperty(exports, "isTuesday", {
      enumerable: true,
      get: function() {
        return _index140.default;
      }
    });
    Object.defineProperty(exports, "isValid", {
      enumerable: true,
      get: function() {
        return _index141.default;
      }
    });
    Object.defineProperty(exports, "isWednesday", {
      enumerable: true,
      get: function() {
        return _index142.default;
      }
    });
    Object.defineProperty(exports, "isWeekend", {
      enumerable: true,
      get: function() {
        return _index143.default;
      }
    });
    Object.defineProperty(exports, "isWithinInterval", {
      enumerable: true,
      get: function() {
        return _index144.default;
      }
    });
    Object.defineProperty(exports, "isYesterday", {
      enumerable: true,
      get: function() {
        return _index145.default;
      }
    });
    Object.defineProperty(exports, "lastDayOfDecade", {
      enumerable: true,
      get: function() {
        return _index146.default;
      }
    });
    Object.defineProperty(exports, "lastDayOfISOWeek", {
      enumerable: true,
      get: function() {
        return _index147.default;
      }
    });
    Object.defineProperty(exports, "lastDayOfISOWeekYear", {
      enumerable: true,
      get: function() {
        return _index148.default;
      }
    });
    Object.defineProperty(exports, "lastDayOfMonth", {
      enumerable: true,
      get: function() {
        return _index149.default;
      }
    });
    Object.defineProperty(exports, "lastDayOfQuarter", {
      enumerable: true,
      get: function() {
        return _index150.default;
      }
    });
    Object.defineProperty(exports, "lastDayOfWeek", {
      enumerable: true,
      get: function() {
        return _index151.default;
      }
    });
    Object.defineProperty(exports, "lastDayOfYear", {
      enumerable: true,
      get: function() {
        return _index152.default;
      }
    });
    Object.defineProperty(exports, "lightFormat", {
      enumerable: true,
      get: function() {
        return _index153.default;
      }
    });
    Object.defineProperty(exports, "max", {
      enumerable: true,
      get: function() {
        return _index154.default;
      }
    });
    Object.defineProperty(exports, "milliseconds", {
      enumerable: true,
      get: function() {
        return _index155.default;
      }
    });
    Object.defineProperty(exports, "millisecondsToHours", {
      enumerable: true,
      get: function() {
        return _index156.default;
      }
    });
    Object.defineProperty(exports, "millisecondsToMinutes", {
      enumerable: true,
      get: function() {
        return _index157.default;
      }
    });
    Object.defineProperty(exports, "millisecondsToSeconds", {
      enumerable: true,
      get: function() {
        return _index158.default;
      }
    });
    Object.defineProperty(exports, "min", {
      enumerable: true,
      get: function() {
        return _index159.default;
      }
    });
    Object.defineProperty(exports, "minutesToHours", {
      enumerable: true,
      get: function() {
        return _index160.default;
      }
    });
    Object.defineProperty(exports, "minutesToMilliseconds", {
      enumerable: true,
      get: function() {
        return _index161.default;
      }
    });
    Object.defineProperty(exports, "minutesToSeconds", {
      enumerable: true,
      get: function() {
        return _index162.default;
      }
    });
    Object.defineProperty(exports, "monthsToQuarters", {
      enumerable: true,
      get: function() {
        return _index163.default;
      }
    });
    Object.defineProperty(exports, "monthsToYears", {
      enumerable: true,
      get: function() {
        return _index164.default;
      }
    });
    Object.defineProperty(exports, "nextDay", {
      enumerable: true,
      get: function() {
        return _index165.default;
      }
    });
    Object.defineProperty(exports, "nextFriday", {
      enumerable: true,
      get: function() {
        return _index166.default;
      }
    });
    Object.defineProperty(exports, "nextMonday", {
      enumerable: true,
      get: function() {
        return _index167.default;
      }
    });
    Object.defineProperty(exports, "nextSaturday", {
      enumerable: true,
      get: function() {
        return _index168.default;
      }
    });
    Object.defineProperty(exports, "nextSunday", {
      enumerable: true,
      get: function() {
        return _index169.default;
      }
    });
    Object.defineProperty(exports, "nextThursday", {
      enumerable: true,
      get: function() {
        return _index170.default;
      }
    });
    Object.defineProperty(exports, "nextTuesday", {
      enumerable: true,
      get: function() {
        return _index171.default;
      }
    });
    Object.defineProperty(exports, "nextWednesday", {
      enumerable: true,
      get: function() {
        return _index172.default;
      }
    });
    Object.defineProperty(exports, "parse", {
      enumerable: true,
      get: function() {
        return _index173.default;
      }
    });
    Object.defineProperty(exports, "parseISO", {
      enumerable: true,
      get: function() {
        return _index174.default;
      }
    });
    Object.defineProperty(exports, "parseJSON", {
      enumerable: true,
      get: function() {
        return _index175.default;
      }
    });
    Object.defineProperty(exports, "previousDay", {
      enumerable: true,
      get: function() {
        return _index176.default;
      }
    });
    Object.defineProperty(exports, "previousFriday", {
      enumerable: true,
      get: function() {
        return _index177.default;
      }
    });
    Object.defineProperty(exports, "previousMonday", {
      enumerable: true,
      get: function() {
        return _index178.default;
      }
    });
    Object.defineProperty(exports, "previousSaturday", {
      enumerable: true,
      get: function() {
        return _index179.default;
      }
    });
    Object.defineProperty(exports, "previousSunday", {
      enumerable: true,
      get: function() {
        return _index180.default;
      }
    });
    Object.defineProperty(exports, "previousThursday", {
      enumerable: true,
      get: function() {
        return _index181.default;
      }
    });
    Object.defineProperty(exports, "previousTuesday", {
      enumerable: true,
      get: function() {
        return _index182.default;
      }
    });
    Object.defineProperty(exports, "previousWednesday", {
      enumerable: true,
      get: function() {
        return _index183.default;
      }
    });
    Object.defineProperty(exports, "quartersToMonths", {
      enumerable: true,
      get: function() {
        return _index184.default;
      }
    });
    Object.defineProperty(exports, "quartersToYears", {
      enumerable: true,
      get: function() {
        return _index185.default;
      }
    });
    Object.defineProperty(exports, "roundToNearestMinutes", {
      enumerable: true,
      get: function() {
        return _index186.default;
      }
    });
    Object.defineProperty(exports, "secondsToHours", {
      enumerable: true,
      get: function() {
        return _index187.default;
      }
    });
    Object.defineProperty(exports, "secondsToMilliseconds", {
      enumerable: true,
      get: function() {
        return _index188.default;
      }
    });
    Object.defineProperty(exports, "secondsToMinutes", {
      enumerable: true,
      get: function() {
        return _index189.default;
      }
    });
    Object.defineProperty(exports, "set", {
      enumerable: true,
      get: function() {
        return _index190.default;
      }
    });
    Object.defineProperty(exports, "setDate", {
      enumerable: true,
      get: function() {
        return _index191.default;
      }
    });
    Object.defineProperty(exports, "setDay", {
      enumerable: true,
      get: function() {
        return _index192.default;
      }
    });
    Object.defineProperty(exports, "setDayOfYear", {
      enumerable: true,
      get: function() {
        return _index193.default;
      }
    });
    Object.defineProperty(exports, "setHours", {
      enumerable: true,
      get: function() {
        return _index194.default;
      }
    });
    Object.defineProperty(exports, "setISODay", {
      enumerable: true,
      get: function() {
        return _index195.default;
      }
    });
    Object.defineProperty(exports, "setISOWeek", {
      enumerable: true,
      get: function() {
        return _index196.default;
      }
    });
    Object.defineProperty(exports, "setISOWeekYear", {
      enumerable: true,
      get: function() {
        return _index197.default;
      }
    });
    Object.defineProperty(exports, "setMilliseconds", {
      enumerable: true,
      get: function() {
        return _index198.default;
      }
    });
    Object.defineProperty(exports, "setMinutes", {
      enumerable: true,
      get: function() {
        return _index199.default;
      }
    });
    Object.defineProperty(exports, "setMonth", {
      enumerable: true,
      get: function() {
        return _index200.default;
      }
    });
    Object.defineProperty(exports, "setQuarter", {
      enumerable: true,
      get: function() {
        return _index201.default;
      }
    });
    Object.defineProperty(exports, "setSeconds", {
      enumerable: true,
      get: function() {
        return _index202.default;
      }
    });
    Object.defineProperty(exports, "setWeek", {
      enumerable: true,
      get: function() {
        return _index203.default;
      }
    });
    Object.defineProperty(exports, "setWeekYear", {
      enumerable: true,
      get: function() {
        return _index204.default;
      }
    });
    Object.defineProperty(exports, "setYear", {
      enumerable: true,
      get: function() {
        return _index205.default;
      }
    });
    Object.defineProperty(exports, "startOfDay", {
      enumerable: true,
      get: function() {
        return _index206.default;
      }
    });
    Object.defineProperty(exports, "startOfDecade", {
      enumerable: true,
      get: function() {
        return _index207.default;
      }
    });
    Object.defineProperty(exports, "startOfHour", {
      enumerable: true,
      get: function() {
        return _index208.default;
      }
    });
    Object.defineProperty(exports, "startOfISOWeek", {
      enumerable: true,
      get: function() {
        return _index209.default;
      }
    });
    Object.defineProperty(exports, "startOfISOWeekYear", {
      enumerable: true,
      get: function() {
        return _index210.default;
      }
    });
    Object.defineProperty(exports, "startOfMinute", {
      enumerable: true,
      get: function() {
        return _index211.default;
      }
    });
    Object.defineProperty(exports, "startOfMonth", {
      enumerable: true,
      get: function() {
        return _index212.default;
      }
    });
    Object.defineProperty(exports, "startOfQuarter", {
      enumerable: true,
      get: function() {
        return _index213.default;
      }
    });
    Object.defineProperty(exports, "startOfSecond", {
      enumerable: true,
      get: function() {
        return _index214.default;
      }
    });
    Object.defineProperty(exports, "startOfToday", {
      enumerable: true,
      get: function() {
        return _index215.default;
      }
    });
    Object.defineProperty(exports, "startOfTomorrow", {
      enumerable: true,
      get: function() {
        return _index216.default;
      }
    });
    Object.defineProperty(exports, "startOfWeek", {
      enumerable: true,
      get: function() {
        return _index217.default;
      }
    });
    Object.defineProperty(exports, "startOfWeekYear", {
      enumerable: true,
      get: function() {
        return _index218.default;
      }
    });
    Object.defineProperty(exports, "startOfYear", {
      enumerable: true,
      get: function() {
        return _index219.default;
      }
    });
    Object.defineProperty(exports, "startOfYesterday", {
      enumerable: true,
      get: function() {
        return _index220.default;
      }
    });
    Object.defineProperty(exports, "sub", {
      enumerable: true,
      get: function() {
        return _index221.default;
      }
    });
    Object.defineProperty(exports, "subBusinessDays", {
      enumerable: true,
      get: function() {
        return _index222.default;
      }
    });
    Object.defineProperty(exports, "subDays", {
      enumerable: true,
      get: function() {
        return _index223.default;
      }
    });
    Object.defineProperty(exports, "subHours", {
      enumerable: true,
      get: function() {
        return _index224.default;
      }
    });
    Object.defineProperty(exports, "subISOWeekYears", {
      enumerable: true,
      get: function() {
        return _index225.default;
      }
    });
    Object.defineProperty(exports, "subMilliseconds", {
      enumerable: true,
      get: function() {
        return _index226.default;
      }
    });
    Object.defineProperty(exports, "subMinutes", {
      enumerable: true,
      get: function() {
        return _index227.default;
      }
    });
    Object.defineProperty(exports, "subMonths", {
      enumerable: true,
      get: function() {
        return _index228.default;
      }
    });
    Object.defineProperty(exports, "subQuarters", {
      enumerable: true,
      get: function() {
        return _index229.default;
      }
    });
    Object.defineProperty(exports, "subSeconds", {
      enumerable: true,
      get: function() {
        return _index230.default;
      }
    });
    Object.defineProperty(exports, "subWeeks", {
      enumerable: true,
      get: function() {
        return _index231.default;
      }
    });
    Object.defineProperty(exports, "subYears", {
      enumerable: true,
      get: function() {
        return _index232.default;
      }
    });
    Object.defineProperty(exports, "toDate", {
      enumerable: true,
      get: function() {
        return _index233.default;
      }
    });
    Object.defineProperty(exports, "weeksToDays", {
      enumerable: true,
      get: function() {
        return _index234.default;
      }
    });
    Object.defineProperty(exports, "yearsToMonths", {
      enumerable: true,
      get: function() {
        return _index235.default;
      }
    });
    Object.defineProperty(exports, "yearsToQuarters", {
      enumerable: true,
      get: function() {
        return _index236.default;
      }
    });
    var _index = _interopRequireDefault(require_add());
    var _index2 = _interopRequireDefault(require_addBusinessDays());
    var _index3 = _interopRequireDefault(require_addDays());
    var _index4 = _interopRequireDefault(require_addHours());
    var _index5 = _interopRequireDefault(require_addISOWeekYears());
    var _index6 = _interopRequireDefault(require_addMilliseconds());
    var _index7 = _interopRequireDefault(require_addMinutes());
    var _index8 = _interopRequireDefault(require_addMonths());
    var _index9 = _interopRequireDefault(require_addQuarters());
    var _index10 = _interopRequireDefault(require_addSeconds());
    var _index11 = _interopRequireDefault(require_addWeeks());
    var _index12 = _interopRequireDefault(require_addYears());
    var _index13 = _interopRequireDefault(require_areIntervalsOverlapping());
    var _index14 = _interopRequireDefault(require_clamp());
    var _index15 = _interopRequireDefault(require_closestIndexTo());
    var _index16 = _interopRequireDefault(require_closestTo());
    var _index17 = _interopRequireDefault(require_compareAsc());
    var _index18 = _interopRequireDefault(require_compareDesc());
    var _index19 = _interopRequireDefault(require_daysToWeeks());
    var _index20 = _interopRequireDefault(require_differenceInBusinessDays());
    var _index21 = _interopRequireDefault(require_differenceInCalendarDays());
    var _index22 = _interopRequireDefault(require_differenceInCalendarISOWeekYears());
    var _index23 = _interopRequireDefault(require_differenceInCalendarISOWeeks());
    var _index24 = _interopRequireDefault(require_differenceInCalendarMonths());
    var _index25 = _interopRequireDefault(require_differenceInCalendarQuarters());
    var _index26 = _interopRequireDefault(require_differenceInCalendarWeeks());
    var _index27 = _interopRequireDefault(require_differenceInCalendarYears());
    var _index28 = _interopRequireDefault(require_differenceInDays());
    var _index29 = _interopRequireDefault(require_differenceInHours());
    var _index30 = _interopRequireDefault(require_differenceInISOWeekYears());
    var _index31 = _interopRequireDefault(require_differenceInMilliseconds());
    var _index32 = _interopRequireDefault(require_differenceInMinutes());
    var _index33 = _interopRequireDefault(require_differenceInMonths());
    var _index34 = _interopRequireDefault(require_differenceInQuarters());
    var _index35 = _interopRequireDefault(require_differenceInSeconds());
    var _index36 = _interopRequireDefault(require_differenceInWeeks());
    var _index37 = _interopRequireDefault(require_differenceInYears());
    var _index38 = _interopRequireDefault(require_eachDayOfInterval());
    var _index39 = _interopRequireDefault(require_eachHourOfInterval());
    var _index40 = _interopRequireDefault(require_eachMinuteOfInterval());
    var _index41 = _interopRequireDefault(require_eachMonthOfInterval());
    var _index42 = _interopRequireDefault(require_eachQuarterOfInterval());
    var _index43 = _interopRequireDefault(require_eachWeekOfInterval());
    var _index44 = _interopRequireDefault(require_eachWeekendOfInterval());
    var _index45 = _interopRequireDefault(require_eachWeekendOfMonth());
    var _index46 = _interopRequireDefault(require_eachWeekendOfYear());
    var _index47 = _interopRequireDefault(require_eachYearOfInterval());
    var _index48 = _interopRequireDefault(require_endOfDay());
    var _index49 = _interopRequireDefault(require_endOfDecade());
    var _index50 = _interopRequireDefault(require_endOfHour());
    var _index51 = _interopRequireDefault(require_endOfISOWeek());
    var _index52 = _interopRequireDefault(require_endOfISOWeekYear());
    var _index53 = _interopRequireDefault(require_endOfMinute());
    var _index54 = _interopRequireDefault(require_endOfMonth());
    var _index55 = _interopRequireDefault(require_endOfQuarter());
    var _index56 = _interopRequireDefault(require_endOfSecond());
    var _index57 = _interopRequireDefault(require_endOfToday());
    var _index58 = _interopRequireDefault(require_endOfTomorrow());
    var _index59 = _interopRequireDefault(require_endOfWeek());
    var _index60 = _interopRequireDefault(require_endOfYear());
    var _index61 = _interopRequireDefault(require_endOfYesterday());
    var _index62 = _interopRequireDefault(require_format());
    var _index63 = _interopRequireDefault(require_formatDistance2());
    var _index64 = _interopRequireDefault(require_formatDistanceStrict());
    var _index65 = _interopRequireDefault(require_formatDistanceToNow());
    var _index66 = _interopRequireDefault(require_formatDistanceToNowStrict());
    var _index67 = _interopRequireDefault(require_formatDuration());
    var _index68 = _interopRequireDefault(require_formatISO());
    var _index69 = _interopRequireDefault(require_formatISO9075());
    var _index70 = _interopRequireDefault(require_formatISODuration());
    var _index71 = _interopRequireDefault(require_formatRFC3339());
    var _index72 = _interopRequireDefault(require_formatRFC7231());
    var _index73 = _interopRequireDefault(require_formatRelative2());
    var _index74 = _interopRequireDefault(require_fromUnixTime());
    var _index75 = _interopRequireDefault(require_getDate());
    var _index76 = _interopRequireDefault(require_getDay());
    var _index77 = _interopRequireDefault(require_getDayOfYear());
    var _index78 = _interopRequireDefault(require_getDaysInMonth());
    var _index79 = _interopRequireDefault(require_getDaysInYear());
    var _index80 = _interopRequireDefault(require_getDecade());
    var _index81 = _interopRequireDefault(require_getHours());
    var _index82 = _interopRequireDefault(require_getISODay());
    var _index83 = _interopRequireDefault(require_getISOWeek());
    var _index84 = _interopRequireDefault(require_getISOWeekYear());
    var _index85 = _interopRequireDefault(require_getISOWeeksInYear());
    var _index86 = _interopRequireDefault(require_getMilliseconds());
    var _index87 = _interopRequireDefault(require_getMinutes());
    var _index88 = _interopRequireDefault(require_getMonth());
    var _index89 = _interopRequireDefault(require_getOverlappingDaysInIntervals());
    var _index90 = _interopRequireDefault(require_getQuarter());
    var _index91 = _interopRequireDefault(require_getSeconds());
    var _index92 = _interopRequireDefault(require_getTime());
    var _index93 = _interopRequireDefault(require_getUnixTime());
    var _index94 = _interopRequireDefault(require_getWeek());
    var _index95 = _interopRequireDefault(require_getWeekOfMonth());
    var _index96 = _interopRequireDefault(require_getWeekYear());
    var _index97 = _interopRequireDefault(require_getWeeksInMonth());
    var _index98 = _interopRequireDefault(require_getYear());
    var _index99 = _interopRequireDefault(require_hoursToMilliseconds());
    var _index100 = _interopRequireDefault(require_hoursToMinutes());
    var _index101 = _interopRequireDefault(require_hoursToSeconds());
    var _index102 = _interopRequireDefault(require_intervalToDuration());
    var _index103 = _interopRequireDefault(require_intlFormat());
    var _index104 = _interopRequireDefault(require_isAfter());
    var _index105 = _interopRequireDefault(require_isBefore());
    var _index106 = _interopRequireDefault(require_isDate());
    var _index107 = _interopRequireDefault(require_isEqual());
    var _index108 = _interopRequireDefault(require_isExists());
    var _index109 = _interopRequireDefault(require_isFirstDayOfMonth());
    var _index110 = _interopRequireDefault(require_isFriday());
    var _index111 = _interopRequireDefault(require_isFuture());
    var _index112 = _interopRequireDefault(require_isLastDayOfMonth());
    var _index113 = _interopRequireDefault(require_isLeapYear());
    var _index114 = _interopRequireDefault(require_isMatch());
    var _index115 = _interopRequireDefault(require_isMonday());
    var _index116 = _interopRequireDefault(require_isPast());
    var _index117 = _interopRequireDefault(require_isSameDay());
    var _index118 = _interopRequireDefault(require_isSameHour());
    var _index119 = _interopRequireDefault(require_isSameISOWeek());
    var _index120 = _interopRequireDefault(require_isSameISOWeekYear());
    var _index121 = _interopRequireDefault(require_isSameMinute());
    var _index122 = _interopRequireDefault(require_isSameMonth());
    var _index123 = _interopRequireDefault(require_isSameQuarter());
    var _index124 = _interopRequireDefault(require_isSameSecond());
    var _index125 = _interopRequireDefault(require_isSameWeek());
    var _index126 = _interopRequireDefault(require_isSameYear());
    var _index127 = _interopRequireDefault(require_isSaturday());
    var _index128 = _interopRequireDefault(require_isSunday());
    var _index129 = _interopRequireDefault(require_isThisHour());
    var _index130 = _interopRequireDefault(require_isThisISOWeek());
    var _index131 = _interopRequireDefault(require_isThisMinute());
    var _index132 = _interopRequireDefault(require_isThisMonth());
    var _index133 = _interopRequireDefault(require_isThisQuarter());
    var _index134 = _interopRequireDefault(require_isThisSecond());
    var _index135 = _interopRequireDefault(require_isThisWeek());
    var _index136 = _interopRequireDefault(require_isThisYear());
    var _index137 = _interopRequireDefault(require_isThursday());
    var _index138 = _interopRequireDefault(require_isToday());
    var _index139 = _interopRequireDefault(require_isTomorrow());
    var _index140 = _interopRequireDefault(require_isTuesday());
    var _index141 = _interopRequireDefault(require_isValid());
    var _index142 = _interopRequireDefault(require_isWednesday());
    var _index143 = _interopRequireDefault(require_isWeekend());
    var _index144 = _interopRequireDefault(require_isWithinInterval());
    var _index145 = _interopRequireDefault(require_isYesterday());
    var _index146 = _interopRequireDefault(require_lastDayOfDecade());
    var _index147 = _interopRequireDefault(require_lastDayOfISOWeek());
    var _index148 = _interopRequireDefault(require_lastDayOfISOWeekYear());
    var _index149 = _interopRequireDefault(require_lastDayOfMonth());
    var _index150 = _interopRequireDefault(require_lastDayOfQuarter());
    var _index151 = _interopRequireDefault(require_lastDayOfWeek());
    var _index152 = _interopRequireDefault(require_lastDayOfYear());
    var _index153 = _interopRequireDefault(require_lightFormat());
    var _index154 = _interopRequireDefault(require_max());
    var _index155 = _interopRequireDefault(require_milliseconds());
    var _index156 = _interopRequireDefault(require_millisecondsToHours());
    var _index157 = _interopRequireDefault(require_millisecondsToMinutes());
    var _index158 = _interopRequireDefault(require_millisecondsToSeconds());
    var _index159 = _interopRequireDefault(require_min());
    var _index160 = _interopRequireDefault(require_minutesToHours());
    var _index161 = _interopRequireDefault(require_minutesToMilliseconds());
    var _index162 = _interopRequireDefault(require_minutesToSeconds());
    var _index163 = _interopRequireDefault(require_monthsToQuarters());
    var _index164 = _interopRequireDefault(require_monthsToYears());
    var _index165 = _interopRequireDefault(require_nextDay());
    var _index166 = _interopRequireDefault(require_nextFriday());
    var _index167 = _interopRequireDefault(require_nextMonday());
    var _index168 = _interopRequireDefault(require_nextSaturday());
    var _index169 = _interopRequireDefault(require_nextSunday());
    var _index170 = _interopRequireDefault(require_nextThursday());
    var _index171 = _interopRequireDefault(require_nextTuesday());
    var _index172 = _interopRequireDefault(require_nextWednesday());
    var _index173 = _interopRequireDefault(require_parse());
    var _index174 = _interopRequireDefault(require_parseISO());
    var _index175 = _interopRequireDefault(require_parseJSON());
    var _index176 = _interopRequireDefault(require_previousDay());
    var _index177 = _interopRequireDefault(require_previousFriday());
    var _index178 = _interopRequireDefault(require_previousMonday());
    var _index179 = _interopRequireDefault(require_previousSaturday());
    var _index180 = _interopRequireDefault(require_previousSunday());
    var _index181 = _interopRequireDefault(require_previousThursday());
    var _index182 = _interopRequireDefault(require_previousTuesday());
    var _index183 = _interopRequireDefault(require_previousWednesday());
    var _index184 = _interopRequireDefault(require_quartersToMonths());
    var _index185 = _interopRequireDefault(require_quartersToYears());
    var _index186 = _interopRequireDefault(require_roundToNearestMinutes());
    var _index187 = _interopRequireDefault(require_secondsToHours());
    var _index188 = _interopRequireDefault(require_secondsToMilliseconds());
    var _index189 = _interopRequireDefault(require_secondsToMinutes());
    var _index190 = _interopRequireDefault(require_set());
    var _index191 = _interopRequireDefault(require_setDate());
    var _index192 = _interopRequireDefault(require_setDay());
    var _index193 = _interopRequireDefault(require_setDayOfYear());
    var _index194 = _interopRequireDefault(require_setHours());
    var _index195 = _interopRequireDefault(require_setISODay());
    var _index196 = _interopRequireDefault(require_setISOWeek());
    var _index197 = _interopRequireDefault(require_setISOWeekYear());
    var _index198 = _interopRequireDefault(require_setMilliseconds());
    var _index199 = _interopRequireDefault(require_setMinutes());
    var _index200 = _interopRequireDefault(require_setMonth());
    var _index201 = _interopRequireDefault(require_setQuarter());
    var _index202 = _interopRequireDefault(require_setSeconds());
    var _index203 = _interopRequireDefault(require_setWeek());
    var _index204 = _interopRequireDefault(require_setWeekYear());
    var _index205 = _interopRequireDefault(require_setYear());
    var _index206 = _interopRequireDefault(require_startOfDay());
    var _index207 = _interopRequireDefault(require_startOfDecade());
    var _index208 = _interopRequireDefault(require_startOfHour());
    var _index209 = _interopRequireDefault(require_startOfISOWeek());
    var _index210 = _interopRequireDefault(require_startOfISOWeekYear());
    var _index211 = _interopRequireDefault(require_startOfMinute());
    var _index212 = _interopRequireDefault(require_startOfMonth());
    var _index213 = _interopRequireDefault(require_startOfQuarter());
    var _index214 = _interopRequireDefault(require_startOfSecond());
    var _index215 = _interopRequireDefault(require_startOfToday());
    var _index216 = _interopRequireDefault(require_startOfTomorrow());
    var _index217 = _interopRequireDefault(require_startOfWeek());
    var _index218 = _interopRequireDefault(require_startOfWeekYear());
    var _index219 = _interopRequireDefault(require_startOfYear());
    var _index220 = _interopRequireDefault(require_startOfYesterday());
    var _index221 = _interopRequireDefault(require_sub());
    var _index222 = _interopRequireDefault(require_subBusinessDays());
    var _index223 = _interopRequireDefault(require_subDays());
    var _index224 = _interopRequireDefault(require_subHours());
    var _index225 = _interopRequireDefault(require_subISOWeekYears());
    var _index226 = _interopRequireDefault(require_subMilliseconds());
    var _index227 = _interopRequireDefault(require_subMinutes());
    var _index228 = _interopRequireDefault(require_subMonths());
    var _index229 = _interopRequireDefault(require_subQuarters());
    var _index230 = _interopRequireDefault(require_subSeconds());
    var _index231 = _interopRequireDefault(require_subWeeks());
    var _index232 = _interopRequireDefault(require_subYears());
    var _index233 = _interopRequireDefault(require_toDate());
    var _index234 = _interopRequireDefault(require_weeksToDays());
    var _index235 = _interopRequireDefault(require_yearsToMonths());
    var _index236 = _interopRequireDefault(require_yearsToQuarters());
    var _index237 = require_constants();
    Object.keys(_index237).forEach(function(key) {
      if (key === "default" || key === "__esModule")
        return;
      if (Object.prototype.hasOwnProperty.call(_exportNames, key))
        return;
      Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
          return _index237[key];
        }
      });
    });
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
  }
});

// node_modules/lodash/_baseGet.js
var require_baseGet = __commonJS({
  "node_modules/lodash/_baseGet.js"(exports, module2) {
    init_shims();
    var castPath = require_castPath();
    var toKey = require_toKey();
    function baseGet(object, path) {
      path = castPath(path, object);
      var index2 = 0, length = path.length;
      while (object != null && index2 < length) {
        object = object[toKey(path[index2++])];
      }
      return index2 && index2 == length ? object : void 0;
    }
    module2.exports = baseGet;
  }
});

// node_modules/lodash/get.js
var require_get = __commonJS({
  "node_modules/lodash/get.js"(exports, module2) {
    init_shims();
    var baseGet = require_baseGet();
    function get2(object, path, defaultValue) {
      var result = object == null ? void 0 : baseGet(object, path);
      return result === void 0 ? defaultValue : result;
    }
    module2.exports = get2;
  }
});

// node_modules/lodash/_baseSlice.js
var require_baseSlice = __commonJS({
  "node_modules/lodash/_baseSlice.js"(exports, module2) {
    init_shims();
    function baseSlice(array, start, end) {
      var index2 = -1, length = array.length;
      if (start < 0) {
        start = -start > length ? 0 : length + start;
      }
      end = end > length ? length : end;
      if (end < 0) {
        end += length;
      }
      length = start > end ? 0 : end - start >>> 0;
      start >>>= 0;
      var result = Array(length);
      while (++index2 < length) {
        result[index2] = array[index2 + start];
      }
      return result;
    }
    module2.exports = baseSlice;
  }
});

// node_modules/lodash/_castSlice.js
var require_castSlice = __commonJS({
  "node_modules/lodash/_castSlice.js"(exports, module2) {
    init_shims();
    var baseSlice = require_baseSlice();
    function castSlice(array, start, end) {
      var length = array.length;
      end = end === void 0 ? length : end;
      return !start && end >= length ? array : baseSlice(array, start, end);
    }
    module2.exports = castSlice;
  }
});

// node_modules/lodash/_hasUnicode.js
var require_hasUnicode = __commonJS({
  "node_modules/lodash/_hasUnicode.js"(exports, module2) {
    init_shims();
    var rsAstralRange = "\\ud800-\\udfff";
    var rsComboMarksRange = "\\u0300-\\u036f";
    var reComboHalfMarksRange = "\\ufe20-\\ufe2f";
    var rsComboSymbolsRange = "\\u20d0-\\u20ff";
    var rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;
    var rsVarRange = "\\ufe0e\\ufe0f";
    var rsZWJ = "\\u200d";
    var reHasUnicode = RegExp("[" + rsZWJ + rsAstralRange + rsComboRange + rsVarRange + "]");
    function hasUnicode(string) {
      return reHasUnicode.test(string);
    }
    module2.exports = hasUnicode;
  }
});

// node_modules/lodash/_baseIsRegExp.js
var require_baseIsRegExp = __commonJS({
  "node_modules/lodash/_baseIsRegExp.js"(exports, module2) {
    init_shims();
    var baseGetTag = require_baseGetTag();
    var isObjectLike = require_isObjectLike();
    var regexpTag = "[object RegExp]";
    function baseIsRegExp(value) {
      return isObjectLike(value) && baseGetTag(value) == regexpTag;
    }
    module2.exports = baseIsRegExp;
  }
});

// node_modules/lodash/_baseUnary.js
var require_baseUnary = __commonJS({
  "node_modules/lodash/_baseUnary.js"(exports, module2) {
    init_shims();
    function baseUnary(func) {
      return function(value) {
        return func(value);
      };
    }
    module2.exports = baseUnary;
  }
});

// node_modules/lodash/_nodeUtil.js
var require_nodeUtil = __commonJS({
  "node_modules/lodash/_nodeUtil.js"(exports, module2) {
    init_shims();
    var freeGlobal = require_freeGlobal();
    var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
    var freeModule = freeExports && typeof module2 == "object" && module2 && !module2.nodeType && module2;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var freeProcess = moduleExports && freeGlobal.process;
    var nodeUtil = function() {
      try {
        var types2 = freeModule && freeModule.require && freeModule.require("util").types;
        if (types2) {
          return types2;
        }
        return freeProcess && freeProcess.binding && freeProcess.binding("util");
      } catch (e) {
      }
    }();
    module2.exports = nodeUtil;
  }
});

// node_modules/lodash/isRegExp.js
var require_isRegExp = __commonJS({
  "node_modules/lodash/isRegExp.js"(exports, module2) {
    init_shims();
    var baseIsRegExp = require_baseIsRegExp();
    var baseUnary = require_baseUnary();
    var nodeUtil = require_nodeUtil();
    var nodeIsRegExp = nodeUtil && nodeUtil.isRegExp;
    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;
    module2.exports = isRegExp;
  }
});

// node_modules/lodash/_baseProperty.js
var require_baseProperty = __commonJS({
  "node_modules/lodash/_baseProperty.js"(exports, module2) {
    init_shims();
    function baseProperty(key) {
      return function(object) {
        return object == null ? void 0 : object[key];
      };
    }
    module2.exports = baseProperty;
  }
});

// node_modules/lodash/_asciiSize.js
var require_asciiSize = __commonJS({
  "node_modules/lodash/_asciiSize.js"(exports, module2) {
    init_shims();
    var baseProperty = require_baseProperty();
    var asciiSize = baseProperty("length");
    module2.exports = asciiSize;
  }
});

// node_modules/lodash/_unicodeSize.js
var require_unicodeSize = __commonJS({
  "node_modules/lodash/_unicodeSize.js"(exports, module2) {
    init_shims();
    var rsAstralRange = "\\ud800-\\udfff";
    var rsComboMarksRange = "\\u0300-\\u036f";
    var reComboHalfMarksRange = "\\ufe20-\\ufe2f";
    var rsComboSymbolsRange = "\\u20d0-\\u20ff";
    var rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;
    var rsVarRange = "\\ufe0e\\ufe0f";
    var rsAstral = "[" + rsAstralRange + "]";
    var rsCombo = "[" + rsComboRange + "]";
    var rsFitz = "\\ud83c[\\udffb-\\udfff]";
    var rsModifier = "(?:" + rsCombo + "|" + rsFitz + ")";
    var rsNonAstral = "[^" + rsAstralRange + "]";
    var rsRegional = "(?:\\ud83c[\\udde6-\\uddff]){2}";
    var rsSurrPair = "[\\ud800-\\udbff][\\udc00-\\udfff]";
    var rsZWJ = "\\u200d";
    var reOptMod = rsModifier + "?";
    var rsOptVar = "[" + rsVarRange + "]?";
    var rsOptJoin = "(?:" + rsZWJ + "(?:" + [rsNonAstral, rsRegional, rsSurrPair].join("|") + ")" + rsOptVar + reOptMod + ")*";
    var rsSeq = rsOptVar + reOptMod + rsOptJoin;
    var rsSymbol = "(?:" + [rsNonAstral + rsCombo + "?", rsCombo, rsRegional, rsSurrPair, rsAstral].join("|") + ")";
    var reUnicode = RegExp(rsFitz + "(?=" + rsFitz + ")|" + rsSymbol + rsSeq, "g");
    function unicodeSize(string) {
      var result = reUnicode.lastIndex = 0;
      while (reUnicode.test(string)) {
        ++result;
      }
      return result;
    }
    module2.exports = unicodeSize;
  }
});

// node_modules/lodash/_stringSize.js
var require_stringSize = __commonJS({
  "node_modules/lodash/_stringSize.js"(exports, module2) {
    init_shims();
    var asciiSize = require_asciiSize();
    var hasUnicode = require_hasUnicode();
    var unicodeSize = require_unicodeSize();
    function stringSize(string) {
      return hasUnicode(string) ? unicodeSize(string) : asciiSize(string);
    }
    module2.exports = stringSize;
  }
});

// node_modules/lodash/_asciiToArray.js
var require_asciiToArray = __commonJS({
  "node_modules/lodash/_asciiToArray.js"(exports, module2) {
    init_shims();
    function asciiToArray(string) {
      return string.split("");
    }
    module2.exports = asciiToArray;
  }
});

// node_modules/lodash/_unicodeToArray.js
var require_unicodeToArray = __commonJS({
  "node_modules/lodash/_unicodeToArray.js"(exports, module2) {
    init_shims();
    var rsAstralRange = "\\ud800-\\udfff";
    var rsComboMarksRange = "\\u0300-\\u036f";
    var reComboHalfMarksRange = "\\ufe20-\\ufe2f";
    var rsComboSymbolsRange = "\\u20d0-\\u20ff";
    var rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;
    var rsVarRange = "\\ufe0e\\ufe0f";
    var rsAstral = "[" + rsAstralRange + "]";
    var rsCombo = "[" + rsComboRange + "]";
    var rsFitz = "\\ud83c[\\udffb-\\udfff]";
    var rsModifier = "(?:" + rsCombo + "|" + rsFitz + ")";
    var rsNonAstral = "[^" + rsAstralRange + "]";
    var rsRegional = "(?:\\ud83c[\\udde6-\\uddff]){2}";
    var rsSurrPair = "[\\ud800-\\udbff][\\udc00-\\udfff]";
    var rsZWJ = "\\u200d";
    var reOptMod = rsModifier + "?";
    var rsOptVar = "[" + rsVarRange + "]?";
    var rsOptJoin = "(?:" + rsZWJ + "(?:" + [rsNonAstral, rsRegional, rsSurrPair].join("|") + ")" + rsOptVar + reOptMod + ")*";
    var rsSeq = rsOptVar + reOptMod + rsOptJoin;
    var rsSymbol = "(?:" + [rsNonAstral + rsCombo + "?", rsCombo, rsRegional, rsSurrPair, rsAstral].join("|") + ")";
    var reUnicode = RegExp(rsFitz + "(?=" + rsFitz + ")|" + rsSymbol + rsSeq, "g");
    function unicodeToArray(string) {
      return string.match(reUnicode) || [];
    }
    module2.exports = unicodeToArray;
  }
});

// node_modules/lodash/_stringToArray.js
var require_stringToArray = __commonJS({
  "node_modules/lodash/_stringToArray.js"(exports, module2) {
    init_shims();
    var asciiToArray = require_asciiToArray();
    var hasUnicode = require_hasUnicode();
    var unicodeToArray = require_unicodeToArray();
    function stringToArray(string) {
      return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);
    }
    module2.exports = stringToArray;
  }
});

// node_modules/lodash/_trimmedEndIndex.js
var require_trimmedEndIndex = __commonJS({
  "node_modules/lodash/_trimmedEndIndex.js"(exports, module2) {
    init_shims();
    var reWhitespace = /\s/;
    function trimmedEndIndex(string) {
      var index2 = string.length;
      while (index2-- && reWhitespace.test(string.charAt(index2))) {
      }
      return index2;
    }
    module2.exports = trimmedEndIndex;
  }
});

// node_modules/lodash/_baseTrim.js
var require_baseTrim = __commonJS({
  "node_modules/lodash/_baseTrim.js"(exports, module2) {
    init_shims();
    var trimmedEndIndex = require_trimmedEndIndex();
    var reTrimStart = /^\s+/;
    function baseTrim(string) {
      return string ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, "") : string;
    }
    module2.exports = baseTrim;
  }
});

// node_modules/lodash/toNumber.js
var require_toNumber = __commonJS({
  "node_modules/lodash/toNumber.js"(exports, module2) {
    init_shims();
    var baseTrim = require_baseTrim();
    var isObject = require_isObject();
    var isSymbol = require_isSymbol();
    var NAN = 0 / 0;
    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
    var reIsBinary = /^0b[01]+$/i;
    var reIsOctal = /^0o[0-7]+$/i;
    var freeParseInt = parseInt;
    function toNumber(value) {
      if (typeof value == "number") {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == "function" ? value.valueOf() : value;
        value = isObject(other) ? other + "" : other;
      }
      if (typeof value != "string") {
        return value === 0 ? value : +value;
      }
      value = baseTrim(value);
      var isBinary = reIsBinary.test(value);
      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
    }
    module2.exports = toNumber;
  }
});

// node_modules/lodash/toFinite.js
var require_toFinite = __commonJS({
  "node_modules/lodash/toFinite.js"(exports, module2) {
    init_shims();
    var toNumber = require_toNumber();
    var INFINITY = 1 / 0;
    var MAX_INTEGER = 17976931348623157e292;
    function toFinite(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }
      value = toNumber(value);
      if (value === INFINITY || value === -INFINITY) {
        var sign = value < 0 ? -1 : 1;
        return sign * MAX_INTEGER;
      }
      return value === value ? value : 0;
    }
    module2.exports = toFinite;
  }
});

// node_modules/lodash/toInteger.js
var require_toInteger2 = __commonJS({
  "node_modules/lodash/toInteger.js"(exports, module2) {
    init_shims();
    var toFinite = require_toFinite();
    function toInteger(value) {
      var result = toFinite(value), remainder = result % 1;
      return result === result ? remainder ? result - remainder : result : 0;
    }
    module2.exports = toInteger;
  }
});

// node_modules/lodash/truncate.js
var require_truncate = __commonJS({
  "node_modules/lodash/truncate.js"(exports, module2) {
    init_shims();
    var baseToString = require_baseToString();
    var castSlice = require_castSlice();
    var hasUnicode = require_hasUnicode();
    var isObject = require_isObject();
    var isRegExp = require_isRegExp();
    var stringSize = require_stringSize();
    var stringToArray = require_stringToArray();
    var toInteger = require_toInteger2();
    var toString = require_toString();
    var DEFAULT_TRUNC_LENGTH = 30;
    var DEFAULT_TRUNC_OMISSION = "...";
    var reFlags = /\w*$/;
    function truncate2(string, options2) {
      var length = DEFAULT_TRUNC_LENGTH, omission = DEFAULT_TRUNC_OMISSION;
      if (isObject(options2)) {
        var separator = "separator" in options2 ? options2.separator : separator;
        length = "length" in options2 ? toInteger(options2.length) : length;
        omission = "omission" in options2 ? baseToString(options2.omission) : omission;
      }
      string = toString(string);
      var strLength = string.length;
      if (hasUnicode(string)) {
        var strSymbols = stringToArray(string);
        strLength = strSymbols.length;
      }
      if (length >= strLength) {
        return string;
      }
      var end = length - stringSize(omission);
      if (end < 1) {
        return omission;
      }
      var result = strSymbols ? castSlice(strSymbols, 0, end).join("") : string.slice(0, end);
      if (separator === void 0) {
        return result + omission;
      }
      if (strSymbols) {
        end += result.length - end;
      }
      if (isRegExp(separator)) {
        if (string.slice(end).search(separator)) {
          var match, substring = result;
          if (!separator.global) {
            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + "g");
          }
          separator.lastIndex = 0;
          while (match = separator.exec(substring)) {
            var newEnd = match.index;
          }
          result = result.slice(0, newEnd === void 0 ? end : newEnd);
        }
      } else if (string.indexOf(baseToString(separator), end) != end) {
        var index2 = result.lastIndexOf(separator);
        if (index2 > -1) {
          result = result.slice(0, index2);
        }
      }
      return result + omission;
    }
    module2.exports = truncate2;
  }
});

// node_modules/lodash/_defineProperty.js
var require_defineProperty = __commonJS({
  "node_modules/lodash/_defineProperty.js"(exports, module2) {
    init_shims();
    var getNative = require_getNative();
    var defineProperty = function() {
      try {
        var func = getNative(Object, "defineProperty");
        func({}, "", {});
        return func;
      } catch (e) {
      }
    }();
    module2.exports = defineProperty;
  }
});

// node_modules/lodash/_baseAssignValue.js
var require_baseAssignValue = __commonJS({
  "node_modules/lodash/_baseAssignValue.js"(exports, module2) {
    init_shims();
    var defineProperty = require_defineProperty();
    function baseAssignValue(object, key, value) {
      if (key == "__proto__" && defineProperty) {
        defineProperty(object, key, {
          "configurable": true,
          "enumerable": true,
          "value": value,
          "writable": true
        });
      } else {
        object[key] = value;
      }
    }
    module2.exports = baseAssignValue;
  }
});

// node_modules/lodash/_arrayAggregator.js
var require_arrayAggregator = __commonJS({
  "node_modules/lodash/_arrayAggregator.js"(exports, module2) {
    init_shims();
    function arrayAggregator(array, setter, iteratee, accumulator) {
      var index2 = -1, length = array == null ? 0 : array.length;
      while (++index2 < length) {
        var value = array[index2];
        setter(accumulator, value, iteratee(value), array);
      }
      return accumulator;
    }
    module2.exports = arrayAggregator;
  }
});

// node_modules/lodash/_createBaseFor.js
var require_createBaseFor = __commonJS({
  "node_modules/lodash/_createBaseFor.js"(exports, module2) {
    init_shims();
    function createBaseFor(fromRight) {
      return function(object, iteratee, keysFunc) {
        var index2 = -1, iterable = Object(object), props = keysFunc(object), length = props.length;
        while (length--) {
          var key = props[fromRight ? length : ++index2];
          if (iteratee(iterable[key], key, iterable) === false) {
            break;
          }
        }
        return object;
      };
    }
    module2.exports = createBaseFor;
  }
});

// node_modules/lodash/_baseFor.js
var require_baseFor = __commonJS({
  "node_modules/lodash/_baseFor.js"(exports, module2) {
    init_shims();
    var createBaseFor = require_createBaseFor();
    var baseFor = createBaseFor();
    module2.exports = baseFor;
  }
});

// node_modules/lodash/_baseTimes.js
var require_baseTimes = __commonJS({
  "node_modules/lodash/_baseTimes.js"(exports, module2) {
    init_shims();
    function baseTimes(n, iteratee) {
      var index2 = -1, result = Array(n);
      while (++index2 < n) {
        result[index2] = iteratee(index2);
      }
      return result;
    }
    module2.exports = baseTimes;
  }
});

// node_modules/lodash/stubFalse.js
var require_stubFalse = __commonJS({
  "node_modules/lodash/stubFalse.js"(exports, module2) {
    init_shims();
    function stubFalse() {
      return false;
    }
    module2.exports = stubFalse;
  }
});

// node_modules/lodash/isBuffer.js
var require_isBuffer = __commonJS({
  "node_modules/lodash/isBuffer.js"(exports, module2) {
    init_shims();
    var root = require_root();
    var stubFalse = require_stubFalse();
    var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
    var freeModule = freeExports && typeof module2 == "object" && module2 && !module2.nodeType && module2;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var Buffer2 = moduleExports ? root.Buffer : void 0;
    var nativeIsBuffer = Buffer2 ? Buffer2.isBuffer : void 0;
    var isBuffer = nativeIsBuffer || stubFalse;
    module2.exports = isBuffer;
  }
});

// node_modules/lodash/_baseIsTypedArray.js
var require_baseIsTypedArray = __commonJS({
  "node_modules/lodash/_baseIsTypedArray.js"(exports, module2) {
    init_shims();
    var baseGetTag = require_baseGetTag();
    var isLength = require_isLength();
    var isObjectLike = require_isObjectLike();
    var argsTag = "[object Arguments]";
    var arrayTag = "[object Array]";
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var errorTag = "[object Error]";
    var funcTag = "[object Function]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var objectTag = "[object Object]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var weakMapTag = "[object WeakMap]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var float32Tag = "[object Float32Array]";
    var float64Tag = "[object Float64Array]";
    var int8Tag = "[object Int8Array]";
    var int16Tag = "[object Int16Array]";
    var int32Tag = "[object Int32Array]";
    var uint8Tag = "[object Uint8Array]";
    var uint8ClampedTag = "[object Uint8ClampedArray]";
    var uint16Tag = "[object Uint16Array]";
    var uint32Tag = "[object Uint32Array]";
    var typedArrayTags = {};
    typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
    typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
    function baseIsTypedArray(value) {
      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }
    module2.exports = baseIsTypedArray;
  }
});

// node_modules/lodash/isTypedArray.js
var require_isTypedArray = __commonJS({
  "node_modules/lodash/isTypedArray.js"(exports, module2) {
    init_shims();
    var baseIsTypedArray = require_baseIsTypedArray();
    var baseUnary = require_baseUnary();
    var nodeUtil = require_nodeUtil();
    var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
    module2.exports = isTypedArray;
  }
});

// node_modules/lodash/_arrayLikeKeys.js
var require_arrayLikeKeys = __commonJS({
  "node_modules/lodash/_arrayLikeKeys.js"(exports, module2) {
    init_shims();
    var baseTimes = require_baseTimes();
    var isArguments = require_isArguments();
    var isArray = require_isArray();
    var isBuffer = require_isBuffer();
    var isIndex = require_isIndex();
    var isTypedArray = require_isTypedArray();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function arrayLikeKeys(value, inherited) {
      var isArr = isArray(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer(value), isType = !isArr && !isArg && !isBuff && isTypedArray(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes(value.length, String) : [], length = result.length;
      for (var key in value) {
        if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && (key == "length" || isBuff && (key == "offset" || key == "parent") || isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || isIndex(key, length)))) {
          result.push(key);
        }
      }
      return result;
    }
    module2.exports = arrayLikeKeys;
  }
});

// node_modules/lodash/_isPrototype.js
var require_isPrototype = __commonJS({
  "node_modules/lodash/_isPrototype.js"(exports, module2) {
    init_shims();
    var objectProto = Object.prototype;
    function isPrototype(value) {
      var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto;
      return value === proto;
    }
    module2.exports = isPrototype;
  }
});

// node_modules/lodash/_overArg.js
var require_overArg = __commonJS({
  "node_modules/lodash/_overArg.js"(exports, module2) {
    init_shims();
    function overArg(func, transform) {
      return function(arg) {
        return func(transform(arg));
      };
    }
    module2.exports = overArg;
  }
});

// node_modules/lodash/_nativeKeys.js
var require_nativeKeys = __commonJS({
  "node_modules/lodash/_nativeKeys.js"(exports, module2) {
    init_shims();
    var overArg = require_overArg();
    var nativeKeys = overArg(Object.keys, Object);
    module2.exports = nativeKeys;
  }
});

// node_modules/lodash/_baseKeys.js
var require_baseKeys = __commonJS({
  "node_modules/lodash/_baseKeys.js"(exports, module2) {
    init_shims();
    var isPrototype = require_isPrototype();
    var nativeKeys = require_nativeKeys();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key in Object(object)) {
        if (hasOwnProperty.call(object, key) && key != "constructor") {
          result.push(key);
        }
      }
      return result;
    }
    module2.exports = baseKeys;
  }
});

// node_modules/lodash/isArrayLike.js
var require_isArrayLike = __commonJS({
  "node_modules/lodash/isArrayLike.js"(exports, module2) {
    init_shims();
    var isFunction = require_isFunction();
    var isLength = require_isLength();
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }
    module2.exports = isArrayLike;
  }
});

// node_modules/lodash/keys.js
var require_keys = __commonJS({
  "node_modules/lodash/keys.js"(exports, module2) {
    init_shims();
    var arrayLikeKeys = require_arrayLikeKeys();
    var baseKeys = require_baseKeys();
    var isArrayLike = require_isArrayLike();
    function keys(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }
    module2.exports = keys;
  }
});

// node_modules/lodash/_baseForOwn.js
var require_baseForOwn = __commonJS({
  "node_modules/lodash/_baseForOwn.js"(exports, module2) {
    init_shims();
    var baseFor = require_baseFor();
    var keys = require_keys();
    function baseForOwn(object, iteratee) {
      return object && baseFor(object, iteratee, keys);
    }
    module2.exports = baseForOwn;
  }
});

// node_modules/lodash/_createBaseEach.js
var require_createBaseEach = __commonJS({
  "node_modules/lodash/_createBaseEach.js"(exports, module2) {
    init_shims();
    var isArrayLike = require_isArrayLike();
    function createBaseEach(eachFunc, fromRight) {
      return function(collection, iteratee) {
        if (collection == null) {
          return collection;
        }
        if (!isArrayLike(collection)) {
          return eachFunc(collection, iteratee);
        }
        var length = collection.length, index2 = fromRight ? length : -1, iterable = Object(collection);
        while (fromRight ? index2-- : ++index2 < length) {
          if (iteratee(iterable[index2], index2, iterable) === false) {
            break;
          }
        }
        return collection;
      };
    }
    module2.exports = createBaseEach;
  }
});

// node_modules/lodash/_baseEach.js
var require_baseEach = __commonJS({
  "node_modules/lodash/_baseEach.js"(exports, module2) {
    init_shims();
    var baseForOwn = require_baseForOwn();
    var createBaseEach = require_createBaseEach();
    var baseEach = createBaseEach(baseForOwn);
    module2.exports = baseEach;
  }
});

// node_modules/lodash/_baseAggregator.js
var require_baseAggregator = __commonJS({
  "node_modules/lodash/_baseAggregator.js"(exports, module2) {
    init_shims();
    var baseEach = require_baseEach();
    function baseAggregator(collection, setter, iteratee, accumulator) {
      baseEach(collection, function(value, key, collection2) {
        setter(accumulator, value, iteratee(value), collection2);
      });
      return accumulator;
    }
    module2.exports = baseAggregator;
  }
});

// node_modules/lodash/_stackClear.js
var require_stackClear = __commonJS({
  "node_modules/lodash/_stackClear.js"(exports, module2) {
    init_shims();
    var ListCache = require_ListCache();
    function stackClear() {
      this.__data__ = new ListCache();
      this.size = 0;
    }
    module2.exports = stackClear;
  }
});

// node_modules/lodash/_stackDelete.js
var require_stackDelete = __commonJS({
  "node_modules/lodash/_stackDelete.js"(exports, module2) {
    init_shims();
    function stackDelete(key) {
      var data = this.__data__, result = data["delete"](key);
      this.size = data.size;
      return result;
    }
    module2.exports = stackDelete;
  }
});

// node_modules/lodash/_stackGet.js
var require_stackGet = __commonJS({
  "node_modules/lodash/_stackGet.js"(exports, module2) {
    init_shims();
    function stackGet(key) {
      return this.__data__.get(key);
    }
    module2.exports = stackGet;
  }
});

// node_modules/lodash/_stackHas.js
var require_stackHas = __commonJS({
  "node_modules/lodash/_stackHas.js"(exports, module2) {
    init_shims();
    function stackHas(key) {
      return this.__data__.has(key);
    }
    module2.exports = stackHas;
  }
});

// node_modules/lodash/_stackSet.js
var require_stackSet = __commonJS({
  "node_modules/lodash/_stackSet.js"(exports, module2) {
    init_shims();
    var ListCache = require_ListCache();
    var Map2 = require_Map();
    var MapCache = require_MapCache();
    var LARGE_ARRAY_SIZE = 200;
    function stackSet(key, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map2 || pairs.length < LARGE_ARRAY_SIZE - 1) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key, value);
      this.size = data.size;
      return this;
    }
    module2.exports = stackSet;
  }
});

// node_modules/lodash/_Stack.js
var require_Stack = __commonJS({
  "node_modules/lodash/_Stack.js"(exports, module2) {
    init_shims();
    var ListCache = require_ListCache();
    var stackClear = require_stackClear();
    var stackDelete = require_stackDelete();
    var stackGet = require_stackGet();
    var stackHas = require_stackHas();
    var stackSet = require_stackSet();
    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }
    Stack.prototype.clear = stackClear;
    Stack.prototype["delete"] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;
    module2.exports = Stack;
  }
});

// node_modules/lodash/_setCacheAdd.js
var require_setCacheAdd = __commonJS({
  "node_modules/lodash/_setCacheAdd.js"(exports, module2) {
    init_shims();
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }
    module2.exports = setCacheAdd;
  }
});

// node_modules/lodash/_setCacheHas.js
var require_setCacheHas = __commonJS({
  "node_modules/lodash/_setCacheHas.js"(exports, module2) {
    init_shims();
    function setCacheHas(value) {
      return this.__data__.has(value);
    }
    module2.exports = setCacheHas;
  }
});

// node_modules/lodash/_SetCache.js
var require_SetCache = __commonJS({
  "node_modules/lodash/_SetCache.js"(exports, module2) {
    init_shims();
    var MapCache = require_MapCache();
    var setCacheAdd = require_setCacheAdd();
    var setCacheHas = require_setCacheHas();
    function SetCache(values) {
      var index2 = -1, length = values == null ? 0 : values.length;
      this.__data__ = new MapCache();
      while (++index2 < length) {
        this.add(values[index2]);
      }
    }
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;
    module2.exports = SetCache;
  }
});

// node_modules/lodash/_arraySome.js
var require_arraySome = __commonJS({
  "node_modules/lodash/_arraySome.js"(exports, module2) {
    init_shims();
    function arraySome(array, predicate) {
      var index2 = -1, length = array == null ? 0 : array.length;
      while (++index2 < length) {
        if (predicate(array[index2], index2, array)) {
          return true;
        }
      }
      return false;
    }
    module2.exports = arraySome;
  }
});

// node_modules/lodash/_cacheHas.js
var require_cacheHas = __commonJS({
  "node_modules/lodash/_cacheHas.js"(exports, module2) {
    init_shims();
    function cacheHas(cache, key) {
      return cache.has(key);
    }
    module2.exports = cacheHas;
  }
});

// node_modules/lodash/_equalArrays.js
var require_equalArrays = __commonJS({
  "node_modules/lodash/_equalArrays.js"(exports, module2) {
    init_shims();
    var SetCache = require_SetCache();
    var arraySome = require_arraySome();
    var cacheHas = require_cacheHas();
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array.length, othLength = other.length;
      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      var arrStacked = stack.get(array);
      var othStacked = stack.get(other);
      if (arrStacked && othStacked) {
        return arrStacked == other && othStacked == array;
      }
      var index2 = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : void 0;
      stack.set(array, other);
      stack.set(other, array);
      while (++index2 < arrLength) {
        var arrValue = array[index2], othValue = other[index2];
        if (customizer) {
          var compared = isPartial ? customizer(othValue, arrValue, index2, other, array, stack) : customizer(arrValue, othValue, index2, array, other, stack);
        }
        if (compared !== void 0) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        if (seen) {
          if (!arraySome(other, function(othValue2, othIndex) {
            if (!cacheHas(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
              return seen.push(othIndex);
            }
          })) {
            result = false;
            break;
          }
        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
          result = false;
          break;
        }
      }
      stack["delete"](array);
      stack["delete"](other);
      return result;
    }
    module2.exports = equalArrays;
  }
});

// node_modules/lodash/_Uint8Array.js
var require_Uint8Array = __commonJS({
  "node_modules/lodash/_Uint8Array.js"(exports, module2) {
    init_shims();
    var root = require_root();
    var Uint8Array2 = root.Uint8Array;
    module2.exports = Uint8Array2;
  }
});

// node_modules/lodash/_mapToArray.js
var require_mapToArray = __commonJS({
  "node_modules/lodash/_mapToArray.js"(exports, module2) {
    init_shims();
    function mapToArray(map) {
      var index2 = -1, result = Array(map.size);
      map.forEach(function(value, key) {
        result[++index2] = [key, value];
      });
      return result;
    }
    module2.exports = mapToArray;
  }
});

// node_modules/lodash/_setToArray.js
var require_setToArray = __commonJS({
  "node_modules/lodash/_setToArray.js"(exports, module2) {
    init_shims();
    function setToArray(set) {
      var index2 = -1, result = Array(set.size);
      set.forEach(function(value) {
        result[++index2] = value;
      });
      return result;
    }
    module2.exports = setToArray;
  }
});

// node_modules/lodash/_equalByTag.js
var require_equalByTag = __commonJS({
  "node_modules/lodash/_equalByTag.js"(exports, module2) {
    init_shims();
    var Symbol2 = require_Symbol();
    var Uint8Array2 = require_Uint8Array();
    var eq = require_eq();
    var equalArrays = require_equalArrays();
    var mapToArray = require_mapToArray();
    var setToArray = require_setToArray();
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var errorTag = "[object Error]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var symbolTag = "[object Symbol]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var symbolProto = Symbol2 ? Symbol2.prototype : void 0;
    var symbolValueOf = symbolProto ? symbolProto.valueOf : void 0;
    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag:
          if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
            return false;
          }
          object = object.buffer;
          other = other.buffer;
        case arrayBufferTag:
          if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array2(object), new Uint8Array2(other))) {
            return false;
          }
          return true;
        case boolTag:
        case dateTag:
        case numberTag:
          return eq(+object, +other);
        case errorTag:
          return object.name == other.name && object.message == other.message;
        case regexpTag:
        case stringTag:
          return object == other + "";
        case mapTag:
          var convert = mapToArray;
        case setTag:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
          convert || (convert = setToArray);
          if (object.size != other.size && !isPartial) {
            return false;
          }
          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= COMPARE_UNORDERED_FLAG;
          stack.set(object, other);
          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
          stack["delete"](object);
          return result;
        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object) == symbolValueOf.call(other);
          }
      }
      return false;
    }
    module2.exports = equalByTag;
  }
});

// node_modules/lodash/_arrayPush.js
var require_arrayPush = __commonJS({
  "node_modules/lodash/_arrayPush.js"(exports, module2) {
    init_shims();
    function arrayPush(array, values) {
      var index2 = -1, length = values.length, offset = array.length;
      while (++index2 < length) {
        array[offset + index2] = values[index2];
      }
      return array;
    }
    module2.exports = arrayPush;
  }
});

// node_modules/lodash/_baseGetAllKeys.js
var require_baseGetAllKeys = __commonJS({
  "node_modules/lodash/_baseGetAllKeys.js"(exports, module2) {
    init_shims();
    var arrayPush = require_arrayPush();
    var isArray = require_isArray();
    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
      var result = keysFunc(object);
      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
    }
    module2.exports = baseGetAllKeys;
  }
});

// node_modules/lodash/_arrayFilter.js
var require_arrayFilter = __commonJS({
  "node_modules/lodash/_arrayFilter.js"(exports, module2) {
    init_shims();
    function arrayFilter(array, predicate) {
      var index2 = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
      while (++index2 < length) {
        var value = array[index2];
        if (predicate(value, index2, array)) {
          result[resIndex++] = value;
        }
      }
      return result;
    }
    module2.exports = arrayFilter;
  }
});

// node_modules/lodash/stubArray.js
var require_stubArray = __commonJS({
  "node_modules/lodash/stubArray.js"(exports, module2) {
    init_shims();
    function stubArray() {
      return [];
    }
    module2.exports = stubArray;
  }
});

// node_modules/lodash/_getSymbols.js
var require_getSymbols = __commonJS({
  "node_modules/lodash/_getSymbols.js"(exports, module2) {
    init_shims();
    var arrayFilter = require_arrayFilter();
    var stubArray = require_stubArray();
    var objectProto = Object.prototype;
    var propertyIsEnumerable = objectProto.propertyIsEnumerable;
    var nativeGetSymbols = Object.getOwnPropertySymbols;
    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
      if (object == null) {
        return [];
      }
      object = Object(object);
      return arrayFilter(nativeGetSymbols(object), function(symbol) {
        return propertyIsEnumerable.call(object, symbol);
      });
    };
    module2.exports = getSymbols;
  }
});

// node_modules/lodash/_getAllKeys.js
var require_getAllKeys = __commonJS({
  "node_modules/lodash/_getAllKeys.js"(exports, module2) {
    init_shims();
    var baseGetAllKeys = require_baseGetAllKeys();
    var getSymbols = require_getSymbols();
    var keys = require_keys();
    function getAllKeys(object) {
      return baseGetAllKeys(object, keys, getSymbols);
    }
    module2.exports = getAllKeys;
  }
});

// node_modules/lodash/_equalObjects.js
var require_equalObjects = __commonJS({
  "node_modules/lodash/_equalObjects.js"(exports, module2) {
    init_shims();
    var getAllKeys = require_getAllKeys();
    var COMPARE_PARTIAL_FLAG = 1;
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG, objProps = getAllKeys(object), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index2 = objLength;
      while (index2--) {
        var key = objProps[index2];
        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
          return false;
        }
      }
      var objStacked = stack.get(object);
      var othStacked = stack.get(other);
      if (objStacked && othStacked) {
        return objStacked == other && othStacked == object;
      }
      var result = true;
      stack.set(object, other);
      stack.set(other, object);
      var skipCtor = isPartial;
      while (++index2 < objLength) {
        key = objProps[index2];
        var objValue = object[key], othValue = other[key];
        if (customizer) {
          var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
        }
        if (!(compared === void 0 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == "constructor");
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor, othCtor = other.constructor;
        if (objCtor != othCtor && ("constructor" in object && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack["delete"](object);
      stack["delete"](other);
      return result;
    }
    module2.exports = equalObjects;
  }
});

// node_modules/lodash/_DataView.js
var require_DataView = __commonJS({
  "node_modules/lodash/_DataView.js"(exports, module2) {
    init_shims();
    var getNative = require_getNative();
    var root = require_root();
    var DataView2 = getNative(root, "DataView");
    module2.exports = DataView2;
  }
});

// node_modules/lodash/_Promise.js
var require_Promise = __commonJS({
  "node_modules/lodash/_Promise.js"(exports, module2) {
    init_shims();
    var getNative = require_getNative();
    var root = require_root();
    var Promise2 = getNative(root, "Promise");
    module2.exports = Promise2;
  }
});

// node_modules/lodash/_Set.js
var require_Set = __commonJS({
  "node_modules/lodash/_Set.js"(exports, module2) {
    init_shims();
    var getNative = require_getNative();
    var root = require_root();
    var Set2 = getNative(root, "Set");
    module2.exports = Set2;
  }
});

// node_modules/lodash/_WeakMap.js
var require_WeakMap = __commonJS({
  "node_modules/lodash/_WeakMap.js"(exports, module2) {
    init_shims();
    var getNative = require_getNative();
    var root = require_root();
    var WeakMap2 = getNative(root, "WeakMap");
    module2.exports = WeakMap2;
  }
});

// node_modules/lodash/_getTag.js
var require_getTag = __commonJS({
  "node_modules/lodash/_getTag.js"(exports, module2) {
    init_shims();
    var DataView2 = require_DataView();
    var Map2 = require_Map();
    var Promise2 = require_Promise();
    var Set2 = require_Set();
    var WeakMap2 = require_WeakMap();
    var baseGetTag = require_baseGetTag();
    var toSource = require_toSource();
    var mapTag = "[object Map]";
    var objectTag = "[object Object]";
    var promiseTag = "[object Promise]";
    var setTag = "[object Set]";
    var weakMapTag = "[object WeakMap]";
    var dataViewTag = "[object DataView]";
    var dataViewCtorString = toSource(DataView2);
    var mapCtorString = toSource(Map2);
    var promiseCtorString = toSource(Promise2);
    var setCtorString = toSource(Set2);
    var weakMapCtorString = toSource(WeakMap2);
    var getTag = baseGetTag;
    if (DataView2 && getTag(new DataView2(new ArrayBuffer(1))) != dataViewTag || Map2 && getTag(new Map2()) != mapTag || Promise2 && getTag(Promise2.resolve()) != promiseTag || Set2 && getTag(new Set2()) != setTag || WeakMap2 && getTag(new WeakMap2()) != weakMapTag) {
      getTag = function(value) {
        var result = baseGetTag(value), Ctor = result == objectTag ? value.constructor : void 0, ctorString = Ctor ? toSource(Ctor) : "";
        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString:
              return dataViewTag;
            case mapCtorString:
              return mapTag;
            case promiseCtorString:
              return promiseTag;
            case setCtorString:
              return setTag;
            case weakMapCtorString:
              return weakMapTag;
          }
        }
        return result;
      };
    }
    module2.exports = getTag;
  }
});

// node_modules/lodash/_baseIsEqualDeep.js
var require_baseIsEqualDeep = __commonJS({
  "node_modules/lodash/_baseIsEqualDeep.js"(exports, module2) {
    init_shims();
    var Stack = require_Stack();
    var equalArrays = require_equalArrays();
    var equalByTag = require_equalByTag();
    var equalObjects = require_equalObjects();
    var getTag = require_getTag();
    var isArray = require_isArray();
    var isBuffer = require_isBuffer();
    var isTypedArray = require_isTypedArray();
    var COMPARE_PARTIAL_FLAG = 1;
    var argsTag = "[object Arguments]";
    var arrayTag = "[object Array]";
    var objectTag = "[object Object]";
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray(object), othIsArr = isArray(other), objTag = objIsArr ? arrayTag : getTag(object), othTag = othIsArr ? arrayTag : getTag(other);
      objTag = objTag == argsTag ? objectTag : objTag;
      othTag = othTag == argsTag ? objectTag : othTag;
      var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
      if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) {
          return false;
        }
        objIsArr = true;
        objIsObj = false;
      }
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack());
        return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
      }
      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty.call(other, "__wrapped__");
        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
          stack || (stack = new Stack());
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack());
      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
    }
    module2.exports = baseIsEqualDeep;
  }
});

// node_modules/lodash/_baseIsEqual.js
var require_baseIsEqual = __commonJS({
  "node_modules/lodash/_baseIsEqual.js"(exports, module2) {
    init_shims();
    var baseIsEqualDeep = require_baseIsEqualDeep();
    var isObjectLike = require_isObjectLike();
    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }
    module2.exports = baseIsEqual;
  }
});

// node_modules/lodash/_baseIsMatch.js
var require_baseIsMatch = __commonJS({
  "node_modules/lodash/_baseIsMatch.js"(exports, module2) {
    init_shims();
    var Stack = require_Stack();
    var baseIsEqual = require_baseIsEqual();
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    function baseIsMatch(object, source, matchData, customizer) {
      var index2 = matchData.length, length = index2, noCustomizer = !customizer;
      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (index2--) {
        var data = matchData[index2];
        if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {
          return false;
        }
      }
      while (++index2 < length) {
        data = matchData[index2];
        var key = data[0], objValue = object[key], srcValue = data[1];
        if (noCustomizer && data[2]) {
          if (objValue === void 0 && !(key in object)) {
            return false;
          }
        } else {
          var stack = new Stack();
          if (customizer) {
            var result = customizer(objValue, srcValue, key, object, source, stack);
          }
          if (!(result === void 0 ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {
            return false;
          }
        }
      }
      return true;
    }
    module2.exports = baseIsMatch;
  }
});

// node_modules/lodash/_isStrictComparable.js
var require_isStrictComparable = __commonJS({
  "node_modules/lodash/_isStrictComparable.js"(exports, module2) {
    init_shims();
    var isObject = require_isObject();
    function isStrictComparable(value) {
      return value === value && !isObject(value);
    }
    module2.exports = isStrictComparable;
  }
});

// node_modules/lodash/_getMatchData.js
var require_getMatchData = __commonJS({
  "node_modules/lodash/_getMatchData.js"(exports, module2) {
    init_shims();
    var isStrictComparable = require_isStrictComparable();
    var keys = require_keys();
    function getMatchData(object) {
      var result = keys(object), length = result.length;
      while (length--) {
        var key = result[length], value = object[key];
        result[length] = [key, value, isStrictComparable(value)];
      }
      return result;
    }
    module2.exports = getMatchData;
  }
});

// node_modules/lodash/_matchesStrictComparable.js
var require_matchesStrictComparable = __commonJS({
  "node_modules/lodash/_matchesStrictComparable.js"(exports, module2) {
    init_shims();
    function matchesStrictComparable(key, srcValue) {
      return function(object) {
        if (object == null) {
          return false;
        }
        return object[key] === srcValue && (srcValue !== void 0 || key in Object(object));
      };
    }
    module2.exports = matchesStrictComparable;
  }
});

// node_modules/lodash/_baseMatches.js
var require_baseMatches = __commonJS({
  "node_modules/lodash/_baseMatches.js"(exports, module2) {
    init_shims();
    var baseIsMatch = require_baseIsMatch();
    var getMatchData = require_getMatchData();
    var matchesStrictComparable = require_matchesStrictComparable();
    function baseMatches(source) {
      var matchData = getMatchData(source);
      if (matchData.length == 1 && matchData[0][2]) {
        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
      }
      return function(object) {
        return object === source || baseIsMatch(object, source, matchData);
      };
    }
    module2.exports = baseMatches;
  }
});

// node_modules/lodash/_baseHasIn.js
var require_baseHasIn = __commonJS({
  "node_modules/lodash/_baseHasIn.js"(exports, module2) {
    init_shims();
    function baseHasIn(object, key) {
      return object != null && key in Object(object);
    }
    module2.exports = baseHasIn;
  }
});

// node_modules/lodash/hasIn.js
var require_hasIn = __commonJS({
  "node_modules/lodash/hasIn.js"(exports, module2) {
    init_shims();
    var baseHasIn = require_baseHasIn();
    var hasPath = require_hasPath();
    function hasIn(object, path) {
      return object != null && hasPath(object, path, baseHasIn);
    }
    module2.exports = hasIn;
  }
});

// node_modules/lodash/_baseMatchesProperty.js
var require_baseMatchesProperty = __commonJS({
  "node_modules/lodash/_baseMatchesProperty.js"(exports, module2) {
    init_shims();
    var baseIsEqual = require_baseIsEqual();
    var get2 = require_get();
    var hasIn = require_hasIn();
    var isKey = require_isKey();
    var isStrictComparable = require_isStrictComparable();
    var matchesStrictComparable = require_matchesStrictComparable();
    var toKey = require_toKey();
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    function baseMatchesProperty(path, srcValue) {
      if (isKey(path) && isStrictComparable(srcValue)) {
        return matchesStrictComparable(toKey(path), srcValue);
      }
      return function(object) {
        var objValue = get2(object, path);
        return objValue === void 0 && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
      };
    }
    module2.exports = baseMatchesProperty;
  }
});

// node_modules/lodash/identity.js
var require_identity = __commonJS({
  "node_modules/lodash/identity.js"(exports, module2) {
    init_shims();
    function identity(value) {
      return value;
    }
    module2.exports = identity;
  }
});

// node_modules/lodash/_basePropertyDeep.js
var require_basePropertyDeep = __commonJS({
  "node_modules/lodash/_basePropertyDeep.js"(exports, module2) {
    init_shims();
    var baseGet = require_baseGet();
    function basePropertyDeep(path) {
      return function(object) {
        return baseGet(object, path);
      };
    }
    module2.exports = basePropertyDeep;
  }
});

// node_modules/lodash/property.js
var require_property = __commonJS({
  "node_modules/lodash/property.js"(exports, module2) {
    init_shims();
    var baseProperty = require_baseProperty();
    var basePropertyDeep = require_basePropertyDeep();
    var isKey = require_isKey();
    var toKey = require_toKey();
    function property(path) {
      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
    }
    module2.exports = property;
  }
});

// node_modules/lodash/_baseIteratee.js
var require_baseIteratee = __commonJS({
  "node_modules/lodash/_baseIteratee.js"(exports, module2) {
    init_shims();
    var baseMatches = require_baseMatches();
    var baseMatchesProperty = require_baseMatchesProperty();
    var identity = require_identity();
    var isArray = require_isArray();
    var property = require_property();
    function baseIteratee(value) {
      if (typeof value == "function") {
        return value;
      }
      if (value == null) {
        return identity;
      }
      if (typeof value == "object") {
        return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
      }
      return property(value);
    }
    module2.exports = baseIteratee;
  }
});

// node_modules/lodash/_createAggregator.js
var require_createAggregator = __commonJS({
  "node_modules/lodash/_createAggregator.js"(exports, module2) {
    init_shims();
    var arrayAggregator = require_arrayAggregator();
    var baseAggregator = require_baseAggregator();
    var baseIteratee = require_baseIteratee();
    var isArray = require_isArray();
    function createAggregator(setter, initializer) {
      return function(collection, iteratee) {
        var func = isArray(collection) ? arrayAggregator : baseAggregator, accumulator = initializer ? initializer() : {};
        return func(collection, setter, baseIteratee(iteratee, 2), accumulator);
      };
    }
    module2.exports = createAggregator;
  }
});

// node_modules/lodash/groupBy.js
var require_groupBy = __commonJS({
  "node_modules/lodash/groupBy.js"(exports, module2) {
    init_shims();
    var baseAssignValue = require_baseAssignValue();
    var createAggregator = require_createAggregator();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var groupBy2 = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        result[key].push(value);
      } else {
        baseAssignValue(result, key, [value]);
      }
    });
    module2.exports = groupBy2;
  }
});

// node_modules/lodash/keyBy.js
var require_keyBy = __commonJS({
  "node_modules/lodash/keyBy.js"(exports, module2) {
    init_shims();
    var baseAssignValue = require_baseAssignValue();
    var createAggregator = require_createAggregator();
    var keyBy2 = createAggregator(function(result, value, key) {
      baseAssignValue(result, key, value);
    });
    module2.exports = keyBy2;
  }
});

// node_modules/object-assign/index.js
var require_object_assign = __commonJS({
  "node_modules/object-assign/index.js"(exports, module2) {
    init_shims();
    "use strict";
    var getOwnPropertySymbols = Object.getOwnPropertySymbols;
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var propIsEnumerable = Object.prototype.propertyIsEnumerable;
    function toObject(val) {
      if (val === null || val === void 0) {
        throw new TypeError("Object.assign cannot be called with null or undefined");
      }
      return Object(val);
    }
    function shouldUseNative() {
      try {
        if (!Object.assign) {
          return false;
        }
        var test1 = new String("abc");
        test1[5] = "de";
        if (Object.getOwnPropertyNames(test1)[0] === "5") {
          return false;
        }
        var test2 = {};
        for (var i = 0; i < 10; i++) {
          test2["_" + String.fromCharCode(i)] = i;
        }
        var order2 = Object.getOwnPropertyNames(test2).map(function(n) {
          return test2[n];
        });
        if (order2.join("") !== "0123456789") {
          return false;
        }
        var test3 = {};
        "abcdefghijklmnopqrst".split("").forEach(function(letter) {
          test3[letter] = letter;
        });
        if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") {
          return false;
        }
        return true;
      } catch (err) {
        return false;
      }
    }
    module2.exports = shouldUseNative() ? Object.assign : function(target, source) {
      var from;
      var to = toObject(target);
      var symbols;
      for (var s2 = 1; s2 < arguments.length; s2++) {
        from = Object(arguments[s2]);
        for (var key in from) {
          if (hasOwnProperty.call(from, key)) {
            to[key] = from[key];
          }
        }
        if (getOwnPropertySymbols) {
          symbols = getOwnPropertySymbols(from);
          for (var i = 0; i < symbols.length; i++) {
            if (propIsEnumerable.call(from, symbols[i])) {
              to[symbols[i]] = from[symbols[i]];
            }
          }
        }
      }
      return to;
    };
  }
});

// node_modules/rxjs/internal/util/isFunction.js
var require_isFunction2 = __commonJS({
  "node_modules/rxjs/internal/util/isFunction.js"(exports) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function isFunction(x) {
      return typeof x === "function";
    }
    exports.isFunction = isFunction;
  }
});

// node_modules/rxjs/internal/config.js
var require_config = __commonJS({
  "node_modules/rxjs/internal/config.js"(exports) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var _enable_super_gross_mode_that_will_cause_bad_things = false;
    exports.config = {
      Promise: void 0,
      set useDeprecatedSynchronousErrorHandling(value) {
        if (value) {
          var error2 = new Error();
          console.warn("DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \n" + error2.stack);
        } else if (_enable_super_gross_mode_that_will_cause_bad_things) {
          console.log("RxJS: Back to a better error behavior. Thank you. <3");
        }
        _enable_super_gross_mode_that_will_cause_bad_things = value;
      },
      get useDeprecatedSynchronousErrorHandling() {
        return _enable_super_gross_mode_that_will_cause_bad_things;
      }
    };
  }
});

// node_modules/rxjs/internal/util/hostReportError.js
var require_hostReportError = __commonJS({
  "node_modules/rxjs/internal/util/hostReportError.js"(exports) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function hostReportError(err) {
      setTimeout(function() {
        throw err;
      }, 0);
    }
    exports.hostReportError = hostReportError;
  }
});

// node_modules/rxjs/internal/Observer.js
var require_Observer = __commonJS({
  "node_modules/rxjs/internal/Observer.js"(exports) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var config_1 = require_config();
    var hostReportError_1 = require_hostReportError();
    exports.empty = {
      closed: true,
      next: function(value) {
      },
      error: function(err) {
        if (config_1.config.useDeprecatedSynchronousErrorHandling) {
          throw err;
        } else {
          hostReportError_1.hostReportError(err);
        }
      },
      complete: function() {
      }
    };
  }
});

// node_modules/rxjs/internal/util/isArray.js
var require_isArray2 = __commonJS({
  "node_modules/rxjs/internal/util/isArray.js"(exports) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isArray = function() {
      return Array.isArray || function(x) {
        return x && typeof x.length === "number";
      };
    }();
  }
});

// node_modules/rxjs/internal/util/isObject.js
var require_isObject2 = __commonJS({
  "node_modules/rxjs/internal/util/isObject.js"(exports) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function isObject(x) {
      return x !== null && typeof x === "object";
    }
    exports.isObject = isObject;
  }
});

// node_modules/rxjs/internal/util/UnsubscriptionError.js
var require_UnsubscriptionError = __commonJS({
  "node_modules/rxjs/internal/util/UnsubscriptionError.js"(exports) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var UnsubscriptionErrorImpl = function() {
      function UnsubscriptionErrorImpl2(errors) {
        Error.call(this);
        this.message = errors ? errors.length + " errors occurred during unsubscription:\n" + errors.map(function(err, i) {
          return i + 1 + ") " + err.toString();
        }).join("\n  ") : "";
        this.name = "UnsubscriptionError";
        this.errors = errors;
        return this;
      }
      UnsubscriptionErrorImpl2.prototype = Object.create(Error.prototype);
      return UnsubscriptionErrorImpl2;
    }();
    exports.UnsubscriptionError = UnsubscriptionErrorImpl;
  }
});

// node_modules/rxjs/internal/Subscription.js
var require_Subscription = __commonJS({
  "node_modules/rxjs/internal/Subscription.js"(exports) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var isArray_1 = require_isArray2();
    var isObject_1 = require_isObject2();
    var isFunction_1 = require_isFunction2();
    var UnsubscriptionError_1 = require_UnsubscriptionError();
    var Subscription = function() {
      function Subscription2(unsubscribe) {
        this.closed = false;
        this._parentOrParents = null;
        this._subscriptions = null;
        if (unsubscribe) {
          this._ctorUnsubscribe = true;
          this._unsubscribe = unsubscribe;
        }
      }
      Subscription2.prototype.unsubscribe = function() {
        var errors;
        if (this.closed) {
          return;
        }
        var _a = this, _parentOrParents = _a._parentOrParents, _ctorUnsubscribe = _a._ctorUnsubscribe, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;
        this.closed = true;
        this._parentOrParents = null;
        this._subscriptions = null;
        if (_parentOrParents instanceof Subscription2) {
          _parentOrParents.remove(this);
        } else if (_parentOrParents !== null) {
          for (var index2 = 0; index2 < _parentOrParents.length; ++index2) {
            var parent_1 = _parentOrParents[index2];
            parent_1.remove(this);
          }
        }
        if (isFunction_1.isFunction(_unsubscribe)) {
          if (_ctorUnsubscribe) {
            this._unsubscribe = void 0;
          }
          try {
            _unsubscribe.call(this);
          } catch (e) {
            errors = e instanceof UnsubscriptionError_1.UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];
          }
        }
        if (isArray_1.isArray(_subscriptions)) {
          var index2 = -1;
          var len = _subscriptions.length;
          while (++index2 < len) {
            var sub = _subscriptions[index2];
            if (isObject_1.isObject(sub)) {
              try {
                sub.unsubscribe();
              } catch (e) {
                errors = errors || [];
                if (e instanceof UnsubscriptionError_1.UnsubscriptionError) {
                  errors = errors.concat(flattenUnsubscriptionErrors(e.errors));
                } else {
                  errors.push(e);
                }
              }
            }
          }
        }
        if (errors) {
          throw new UnsubscriptionError_1.UnsubscriptionError(errors);
        }
      };
      Subscription2.prototype.add = function(teardown) {
        var subscription = teardown;
        if (!teardown) {
          return Subscription2.EMPTY;
        }
        switch (typeof teardown) {
          case "function":
            subscription = new Subscription2(teardown);
          case "object":
            if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== "function") {
              return subscription;
            } else if (this.closed) {
              subscription.unsubscribe();
              return subscription;
            } else if (!(subscription instanceof Subscription2)) {
              var tmp = subscription;
              subscription = new Subscription2();
              subscription._subscriptions = [tmp];
            }
            break;
          default: {
            throw new Error("unrecognized teardown " + teardown + " added to Subscription.");
          }
        }
        var _parentOrParents = subscription._parentOrParents;
        if (_parentOrParents === null) {
          subscription._parentOrParents = this;
        } else if (_parentOrParents instanceof Subscription2) {
          if (_parentOrParents === this) {
            return subscription;
          }
          subscription._parentOrParents = [_parentOrParents, this];
        } else if (_parentOrParents.indexOf(this) === -1) {
          _parentOrParents.push(this);
        } else {
          return subscription;
        }
        var subscriptions = this._subscriptions;
        if (subscriptions === null) {
          this._subscriptions = [subscription];
        } else {
          subscriptions.push(subscription);
        }
        return subscription;
      };
      Subscription2.prototype.remove = function(subscription) {
        var subscriptions = this._subscriptions;
        if (subscriptions) {
          var subscriptionIndex = subscriptions.indexOf(subscription);
          if (subscriptionIndex !== -1) {
            subscriptions.splice(subscriptionIndex, 1);
          }
        }
      };
      Subscription2.EMPTY = function(empty2) {
        empty2.closed = true;
        return empty2;
      }(new Subscription2());
      return Subscription2;
    }();
    exports.Subscription = Subscription;
    function flattenUnsubscriptionErrors(errors) {
      return errors.reduce(function(errs, err) {
        return errs.concat(err instanceof UnsubscriptionError_1.UnsubscriptionError ? err.errors : err);
      }, []);
    }
  }
});

// node_modules/rxjs/internal/symbol/rxSubscriber.js
var require_rxSubscriber = __commonJS({
  "node_modules/rxjs/internal/symbol/rxSubscriber.js"(exports) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.rxSubscriber = function() {
      return typeof Symbol === "function" ? Symbol("rxSubscriber") : "@@rxSubscriber_" + Math.random();
    }();
    exports.$$rxSubscriber = exports.rxSubscriber;
  }
});

// node_modules/rxjs/internal/Subscriber.js
var require_Subscriber = __commonJS({
  "node_modules/rxjs/internal/Subscriber.js"(exports) {
    init_shims();
    "use strict";
    var __extends = exports && exports.__extends || function() {
      var extendStatics = function(d2, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d3, b2) {
          d3.__proto__ = b2;
        } || function(d3, b2) {
          for (var p in b2)
            if (b2.hasOwnProperty(p))
              d3[p] = b2[p];
        };
        return extendStatics(d2, b);
      };
      return function(d2, b) {
        extendStatics(d2, b);
        function __() {
          this.constructor = d2;
        }
        d2.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    Object.defineProperty(exports, "__esModule", { value: true });
    var isFunction_1 = require_isFunction2();
    var Observer_1 = require_Observer();
    var Subscription_1 = require_Subscription();
    var rxSubscriber_1 = require_rxSubscriber();
    var config_1 = require_config();
    var hostReportError_1 = require_hostReportError();
    var Subscriber = function(_super) {
      __extends(Subscriber2, _super);
      function Subscriber2(destinationOrNext, error2, complete) {
        var _this = _super.call(this) || this;
        _this.syncErrorValue = null;
        _this.syncErrorThrown = false;
        _this.syncErrorThrowable = false;
        _this.isStopped = false;
        switch (arguments.length) {
          case 0:
            _this.destination = Observer_1.empty;
            break;
          case 1:
            if (!destinationOrNext) {
              _this.destination = Observer_1.empty;
              break;
            }
            if (typeof destinationOrNext === "object") {
              if (destinationOrNext instanceof Subscriber2) {
                _this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;
                _this.destination = destinationOrNext;
                destinationOrNext.add(_this);
              } else {
                _this.syncErrorThrowable = true;
                _this.destination = new SafeSubscriber(_this, destinationOrNext);
              }
              break;
            }
          default:
            _this.syncErrorThrowable = true;
            _this.destination = new SafeSubscriber(_this, destinationOrNext, error2, complete);
            break;
        }
        return _this;
      }
      Subscriber2.prototype[rxSubscriber_1.rxSubscriber] = function() {
        return this;
      };
      Subscriber2.create = function(next, error2, complete) {
        var subscriber = new Subscriber2(next, error2, complete);
        subscriber.syncErrorThrowable = false;
        return subscriber;
      };
      Subscriber2.prototype.next = function(value) {
        if (!this.isStopped) {
          this._next(value);
        }
      };
      Subscriber2.prototype.error = function(err) {
        if (!this.isStopped) {
          this.isStopped = true;
          this._error(err);
        }
      };
      Subscriber2.prototype.complete = function() {
        if (!this.isStopped) {
          this.isStopped = true;
          this._complete();
        }
      };
      Subscriber2.prototype.unsubscribe = function() {
        if (this.closed) {
          return;
        }
        this.isStopped = true;
        _super.prototype.unsubscribe.call(this);
      };
      Subscriber2.prototype._next = function(value) {
        this.destination.next(value);
      };
      Subscriber2.prototype._error = function(err) {
        this.destination.error(err);
        this.unsubscribe();
      };
      Subscriber2.prototype._complete = function() {
        this.destination.complete();
        this.unsubscribe();
      };
      Subscriber2.prototype._unsubscribeAndRecycle = function() {
        var _parentOrParents = this._parentOrParents;
        this._parentOrParents = null;
        this.unsubscribe();
        this.closed = false;
        this.isStopped = false;
        this._parentOrParents = _parentOrParents;
        return this;
      };
      return Subscriber2;
    }(Subscription_1.Subscription);
    exports.Subscriber = Subscriber;
    var SafeSubscriber = function(_super) {
      __extends(SafeSubscriber2, _super);
      function SafeSubscriber2(_parentSubscriber, observerOrNext, error2, complete) {
        var _this = _super.call(this) || this;
        _this._parentSubscriber = _parentSubscriber;
        var next;
        var context = _this;
        if (isFunction_1.isFunction(observerOrNext)) {
          next = observerOrNext;
        } else if (observerOrNext) {
          next = observerOrNext.next;
          error2 = observerOrNext.error;
          complete = observerOrNext.complete;
          if (observerOrNext !== Observer_1.empty) {
            context = Object.create(observerOrNext);
            if (isFunction_1.isFunction(context.unsubscribe)) {
              _this.add(context.unsubscribe.bind(context));
            }
            context.unsubscribe = _this.unsubscribe.bind(_this);
          }
        }
        _this._context = context;
        _this._next = next;
        _this._error = error2;
        _this._complete = complete;
        return _this;
      }
      SafeSubscriber2.prototype.next = function(value) {
        if (!this.isStopped && this._next) {
          var _parentSubscriber = this._parentSubscriber;
          if (!config_1.config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {
            this.__tryOrUnsub(this._next, value);
          } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {
            this.unsubscribe();
          }
        }
      };
      SafeSubscriber2.prototype.error = function(err) {
        if (!this.isStopped) {
          var _parentSubscriber = this._parentSubscriber;
          var useDeprecatedSynchronousErrorHandling = config_1.config.useDeprecatedSynchronousErrorHandling;
          if (this._error) {
            if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {
              this.__tryOrUnsub(this._error, err);
              this.unsubscribe();
            } else {
              this.__tryOrSetError(_parentSubscriber, this._error, err);
              this.unsubscribe();
            }
          } else if (!_parentSubscriber.syncErrorThrowable) {
            this.unsubscribe();
            if (useDeprecatedSynchronousErrorHandling) {
              throw err;
            }
            hostReportError_1.hostReportError(err);
          } else {
            if (useDeprecatedSynchronousErrorHandling) {
              _parentSubscriber.syncErrorValue = err;
              _parentSubscriber.syncErrorThrown = true;
            } else {
              hostReportError_1.hostReportError(err);
            }
            this.unsubscribe();
          }
        }
      };
      SafeSubscriber2.prototype.complete = function() {
        var _this = this;
        if (!this.isStopped) {
          var _parentSubscriber = this._parentSubscriber;
          if (this._complete) {
            var wrappedComplete = function() {
              return _this._complete.call(_this._context);
            };
            if (!config_1.config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {
              this.__tryOrUnsub(wrappedComplete);
              this.unsubscribe();
            } else {
              this.__tryOrSetError(_parentSubscriber, wrappedComplete);
              this.unsubscribe();
            }
          } else {
            this.unsubscribe();
          }
        }
      };
      SafeSubscriber2.prototype.__tryOrUnsub = function(fn, value) {
        try {
          fn.call(this._context, value);
        } catch (err) {
          this.unsubscribe();
          if (config_1.config.useDeprecatedSynchronousErrorHandling) {
            throw err;
          } else {
            hostReportError_1.hostReportError(err);
          }
        }
      };
      SafeSubscriber2.prototype.__tryOrSetError = function(parent, fn, value) {
        if (!config_1.config.useDeprecatedSynchronousErrorHandling) {
          throw new Error("bad call");
        }
        try {
          fn.call(this._context, value);
        } catch (err) {
          if (config_1.config.useDeprecatedSynchronousErrorHandling) {
            parent.syncErrorValue = err;
            parent.syncErrorThrown = true;
            return true;
          } else {
            hostReportError_1.hostReportError(err);
            return true;
          }
        }
        return false;
      };
      SafeSubscriber2.prototype._unsubscribe = function() {
        var _parentSubscriber = this._parentSubscriber;
        this._context = null;
        this._parentSubscriber = null;
        _parentSubscriber.unsubscribe();
      };
      return SafeSubscriber2;
    }(Subscriber);
    exports.SafeSubscriber = SafeSubscriber;
  }
});

// node_modules/rxjs/internal/operators/filter.js
var require_filter = __commonJS({
  "node_modules/rxjs/internal/operators/filter.js"(exports) {
    init_shims();
    "use strict";
    var __extends = exports && exports.__extends || function() {
      var extendStatics = function(d2, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d3, b2) {
          d3.__proto__ = b2;
        } || function(d3, b2) {
          for (var p in b2)
            if (b2.hasOwnProperty(p))
              d3[p] = b2[p];
        };
        return extendStatics(d2, b);
      };
      return function(d2, b) {
        extendStatics(d2, b);
        function __() {
          this.constructor = d2;
        }
        d2.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    Object.defineProperty(exports, "__esModule", { value: true });
    var Subscriber_1 = require_Subscriber();
    function filter(predicate, thisArg) {
      return function filterOperatorFunction(source) {
        return source.lift(new FilterOperator(predicate, thisArg));
      };
    }
    exports.filter = filter;
    var FilterOperator = function() {
      function FilterOperator2(predicate, thisArg) {
        this.predicate = predicate;
        this.thisArg = thisArg;
      }
      FilterOperator2.prototype.call = function(subscriber, source) {
        return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));
      };
      return FilterOperator2;
    }();
    var FilterSubscriber = function(_super) {
      __extends(FilterSubscriber2, _super);
      function FilterSubscriber2(destination, predicate, thisArg) {
        var _this = _super.call(this, destination) || this;
        _this.predicate = predicate;
        _this.thisArg = thisArg;
        _this.count = 0;
        return _this;
      }
      FilterSubscriber2.prototype._next = function(value) {
        var result;
        try {
          result = this.predicate.call(this.thisArg, value, this.count++);
        } catch (err) {
          this.destination.error(err);
          return;
        }
        if (result) {
          this.destination.next(value);
        }
      };
      return FilterSubscriber2;
    }(Subscriber_1.Subscriber);
  }
});

// node_modules/@sanity/observable/operators/filter.js
var require_filter2 = __commonJS({
  "node_modules/@sanity/observable/operators/filter.js"(exports) {
    init_shims();
    exports.filter = require_filter().filter;
  }
});

// node_modules/rxjs/internal/operators/map.js
var require_map = __commonJS({
  "node_modules/rxjs/internal/operators/map.js"(exports) {
    init_shims();
    "use strict";
    var __extends = exports && exports.__extends || function() {
      var extendStatics = function(d2, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d3, b2) {
          d3.__proto__ = b2;
        } || function(d3, b2) {
          for (var p in b2)
            if (b2.hasOwnProperty(p))
              d3[p] = b2[p];
        };
        return extendStatics(d2, b);
      };
      return function(d2, b) {
        extendStatics(d2, b);
        function __() {
          this.constructor = d2;
        }
        d2.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    Object.defineProperty(exports, "__esModule", { value: true });
    var Subscriber_1 = require_Subscriber();
    function map(project, thisArg) {
      return function mapOperation(source) {
        if (typeof project !== "function") {
          throw new TypeError("argument is not a function. Are you looking for `mapTo()`?");
        }
        return source.lift(new MapOperator(project, thisArg));
      };
    }
    exports.map = map;
    var MapOperator = function() {
      function MapOperator2(project, thisArg) {
        this.project = project;
        this.thisArg = thisArg;
      }
      MapOperator2.prototype.call = function(subscriber, source) {
        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));
      };
      return MapOperator2;
    }();
    exports.MapOperator = MapOperator;
    var MapSubscriber = function(_super) {
      __extends(MapSubscriber2, _super);
      function MapSubscriber2(destination, project, thisArg) {
        var _this = _super.call(this, destination) || this;
        _this.project = project;
        _this.count = 0;
        _this.thisArg = thisArg || _this;
        return _this;
      }
      MapSubscriber2.prototype._next = function(value) {
        var result;
        try {
          result = this.project.call(this.thisArg, value, this.count++);
        } catch (err) {
          this.destination.error(err);
          return;
        }
        this.destination.next(result);
      };
      return MapSubscriber2;
    }(Subscriber_1.Subscriber);
  }
});

// node_modules/@sanity/observable/operators/map.js
var require_map2 = __commonJS({
  "node_modules/@sanity/observable/operators/map.js"(exports) {
    init_shims();
    exports.map = require_map().map;
  }
});

// node_modules/is-obj/index.js
var require_is_obj = __commonJS({
  "node_modules/is-obj/index.js"(exports, module2) {
    init_shims();
    "use strict";
    module2.exports = function(x) {
      var type = typeof x;
      return x !== null && (type === "object" || type === "function");
    };
  }
});

// node_modules/deep-assign/index.js
var require_deep_assign = __commonJS({
  "node_modules/deep-assign/index.js"(exports, module2) {
    init_shims();
    "use strict";
    var isObj = require_is_obj();
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var propIsEnumerable = Object.prototype.propertyIsEnumerable;
    function toObject(val) {
      if (val === null || val === void 0) {
        throw new TypeError("Sources cannot be null or undefined");
      }
      return Object(val);
    }
    function assignKey(to, from, key) {
      var val = from[key];
      if (val === void 0 || val === null) {
        return;
      }
      if (hasOwnProperty.call(to, key)) {
        if (to[key] === void 0 || to[key] === null) {
          throw new TypeError("Cannot convert undefined or null to object (" + key + ")");
        }
      }
      if (!hasOwnProperty.call(to, key) || !isObj(val)) {
        to[key] = val;
      } else {
        to[key] = assign(Object(to[key]), from[key]);
      }
    }
    function assign(to, from) {
      if (to === from) {
        return to;
      }
      from = Object(from);
      for (var key in from) {
        if (hasOwnProperty.call(from, key)) {
          assignKey(to, from, key);
        }
      }
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(from);
        for (var i = 0; i < symbols.length; i++) {
          if (propIsEnumerable.call(from, symbols[i])) {
            assignKey(to, from, symbols[i]);
          }
        }
      }
      return to;
    }
    module2.exports = function deepAssign(target) {
      target = toObject(target);
      for (var s2 = 1; s2 < arguments.length; s2++) {
        assign(target, arguments[s2]);
      }
      return target;
    };
  }
});

// node_modules/@sanity/client/lib/util/getSelection.js
var require_getSelection = __commonJS({
  "node_modules/@sanity/client/lib/util/getSelection.js"(exports, module2) {
    init_shims();
    "use strict";
    module2.exports = function getSelection(sel) {
      if (typeof sel === "string" || Array.isArray(sel)) {
        return {
          id: sel
        };
      }
      if (sel && sel.query) {
        return {
          query: sel.query
        };
      }
      var selectionOpts = ["* Document ID (<docId>)", "* Array of document IDs", "* Object containing `query`"].join("\n");
      throw new Error("Unknown selection - must be one of:\n\n".concat(selectionOpts));
    };
  }
});

// node_modules/@sanity/client/lib/validators.js
var require_validators = __commonJS({
  "node_modules/@sanity/client/lib/validators.js"(exports) {
    init_shims();
    "use strict";
    function _typeof(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    var VALID_ASSET_TYPES = ["image", "file"];
    var VALID_INSERT_LOCATIONS = ["before", "after", "replace"];
    exports.dataset = function(name) {
      if (!/^(~[a-z0-9]{1}[-\w]{0,25}|[a-z0-9]{1}[-\w]{0,19})$/.test(name)) {
        throw new Error("Datasets can only contain lowercase characters, numbers, underscores and dashes, and start with tilde, and be maximum 20 characters");
      }
    };
    exports.projectId = function(id) {
      if (!/^[-a-z0-9]+$/i.test(id)) {
        throw new Error("`projectId` can only contain only a-z, 0-9 and dashes");
      }
    };
    exports.validateAssetType = function(type) {
      if (VALID_ASSET_TYPES.indexOf(type) === -1) {
        throw new Error("Invalid asset type: ".concat(type, ". Must be one of ").concat(VALID_ASSET_TYPES.join(", ")));
      }
    };
    exports.validateObject = function(op, val) {
      if (val === null || _typeof(val) !== "object" || Array.isArray(val)) {
        throw new Error("".concat(op, "() takes an object of properties"));
      }
    };
    exports.requireDocumentId = function(op, doc) {
      if (!doc._id) {
        throw new Error("".concat(op, '() requires that the document contains an ID ("_id" property)'));
      }
      exports.validateDocumentId(op, doc._id);
    };
    exports.validateDocumentId = function(op, id) {
      if (typeof id !== "string" || !/^[a-z0-9_.-]+$/i.test(id)) {
        throw new Error("".concat(op, '(): "').concat(id, '" is not a valid document ID'));
      }
    };
    exports.validateInsert = function(at, selector, items) {
      var signature = "insert(at, selector, items)";
      if (VALID_INSERT_LOCATIONS.indexOf(at) === -1) {
        var valid = VALID_INSERT_LOCATIONS.map(function(loc) {
          return '"'.concat(loc, '"');
        }).join(", ");
        throw new Error("".concat(signature, ' takes an "at"-argument which is one of: ').concat(valid));
      }
      if (typeof selector !== "string") {
        throw new Error("".concat(signature, ' takes a "selector"-argument which must be a string'));
      }
      if (!Array.isArray(items)) {
        throw new Error("".concat(signature, ' takes an "items"-argument which must be an array'));
      }
    };
    exports.hasDataset = function(config) {
      if (!config.gradientMode && !config.dataset) {
        throw new Error("`dataset` must be provided to perform queries");
      }
      return config.dataset || "";
    };
    exports.requestTag = function(tag) {
      if (typeof tag !== "string" || !/^[a-z0-9._-]{1,75}$/i.test(tag)) {
        throw new Error("Tag can only contain alphanumeric characters, underscores, dashes and dots, and be between one and 75 characters long.");
      }
      return tag;
    };
  }
});

// node_modules/@sanity/client/lib/data/patch.js
var require_patch = __commonJS({
  "node_modules/@sanity/client/lib/data/patch.js"(exports, module2) {
    init_shims();
    "use strict";
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var deepAssign = require_deep_assign();
    var assign = require_object_assign();
    var getSelection = require_getSelection();
    var validate = require_validators();
    var validateObject = validate.validateObject;
    var validateInsert = validate.validateInsert;
    function Patch(selection) {
      var operations = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      var client2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
      this.selection = selection;
      this.operations = assign({}, operations);
      this.client = client2;
    }
    assign(Patch.prototype, {
      clone: function clone2() {
        return new Patch(this.selection, assign({}, this.operations), this.client);
      },
      merge: function merge(props) {
        validateObject("merge", props);
        var stack = new Error().stack.toString().split("\n").filter(function(str) {
          return str.trim();
        }).slice(2);
        console.warn('The "merge" patch has been deprecated and will be removed in the future\n'.concat(stack.join("\n")));
        return this._assign("merge", deepAssign(this.operations.merge || {}, props));
      },
      set: function set(props) {
        return this._assign("set", props);
      },
      diffMatchPatch: function diffMatchPatch(props) {
        validateObject("diffMatchPatch", props);
        return this._assign("diffMatchPatch", props);
      },
      unset: function unset(attrs) {
        if (!Array.isArray(attrs)) {
          throw new Error("unset(attrs) takes an array of attributes to unset, non-array given");
        }
        this.operations = assign({}, this.operations, {
          unset: attrs
        });
        return this;
      },
      setIfMissing: function setIfMissing(props) {
        return this._assign("setIfMissing", props);
      },
      replace: function replace(props) {
        validateObject("replace", props);
        return this._set("set", {
          $: props
        });
      },
      inc: function inc(props) {
        return this._assign("inc", props);
      },
      dec: function dec(props) {
        return this._assign("dec", props);
      },
      insert: function insert(at, selector, items) {
        var _this$_assign;
        validateInsert(at, selector, items);
        return this._assign("insert", (_this$_assign = {}, _defineProperty(_this$_assign, at, selector), _defineProperty(_this$_assign, "items", items), _this$_assign));
      },
      append: function append(selector, items) {
        return this.insert("after", "".concat(selector, "[-1]"), items);
      },
      prepend: function prepend(selector, items) {
        return this.insert("before", "".concat(selector, "[0]"), items);
      },
      splice: function splice(selector, start, deleteCount, items) {
        var delAll = typeof deleteCount === "undefined" || deleteCount === -1;
        var startIndex = start < 0 ? start - 1 : start;
        var delCount = delAll ? -1 : Math.max(0, start + deleteCount);
        var delRange = startIndex < 0 && delCount >= 0 ? "" : delCount;
        var rangeSelector = "".concat(selector, "[").concat(startIndex, ":").concat(delRange, "]");
        return this.insert("replace", rangeSelector, items || []);
      },
      ifRevisionId: function ifRevisionId(rev) {
        this.operations.ifRevisionID = rev;
        return this;
      },
      serialize: function serialize() {
        return assign(getSelection(this.selection), this.operations);
      },
      toJSON: function toJSON() {
        return this.serialize();
      },
      commit: function commit() {
        var options2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
        if (!this.client) {
          throw new Error("No `client` passed to patch, either provide one or pass the patch to a clients `mutate()` method");
        }
        var returnFirst = typeof this.selection === "string";
        var opts = assign({
          returnFirst,
          returnDocuments: true
        }, options2);
        return this.client.mutate({
          patch: this.serialize()
        }, opts);
      },
      reset: function reset() {
        this.operations = {};
        return this;
      },
      _set: function _set(op, props) {
        return this._assign(op, props, false);
      },
      _assign: function _assign(op, props) {
        var merge = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : true;
        validateObject(op, props);
        this.operations = assign({}, this.operations, _defineProperty({}, op, assign({}, merge && this.operations[op] || {}, props)));
        return this;
      }
    });
    module2.exports = Patch;
  }
});

// node_modules/@sanity/client/lib/data/transaction.js
var require_transaction = __commonJS({
  "node_modules/@sanity/client/lib/data/transaction.js"(exports, module2) {
    init_shims();
    "use strict";
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var assign = require_object_assign();
    var validators = require_validators();
    var Patch = require_patch();
    var defaultMutateOptions = {
      returnDocuments: false
    };
    function Transaction() {
      var operations = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
      var client2 = arguments.length > 1 ? arguments[1] : void 0;
      var transactionId = arguments.length > 2 ? arguments[2] : void 0;
      this.trxId = transactionId;
      this.operations = operations;
      this.client = client2;
    }
    assign(Transaction.prototype, {
      clone: function clone2() {
        return new Transaction(this.operations.slice(0), this.client, this.trxId);
      },
      create: function create(doc) {
        validators.validateObject("create", doc);
        return this._add({
          create: doc
        });
      },
      createIfNotExists: function createIfNotExists(doc) {
        var op = "createIfNotExists";
        validators.validateObject(op, doc);
        validators.requireDocumentId(op, doc);
        return this._add(_defineProperty({}, op, doc));
      },
      createOrReplace: function createOrReplace(doc) {
        var op = "createOrReplace";
        validators.validateObject(op, doc);
        validators.requireDocumentId(op, doc);
        return this._add(_defineProperty({}, op, doc));
      },
      delete: function _delete(documentId) {
        validators.validateDocumentId("delete", documentId);
        return this._add({
          delete: {
            id: documentId
          }
        });
      },
      patch: function patch(documentId, patchOps) {
        var isBuilder = typeof patchOps === "function";
        var isPatch = documentId instanceof Patch;
        if (isPatch) {
          return this._add({
            patch: documentId.serialize()
          });
        }
        if (isBuilder) {
          var patch2 = patchOps(new Patch(documentId, {}, this.client));
          if (!(patch2 instanceof Patch)) {
            throw new Error("function passed to `patch()` must return the patch");
          }
          return this._add({
            patch: patch2.serialize()
          });
        }
        return this._add({
          patch: assign({
            id: documentId
          }, patchOps)
        });
      },
      transactionId: function transactionId(id) {
        if (!id) {
          return this.trxId;
        }
        this.trxId = id;
        return this;
      },
      serialize: function serialize() {
        return this.operations.slice();
      },
      toJSON: function toJSON() {
        return this.serialize();
      },
      commit: function commit(options2) {
        if (!this.client) {
          throw new Error("No `client` passed to transaction, either provide one or pass the transaction to a clients `mutate()` method");
        }
        return this.client.mutate(this.serialize(), assign({
          transactionId: this.trxId
        }, defaultMutateOptions, options2 || {}));
      },
      reset: function reset() {
        this.operations = [];
        return this;
      },
      _add: function _add(mut) {
        this.operations.push(mut);
        return this;
      }
    });
    module2.exports = Transaction;
  }
});

// node_modules/@sanity/client/lib/data/encodeQueryString.js
var require_encodeQueryString = __commonJS({
  "node_modules/@sanity/client/lib/data/encodeQueryString.js"(exports, module2) {
    init_shims();
    "use strict";
    var _excluded = ["tag"];
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose(source, excluded);
      var key, i;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];
          if (excluded.indexOf(key) >= 0)
            continue;
          if (!Object.prototype.propertyIsEnumerable.call(source, key))
            continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null)
        return {};
      var target = {};
      var sourceKeys = Object.keys(source);
      var key, i;
      for (i = 0; i < sourceKeys.length; i++) {
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0)
          continue;
        target[key] = source[key];
      }
      return target;
    }
    var enc = encodeURIComponent;
    module2.exports = function(_ref) {
      var query = _ref.query, _ref$params = _ref.params, params = _ref$params === void 0 ? {} : _ref$params, _ref$options = _ref.options, options2 = _ref$options === void 0 ? {} : _ref$options;
      var tag = options2.tag, opts = _objectWithoutProperties(options2, _excluded);
      var q = "query=".concat(enc(query));
      var base2 = tag ? "?tag=".concat(enc(tag), "&").concat(q) : "?".concat(q);
      var qString = Object.keys(params).reduce(function(qs, param) {
        return "".concat(qs, "&").concat(enc("$".concat(param)), "=").concat(enc(JSON.stringify(params[param])));
      }, base2);
      return Object.keys(opts).reduce(function(qs, option) {
        return options2[option] ? "".concat(qs, "&").concat(enc(option), "=").concat(enc(options2[option])) : qs;
      }, qString);
    };
  }
});

// node_modules/rxjs/internal/util/canReportError.js
var require_canReportError = __commonJS({
  "node_modules/rxjs/internal/util/canReportError.js"(exports) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Subscriber_1 = require_Subscriber();
    function canReportError(observer) {
      while (observer) {
        var _a = observer, closed_1 = _a.closed, destination = _a.destination, isStopped = _a.isStopped;
        if (closed_1 || isStopped) {
          return false;
        } else if (destination && destination instanceof Subscriber_1.Subscriber) {
          observer = destination;
        } else {
          observer = null;
        }
      }
      return true;
    }
    exports.canReportError = canReportError;
  }
});

// node_modules/rxjs/internal/util/toSubscriber.js
var require_toSubscriber = __commonJS({
  "node_modules/rxjs/internal/util/toSubscriber.js"(exports) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Subscriber_1 = require_Subscriber();
    var rxSubscriber_1 = require_rxSubscriber();
    var Observer_1 = require_Observer();
    function toSubscriber(nextOrObserver, error2, complete) {
      if (nextOrObserver) {
        if (nextOrObserver instanceof Subscriber_1.Subscriber) {
          return nextOrObserver;
        }
        if (nextOrObserver[rxSubscriber_1.rxSubscriber]) {
          return nextOrObserver[rxSubscriber_1.rxSubscriber]();
        }
      }
      if (!nextOrObserver && !error2 && !complete) {
        return new Subscriber_1.Subscriber(Observer_1.empty);
      }
      return new Subscriber_1.Subscriber(nextOrObserver, error2, complete);
    }
    exports.toSubscriber = toSubscriber;
  }
});

// node_modules/rxjs/internal/symbol/observable.js
var require_observable = __commonJS({
  "node_modules/rxjs/internal/symbol/observable.js"(exports) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.observable = function() {
      return typeof Symbol === "function" && Symbol.observable || "@@observable";
    }();
  }
});

// node_modules/rxjs/internal/util/identity.js
var require_identity2 = __commonJS({
  "node_modules/rxjs/internal/util/identity.js"(exports) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function identity(x) {
      return x;
    }
    exports.identity = identity;
  }
});

// node_modules/rxjs/internal/util/pipe.js
var require_pipe = __commonJS({
  "node_modules/rxjs/internal/util/pipe.js"(exports) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var identity_1 = require_identity2();
    function pipe() {
      var fns = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        fns[_i] = arguments[_i];
      }
      return pipeFromArray(fns);
    }
    exports.pipe = pipe;
    function pipeFromArray(fns) {
      if (fns.length === 0) {
        return identity_1.identity;
      }
      if (fns.length === 1) {
        return fns[0];
      }
      return function piped(input) {
        return fns.reduce(function(prev, fn) {
          return fn(prev);
        }, input);
      };
    }
    exports.pipeFromArray = pipeFromArray;
  }
});

// node_modules/rxjs/internal/Observable.js
var require_Observable = __commonJS({
  "node_modules/rxjs/internal/Observable.js"(exports) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var canReportError_1 = require_canReportError();
    var toSubscriber_1 = require_toSubscriber();
    var observable_1 = require_observable();
    var pipe_1 = require_pipe();
    var config_1 = require_config();
    var Observable = function() {
      function Observable2(subscribe2) {
        this._isScalar = false;
        if (subscribe2) {
          this._subscribe = subscribe2;
        }
      }
      Observable2.prototype.lift = function(operator) {
        var observable = new Observable2();
        observable.source = this;
        observable.operator = operator;
        return observable;
      };
      Observable2.prototype.subscribe = function(observerOrNext, error2, complete) {
        var operator = this.operator;
        var sink = toSubscriber_1.toSubscriber(observerOrNext, error2, complete);
        if (operator) {
          sink.add(operator.call(sink, this.source));
        } else {
          sink.add(this.source || config_1.config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable ? this._subscribe(sink) : this._trySubscribe(sink));
        }
        if (config_1.config.useDeprecatedSynchronousErrorHandling) {
          if (sink.syncErrorThrowable) {
            sink.syncErrorThrowable = false;
            if (sink.syncErrorThrown) {
              throw sink.syncErrorValue;
            }
          }
        }
        return sink;
      };
      Observable2.prototype._trySubscribe = function(sink) {
        try {
          return this._subscribe(sink);
        } catch (err) {
          if (config_1.config.useDeprecatedSynchronousErrorHandling) {
            sink.syncErrorThrown = true;
            sink.syncErrorValue = err;
          }
          if (canReportError_1.canReportError(sink)) {
            sink.error(err);
          } else {
            console.warn(err);
          }
        }
      };
      Observable2.prototype.forEach = function(next, promiseCtor) {
        var _this = this;
        promiseCtor = getPromiseCtor(promiseCtor);
        return new promiseCtor(function(resolve2, reject) {
          var subscription;
          subscription = _this.subscribe(function(value) {
            try {
              next(value);
            } catch (err) {
              reject(err);
              if (subscription) {
                subscription.unsubscribe();
              }
            }
          }, reject, resolve2);
        });
      };
      Observable2.prototype._subscribe = function(subscriber) {
        var source = this.source;
        return source && source.subscribe(subscriber);
      };
      Observable2.prototype[observable_1.observable] = function() {
        return this;
      };
      Observable2.prototype.pipe = function() {
        var operations = [];
        for (var _i = 0; _i < arguments.length; _i++) {
          operations[_i] = arguments[_i];
        }
        if (operations.length === 0) {
          return this;
        }
        return pipe_1.pipeFromArray(operations)(this);
      };
      Observable2.prototype.toPromise = function(promiseCtor) {
        var _this = this;
        promiseCtor = getPromiseCtor(promiseCtor);
        return new promiseCtor(function(resolve2, reject) {
          var value;
          _this.subscribe(function(x) {
            return value = x;
          }, function(err) {
            return reject(err);
          }, function() {
            return resolve2(value);
          });
        });
      };
      Observable2.create = function(subscribe2) {
        return new Observable2(subscribe2);
      };
      return Observable2;
    }();
    exports.Observable = Observable;
    function getPromiseCtor(promiseCtor) {
      if (!promiseCtor) {
        promiseCtor = config_1.config.Promise || Promise;
      }
      if (!promiseCtor) {
        throw new Error("no Promise impl found");
      }
      return promiseCtor;
    }
  }
});

// node_modules/rxjs/internal/operators/scan.js
var require_scan = __commonJS({
  "node_modules/rxjs/internal/operators/scan.js"(exports) {
    init_shims();
    "use strict";
    var __extends = exports && exports.__extends || function() {
      var extendStatics = function(d2, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d3, b2) {
          d3.__proto__ = b2;
        } || function(d3, b2) {
          for (var p in b2)
            if (b2.hasOwnProperty(p))
              d3[p] = b2[p];
        };
        return extendStatics(d2, b);
      };
      return function(d2, b) {
        extendStatics(d2, b);
        function __() {
          this.constructor = d2;
        }
        d2.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    Object.defineProperty(exports, "__esModule", { value: true });
    var Subscriber_1 = require_Subscriber();
    function scan(accumulator, seed) {
      var hasSeed = false;
      if (arguments.length >= 2) {
        hasSeed = true;
      }
      return function scanOperatorFunction(source) {
        return source.lift(new ScanOperator(accumulator, seed, hasSeed));
      };
    }
    exports.scan = scan;
    var ScanOperator = function() {
      function ScanOperator2(accumulator, seed, hasSeed) {
        if (hasSeed === void 0) {
          hasSeed = false;
        }
        this.accumulator = accumulator;
        this.seed = seed;
        this.hasSeed = hasSeed;
      }
      ScanOperator2.prototype.call = function(subscriber, source) {
        return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));
      };
      return ScanOperator2;
    }();
    var ScanSubscriber = function(_super) {
      __extends(ScanSubscriber2, _super);
      function ScanSubscriber2(destination, accumulator, _seed, hasSeed) {
        var _this = _super.call(this, destination) || this;
        _this.accumulator = accumulator;
        _this._seed = _seed;
        _this.hasSeed = hasSeed;
        _this.index = 0;
        return _this;
      }
      Object.defineProperty(ScanSubscriber2.prototype, "seed", {
        get: function() {
          return this._seed;
        },
        set: function(value) {
          this.hasSeed = true;
          this._seed = value;
        },
        enumerable: true,
        configurable: true
      });
      ScanSubscriber2.prototype._next = function(value) {
        if (!this.hasSeed) {
          this.seed = value;
          this.destination.next(value);
        } else {
          return this._tryNext(value);
        }
      };
      ScanSubscriber2.prototype._tryNext = function(value) {
        var index2 = this.index++;
        var result;
        try {
          result = this.accumulator(this.seed, value, index2);
        } catch (err) {
          this.destination.error(err);
        }
        this.seed = result;
        this.destination.next(result);
      };
      return ScanSubscriber2;
    }(Subscriber_1.Subscriber);
  }
});

// node_modules/rxjs/internal/util/ArgumentOutOfRangeError.js
var require_ArgumentOutOfRangeError = __commonJS({
  "node_modules/rxjs/internal/util/ArgumentOutOfRangeError.js"(exports) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var ArgumentOutOfRangeErrorImpl = function() {
      function ArgumentOutOfRangeErrorImpl2() {
        Error.call(this);
        this.message = "argument out of range";
        this.name = "ArgumentOutOfRangeError";
        return this;
      }
      ArgumentOutOfRangeErrorImpl2.prototype = Object.create(Error.prototype);
      return ArgumentOutOfRangeErrorImpl2;
    }();
    exports.ArgumentOutOfRangeError = ArgumentOutOfRangeErrorImpl;
  }
});

// node_modules/rxjs/internal/observable/empty.js
var require_empty = __commonJS({
  "node_modules/rxjs/internal/observable/empty.js"(exports) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Observable_1 = require_Observable();
    exports.EMPTY = new Observable_1.Observable(function(subscriber) {
      return subscriber.complete();
    });
    function empty2(scheduler) {
      return scheduler ? emptyScheduled(scheduler) : exports.EMPTY;
    }
    exports.empty = empty2;
    function emptyScheduled(scheduler) {
      return new Observable_1.Observable(function(subscriber) {
        return scheduler.schedule(function() {
          return subscriber.complete();
        });
      });
    }
  }
});

// node_modules/rxjs/internal/operators/takeLast.js
var require_takeLast = __commonJS({
  "node_modules/rxjs/internal/operators/takeLast.js"(exports) {
    init_shims();
    "use strict";
    var __extends = exports && exports.__extends || function() {
      var extendStatics = function(d2, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d3, b2) {
          d3.__proto__ = b2;
        } || function(d3, b2) {
          for (var p in b2)
            if (b2.hasOwnProperty(p))
              d3[p] = b2[p];
        };
        return extendStatics(d2, b);
      };
      return function(d2, b) {
        extendStatics(d2, b);
        function __() {
          this.constructor = d2;
        }
        d2.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    Object.defineProperty(exports, "__esModule", { value: true });
    var Subscriber_1 = require_Subscriber();
    var ArgumentOutOfRangeError_1 = require_ArgumentOutOfRangeError();
    var empty_1 = require_empty();
    function takeLast(count) {
      return function takeLastOperatorFunction(source) {
        if (count === 0) {
          return empty_1.empty();
        } else {
          return source.lift(new TakeLastOperator(count));
        }
      };
    }
    exports.takeLast = takeLast;
    var TakeLastOperator = function() {
      function TakeLastOperator2(total) {
        this.total = total;
        if (this.total < 0) {
          throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError();
        }
      }
      TakeLastOperator2.prototype.call = function(subscriber, source) {
        return source.subscribe(new TakeLastSubscriber(subscriber, this.total));
      };
      return TakeLastOperator2;
    }();
    var TakeLastSubscriber = function(_super) {
      __extends(TakeLastSubscriber2, _super);
      function TakeLastSubscriber2(destination, total) {
        var _this = _super.call(this, destination) || this;
        _this.total = total;
        _this.ring = new Array();
        _this.count = 0;
        return _this;
      }
      TakeLastSubscriber2.prototype._next = function(value) {
        var ring = this.ring;
        var total = this.total;
        var count = this.count++;
        if (ring.length < total) {
          ring.push(value);
        } else {
          var index2 = count % total;
          ring[index2] = value;
        }
      };
      TakeLastSubscriber2.prototype._complete = function() {
        var destination = this.destination;
        var count = this.count;
        if (count > 0) {
          var total = this.count >= this.total ? this.total : this.count;
          var ring = this.ring;
          for (var i = 0; i < total; i++) {
            var idx = count++ % total;
            destination.next(ring[idx]);
          }
        }
        destination.complete();
      };
      return TakeLastSubscriber2;
    }(Subscriber_1.Subscriber);
  }
});

// node_modules/rxjs/internal/operators/defaultIfEmpty.js
var require_defaultIfEmpty = __commonJS({
  "node_modules/rxjs/internal/operators/defaultIfEmpty.js"(exports) {
    init_shims();
    "use strict";
    var __extends = exports && exports.__extends || function() {
      var extendStatics = function(d2, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d3, b2) {
          d3.__proto__ = b2;
        } || function(d3, b2) {
          for (var p in b2)
            if (b2.hasOwnProperty(p))
              d3[p] = b2[p];
        };
        return extendStatics(d2, b);
      };
      return function(d2, b) {
        extendStatics(d2, b);
        function __() {
          this.constructor = d2;
        }
        d2.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    Object.defineProperty(exports, "__esModule", { value: true });
    var Subscriber_1 = require_Subscriber();
    function defaultIfEmpty(defaultValue) {
      if (defaultValue === void 0) {
        defaultValue = null;
      }
      return function(source) {
        return source.lift(new DefaultIfEmptyOperator(defaultValue));
      };
    }
    exports.defaultIfEmpty = defaultIfEmpty;
    var DefaultIfEmptyOperator = function() {
      function DefaultIfEmptyOperator2(defaultValue) {
        this.defaultValue = defaultValue;
      }
      DefaultIfEmptyOperator2.prototype.call = function(subscriber, source) {
        return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));
      };
      return DefaultIfEmptyOperator2;
    }();
    var DefaultIfEmptySubscriber = function(_super) {
      __extends(DefaultIfEmptySubscriber2, _super);
      function DefaultIfEmptySubscriber2(destination, defaultValue) {
        var _this = _super.call(this, destination) || this;
        _this.defaultValue = defaultValue;
        _this.isEmpty = true;
        return _this;
      }
      DefaultIfEmptySubscriber2.prototype._next = function(value) {
        this.isEmpty = false;
        this.destination.next(value);
      };
      DefaultIfEmptySubscriber2.prototype._complete = function() {
        if (this.isEmpty) {
          this.destination.next(this.defaultValue);
        }
        this.destination.complete();
      };
      return DefaultIfEmptySubscriber2;
    }(Subscriber_1.Subscriber);
  }
});

// node_modules/rxjs/internal/operators/reduce.js
var require_reduce = __commonJS({
  "node_modules/rxjs/internal/operators/reduce.js"(exports) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var scan_1 = require_scan();
    var takeLast_1 = require_takeLast();
    var defaultIfEmpty_1 = require_defaultIfEmpty();
    var pipe_1 = require_pipe();
    function reduce(accumulator, seed) {
      if (arguments.length >= 2) {
        return function reduceOperatorFunctionWithSeed(source) {
          return pipe_1.pipe(scan_1.scan(accumulator, seed), takeLast_1.takeLast(1), defaultIfEmpty_1.defaultIfEmpty(seed))(source);
        };
      }
      return function reduceOperatorFunction(source) {
        return pipe_1.pipe(scan_1.scan(function(acc, value, index2) {
          return accumulator(acc, value, index2 + 1);
        }), takeLast_1.takeLast(1))(source);
      };
    }
    exports.reduce = reduce;
  }
});

// node_modules/@sanity/observable/operators/reduce.js
var require_reduce2 = __commonJS({
  "node_modules/@sanity/observable/operators/reduce.js"(exports) {
    init_shims();
    exports.reduce = require_reduce().reduce;
  }
});

// node_modules/@sanity/observable/lib/SanityObservableMinimal.js
var require_SanityObservableMinimal = __commonJS({
  "node_modules/@sanity/observable/lib/SanityObservableMinimal.js"(exports, module2) {
    init_shims();
    "use strict";
    var _require = require_Observable();
    var Observable = _require.Observable;
    var assign = require_object_assign();
    var _require2 = require_map2();
    var map = _require2.map;
    var _require3 = require_filter2();
    var filter = _require3.filter;
    var _require4 = require_reduce2();
    var reduce = _require4.reduce;
    function SanityObservableMinimal() {
      Observable.apply(this, arguments);
    }
    SanityObservableMinimal.prototype = Object.create(assign(Object.create(null), Observable.prototype));
    Object.defineProperty(SanityObservableMinimal.prototype, "constructor", {
      value: SanityObservableMinimal,
      enumerable: false,
      writable: true,
      configurable: true
    });
    SanityObservableMinimal.prototype.lift = function lift(operator) {
      var observable = new SanityObservableMinimal();
      observable.source = this;
      observable.operator = operator;
      return observable;
    };
    function createDeprecatedMemberOp(name, op) {
      var hasWarned = false;
      return function deprecatedOperator() {
        if (!hasWarned) {
          hasWarned = true;
          console.warn(new Error("Calling observable.".concat(name, "(...) is deprecated. Please use observable.pipe(").concat(name, "(...)) instead")));
        }
        return this.pipe(op.apply(this, arguments));
      };
    }
    SanityObservableMinimal.prototype.map = createDeprecatedMemberOp("map", map);
    SanityObservableMinimal.prototype.filter = createDeprecatedMemberOp("filter", filter);
    SanityObservableMinimal.prototype.reduce = createDeprecatedMemberOp("filter", reduce);
    module2.exports = SanityObservableMinimal;
  }
});

// node_modules/@sanity/observable/minimal.js
var require_minimal = __commonJS({
  "node_modules/@sanity/observable/minimal.js"(exports, module2) {
    init_shims();
    module2.exports = require_SanityObservableMinimal();
  }
});

// node_modules/requires-port/index.js
var require_requires_port = __commonJS({
  "node_modules/requires-port/index.js"(exports, module2) {
    init_shims();
    "use strict";
    module2.exports = function required(port, protocol) {
      protocol = protocol.split(":")[0];
      port = +port;
      if (!port)
        return false;
      switch (protocol) {
        case "http":
        case "ws":
          return port !== 80;
        case "https":
        case "wss":
          return port !== 443;
        case "ftp":
          return port !== 21;
        case "gopher":
          return port !== 70;
        case "file":
          return false;
      }
      return port !== 0;
    };
  }
});

// node_modules/querystringify/index.js
var require_querystringify = __commonJS({
  "node_modules/querystringify/index.js"(exports) {
    init_shims();
    "use strict";
    var has2 = Object.prototype.hasOwnProperty;
    var undef;
    function decode(input) {
      try {
        return decodeURIComponent(input.replace(/\+/g, " "));
      } catch (e) {
        return null;
      }
    }
    function encode(input) {
      try {
        return encodeURIComponent(input);
      } catch (e) {
        return null;
      }
    }
    function querystring(query) {
      var parser = /([^=?#&]+)=?([^&]*)/g, result = {}, part;
      while (part = parser.exec(query)) {
        var key = decode(part[1]), value = decode(part[2]);
        if (key === null || value === null || key in result)
          continue;
        result[key] = value;
      }
      return result;
    }
    function querystringify(obj, prefix) {
      prefix = prefix || "";
      var pairs = [], value, key;
      if (typeof prefix !== "string")
        prefix = "?";
      for (key in obj) {
        if (has2.call(obj, key)) {
          value = obj[key];
          if (!value && (value === null || value === undef || isNaN(value))) {
            value = "";
          }
          key = encode(key);
          value = encode(value);
          if (key === null || value === null)
            continue;
          pairs.push(key + "=" + value);
        }
      }
      return pairs.length ? prefix + pairs.join("&") : "";
    }
    exports.stringify = querystringify;
    exports.parse = querystring;
  }
});

// node_modules/url-parse/index.js
var require_url_parse = __commonJS({
  "node_modules/url-parse/index.js"(exports, module2) {
    init_shims();
    "use strict";
    var required = require_requires_port();
    var qs = require_querystringify();
    var slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\/\//;
    var protocolre = /^([a-z][a-z0-9.+-]*:)?(\/\/)?([\\/]+)?([\S\s]*)/i;
    var windowsDriveLetter = /^[a-zA-Z]:/;
    var whitespace = "[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]";
    var left = new RegExp("^" + whitespace + "+");
    function trimLeft(str) {
      return (str ? str : "").toString().replace(left, "");
    }
    var rules = [
      ["#", "hash"],
      ["?", "query"],
      function sanitize(address, url) {
        return isSpecial(url.protocol) ? address.replace(/\\/g, "/") : address;
      },
      ["/", "pathname"],
      ["@", "auth", 1],
      [NaN, "host", void 0, 1, 1],
      [/:(\d+)$/, "port", void 0, 1],
      [NaN, "hostname", void 0, 1, 1]
    ];
    var ignore = { hash: 1, query: 1 };
    function lolcation(loc) {
      var globalVar;
      if (typeof window !== "undefined")
        globalVar = window;
      else if (typeof global !== "undefined")
        globalVar = global;
      else if (typeof self !== "undefined")
        globalVar = self;
      else
        globalVar = {};
      var location = globalVar.location || {};
      loc = loc || location;
      var finaldestination = {}, type = typeof loc, key;
      if (loc.protocol === "blob:") {
        finaldestination = new Url(unescape(loc.pathname), {});
      } else if (type === "string") {
        finaldestination = new Url(loc, {});
        for (key in ignore)
          delete finaldestination[key];
      } else if (type === "object") {
        for (key in loc) {
          if (key in ignore)
            continue;
          finaldestination[key] = loc[key];
        }
        if (finaldestination.slashes === void 0) {
          finaldestination.slashes = slashes.test(loc.href);
        }
      }
      return finaldestination;
    }
    function isSpecial(scheme) {
      return scheme === "file:" || scheme === "ftp:" || scheme === "http:" || scheme === "https:" || scheme === "ws:" || scheme === "wss:";
    }
    function extractProtocol(address, location) {
      address = trimLeft(address);
      location = location || {};
      var match = protocolre.exec(address);
      var protocol = match[1] ? match[1].toLowerCase() : "";
      var forwardSlashes = !!match[2];
      var otherSlashes = !!match[3];
      var slashesCount = 0;
      var rest;
      if (forwardSlashes) {
        if (otherSlashes) {
          rest = match[2] + match[3] + match[4];
          slashesCount = match[2].length + match[3].length;
        } else {
          rest = match[2] + match[4];
          slashesCount = match[2].length;
        }
      } else {
        if (otherSlashes) {
          rest = match[3] + match[4];
          slashesCount = match[3].length;
        } else {
          rest = match[4];
        }
      }
      if (protocol === "file:") {
        if (slashesCount >= 2) {
          rest = rest.slice(2);
        }
      } else if (isSpecial(protocol)) {
        rest = match[4];
      } else if (protocol) {
        if (forwardSlashes) {
          rest = rest.slice(2);
        }
      } else if (slashesCount >= 2 && isSpecial(location.protocol)) {
        rest = match[4];
      }
      return {
        protocol,
        slashes: forwardSlashes || isSpecial(protocol),
        slashesCount,
        rest
      };
    }
    function resolve2(relative, base2) {
      if (relative === "")
        return base2;
      var path = (base2 || "/").split("/").slice(0, -1).concat(relative.split("/")), i = path.length, last = path[i - 1], unshift = false, up = 0;
      while (i--) {
        if (path[i] === ".") {
          path.splice(i, 1);
        } else if (path[i] === "..") {
          path.splice(i, 1);
          up++;
        } else if (up) {
          if (i === 0)
            unshift = true;
          path.splice(i, 1);
          up--;
        }
      }
      if (unshift)
        path.unshift("");
      if (last === "." || last === "..")
        path.push("");
      return path.join("/");
    }
    function Url(address, location, parser) {
      address = trimLeft(address);
      if (!(this instanceof Url)) {
        return new Url(address, location, parser);
      }
      var relative, extracted, parse, instruction, index2, key, instructions = rules.slice(), type = typeof location, url = this, i = 0;
      if (type !== "object" && type !== "string") {
        parser = location;
        location = null;
      }
      if (parser && typeof parser !== "function")
        parser = qs.parse;
      location = lolcation(location);
      extracted = extractProtocol(address || "", location);
      relative = !extracted.protocol && !extracted.slashes;
      url.slashes = extracted.slashes || relative && location.slashes;
      url.protocol = extracted.protocol || location.protocol || "";
      address = extracted.rest;
      if (extracted.protocol === "file:" && (extracted.slashesCount !== 2 || windowsDriveLetter.test(address)) || !extracted.slashes && (extracted.protocol || extracted.slashesCount < 2 || !isSpecial(url.protocol))) {
        instructions[3] = [/(.*)/, "pathname"];
      }
      for (; i < instructions.length; i++) {
        instruction = instructions[i];
        if (typeof instruction === "function") {
          address = instruction(address, url);
          continue;
        }
        parse = instruction[0];
        key = instruction[1];
        if (parse !== parse) {
          url[key] = address;
        } else if (typeof parse === "string") {
          if (~(index2 = address.indexOf(parse))) {
            if (typeof instruction[2] === "number") {
              url[key] = address.slice(0, index2);
              address = address.slice(index2 + instruction[2]);
            } else {
              url[key] = address.slice(index2);
              address = address.slice(0, index2);
            }
          }
        } else if (index2 = parse.exec(address)) {
          url[key] = index2[1];
          address = address.slice(0, index2.index);
        }
        url[key] = url[key] || (relative && instruction[3] ? location[key] || "" : "");
        if (instruction[4])
          url[key] = url[key].toLowerCase();
      }
      if (parser)
        url.query = parser(url.query);
      if (relative && location.slashes && url.pathname.charAt(0) !== "/" && (url.pathname !== "" || location.pathname !== "")) {
        url.pathname = resolve2(url.pathname, location.pathname);
      }
      if (url.pathname.charAt(0) !== "/" && isSpecial(url.protocol)) {
        url.pathname = "/" + url.pathname;
      }
      if (!required(url.port, url.protocol)) {
        url.host = url.hostname;
        url.port = "";
      }
      url.username = url.password = "";
      if (url.auth) {
        instruction = url.auth.split(":");
        url.username = instruction[0] || "";
        url.password = instruction[1] || "";
      }
      url.origin = url.protocol !== "file:" && isSpecial(url.protocol) && url.host ? url.protocol + "//" + url.host : "null";
      url.href = url.toString();
    }
    function set(part, value, fn) {
      var url = this;
      switch (part) {
        case "query":
          if (typeof value === "string" && value.length) {
            value = (fn || qs.parse)(value);
          }
          url[part] = value;
          break;
        case "port":
          url[part] = value;
          if (!required(value, url.protocol)) {
            url.host = url.hostname;
            url[part] = "";
          } else if (value) {
            url.host = url.hostname + ":" + value;
          }
          break;
        case "hostname":
          url[part] = value;
          if (url.port)
            value += ":" + url.port;
          url.host = value;
          break;
        case "host":
          url[part] = value;
          if (/:\d+$/.test(value)) {
            value = value.split(":");
            url.port = value.pop();
            url.hostname = value.join(":");
          } else {
            url.hostname = value;
            url.port = "";
          }
          break;
        case "protocol":
          url.protocol = value.toLowerCase();
          url.slashes = !fn;
          break;
        case "pathname":
        case "hash":
          if (value) {
            var char = part === "pathname" ? "/" : "#";
            url[part] = value.charAt(0) !== char ? char + value : value;
          } else {
            url[part] = value;
          }
          break;
        default:
          url[part] = value;
      }
      for (var i = 0; i < rules.length; i++) {
        var ins = rules[i];
        if (ins[4])
          url[ins[1]] = url[ins[1]].toLowerCase();
      }
      url.origin = url.protocol !== "file:" && isSpecial(url.protocol) && url.host ? url.protocol + "//" + url.host : "null";
      url.href = url.toString();
      return url;
    }
    function toString(stringify) {
      if (!stringify || typeof stringify !== "function")
        stringify = qs.stringify;
      var query, url = this, protocol = url.protocol;
      if (protocol && protocol.charAt(protocol.length - 1) !== ":")
        protocol += ":";
      var result = protocol + (url.slashes || isSpecial(url.protocol) ? "//" : "");
      if (url.username) {
        result += url.username;
        if (url.password)
          result += ":" + url.password;
        result += "@";
      }
      result += url.host + url.pathname;
      query = typeof url.query === "object" ? stringify(url.query) : url.query;
      if (query)
        result += query.charAt(0) !== "?" ? "?" + query : query;
      if (url.hash)
        result += url.hash;
      return result;
    }
    Url.prototype = { set, toString };
    Url.extractProtocol = extractProtocol;
    Url.location = lolcation;
    Url.trimLeft = trimLeft;
    Url.qs = qs;
    module2.exports = Url;
  }
});

// node_modules/original/index.js
var require_original = __commonJS({
  "node_modules/original/index.js"(exports, module2) {
    init_shims();
    "use strict";
    var parse = require_url_parse();
    function origin(url) {
      if (typeof url === "string")
        url = parse(url);
      if (!url.protocol || !url.hostname)
        return "null";
      return (url.protocol + "//" + url.host).toLowerCase();
    }
    origin.same = function same(a, b) {
      return origin(a) === origin(b);
    };
    module2.exports = origin;
  }
});

// node_modules/eventsource/lib/eventsource.js
var require_eventsource = __commonJS({
  "node_modules/eventsource/lib/eventsource.js"(exports, module2) {
    init_shims();
    var original = require_original();
    var parse = require("url").parse;
    var events = require("events");
    var https2 = require("https");
    var http2 = require("http");
    var util = require("util");
    var httpsOptions = [
      "pfx",
      "key",
      "passphrase",
      "cert",
      "ca",
      "ciphers",
      "rejectUnauthorized",
      "secureProtocol",
      "servername",
      "checkServerIdentity"
    ];
    var bom = [239, 187, 191];
    var colon = 58;
    var space = 32;
    var lineFeed = 10;
    var carriageReturn = 13;
    function hasBom(buf) {
      return bom.every(function(charCode, index2) {
        return buf[index2] === charCode;
      });
    }
    function EventSource(url, eventSourceInitDict) {
      var readyState = EventSource.CONNECTING;
      Object.defineProperty(this, "readyState", {
        get: function() {
          return readyState;
        }
      });
      Object.defineProperty(this, "url", {
        get: function() {
          return url;
        }
      });
      var self2 = this;
      self2.reconnectInterval = 1e3;
      self2.connectionInProgress = false;
      function onConnectionClosed(message) {
        if (readyState === EventSource.CLOSED)
          return;
        readyState = EventSource.CONNECTING;
        _emit("error", new Event("error", { message }));
        if (reconnectUrl) {
          url = reconnectUrl;
          reconnectUrl = null;
        }
        setTimeout(function() {
          if (readyState !== EventSource.CONNECTING || self2.connectionInProgress) {
            return;
          }
          self2.connectionInProgress = true;
          connect();
        }, self2.reconnectInterval);
      }
      var req;
      var lastEventId = "";
      if (eventSourceInitDict && eventSourceInitDict.headers && eventSourceInitDict.headers["Last-Event-ID"]) {
        lastEventId = eventSourceInitDict.headers["Last-Event-ID"];
        delete eventSourceInitDict.headers["Last-Event-ID"];
      }
      var discardTrailingNewline = false;
      var data = "";
      var eventName = "";
      var reconnectUrl = null;
      function connect() {
        var options2 = parse(url);
        var isSecure = options2.protocol === "https:";
        options2.headers = { "Cache-Control": "no-cache", "Accept": "text/event-stream" };
        if (lastEventId)
          options2.headers["Last-Event-ID"] = lastEventId;
        if (eventSourceInitDict && eventSourceInitDict.headers) {
          for (var i in eventSourceInitDict.headers) {
            var header = eventSourceInitDict.headers[i];
            if (header) {
              options2.headers[i] = header;
            }
          }
        }
        options2.rejectUnauthorized = !(eventSourceInitDict && !eventSourceInitDict.rejectUnauthorized);
        if (eventSourceInitDict && eventSourceInitDict.createConnection !== void 0) {
          options2.createConnection = eventSourceInitDict.createConnection;
        }
        var useProxy = eventSourceInitDict && eventSourceInitDict.proxy;
        if (useProxy) {
          var proxy = parse(eventSourceInitDict.proxy);
          isSecure = proxy.protocol === "https:";
          options2.protocol = isSecure ? "https:" : "http:";
          options2.path = url;
          options2.headers.Host = options2.host;
          options2.hostname = proxy.hostname;
          options2.host = proxy.host;
          options2.port = proxy.port;
        }
        if (eventSourceInitDict && eventSourceInitDict.https) {
          for (var optName in eventSourceInitDict.https) {
            if (httpsOptions.indexOf(optName) === -1) {
              continue;
            }
            var option = eventSourceInitDict.https[optName];
            if (option !== void 0) {
              options2[optName] = option;
            }
          }
        }
        if (eventSourceInitDict && eventSourceInitDict.withCredentials !== void 0) {
          options2.withCredentials = eventSourceInitDict.withCredentials;
        }
        req = (isSecure ? https2 : http2).request(options2, function(res) {
          self2.connectionInProgress = false;
          if (res.statusCode === 500 || res.statusCode === 502 || res.statusCode === 503 || res.statusCode === 504) {
            _emit("error", new Event("error", { status: res.statusCode, message: res.statusMessage }));
            onConnectionClosed();
            return;
          }
          if (res.statusCode === 301 || res.statusCode === 302 || res.statusCode === 307) {
            if (!res.headers.location) {
              _emit("error", new Event("error", { status: res.statusCode, message: res.statusMessage }));
              return;
            }
            if (res.statusCode === 307)
              reconnectUrl = url;
            url = res.headers.location;
            process.nextTick(connect);
            return;
          }
          if (res.statusCode !== 200) {
            _emit("error", new Event("error", { status: res.statusCode, message: res.statusMessage }));
            return self2.close();
          }
          readyState = EventSource.OPEN;
          res.on("close", function() {
            res.removeAllListeners("close");
            res.removeAllListeners("end");
            onConnectionClosed();
          });
          res.on("end", function() {
            res.removeAllListeners("close");
            res.removeAllListeners("end");
            onConnectionClosed();
          });
          _emit("open", new Event("open"));
          var isFirst = true;
          var buf;
          var startingPos = 0;
          var startingFieldLength = -1;
          res.on("data", function(chunk) {
            buf = buf ? Buffer.concat([buf, chunk]) : chunk;
            if (isFirst && hasBom(buf)) {
              buf = buf.slice(bom.length);
            }
            isFirst = false;
            var pos = 0;
            var length = buf.length;
            while (pos < length) {
              if (discardTrailingNewline) {
                if (buf[pos] === lineFeed) {
                  ++pos;
                }
                discardTrailingNewline = false;
              }
              var lineLength = -1;
              var fieldLength = startingFieldLength;
              var c;
              for (var i2 = startingPos; lineLength < 0 && i2 < length; ++i2) {
                c = buf[i2];
                if (c === colon) {
                  if (fieldLength < 0) {
                    fieldLength = i2 - pos;
                  }
                } else if (c === carriageReturn) {
                  discardTrailingNewline = true;
                  lineLength = i2 - pos;
                } else if (c === lineFeed) {
                  lineLength = i2 - pos;
                }
              }
              if (lineLength < 0) {
                startingPos = length - pos;
                startingFieldLength = fieldLength;
                break;
              } else {
                startingPos = 0;
                startingFieldLength = -1;
              }
              parseEventStreamLine(buf, pos, fieldLength, lineLength);
              pos += lineLength + 1;
            }
            if (pos === length) {
              buf = void 0;
            } else if (pos > 0) {
              buf = buf.slice(pos);
            }
          });
        });
        req.on("error", function(err) {
          self2.connectionInProgress = false;
          onConnectionClosed(err.message);
        });
        if (req.setNoDelay)
          req.setNoDelay(true);
        req.end();
      }
      connect();
      function _emit() {
        if (self2.listeners(arguments[0]).length > 0) {
          self2.emit.apply(self2, arguments);
        }
      }
      this._close = function() {
        if (readyState === EventSource.CLOSED)
          return;
        readyState = EventSource.CLOSED;
        if (req.abort)
          req.abort();
        if (req.xhr && req.xhr.abort)
          req.xhr.abort();
      };
      function parseEventStreamLine(buf, pos, fieldLength, lineLength) {
        if (lineLength === 0) {
          if (data.length > 0) {
            var type = eventName || "message";
            _emit(type, new MessageEvent(type, {
              data: data.slice(0, -1),
              lastEventId,
              origin: original(url)
            }));
            data = "";
          }
          eventName = void 0;
        } else if (fieldLength > 0) {
          var noValue = fieldLength < 0;
          var step = 0;
          var field = buf.slice(pos, pos + (noValue ? lineLength : fieldLength)).toString();
          if (noValue) {
            step = lineLength;
          } else if (buf[pos + fieldLength + 1] !== space) {
            step = fieldLength + 1;
          } else {
            step = fieldLength + 2;
          }
          pos += step;
          var valueLength = lineLength - step;
          var value = buf.slice(pos, pos + valueLength).toString();
          if (field === "data") {
            data += value + "\n";
          } else if (field === "event") {
            eventName = value;
          } else if (field === "id") {
            lastEventId = value;
          } else if (field === "retry") {
            var retry = parseInt(value, 10);
            if (!Number.isNaN(retry)) {
              self2.reconnectInterval = retry;
            }
          }
        }
      }
    }
    module2.exports = EventSource;
    util.inherits(EventSource, events.EventEmitter);
    EventSource.prototype.constructor = EventSource;
    ["open", "error", "message"].forEach(function(method) {
      Object.defineProperty(EventSource.prototype, "on" + method, {
        get: function get2() {
          var listener = this.listeners(method)[0];
          return listener ? listener._listener ? listener._listener : listener : void 0;
        },
        set: function set(listener) {
          this.removeAllListeners(method);
          this.addEventListener(method, listener);
        }
      });
    });
    Object.defineProperty(EventSource, "CONNECTING", { enumerable: true, value: 0 });
    Object.defineProperty(EventSource, "OPEN", { enumerable: true, value: 1 });
    Object.defineProperty(EventSource, "CLOSED", { enumerable: true, value: 2 });
    EventSource.prototype.CONNECTING = 0;
    EventSource.prototype.OPEN = 1;
    EventSource.prototype.CLOSED = 2;
    EventSource.prototype.close = function() {
      this._close();
    };
    EventSource.prototype.addEventListener = function addEventListener(type, listener) {
      if (typeof listener === "function") {
        listener._listener = listener;
        this.on(type, listener);
      }
    };
    EventSource.prototype.dispatchEvent = function dispatchEvent(event) {
      if (!event.type) {
        throw new Error("UNSPECIFIED_EVENT_TYPE_ERR");
      }
      this.emit(event.type, event.detail);
    };
    EventSource.prototype.removeEventListener = function removeEventListener(type, listener) {
      if (typeof listener === "function") {
        listener._listener = void 0;
        this.removeListener(type, listener);
      }
    };
    function Event(type, optionalProperties) {
      Object.defineProperty(this, "type", { writable: false, value: type, enumerable: true });
      if (optionalProperties) {
        for (var f in optionalProperties) {
          if (optionalProperties.hasOwnProperty(f)) {
            Object.defineProperty(this, f, { writable: false, value: optionalProperties[f], enumerable: true });
          }
        }
      }
    }
    function MessageEvent(type, eventInitDict) {
      Object.defineProperty(this, "type", { writable: false, value: type, enumerable: true });
      for (var f in eventInitDict) {
        if (eventInitDict.hasOwnProperty(f)) {
          Object.defineProperty(this, f, { writable: false, value: eventInitDict[f], enumerable: true });
        }
      }
    }
  }
});

// node_modules/@sanity/eventsource/node.js
var require_node = __commonJS({
  "node_modules/@sanity/eventsource/node.js"(exports, module2) {
    init_shims();
    module2.exports = require_eventsource();
  }
});

// node_modules/@sanity/generate-help-url/index.js
var require_generate_help_url = __commonJS({
  "node_modules/@sanity/generate-help-url/index.js"(exports, module2) {
    init_shims();
    var baseUrl = "https://docs.sanity.io/help/";
    module2.exports = function generateHelpUrl(slug) {
      return baseUrl + slug;
    };
  }
});

// node_modules/@sanity/client/lib/util/pick.js
var require_pick = __commonJS({
  "node_modules/@sanity/client/lib/util/pick.js"(exports, module2) {
    init_shims();
    "use strict";
    module2.exports = function(obj, props) {
      return props.reduce(function(selection, prop) {
        if (typeof obj[prop] === "undefined") {
          return selection;
        }
        selection[prop] = obj[prop];
        return selection;
      }, {});
    };
  }
});

// node_modules/@sanity/client/lib/util/once.js
var require_once = __commonJS({
  "node_modules/@sanity/client/lib/util/once.js"(exports, module2) {
    init_shims();
    "use strict";
    module2.exports = function(fn) {
      var didCall = false;
      var returnValue;
      return function() {
        if (didCall) {
          return returnValue;
        }
        returnValue = fn.apply(void 0, arguments);
        didCall = true;
        return returnValue;
      };
    };
  }
});

// node_modules/@sanity/client/lib/util/defaults.js
var require_defaults = __commonJS({
  "node_modules/@sanity/client/lib/util/defaults.js"(exports, module2) {
    init_shims();
    "use strict";
    module2.exports = function(obj, defaults) {
      return Object.keys(defaults).concat(Object.keys(obj)).reduce(function(target, prop) {
        target[prop] = typeof obj[prop] === "undefined" ? defaults[prop] : obj[prop];
        return target;
      }, {});
    };
  }
});

// node_modules/@sanity/client/lib/data/listen.js
var require_listen = __commonJS({
  "node_modules/@sanity/client/lib/data/listen.js"(exports, module2) {
    init_shims();
    "use strict";
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
          symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
          });
        }
        keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};
        if (i % 2) {
          ownKeys(Object(source), true).forEach(function(key) {
            _defineProperty(target, key, source[key]);
          });
        } else if (Object.getOwnPropertyDescriptors) {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        } else {
          ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
          });
        }
      }
      return target;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var assign = require_object_assign();
    var Observable = require_minimal();
    var polyfilledEventSource = require_node();
    var generateHelpUrl = require_generate_help_url();
    var pick = require_pick();
    var once = require_once();
    var defaults = require_defaults();
    var encodeQueryString = require_encodeQueryString();
    var tokenWarning = ["Using token with listeners is not supported in browsers. ", "For more info, see ".concat(generateHelpUrl("js-client-listener-tokens-browser"), ".")];
    var printTokenWarning = once(function() {
      return console.warn(tokenWarning.join(" "));
    });
    var isWindowEventSource = Boolean(typeof window !== "undefined" && window.EventSource);
    var EventSource = isWindowEventSource ? window.EventSource : polyfilledEventSource;
    var possibleOptions = ["includePreviousRevision", "includeResult", "visibility", "effectFormat", "tag"];
    var defaultOptions = {
      includeResult: true
    };
    module2.exports = function listen(query, params) {
      var opts = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      var _this$clientConfig = this.clientConfig, url = _this$clientConfig.url, token = _this$clientConfig.token, withCredentials = _this$clientConfig.withCredentials, requestTagPrefix = _this$clientConfig.requestTagPrefix;
      var tag = opts.tag && requestTagPrefix ? [requestTagPrefix, opts.tag].join(".") : opts.tag;
      var options2 = _objectSpread(_objectSpread({}, defaults(opts, defaultOptions)), {}, {
        tag
      });
      var listenOpts = pick(options2, possibleOptions);
      var qs = encodeQueryString({
        query,
        params,
        options: listenOpts,
        tag
      });
      var uri = "".concat(url).concat(this.getDataUrl("listen", qs));
      var listenFor = options2.events ? options2.events : ["mutation"];
      var shouldEmitReconnect = listenFor.indexOf("reconnect") !== -1;
      if (token && isWindowEventSource) {
        printTokenWarning();
      }
      var esOptions = {};
      if (token || withCredentials) {
        esOptions.withCredentials = true;
      }
      if (token) {
        esOptions.headers = {
          Authorization: "Bearer ".concat(token)
        };
      }
      return new Observable(function(observer) {
        var es = getEventSource();
        var reconnectTimer;
        var stopped = false;
        function onError() {
          if (stopped) {
            return;
          }
          emitReconnect();
          if (stopped) {
            return;
          }
          if (es.readyState === EventSource.CLOSED) {
            unsubscribe();
            clearTimeout(reconnectTimer);
            reconnectTimer = setTimeout(open, 100);
          }
        }
        function onChannelError(err) {
          observer.error(cooerceError(err));
        }
        function onMessage(evt) {
          var event = parseEvent(evt);
          return event instanceof Error ? observer.error(event) : observer.next(event);
        }
        function onDisconnect(evt) {
          stopped = true;
          unsubscribe();
          observer.complete();
        }
        function unsubscribe() {
          es.removeEventListener("error", onError, false);
          es.removeEventListener("channelError", onChannelError, false);
          es.removeEventListener("disconnect", onDisconnect, false);
          listenFor.forEach(function(type) {
            return es.removeEventListener(type, onMessage, false);
          });
          es.close();
        }
        function emitReconnect() {
          if (shouldEmitReconnect) {
            observer.next({
              type: "reconnect"
            });
          }
        }
        function getEventSource() {
          var evs = new EventSource(uri, esOptions);
          evs.addEventListener("error", onError, false);
          evs.addEventListener("channelError", onChannelError, false);
          evs.addEventListener("disconnect", onDisconnect, false);
          listenFor.forEach(function(type) {
            return evs.addEventListener(type, onMessage, false);
          });
          return evs;
        }
        function open() {
          es = getEventSource();
        }
        function stop() {
          stopped = true;
          unsubscribe();
        }
        return stop;
      });
    };
    function parseEvent(event) {
      try {
        var data = event.data && JSON.parse(event.data) || {};
        return assign({
          type: event.type
        }, data);
      } catch (err) {
        return err;
      }
    }
    function cooerceError(err) {
      if (err instanceof Error) {
        return err;
      }
      var evt = parseEvent(err);
      return evt instanceof Error ? evt : new Error(extractErrorMessage(evt));
    }
    function extractErrorMessage(err) {
      if (!err.error) {
        return err.message || "Unknown listener error";
      }
      if (err.error.description) {
        return err.error.description;
      }
      return typeof err.error === "string" ? err.error : JSON.stringify(err.error, null, 2);
    }
  }
});

// node_modules/@sanity/client/lib/data/dataMethods.js
var require_dataMethods = __commonJS({
  "node_modules/@sanity/client/lib/data/dataMethods.js"(exports, module2) {
    init_shims();
    "use strict";
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var assign = require_object_assign();
    var _require = require_filter2();
    var filter = _require.filter;
    var _require2 = require_map2();
    var map = _require2.map;
    var validators = require_validators();
    var getSelection = require_getSelection();
    var encodeQueryString = require_encodeQueryString();
    var Transaction = require_transaction();
    var Patch = require_patch();
    var listen = require_listen();
    var excludeFalsey = function excludeFalsey2(param, defValue) {
      var value = typeof param === "undefined" ? defValue : param;
      return param === false ? void 0 : value;
    };
    var getMutationQuery = function getMutationQuery2() {
      var options2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      return {
        returnIds: true,
        returnDocuments: excludeFalsey(options2.returnDocuments, true),
        visibility: options2.visibility || "sync"
      };
    };
    var isResponse = function isResponse2(event) {
      return event.type === "response";
    };
    var getBody = function getBody2(event) {
      return event.body;
    };
    var indexBy = function indexBy2(docs, attr) {
      return docs.reduce(function(indexed, doc) {
        indexed[attr(doc)] = doc;
        return indexed;
      }, Object.create(null));
    };
    var toPromise = function toPromise2(observable) {
      return observable.toPromise();
    };
    var getQuerySizeLimit = 11264;
    module2.exports = {
      listen,
      getDataUrl: function getDataUrl(operation, path) {
        var config = this.clientConfig;
        var catalog = config.gradientMode ? config.namespace : validators.hasDataset(config);
        var baseUri = "/".concat(operation, "/").concat(catalog);
        var uri = path ? "".concat(baseUri, "/").concat(path) : baseUri;
        return (this.clientConfig.gradientMode ? uri : "/data".concat(uri)).replace(/\/($|\?)/, "$1");
      },
      fetch: function fetch2(query, params) {
        var options2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
        var mapResponse = options2.filterResponse === false ? function(res) {
          return res;
        } : function(res) {
          return res.result;
        };
        var observable = this._dataRequest("query", {
          query,
          params
        }, options2).pipe(map(mapResponse));
        return this.isPromiseAPI() ? toPromise(observable) : observable;
      },
      getDocument: function getDocument(id) {
        var opts = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        var options2 = {
          uri: this.getDataUrl("doc", id),
          json: true,
          tag: opts.tag
        };
        var observable = this._requestObservable(options2).pipe(filter(isResponse), map(function(event) {
          return event.body.documents && event.body.documents[0];
        }));
        return this.isPromiseAPI() ? toPromise(observable) : observable;
      },
      getDocuments: function getDocuments(ids) {
        var opts = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        var options2 = {
          uri: this.getDataUrl("doc", ids.join(",")),
          json: true,
          tag: opts.tag
        };
        var observable = this._requestObservable(options2).pipe(filter(isResponse), map(function(event) {
          var indexed = indexBy(event.body.documents || [], function(doc) {
            return doc._id;
          });
          return ids.map(function(id) {
            return indexed[id] || null;
          });
        }));
        return this.isPromiseAPI() ? toPromise(observable) : observable;
      },
      create: function create(doc, options2) {
        return this._create(doc, "create", options2);
      },
      createIfNotExists: function createIfNotExists(doc, options2) {
        validators.requireDocumentId("createIfNotExists", doc);
        return this._create(doc, "createIfNotExists", options2);
      },
      createOrReplace: function createOrReplace(doc, options2) {
        validators.requireDocumentId("createOrReplace", doc);
        return this._create(doc, "createOrReplace", options2);
      },
      patch: function patch(selector, operations) {
        return new Patch(selector, operations, this);
      },
      delete: function _delete(selection, options2) {
        return this.dataRequest("mutate", {
          mutations: [{
            delete: getSelection(selection)
          }]
        }, options2);
      },
      mutate: function mutate(mutations, options2) {
        var mut = mutations instanceof Patch || mutations instanceof Transaction ? mutations.serialize() : mutations;
        var muts = Array.isArray(mut) ? mut : [mut];
        var transactionId = options2 && options2.transactionId;
        return this.dataRequest("mutate", {
          mutations: muts,
          transactionId
        }, options2);
      },
      transaction: function transaction(operations) {
        return new Transaction(operations, this);
      },
      dataRequest: function dataRequest(endpoint, body) {
        var options2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
        var request = this._dataRequest(endpoint, body, options2);
        return this.isPromiseAPI() ? toPromise(request) : request;
      },
      _dataRequest: function _dataRequest(endpoint, body) {
        var options2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
        var isMutation = endpoint === "mutate";
        var strQuery = !isMutation && encodeQueryString(body);
        var useGet = !isMutation && strQuery.length < getQuerySizeLimit;
        var stringQuery = useGet ? strQuery : "";
        var returnFirst = options2.returnFirst;
        var timeout = options2.timeout, token = options2.token, tag = options2.tag;
        var uri = this.getDataUrl(endpoint, stringQuery);
        var reqOptions = {
          method: useGet ? "GET" : "POST",
          uri,
          json: true,
          body: useGet ? void 0 : body,
          query: isMutation && getMutationQuery(options2),
          timeout,
          token,
          tag
        };
        return this._requestObservable(reqOptions).pipe(filter(isResponse), map(getBody), map(function(res) {
          if (!isMutation) {
            return res;
          }
          var results = res.results || [];
          if (options2.returnDocuments) {
            return returnFirst ? results[0] && results[0].document : results.map(function(mut) {
              return mut.document;
            });
          }
          var key = returnFirst ? "documentId" : "documentIds";
          var ids = returnFirst ? results[0] && results[0].id : results.map(function(mut) {
            return mut.id;
          });
          return _defineProperty({
            transactionId: res.transactionId,
            results
          }, key, ids);
        }));
      },
      _create: function _create(doc, op) {
        var options2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
        var mutation = _defineProperty({}, op, doc);
        var opts = assign({
          returnFirst: true,
          returnDocuments: true
        }, options2);
        return this.dataRequest("mutate", {
          mutations: [mutation]
        }, opts);
      }
    };
  }
});

// node_modules/@sanity/client/lib/datasets/datasetsClient.js
var require_datasetsClient = __commonJS({
  "node_modules/@sanity/client/lib/datasets/datasetsClient.js"(exports, module2) {
    init_shims();
    "use strict";
    var assign = require_object_assign();
    var validate = require_validators();
    function DatasetsClient(client2) {
      this.request = client2.request.bind(client2);
    }
    assign(DatasetsClient.prototype, {
      create: function create(name, options2) {
        return this._modify("PUT", name, options2);
      },
      edit: function edit(name, options2) {
        return this._modify("PATCH", name, options2);
      },
      delete: function _delete(name) {
        return this._modify("DELETE", name);
      },
      list: function list() {
        return this.request({
          uri: "/datasets"
        });
      },
      _modify: function _modify(method, name, body) {
        validate.dataset(name);
        return this.request({
          method,
          uri: "/datasets/".concat(name),
          body
        });
      }
    });
    module2.exports = DatasetsClient;
  }
});

// node_modules/@sanity/client/lib/projects/projectsClient.js
var require_projectsClient = __commonJS({
  "node_modules/@sanity/client/lib/projects/projectsClient.js"(exports, module2) {
    init_shims();
    "use strict";
    var assign = require_object_assign();
    function ProjectsClient(client2) {
      this.client = client2;
    }
    assign(ProjectsClient.prototype, {
      list: function list() {
        return this.client.request({
          uri: "/projects"
        });
      },
      getById: function getById(id) {
        return this.client.request({
          uri: "/projects/".concat(id)
        });
      }
    });
    module2.exports = ProjectsClient;
  }
});

// node_modules/@sanity/client/lib/http/queryString.js
var require_queryString = __commonJS({
  "node_modules/@sanity/client/lib/http/queryString.js"(exports, module2) {
    init_shims();
    "use strict";
    module2.exports = function(params) {
      var qs = [];
      for (var key in params) {
        if (params.hasOwnProperty(key)) {
          qs.push("".concat(encodeURIComponent(key), "=").concat(encodeURIComponent(params[key])));
        }
      }
      return qs.length > 0 ? "?".concat(qs.join("&")) : "";
    };
  }
});

// node_modules/@sanity/client/lib/assets/assetsClient.js
var require_assetsClient = __commonJS({
  "node_modules/@sanity/client/lib/assets/assetsClient.js"(exports, module2) {
    init_shims();
    "use strict";
    function _slicedToArray(arr, i) {
      return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
    }
    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _arrayLikeToArray(o, minLen);
    }
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) {
        arr2[i] = arr[i];
      }
      return arr2;
    }
    function _iterableToArrayLimit(arr, i) {
      var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
      if (_i == null)
        return;
      var _arr = [];
      var _n = true;
      var _d = false;
      var _s, _e;
      try {
        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
          _arr.push(_s.value);
          if (i && _arr.length === i)
            break;
        }
      } catch (err) {
        _d = true;
        _e = err;
      } finally {
        try {
          if (!_n && _i["return"] != null)
            _i["return"]();
        } finally {
          if (_d)
            throw _e;
        }
      }
      return _arr;
    }
    function _arrayWithHoles(arr) {
      if (Array.isArray(arr))
        return arr;
    }
    var assign = require_object_assign();
    var _require = require_map2();
    var map = _require.map;
    var _require2 = require_filter2();
    var filter = _require2.filter;
    var queryString = require_queryString();
    var validators = require_validators();
    function AssetsClient(client2) {
      this.client = client2;
    }
    function toDocument(body) {
      var document2 = body.document;
      Object.defineProperty(document2, "document", {
        enumerable: false,
        get: function get2() {
          console.warn("The promise returned from client.asset.upload(...) now resolves with the asset document");
          return document2;
        }
      });
      return document2;
    }
    function optionsFromFile(opts, file) {
      if (typeof window === "undefined" || !(file instanceof window.File)) {
        return opts;
      }
      return assign({
        filename: opts.preserveFilename === false ? void 0 : file.name,
        contentType: file.type
      }, opts);
    }
    assign(AssetsClient.prototype, {
      upload: function upload(assetType, body) {
        var opts = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
        validators.validateAssetType(assetType);
        var meta = opts.extract || void 0;
        if (meta && !meta.length) {
          meta = ["none"];
        }
        var dataset = validators.hasDataset(this.client.clientConfig);
        var assetEndpoint = assetType === "image" ? "images" : "files";
        var options2 = optionsFromFile(opts, body);
        var tag = options2.tag, label = options2.label, title = options2.title, description = options2.description, creditLine = options2.creditLine, filename = options2.filename, source = options2.source;
        var query = {
          label,
          title,
          description,
          filename,
          meta,
          creditLine
        };
        if (source) {
          query.sourceId = source.id;
          query.sourceName = source.name;
          query.sourceUrl = source.url;
        }
        var observable = this.client._requestObservable({
          tag,
          method: "POST",
          timeout: options2.timeout || 0,
          uri: "/assets/".concat(assetEndpoint, "/").concat(dataset),
          headers: options2.contentType ? {
            "Content-Type": options2.contentType
          } : {},
          query,
          body
        });
        return this.client.isPromiseAPI() ? observable.pipe(filter(function(event) {
          return event.type === "response";
        }), map(function(event) {
          return toDocument(event.body);
        })).toPromise() : observable;
      },
      delete: function _delete(type, id) {
        console.warn("client.assets.delete() is deprecated, please use client.delete(<document-id>)");
        var docId = id || "";
        if (!/^(image|file)-/.test(docId)) {
          docId = "".concat(type, "-").concat(docId);
        } else if (type._id) {
          docId = type._id;
        }
        validators.hasDataset(this.client.clientConfig);
        return this.client.delete(docId);
      },
      getImageUrl: function getImageUrl(ref, query) {
        var id = ref._ref || ref;
        if (typeof id !== "string") {
          throw new Error("getImageUrl() needs either an object with a _ref, or a string with an asset document ID");
        }
        if (!/^image-[A-Za-z0-9_]+-\d+x\d+-[a-z]{1,5}$/.test(id)) {
          throw new Error('Unsupported asset ID "'.concat(id, '". URL generation only works for auto-generated IDs.'));
        }
        var _id$split = id.split("-"), _id$split2 = _slicedToArray(_id$split, 4), assetId = _id$split2[1], size = _id$split2[2], format3 = _id$split2[3];
        validators.hasDataset(this.client.clientConfig);
        var _this$client$clientCo = this.client.clientConfig, projectId = _this$client$clientCo.projectId, dataset = _this$client$clientCo.dataset;
        var qs = query ? queryString(query) : "";
        return "https://cdn.sanity.io/images/".concat(projectId, "/").concat(dataset, "/").concat(assetId, "-").concat(size, ".").concat(format3).concat(qs);
      }
    });
    module2.exports = AssetsClient;
  }
});

// node_modules/@sanity/client/lib/users/usersClient.js
var require_usersClient = __commonJS({
  "node_modules/@sanity/client/lib/users/usersClient.js"(exports, module2) {
    init_shims();
    "use strict";
    var assign = require_object_assign();
    function UsersClient(client2) {
      this.client = client2;
    }
    assign(UsersClient.prototype, {
      getById: function getById(id) {
        return this.client.request({
          uri: "/users/".concat(id)
        });
      }
    });
    module2.exports = UsersClient;
  }
});

// node_modules/@sanity/client/lib/auth/authClient.js
var require_authClient = __commonJS({
  "node_modules/@sanity/client/lib/auth/authClient.js"(exports, module2) {
    init_shims();
    "use strict";
    var assign = require_object_assign();
    function AuthClient(client2) {
      this.client = client2;
    }
    assign(AuthClient.prototype, {
      getLoginProviders: function getLoginProviders() {
        return this.client.request({
          uri: "/auth/providers"
        });
      },
      logout: function logout() {
        return this.client.request({
          uri: "/auth/logout",
          method: "POST"
        });
      }
    });
    module2.exports = AuthClient;
  }
});

// node_modules/nano-pubsub/index.js
var require_nano_pubsub = __commonJS({
  "node_modules/nano-pubsub/index.js"(exports, module2) {
    init_shims();
    module2.exports = function Pubsub() {
      var subscribers = [];
      return {
        subscribe: subscribe2,
        publish
      };
      function subscribe2(subscriber) {
        subscribers.push(subscriber);
        return function unsubscribe() {
          var idx = subscribers.indexOf(subscriber);
          if (idx > -1) {
            subscribers.splice(idx, 1);
          }
        };
      }
      function publish() {
        for (var i = 0; i < subscribers.length; i++) {
          subscribers[i].apply(null, arguments);
        }
      }
    };
  }
});

// node_modules/get-it/lib-node/util/middlewareReducer.js
var require_middlewareReducer = __commonJS({
  "node_modules/get-it/lib-node/util/middlewareReducer.js"(exports, module2) {
    init_shims();
    "use strict";
    module2.exports = (middleware) => {
      const applyMiddleware = function applyMiddleware2(hook, defaultValue) {
        for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
          args[_key - 2] = arguments[_key];
        }
        const bailEarly = hook === "onError";
        let value = defaultValue;
        for (let i = 0; i < middleware[hook].length; i++) {
          const handler2 = middleware[hook][i];
          value = handler2.apply(void 0, [value].concat(args));
          if (bailEarly && !value) {
            break;
          }
        }
        return value;
      };
      return applyMiddleware;
    };
  }
});

// node_modules/get-it/lib-node/middleware/defaultOptionsProcessor.js
var require_defaultOptionsProcessor = __commonJS({
  "node_modules/get-it/lib-node/middleware/defaultOptionsProcessor.js"(exports, module2) {
    init_shims();
    "use strict";
    var objectAssign = require_object_assign();
    var urlParse = require_url_parse();
    var isReactNative = typeof navigator === "undefined" ? false : navigator.product === "ReactNative";
    var has2 = Object.prototype.hasOwnProperty;
    var defaultOptions = { timeout: isReactNative ? 6e4 : 12e4 };
    module2.exports = (opts) => {
      const options2 = typeof opts === "string" ? objectAssign({ url: opts }, defaultOptions) : objectAssign({}, defaultOptions, opts);
      const url = urlParse(options2.url, {}, true);
      options2.timeout = normalizeTimeout(options2.timeout);
      if (options2.query) {
        url.query = objectAssign({}, url.query, removeUndefined(options2.query));
      }
      options2.method = options2.body && !options2.method ? "POST" : (options2.method || "GET").toUpperCase();
      options2.url = url.toString(stringifyQueryString);
      return options2;
    };
    function stringifyQueryString(obj) {
      const pairs = [];
      for (const key in obj) {
        if (has2.call(obj, key)) {
          push(key, obj[key]);
        }
      }
      return pairs.length ? pairs.join("&") : "";
      function push(key, val) {
        if (Array.isArray(val)) {
          val.forEach((item) => push(key, item));
        } else {
          pairs.push([key, val].map(encodeURIComponent).join("="));
        }
      }
    }
    function normalizeTimeout(time) {
      if (time === false || time === 0) {
        return false;
      }
      if (time.connect || time.socket) {
        return time;
      }
      const delay = Number(time);
      if (isNaN(delay)) {
        return normalizeTimeout(defaultOptions.timeout);
      }
      return { connect: delay, socket: delay };
    }
    function removeUndefined(obj) {
      const target = {};
      for (const key in obj) {
        if (obj[key] !== void 0) {
          target[key] = obj[key];
        }
      }
      return target;
    }
  }
});

// node_modules/get-it/lib-node/middleware/defaultOptionsValidator.js
var require_defaultOptionsValidator = __commonJS({
  "node_modules/get-it/lib-node/middleware/defaultOptionsValidator.js"(exports, module2) {
    init_shims();
    "use strict";
    var validUrl = /^https?:\/\//i;
    module2.exports = (options2) => {
      if (!validUrl.test(options2.url)) {
        throw new Error(`"${options2.url}" is not a valid URL`);
      }
    };
  }
});

// node_modules/simple-concat/index.js
var require_simple_concat = __commonJS({
  "node_modules/simple-concat/index.js"(exports, module2) {
    init_shims();
    module2.exports = function(stream, cb) {
      var chunks = [];
      stream.on("data", function(chunk) {
        chunks.push(chunk);
      });
      stream.once("end", function() {
        if (cb)
          cb(null, Buffer.concat(chunks));
        cb = null;
      });
      stream.once("error", function(err) {
        if (cb)
          cb(err);
        cb = null;
      });
    };
  }
});

// node_modules/ms/index.js
var require_ms = __commonJS({
  "node_modules/ms/index.js"(exports, module2) {
    init_shims();
    var s2 = 1e3;
    var m = s2 * 60;
    var h2 = m * 60;
    var d2 = h2 * 24;
    var w = d2 * 7;
    var y = d2 * 365.25;
    module2.exports = function(val, options2) {
      options2 = options2 || {};
      var type = typeof val;
      if (type === "string" && val.length > 0) {
        return parse(val);
      } else if (type === "number" && isFinite(val)) {
        return options2.long ? fmtLong(val) : fmtShort(val);
      }
      throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(val));
    };
    function parse(str) {
      str = String(str);
      if (str.length > 100) {
        return;
      }
      var match = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(str);
      if (!match) {
        return;
      }
      var n = parseFloat(match[1]);
      var type = (match[2] || "ms").toLowerCase();
      switch (type) {
        case "years":
        case "year":
        case "yrs":
        case "yr":
        case "y":
          return n * y;
        case "weeks":
        case "week":
        case "w":
          return n * w;
        case "days":
        case "day":
        case "d":
          return n * d2;
        case "hours":
        case "hour":
        case "hrs":
        case "hr":
        case "h":
          return n * h2;
        case "minutes":
        case "minute":
        case "mins":
        case "min":
        case "m":
          return n * m;
        case "seconds":
        case "second":
        case "secs":
        case "sec":
        case "s":
          return n * s2;
        case "milliseconds":
        case "millisecond":
        case "msecs":
        case "msec":
        case "ms":
          return n;
        default:
          return void 0;
      }
    }
    function fmtShort(ms) {
      var msAbs = Math.abs(ms);
      if (msAbs >= d2) {
        return Math.round(ms / d2) + "d";
      }
      if (msAbs >= h2) {
        return Math.round(ms / h2) + "h";
      }
      if (msAbs >= m) {
        return Math.round(ms / m) + "m";
      }
      if (msAbs >= s2) {
        return Math.round(ms / s2) + "s";
      }
      return ms + "ms";
    }
    function fmtLong(ms) {
      var msAbs = Math.abs(ms);
      if (msAbs >= d2) {
        return plural(ms, msAbs, d2, "day");
      }
      if (msAbs >= h2) {
        return plural(ms, msAbs, h2, "hour");
      }
      if (msAbs >= m) {
        return plural(ms, msAbs, m, "minute");
      }
      if (msAbs >= s2) {
        return plural(ms, msAbs, s2, "second");
      }
      return ms + " ms";
    }
    function plural(ms, msAbs, n, name) {
      var isPlural = msAbs >= n * 1.5;
      return Math.round(ms / n) + " " + name + (isPlural ? "s" : "");
    }
  }
});

// node_modules/debug/src/common.js
var require_common = __commonJS({
  "node_modules/debug/src/common.js"(exports, module2) {
    init_shims();
    function setup(env) {
      createDebug.debug = createDebug;
      createDebug.default = createDebug;
      createDebug.coerce = coerce;
      createDebug.disable = disable;
      createDebug.enable = enable;
      createDebug.enabled = enabled;
      createDebug.humanize = require_ms();
      createDebug.destroy = destroy;
      Object.keys(env).forEach((key) => {
        createDebug[key] = env[key];
      });
      createDebug.names = [];
      createDebug.skips = [];
      createDebug.formatters = {};
      function selectColor(namespace) {
        let hash2 = 0;
        for (let i = 0; i < namespace.length; i++) {
          hash2 = (hash2 << 5) - hash2 + namespace.charCodeAt(i);
          hash2 |= 0;
        }
        return createDebug.colors[Math.abs(hash2) % createDebug.colors.length];
      }
      createDebug.selectColor = selectColor;
      function createDebug(namespace) {
        let prevTime;
        let enableOverride = null;
        let namespacesCache;
        let enabledCache;
        function debug(...args) {
          if (!debug.enabled) {
            return;
          }
          const self2 = debug;
          const curr = Number(new Date());
          const ms = curr - (prevTime || curr);
          self2.diff = ms;
          self2.prev = prevTime;
          self2.curr = curr;
          prevTime = curr;
          args[0] = createDebug.coerce(args[0]);
          if (typeof args[0] !== "string") {
            args.unshift("%O");
          }
          let index2 = 0;
          args[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format3) => {
            if (match === "%%") {
              return "%";
            }
            index2++;
            const formatter = createDebug.formatters[format3];
            if (typeof formatter === "function") {
              const val = args[index2];
              match = formatter.call(self2, val);
              args.splice(index2, 1);
              index2--;
            }
            return match;
          });
          createDebug.formatArgs.call(self2, args);
          const logFn = self2.log || createDebug.log;
          logFn.apply(self2, args);
        }
        debug.namespace = namespace;
        debug.useColors = createDebug.useColors();
        debug.color = createDebug.selectColor(namespace);
        debug.extend = extend;
        debug.destroy = createDebug.destroy;
        Object.defineProperty(debug, "enabled", {
          enumerable: true,
          configurable: false,
          get: () => {
            if (enableOverride !== null) {
              return enableOverride;
            }
            if (namespacesCache !== createDebug.namespaces) {
              namespacesCache = createDebug.namespaces;
              enabledCache = createDebug.enabled(namespace);
            }
            return enabledCache;
          },
          set: (v) => {
            enableOverride = v;
          }
        });
        if (typeof createDebug.init === "function") {
          createDebug.init(debug);
        }
        return debug;
      }
      function extend(namespace, delimiter) {
        const newDebug = createDebug(this.namespace + (typeof delimiter === "undefined" ? ":" : delimiter) + namespace);
        newDebug.log = this.log;
        return newDebug;
      }
      function enable(namespaces) {
        createDebug.save(namespaces);
        createDebug.namespaces = namespaces;
        createDebug.names = [];
        createDebug.skips = [];
        let i;
        const split = (typeof namespaces === "string" ? namespaces : "").split(/[\s,]+/);
        const len = split.length;
        for (i = 0; i < len; i++) {
          if (!split[i]) {
            continue;
          }
          namespaces = split[i].replace(/\*/g, ".*?");
          if (namespaces[0] === "-") {
            createDebug.skips.push(new RegExp("^" + namespaces.substr(1) + "$"));
          } else {
            createDebug.names.push(new RegExp("^" + namespaces + "$"));
          }
        }
      }
      function disable() {
        const namespaces = [
          ...createDebug.names.map(toNamespace),
          ...createDebug.skips.map(toNamespace).map((namespace) => "-" + namespace)
        ].join(",");
        createDebug.enable("");
        return namespaces;
      }
      function enabled(name) {
        if (name[name.length - 1] === "*") {
          return true;
        }
        let i;
        let len;
        for (i = 0, len = createDebug.skips.length; i < len; i++) {
          if (createDebug.skips[i].test(name)) {
            return false;
          }
        }
        for (i = 0, len = createDebug.names.length; i < len; i++) {
          if (createDebug.names[i].test(name)) {
            return true;
          }
        }
        return false;
      }
      function toNamespace(regexp) {
        return regexp.toString().substring(2, regexp.toString().length - 2).replace(/\.\*\?$/, "*");
      }
      function coerce(val) {
        if (val instanceof Error) {
          return val.stack || val.message;
        }
        return val;
      }
      function destroy() {
        console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.");
      }
      createDebug.enable(createDebug.load());
      return createDebug;
    }
    module2.exports = setup;
  }
});

// node_modules/debug/src/browser.js
var require_browser = __commonJS({
  "node_modules/debug/src/browser.js"(exports, module2) {
    init_shims();
    exports.formatArgs = formatArgs;
    exports.save = save;
    exports.load = load2;
    exports.useColors = useColors;
    exports.storage = localstorage();
    exports.destroy = (() => {
      let warned = false;
      return () => {
        if (!warned) {
          warned = true;
          console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.");
        }
      };
    })();
    exports.colors = [
      "#0000CC",
      "#0000FF",
      "#0033CC",
      "#0033FF",
      "#0066CC",
      "#0066FF",
      "#0099CC",
      "#0099FF",
      "#00CC00",
      "#00CC33",
      "#00CC66",
      "#00CC99",
      "#00CCCC",
      "#00CCFF",
      "#3300CC",
      "#3300FF",
      "#3333CC",
      "#3333FF",
      "#3366CC",
      "#3366FF",
      "#3399CC",
      "#3399FF",
      "#33CC00",
      "#33CC33",
      "#33CC66",
      "#33CC99",
      "#33CCCC",
      "#33CCFF",
      "#6600CC",
      "#6600FF",
      "#6633CC",
      "#6633FF",
      "#66CC00",
      "#66CC33",
      "#9900CC",
      "#9900FF",
      "#9933CC",
      "#9933FF",
      "#99CC00",
      "#99CC33",
      "#CC0000",
      "#CC0033",
      "#CC0066",
      "#CC0099",
      "#CC00CC",
      "#CC00FF",
      "#CC3300",
      "#CC3333",
      "#CC3366",
      "#CC3399",
      "#CC33CC",
      "#CC33FF",
      "#CC6600",
      "#CC6633",
      "#CC9900",
      "#CC9933",
      "#CCCC00",
      "#CCCC33",
      "#FF0000",
      "#FF0033",
      "#FF0066",
      "#FF0099",
      "#FF00CC",
      "#FF00FF",
      "#FF3300",
      "#FF3333",
      "#FF3366",
      "#FF3399",
      "#FF33CC",
      "#FF33FF",
      "#FF6600",
      "#FF6633",
      "#FF9900",
      "#FF9933",
      "#FFCC00",
      "#FFCC33"
    ];
    function useColors() {
      if (typeof window !== "undefined" && window.process && (window.process.type === "renderer" || window.process.__nwjs)) {
        return true;
      }
      if (typeof navigator !== "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
        return false;
      }
      return typeof document !== "undefined" && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || typeof window !== "undefined" && window.console && (window.console.firebug || window.console.exception && window.console.table) || typeof navigator !== "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || typeof navigator !== "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
    }
    function formatArgs(args) {
      args[0] = (this.useColors ? "%c" : "") + this.namespace + (this.useColors ? " %c" : " ") + args[0] + (this.useColors ? "%c " : " ") + "+" + module2.exports.humanize(this.diff);
      if (!this.useColors) {
        return;
      }
      const c = "color: " + this.color;
      args.splice(1, 0, c, "color: inherit");
      let index2 = 0;
      let lastC = 0;
      args[0].replace(/%[a-zA-Z%]/g, (match) => {
        if (match === "%%") {
          return;
        }
        index2++;
        if (match === "%c") {
          lastC = index2;
        }
      });
      args.splice(lastC, 0, c);
    }
    exports.log = console.debug || console.log || (() => {
    });
    function save(namespaces) {
      try {
        if (namespaces) {
          exports.storage.setItem("debug", namespaces);
        } else {
          exports.storage.removeItem("debug");
        }
      } catch (error2) {
      }
    }
    function load2() {
      let r;
      try {
        r = exports.storage.getItem("debug");
      } catch (error2) {
      }
      if (!r && typeof process !== "undefined" && "env" in process) {
        r = process.env.DEBUG;
      }
      return r;
    }
    function localstorage() {
      try {
        return localStorage;
      } catch (error2) {
      }
    }
    module2.exports = require_common()(exports);
    var { formatters } = module2.exports;
    formatters.j = function(v) {
      try {
        return JSON.stringify(v);
      } catch (error2) {
        return "[UnexpectedJSONParseError]: " + error2.message;
      }
    };
  }
});

// node_modules/has-flag/index.js
var require_has_flag = __commonJS({
  "node_modules/has-flag/index.js"(exports, module2) {
    init_shims();
    "use strict";
    module2.exports = (flag, argv = process.argv) => {
      const prefix = flag.startsWith("-") ? "" : flag.length === 1 ? "-" : "--";
      const position = argv.indexOf(prefix + flag);
      const terminatorPosition = argv.indexOf("--");
      return position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);
    };
  }
});

// node_modules/supports-color/index.js
var require_supports_color = __commonJS({
  "node_modules/supports-color/index.js"(exports, module2) {
    init_shims();
    "use strict";
    var os = require("os");
    var tty = require("tty");
    var hasFlag = require_has_flag();
    var { env } = process;
    var forceColor;
    if (hasFlag("no-color") || hasFlag("no-colors") || hasFlag("color=false") || hasFlag("color=never")) {
      forceColor = 0;
    } else if (hasFlag("color") || hasFlag("colors") || hasFlag("color=true") || hasFlag("color=always")) {
      forceColor = 1;
    }
    if ("FORCE_COLOR" in env) {
      if (env.FORCE_COLOR === "true") {
        forceColor = 1;
      } else if (env.FORCE_COLOR === "false") {
        forceColor = 0;
      } else {
        forceColor = env.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(env.FORCE_COLOR, 10), 3);
      }
    }
    function translateLevel(level) {
      if (level === 0) {
        return false;
      }
      return {
        level,
        hasBasic: true,
        has256: level >= 2,
        has16m: level >= 3
      };
    }
    function supportsColor(haveStream, streamIsTTY) {
      if (forceColor === 0) {
        return 0;
      }
      if (hasFlag("color=16m") || hasFlag("color=full") || hasFlag("color=truecolor")) {
        return 3;
      }
      if (hasFlag("color=256")) {
        return 2;
      }
      if (haveStream && !streamIsTTY && forceColor === void 0) {
        return 0;
      }
      const min = forceColor || 0;
      if (env.TERM === "dumb") {
        return min;
      }
      if (process.platform === "win32") {
        const osRelease = os.release().split(".");
        if (Number(osRelease[0]) >= 10 && Number(osRelease[2]) >= 10586) {
          return Number(osRelease[2]) >= 14931 ? 3 : 2;
        }
        return 1;
      }
      if ("CI" in env) {
        if (["TRAVIS", "CIRCLECI", "APPVEYOR", "GITLAB_CI", "GITHUB_ACTIONS", "BUILDKITE"].some((sign) => sign in env) || env.CI_NAME === "codeship") {
          return 1;
        }
        return min;
      }
      if ("TEAMCITY_VERSION" in env) {
        return /^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;
      }
      if (env.COLORTERM === "truecolor") {
        return 3;
      }
      if ("TERM_PROGRAM" in env) {
        const version = parseInt((env.TERM_PROGRAM_VERSION || "").split(".")[0], 10);
        switch (env.TERM_PROGRAM) {
          case "iTerm.app":
            return version >= 3 ? 3 : 2;
          case "Apple_Terminal":
            return 2;
        }
      }
      if (/-256(color)?$/i.test(env.TERM)) {
        return 2;
      }
      if (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {
        return 1;
      }
      if ("COLORTERM" in env) {
        return 1;
      }
      return min;
    }
    function getSupportLevel(stream) {
      const level = supportsColor(stream, stream && stream.isTTY);
      return translateLevel(level);
    }
    module2.exports = {
      supportsColor: getSupportLevel,
      stdout: translateLevel(supportsColor(true, tty.isatty(1))),
      stderr: translateLevel(supportsColor(true, tty.isatty(2)))
    };
  }
});

// node_modules/debug/src/node.js
var require_node2 = __commonJS({
  "node_modules/debug/src/node.js"(exports, module2) {
    init_shims();
    var tty = require("tty");
    var util = require("util");
    exports.init = init2;
    exports.log = log;
    exports.formatArgs = formatArgs;
    exports.save = save;
    exports.load = load2;
    exports.useColors = useColors;
    exports.destroy = util.deprecate(() => {
    }, "Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.");
    exports.colors = [6, 2, 3, 4, 5, 1];
    try {
      const supportsColor = require_supports_color();
      if (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {
        exports.colors = [
          20,
          21,
          26,
          27,
          32,
          33,
          38,
          39,
          40,
          41,
          42,
          43,
          44,
          45,
          56,
          57,
          62,
          63,
          68,
          69,
          74,
          75,
          76,
          77,
          78,
          79,
          80,
          81,
          92,
          93,
          98,
          99,
          112,
          113,
          128,
          129,
          134,
          135,
          148,
          149,
          160,
          161,
          162,
          163,
          164,
          165,
          166,
          167,
          168,
          169,
          170,
          171,
          172,
          173,
          178,
          179,
          184,
          185,
          196,
          197,
          198,
          199,
          200,
          201,
          202,
          203,
          204,
          205,
          206,
          207,
          208,
          209,
          214,
          215,
          220,
          221
        ];
      }
    } catch (error2) {
    }
    exports.inspectOpts = Object.keys(process.env).filter((key) => {
      return /^debug_/i.test(key);
    }).reduce((obj, key) => {
      const prop = key.substring(6).toLowerCase().replace(/_([a-z])/g, (_, k) => {
        return k.toUpperCase();
      });
      let val = process.env[key];
      if (/^(yes|on|true|enabled)$/i.test(val)) {
        val = true;
      } else if (/^(no|off|false|disabled)$/i.test(val)) {
        val = false;
      } else if (val === "null") {
        val = null;
      } else {
        val = Number(val);
      }
      obj[prop] = val;
      return obj;
    }, {});
    function useColors() {
      return "colors" in exports.inspectOpts ? Boolean(exports.inspectOpts.colors) : tty.isatty(process.stderr.fd);
    }
    function formatArgs(args) {
      const { namespace: name, useColors: useColors2 } = this;
      if (useColors2) {
        const c = this.color;
        const colorCode = "[3" + (c < 8 ? c : "8;5;" + c);
        const prefix = `  ${colorCode};1m${name} [0m`;
        args[0] = prefix + args[0].split("\n").join("\n" + prefix);
        args.push(colorCode + "m+" + module2.exports.humanize(this.diff) + "[0m");
      } else {
        args[0] = getDate() + name + " " + args[0];
      }
    }
    function getDate() {
      if (exports.inspectOpts.hideDate) {
        return "";
      }
      return new Date().toISOString() + " ";
    }
    function log(...args) {
      return process.stderr.write(util.format(...args) + "\n");
    }
    function save(namespaces) {
      if (namespaces) {
        process.env.DEBUG = namespaces;
      } else {
        delete process.env.DEBUG;
      }
    }
    function load2() {
      return process.env.DEBUG;
    }
    function init2(debug) {
      debug.inspectOpts = {};
      const keys = Object.keys(exports.inspectOpts);
      for (let i = 0; i < keys.length; i++) {
        debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];
      }
    }
    module2.exports = require_common()(exports);
    var { formatters } = module2.exports;
    formatters.o = function(v) {
      this.inspectOpts.colors = this.useColors;
      return util.inspect(v, this.inspectOpts).split("\n").map((str) => str.trim()).join(" ");
    };
    formatters.O = function(v) {
      this.inspectOpts.colors = this.useColors;
      return util.inspect(v, this.inspectOpts);
    };
  }
});

// node_modules/debug/src/index.js
var require_src = __commonJS({
  "node_modules/debug/src/index.js"(exports, module2) {
    init_shims();
    if (typeof process === "undefined" || process.type === "renderer" || process.browser === true || process.__nwjs) {
      module2.exports = require_browser();
    } else {
      module2.exports = require_node2();
    }
  }
});

// node_modules/follow-redirects/debug.js
var require_debug = __commonJS({
  "node_modules/follow-redirects/debug.js"(exports, module2) {
    init_shims();
    var debug;
    module2.exports = function() {
      if (!debug) {
        try {
          debug = require_src()("follow-redirects");
        } catch (error2) {
        }
        if (typeof debug !== "function") {
          debug = function() {
          };
        }
      }
      debug.apply(null, arguments);
    };
  }
});

// node_modules/follow-redirects/index.js
var require_follow_redirects = __commonJS({
  "node_modules/follow-redirects/index.js"(exports, module2) {
    init_shims();
    var url = require("url");
    var URL2 = url.URL;
    var http2 = require("http");
    var https2 = require("https");
    var Writable = require("stream").Writable;
    var assert = require("assert");
    var debug = require_debug();
    var events = ["abort", "aborted", "connect", "error", "socket", "timeout"];
    var eventHandlers = Object.create(null);
    events.forEach(function(event) {
      eventHandlers[event] = function(arg1, arg2, arg3) {
        this._redirectable.emit(event, arg1, arg2, arg3);
      };
    });
    var RedirectionError = createErrorType("ERR_FR_REDIRECTION_FAILURE", "");
    var TooManyRedirectsError = createErrorType("ERR_FR_TOO_MANY_REDIRECTS", "Maximum number of redirects exceeded");
    var MaxBodyLengthExceededError = createErrorType("ERR_FR_MAX_BODY_LENGTH_EXCEEDED", "Request body larger than maxBodyLength limit");
    var WriteAfterEndError = createErrorType("ERR_STREAM_WRITE_AFTER_END", "write after end");
    function RedirectableRequest(options2, responseCallback) {
      Writable.call(this);
      this._sanitizeOptions(options2);
      this._options = options2;
      this._ended = false;
      this._ending = false;
      this._redirectCount = 0;
      this._redirects = [];
      this._requestBodyLength = 0;
      this._requestBodyBuffers = [];
      if (responseCallback) {
        this.on("response", responseCallback);
      }
      var self2 = this;
      this._onNativeResponse = function(response) {
        self2._processResponse(response);
      };
      this._performRequest();
    }
    RedirectableRequest.prototype = Object.create(Writable.prototype);
    RedirectableRequest.prototype.abort = function() {
      abortRequest(this._currentRequest);
      this.emit("abort");
    };
    RedirectableRequest.prototype.write = function(data, encoding, callback) {
      if (this._ending) {
        throw new WriteAfterEndError();
      }
      if (!(typeof data === "string" || typeof data === "object" && "length" in data)) {
        throw new TypeError("data should be a string, Buffer or Uint8Array");
      }
      if (typeof encoding === "function") {
        callback = encoding;
        encoding = null;
      }
      if (data.length === 0) {
        if (callback) {
          callback();
        }
        return;
      }
      if (this._requestBodyLength + data.length <= this._options.maxBodyLength) {
        this._requestBodyLength += data.length;
        this._requestBodyBuffers.push({ data, encoding });
        this._currentRequest.write(data, encoding, callback);
      } else {
        this.emit("error", new MaxBodyLengthExceededError());
        this.abort();
      }
    };
    RedirectableRequest.prototype.end = function(data, encoding, callback) {
      if (typeof data === "function") {
        callback = data;
        data = encoding = null;
      } else if (typeof encoding === "function") {
        callback = encoding;
        encoding = null;
      }
      if (!data) {
        this._ended = this._ending = true;
        this._currentRequest.end(null, null, callback);
      } else {
        var self2 = this;
        var currentRequest = this._currentRequest;
        this.write(data, encoding, function() {
          self2._ended = true;
          currentRequest.end(null, null, callback);
        });
        this._ending = true;
      }
    };
    RedirectableRequest.prototype.setHeader = function(name, value) {
      this._options.headers[name] = value;
      this._currentRequest.setHeader(name, value);
    };
    RedirectableRequest.prototype.removeHeader = function(name) {
      delete this._options.headers[name];
      this._currentRequest.removeHeader(name);
    };
    RedirectableRequest.prototype.setTimeout = function(msecs, callback) {
      var self2 = this;
      function destroyOnTimeout(socket) {
        socket.setTimeout(msecs);
        socket.removeListener("timeout", socket.destroy);
        socket.addListener("timeout", socket.destroy);
      }
      function startTimer(socket) {
        if (self2._timeout) {
          clearTimeout(self2._timeout);
        }
        self2._timeout = setTimeout(function() {
          self2.emit("timeout");
          clearTimer();
        }, msecs);
        destroyOnTimeout(socket);
      }
      function clearTimer() {
        if (self2._timeout) {
          clearTimeout(self2._timeout);
          self2._timeout = null;
        }
        if (callback) {
          self2.removeListener("timeout", callback);
        }
        if (!self2.socket) {
          self2._currentRequest.removeListener("socket", startTimer);
        }
      }
      if (callback) {
        this.on("timeout", callback);
      }
      if (this.socket) {
        startTimer(this.socket);
      } else {
        this._currentRequest.once("socket", startTimer);
      }
      this.on("socket", destroyOnTimeout);
      this.once("response", clearTimer);
      this.once("error", clearTimer);
      return this;
    };
    [
      "flushHeaders",
      "getHeader",
      "setNoDelay",
      "setSocketKeepAlive"
    ].forEach(function(method) {
      RedirectableRequest.prototype[method] = function(a, b) {
        return this._currentRequest[method](a, b);
      };
    });
    ["aborted", "connection", "socket"].forEach(function(property) {
      Object.defineProperty(RedirectableRequest.prototype, property, {
        get: function() {
          return this._currentRequest[property];
        }
      });
    });
    RedirectableRequest.prototype._sanitizeOptions = function(options2) {
      if (!options2.headers) {
        options2.headers = {};
      }
      if (options2.host) {
        if (!options2.hostname) {
          options2.hostname = options2.host;
        }
        delete options2.host;
      }
      if (!options2.pathname && options2.path) {
        var searchPos = options2.path.indexOf("?");
        if (searchPos < 0) {
          options2.pathname = options2.path;
        } else {
          options2.pathname = options2.path.substring(0, searchPos);
          options2.search = options2.path.substring(searchPos);
        }
      }
    };
    RedirectableRequest.prototype._performRequest = function() {
      var protocol = this._options.protocol;
      var nativeProtocol = this._options.nativeProtocols[protocol];
      if (!nativeProtocol) {
        this.emit("error", new TypeError("Unsupported protocol " + protocol));
        return;
      }
      if (this._options.agents) {
        var scheme = protocol.substr(0, protocol.length - 1);
        this._options.agent = this._options.agents[scheme];
      }
      var request = this._currentRequest = nativeProtocol.request(this._options, this._onNativeResponse);
      this._currentUrl = url.format(this._options);
      request._redirectable = this;
      for (var e = 0; e < events.length; e++) {
        request.on(events[e], eventHandlers[events[e]]);
      }
      if (this._isRedirect) {
        var i = 0;
        var self2 = this;
        var buffers = this._requestBodyBuffers;
        (function writeNext(error2) {
          if (request === self2._currentRequest) {
            if (error2) {
              self2.emit("error", error2);
            } else if (i < buffers.length) {
              var buffer = buffers[i++];
              if (!request.finished) {
                request.write(buffer.data, buffer.encoding, writeNext);
              }
            } else if (self2._ended) {
              request.end();
            }
          }
        })();
      }
    };
    RedirectableRequest.prototype._processResponse = function(response) {
      var statusCode = response.statusCode;
      if (this._options.trackRedirects) {
        this._redirects.push({
          url: this._currentUrl,
          headers: response.headers,
          statusCode
        });
      }
      var location = response.headers.location;
      if (location && this._options.followRedirects !== false && statusCode >= 300 && statusCode < 400) {
        abortRequest(this._currentRequest);
        response.destroy();
        if (++this._redirectCount > this._options.maxRedirects) {
          this.emit("error", new TooManyRedirectsError());
          return;
        }
        if ((statusCode === 301 || statusCode === 302) && this._options.method === "POST" || statusCode === 303 && !/^(?:GET|HEAD)$/.test(this._options.method)) {
          this._options.method = "GET";
          this._requestBodyBuffers = [];
          removeMatchingHeaders(/^content-/i, this._options.headers);
        }
        var previousHostName = removeMatchingHeaders(/^host$/i, this._options.headers) || url.parse(this._currentUrl).hostname;
        var redirectUrl = url.resolve(this._currentUrl, location);
        debug("redirecting to", redirectUrl);
        this._isRedirect = true;
        var redirectUrlParts = url.parse(redirectUrl);
        Object.assign(this._options, redirectUrlParts);
        if (redirectUrlParts.hostname !== previousHostName) {
          removeMatchingHeaders(/^authorization$/i, this._options.headers);
        }
        if (typeof this._options.beforeRedirect === "function") {
          var responseDetails = { headers: response.headers };
          try {
            this._options.beforeRedirect.call(null, this._options, responseDetails);
          } catch (err) {
            this.emit("error", err);
            return;
          }
          this._sanitizeOptions(this._options);
        }
        try {
          this._performRequest();
        } catch (cause) {
          var error2 = new RedirectionError("Redirected request failed: " + cause.message);
          error2.cause = cause;
          this.emit("error", error2);
        }
      } else {
        response.responseUrl = this._currentUrl;
        response.redirects = this._redirects;
        this.emit("response", response);
        this._requestBodyBuffers = [];
      }
    };
    function wrap(protocols) {
      var exports2 = {
        maxRedirects: 21,
        maxBodyLength: 10 * 1024 * 1024
      };
      var nativeProtocols = {};
      Object.keys(protocols).forEach(function(scheme) {
        var protocol = scheme + ":";
        var nativeProtocol = nativeProtocols[protocol] = protocols[scheme];
        var wrappedProtocol = exports2[scheme] = Object.create(nativeProtocol);
        function request(input, options2, callback) {
          if (typeof input === "string") {
            var urlStr = input;
            try {
              input = urlToOptions(new URL2(urlStr));
            } catch (err) {
              input = url.parse(urlStr);
            }
          } else if (URL2 && input instanceof URL2) {
            input = urlToOptions(input);
          } else {
            callback = options2;
            options2 = input;
            input = { protocol };
          }
          if (typeof options2 === "function") {
            callback = options2;
            options2 = null;
          }
          options2 = Object.assign({
            maxRedirects: exports2.maxRedirects,
            maxBodyLength: exports2.maxBodyLength
          }, input, options2);
          options2.nativeProtocols = nativeProtocols;
          assert.equal(options2.protocol, protocol, "protocol mismatch");
          debug("options", options2);
          return new RedirectableRequest(options2, callback);
        }
        function get2(input, options2, callback) {
          var wrappedRequest = wrappedProtocol.request(input, options2, callback);
          wrappedRequest.end();
          return wrappedRequest;
        }
        Object.defineProperties(wrappedProtocol, {
          request: { value: request, configurable: true, enumerable: true, writable: true },
          get: { value: get2, configurable: true, enumerable: true, writable: true }
        });
      });
      return exports2;
    }
    function noop2() {
    }
    function urlToOptions(urlObject) {
      var options2 = {
        protocol: urlObject.protocol,
        hostname: urlObject.hostname.startsWith("[") ? urlObject.hostname.slice(1, -1) : urlObject.hostname,
        hash: urlObject.hash,
        search: urlObject.search,
        pathname: urlObject.pathname,
        path: urlObject.pathname + urlObject.search,
        href: urlObject.href
      };
      if (urlObject.port !== "") {
        options2.port = Number(urlObject.port);
      }
      return options2;
    }
    function removeMatchingHeaders(regex, headers) {
      var lastValue;
      for (var header in headers) {
        if (regex.test(header)) {
          lastValue = headers[header];
          delete headers[header];
        }
      }
      return lastValue;
    }
    function createErrorType(code, defaultMessage) {
      function CustomError(message) {
        Error.captureStackTrace(this, this.constructor);
        this.message = message || defaultMessage;
      }
      CustomError.prototype = new Error();
      CustomError.prototype.constructor = CustomError;
      CustomError.prototype.name = "Error [" + code + "]";
      CustomError.prototype.code = code;
      return CustomError;
    }
    function abortRequest(request) {
      for (var e = 0; e < events.length; e++) {
        request.removeListener(events[e], eventHandlers[events[e]]);
      }
      request.on("error", noop2);
      request.abort();
    }
    module2.exports = wrap({ http: http2, https: https2 });
    module2.exports.wrap = wrap;
  }
});

// node_modules/@sanity/timed-out/index.js
var require_timed_out = __commonJS({
  "node_modules/@sanity/timed-out/index.js"(exports, module2) {
    init_shims();
    "use strict";
    module2.exports = function(req, time) {
      if (req.timeoutTimer) {
        return req;
      }
      var delays = isNaN(time) ? time : { socket: time, connect: time };
      var hostHeader = req.getHeader("host");
      var host = hostHeader ? " to " + hostHeader : "";
      if (delays.connect !== void 0) {
        req.timeoutTimer = setTimeout(function timeoutHandler() {
          req.abort();
          var e = new Error("Connection timed out on request" + host);
          e.code = "ETIMEDOUT";
          req.emit("error", e);
        }, delays.connect);
      }
      req.on("socket", function assign(socket) {
        if (!(socket.connecting || socket._connecting)) {
          connect();
          return;
        }
        socket.once("connect", connect);
      });
      function clear() {
        if (req.timeoutTimer) {
          clearTimeout(req.timeoutTimer);
          req.timeoutTimer = null;
        }
      }
      function connect() {
        clear();
        if (delays.socket !== void 0) {
          req.setTimeout(delays.socket, function socketTimeoutHandler() {
            req.abort();
            var e = new Error("Socket timed out on request" + host);
            e.code = "ESOCKETTIMEDOUT";
            req.emit("error", e);
          });
        }
      }
      return req.on("error", clear);
    };
  }
});

// node_modules/is-stream/index.js
var require_is_stream = __commonJS({
  "node_modules/is-stream/index.js"(exports, module2) {
    init_shims();
    "use strict";
    var isStream = module2.exports = function(stream) {
      return stream !== null && typeof stream === "object" && typeof stream.pipe === "function";
    };
    isStream.writable = function(stream) {
      return isStream(stream) && stream.writable !== false && typeof stream._write === "function" && typeof stream._writableState === "object";
    };
    isStream.readable = function(stream) {
      return isStream(stream) && stream.readable !== false && typeof stream._read === "function" && typeof stream._readableState === "object";
    };
    isStream.duplex = function(stream) {
      return isStream.writable(stream) && isStream.readable(stream);
    };
    isStream.transform = function(stream) {
      return isStream.duplex(stream) && typeof stream._transform === "function" && typeof stream._transformState === "object";
    };
  }
});

// node_modules/process-nextick-args/index.js
var require_process_nextick_args = __commonJS({
  "node_modules/process-nextick-args/index.js"(exports, module2) {
    init_shims();
    "use strict";
    if (typeof process === "undefined" || !process.version || process.version.indexOf("v0.") === 0 || process.version.indexOf("v1.") === 0 && process.version.indexOf("v1.8.") !== 0) {
      module2.exports = { nextTick };
    } else {
      module2.exports = process;
    }
    function nextTick(fn, arg1, arg2, arg3) {
      if (typeof fn !== "function") {
        throw new TypeError('"callback" argument must be a function');
      }
      var len = arguments.length;
      var args, i;
      switch (len) {
        case 0:
        case 1:
          return process.nextTick(fn);
        case 2:
          return process.nextTick(function afterTickOne() {
            fn.call(null, arg1);
          });
        case 3:
          return process.nextTick(function afterTickTwo() {
            fn.call(null, arg1, arg2);
          });
        case 4:
          return process.nextTick(function afterTickThree() {
            fn.call(null, arg1, arg2, arg3);
          });
        default:
          args = new Array(len - 1);
          i = 0;
          while (i < args.length) {
            args[i++] = arguments[i];
          }
          return process.nextTick(function afterTick() {
            fn.apply(null, args);
          });
      }
    }
  }
});

// node_modules/isarray/index.js
var require_isarray = __commonJS({
  "node_modules/isarray/index.js"(exports, module2) {
    init_shims();
    var toString = {}.toString;
    module2.exports = Array.isArray || function(arr) {
      return toString.call(arr) == "[object Array]";
    };
  }
});

// node_modules/readable-stream/lib/internal/streams/stream.js
var require_stream = __commonJS({
  "node_modules/readable-stream/lib/internal/streams/stream.js"(exports, module2) {
    init_shims();
    module2.exports = require("stream");
  }
});

// node_modules/readable-stream/node_modules/safe-buffer/index.js
var require_safe_buffer = __commonJS({
  "node_modules/readable-stream/node_modules/safe-buffer/index.js"(exports, module2) {
    init_shims();
    var buffer = require("buffer");
    var Buffer2 = buffer.Buffer;
    function copyProps(src2, dst) {
      for (var key in src2) {
        dst[key] = src2[key];
      }
    }
    if (Buffer2.from && Buffer2.alloc && Buffer2.allocUnsafe && Buffer2.allocUnsafeSlow) {
      module2.exports = buffer;
    } else {
      copyProps(buffer, exports);
      exports.Buffer = SafeBuffer;
    }
    function SafeBuffer(arg, encodingOrOffset, length) {
      return Buffer2(arg, encodingOrOffset, length);
    }
    copyProps(Buffer2, SafeBuffer);
    SafeBuffer.from = function(arg, encodingOrOffset, length) {
      if (typeof arg === "number") {
        throw new TypeError("Argument must not be a number");
      }
      return Buffer2(arg, encodingOrOffset, length);
    };
    SafeBuffer.alloc = function(size, fill, encoding) {
      if (typeof size !== "number") {
        throw new TypeError("Argument must be a number");
      }
      var buf = Buffer2(size);
      if (fill !== void 0) {
        if (typeof encoding === "string") {
          buf.fill(fill, encoding);
        } else {
          buf.fill(fill);
        }
      } else {
        buf.fill(0);
      }
      return buf;
    };
    SafeBuffer.allocUnsafe = function(size) {
      if (typeof size !== "number") {
        throw new TypeError("Argument must be a number");
      }
      return Buffer2(size);
    };
    SafeBuffer.allocUnsafeSlow = function(size) {
      if (typeof size !== "number") {
        throw new TypeError("Argument must be a number");
      }
      return buffer.SlowBuffer(size);
    };
  }
});

// node_modules/core-util-is/lib/util.js
var require_util = __commonJS({
  "node_modules/core-util-is/lib/util.js"(exports) {
    init_shims();
    function isArray(arg) {
      if (Array.isArray) {
        return Array.isArray(arg);
      }
      return objectToString(arg) === "[object Array]";
    }
    exports.isArray = isArray;
    function isBoolean(arg) {
      return typeof arg === "boolean";
    }
    exports.isBoolean = isBoolean;
    function isNull(arg) {
      return arg === null;
    }
    exports.isNull = isNull;
    function isNullOrUndefined(arg) {
      return arg == null;
    }
    exports.isNullOrUndefined = isNullOrUndefined;
    function isNumber(arg) {
      return typeof arg === "number";
    }
    exports.isNumber = isNumber;
    function isString(arg) {
      return typeof arg === "string";
    }
    exports.isString = isString;
    function isSymbol(arg) {
      return typeof arg === "symbol";
    }
    exports.isSymbol = isSymbol;
    function isUndefined(arg) {
      return arg === void 0;
    }
    exports.isUndefined = isUndefined;
    function isRegExp(re) {
      return objectToString(re) === "[object RegExp]";
    }
    exports.isRegExp = isRegExp;
    function isObject(arg) {
      return typeof arg === "object" && arg !== null;
    }
    exports.isObject = isObject;
    function isDate(d2) {
      return objectToString(d2) === "[object Date]";
    }
    exports.isDate = isDate;
    function isError(e) {
      return objectToString(e) === "[object Error]" || e instanceof Error;
    }
    exports.isError = isError;
    function isFunction(arg) {
      return typeof arg === "function";
    }
    exports.isFunction = isFunction;
    function isPrimitive2(arg) {
      return arg === null || typeof arg === "boolean" || typeof arg === "number" || typeof arg === "string" || typeof arg === "symbol" || typeof arg === "undefined";
    }
    exports.isPrimitive = isPrimitive2;
    exports.isBuffer = require("buffer").Buffer.isBuffer;
    function objectToString(o) {
      return Object.prototype.toString.call(o);
    }
  }
});

// node_modules/inherits/inherits_browser.js
var require_inherits_browser = __commonJS({
  "node_modules/inherits/inherits_browser.js"(exports, module2) {
    init_shims();
    if (typeof Object.create === "function") {
      module2.exports = function inherits(ctor, superCtor) {
        if (superCtor) {
          ctor.super_ = superCtor;
          ctor.prototype = Object.create(superCtor.prototype, {
            constructor: {
              value: ctor,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
        }
      };
    } else {
      module2.exports = function inherits(ctor, superCtor) {
        if (superCtor) {
          ctor.super_ = superCtor;
          var TempCtor = function() {
          };
          TempCtor.prototype = superCtor.prototype;
          ctor.prototype = new TempCtor();
          ctor.prototype.constructor = ctor;
        }
      };
    }
  }
});

// node_modules/inherits/inherits.js
var require_inherits = __commonJS({
  "node_modules/inherits/inherits.js"(exports, module2) {
    init_shims();
    try {
      util = require("util");
      if (typeof util.inherits !== "function")
        throw "";
      module2.exports = util.inherits;
    } catch (e) {
      module2.exports = require_inherits_browser();
    }
    var util;
  }
});

// node_modules/readable-stream/lib/internal/streams/BufferList.js
var require_BufferList = __commonJS({
  "node_modules/readable-stream/lib/internal/streams/BufferList.js"(exports, module2) {
    init_shims();
    "use strict";
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    var Buffer2 = require_safe_buffer().Buffer;
    var util = require("util");
    function copyBuffer(src2, target, offset) {
      src2.copy(target, offset);
    }
    module2.exports = function() {
      function BufferList() {
        _classCallCheck(this, BufferList);
        this.head = null;
        this.tail = null;
        this.length = 0;
      }
      BufferList.prototype.push = function push(v) {
        var entry = { data: v, next: null };
        if (this.length > 0)
          this.tail.next = entry;
        else
          this.head = entry;
        this.tail = entry;
        ++this.length;
      };
      BufferList.prototype.unshift = function unshift(v) {
        var entry = { data: v, next: this.head };
        if (this.length === 0)
          this.tail = entry;
        this.head = entry;
        ++this.length;
      };
      BufferList.prototype.shift = function shift() {
        if (this.length === 0)
          return;
        var ret = this.head.data;
        if (this.length === 1)
          this.head = this.tail = null;
        else
          this.head = this.head.next;
        --this.length;
        return ret;
      };
      BufferList.prototype.clear = function clear() {
        this.head = this.tail = null;
        this.length = 0;
      };
      BufferList.prototype.join = function join(s2) {
        if (this.length === 0)
          return "";
        var p = this.head;
        var ret = "" + p.data;
        while (p = p.next) {
          ret += s2 + p.data;
        }
        return ret;
      };
      BufferList.prototype.concat = function concat(n) {
        if (this.length === 0)
          return Buffer2.alloc(0);
        if (this.length === 1)
          return this.head.data;
        var ret = Buffer2.allocUnsafe(n >>> 0);
        var p = this.head;
        var i = 0;
        while (p) {
          copyBuffer(p.data, ret, i);
          i += p.data.length;
          p = p.next;
        }
        return ret;
      };
      return BufferList;
    }();
    if (util && util.inspect && util.inspect.custom) {
      module2.exports.prototype[util.inspect.custom] = function() {
        var obj = util.inspect({ length: this.length });
        return this.constructor.name + " " + obj;
      };
    }
  }
});

// node_modules/readable-stream/lib/internal/streams/destroy.js
var require_destroy = __commonJS({
  "node_modules/readable-stream/lib/internal/streams/destroy.js"(exports, module2) {
    init_shims();
    "use strict";
    var pna = require_process_nextick_args();
    function destroy(err, cb) {
      var _this = this;
      var readableDestroyed = this._readableState && this._readableState.destroyed;
      var writableDestroyed = this._writableState && this._writableState.destroyed;
      if (readableDestroyed || writableDestroyed) {
        if (cb) {
          cb(err);
        } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {
          pna.nextTick(emitErrorNT, this, err);
        }
        return this;
      }
      if (this._readableState) {
        this._readableState.destroyed = true;
      }
      if (this._writableState) {
        this._writableState.destroyed = true;
      }
      this._destroy(err || null, function(err2) {
        if (!cb && err2) {
          pna.nextTick(emitErrorNT, _this, err2);
          if (_this._writableState) {
            _this._writableState.errorEmitted = true;
          }
        } else if (cb) {
          cb(err2);
        }
      });
      return this;
    }
    function undestroy() {
      if (this._readableState) {
        this._readableState.destroyed = false;
        this._readableState.reading = false;
        this._readableState.ended = false;
        this._readableState.endEmitted = false;
      }
      if (this._writableState) {
        this._writableState.destroyed = false;
        this._writableState.ended = false;
        this._writableState.ending = false;
        this._writableState.finished = false;
        this._writableState.errorEmitted = false;
      }
    }
    function emitErrorNT(self2, err) {
      self2.emit("error", err);
    }
    module2.exports = {
      destroy,
      undestroy
    };
  }
});

// node_modules/util-deprecate/node.js
var require_node3 = __commonJS({
  "node_modules/util-deprecate/node.js"(exports, module2) {
    init_shims();
    module2.exports = require("util").deprecate;
  }
});

// node_modules/readable-stream/lib/_stream_writable.js
var require_stream_writable = __commonJS({
  "node_modules/readable-stream/lib/_stream_writable.js"(exports, module2) {
    init_shims();
    "use strict";
    var pna = require_process_nextick_args();
    module2.exports = Writable;
    function CorkedRequest(state) {
      var _this = this;
      this.next = null;
      this.entry = null;
      this.finish = function() {
        onCorkedFinish(_this, state);
      };
    }
    var asyncWrite = !process.browser && ["v0.10", "v0.9."].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;
    var Duplex;
    Writable.WritableState = WritableState;
    var util = Object.create(require_util());
    util.inherits = require_inherits();
    var internalUtil = {
      deprecate: require_node3()
    };
    var Stream2 = require_stream();
    var Buffer2 = require_safe_buffer().Buffer;
    var OurUint8Array = global.Uint8Array || function() {
    };
    function _uint8ArrayToBuffer(chunk) {
      return Buffer2.from(chunk);
    }
    function _isUint8Array(obj) {
      return Buffer2.isBuffer(obj) || obj instanceof OurUint8Array;
    }
    var destroyImpl = require_destroy();
    util.inherits(Writable, Stream2);
    function nop() {
    }
    function WritableState(options2, stream) {
      Duplex = Duplex || require_stream_duplex();
      options2 = options2 || {};
      var isDuplex = stream instanceof Duplex;
      this.objectMode = !!options2.objectMode;
      if (isDuplex)
        this.objectMode = this.objectMode || !!options2.writableObjectMode;
      var hwm = options2.highWaterMark;
      var writableHwm = options2.writableHighWaterMark;
      var defaultHwm = this.objectMode ? 16 : 16 * 1024;
      if (hwm || hwm === 0)
        this.highWaterMark = hwm;
      else if (isDuplex && (writableHwm || writableHwm === 0))
        this.highWaterMark = writableHwm;
      else
        this.highWaterMark = defaultHwm;
      this.highWaterMark = Math.floor(this.highWaterMark);
      this.finalCalled = false;
      this.needDrain = false;
      this.ending = false;
      this.ended = false;
      this.finished = false;
      this.destroyed = false;
      var noDecode = options2.decodeStrings === false;
      this.decodeStrings = !noDecode;
      this.defaultEncoding = options2.defaultEncoding || "utf8";
      this.length = 0;
      this.writing = false;
      this.corked = 0;
      this.sync = true;
      this.bufferProcessing = false;
      this.onwrite = function(er) {
        onwrite(stream, er);
      };
      this.writecb = null;
      this.writelen = 0;
      this.bufferedRequest = null;
      this.lastBufferedRequest = null;
      this.pendingcb = 0;
      this.prefinished = false;
      this.errorEmitted = false;
      this.bufferedRequestCount = 0;
      this.corkedRequestsFree = new CorkedRequest(this);
    }
    WritableState.prototype.getBuffer = function getBuffer() {
      var current = this.bufferedRequest;
      var out = [];
      while (current) {
        out.push(current);
        current = current.next;
      }
      return out;
    };
    (function() {
      try {
        Object.defineProperty(WritableState.prototype, "buffer", {
          get: internalUtil.deprecate(function() {
            return this.getBuffer();
          }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003")
        });
      } catch (_) {
      }
    })();
    var realHasInstance;
    if (typeof Symbol === "function" && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === "function") {
      realHasInstance = Function.prototype[Symbol.hasInstance];
      Object.defineProperty(Writable, Symbol.hasInstance, {
        value: function(object) {
          if (realHasInstance.call(this, object))
            return true;
          if (this !== Writable)
            return false;
          return object && object._writableState instanceof WritableState;
        }
      });
    } else {
      realHasInstance = function(object) {
        return object instanceof this;
      };
    }
    function Writable(options2) {
      Duplex = Duplex || require_stream_duplex();
      if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {
        return new Writable(options2);
      }
      this._writableState = new WritableState(options2, this);
      this.writable = true;
      if (options2) {
        if (typeof options2.write === "function")
          this._write = options2.write;
        if (typeof options2.writev === "function")
          this._writev = options2.writev;
        if (typeof options2.destroy === "function")
          this._destroy = options2.destroy;
        if (typeof options2.final === "function")
          this._final = options2.final;
      }
      Stream2.call(this);
    }
    Writable.prototype.pipe = function() {
      this.emit("error", new Error("Cannot pipe, not readable"));
    };
    function writeAfterEnd(stream, cb) {
      var er = new Error("write after end");
      stream.emit("error", er);
      pna.nextTick(cb, er);
    }
    function validChunk(stream, state, chunk, cb) {
      var valid = true;
      var er = false;
      if (chunk === null) {
        er = new TypeError("May not write null values to stream");
      } else if (typeof chunk !== "string" && chunk !== void 0 && !state.objectMode) {
        er = new TypeError("Invalid non-string/buffer chunk");
      }
      if (er) {
        stream.emit("error", er);
        pna.nextTick(cb, er);
        valid = false;
      }
      return valid;
    }
    Writable.prototype.write = function(chunk, encoding, cb) {
      var state = this._writableState;
      var ret = false;
      var isBuf = !state.objectMode && _isUint8Array(chunk);
      if (isBuf && !Buffer2.isBuffer(chunk)) {
        chunk = _uint8ArrayToBuffer(chunk);
      }
      if (typeof encoding === "function") {
        cb = encoding;
        encoding = null;
      }
      if (isBuf)
        encoding = "buffer";
      else if (!encoding)
        encoding = state.defaultEncoding;
      if (typeof cb !== "function")
        cb = nop;
      if (state.ended)
        writeAfterEnd(this, cb);
      else if (isBuf || validChunk(this, state, chunk, cb)) {
        state.pendingcb++;
        ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
      }
      return ret;
    };
    Writable.prototype.cork = function() {
      var state = this._writableState;
      state.corked++;
    };
    Writable.prototype.uncork = function() {
      var state = this._writableState;
      if (state.corked) {
        state.corked--;
        if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest)
          clearBuffer(this, state);
      }
    };
    Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
      if (typeof encoding === "string")
        encoding = encoding.toLowerCase();
      if (!(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((encoding + "").toLowerCase()) > -1))
        throw new TypeError("Unknown encoding: " + encoding);
      this._writableState.defaultEncoding = encoding;
      return this;
    };
    function decodeChunk(state, chunk, encoding) {
      if (!state.objectMode && state.decodeStrings !== false && typeof chunk === "string") {
        chunk = Buffer2.from(chunk, encoding);
      }
      return chunk;
    }
    Object.defineProperty(Writable.prototype, "writableHighWaterMark", {
      enumerable: false,
      get: function() {
        return this._writableState.highWaterMark;
      }
    });
    function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
      if (!isBuf) {
        var newChunk = decodeChunk(state, chunk, encoding);
        if (chunk !== newChunk) {
          isBuf = true;
          encoding = "buffer";
          chunk = newChunk;
        }
      }
      var len = state.objectMode ? 1 : chunk.length;
      state.length += len;
      var ret = state.length < state.highWaterMark;
      if (!ret)
        state.needDrain = true;
      if (state.writing || state.corked) {
        var last = state.lastBufferedRequest;
        state.lastBufferedRequest = {
          chunk,
          encoding,
          isBuf,
          callback: cb,
          next: null
        };
        if (last) {
          last.next = state.lastBufferedRequest;
        } else {
          state.bufferedRequest = state.lastBufferedRequest;
        }
        state.bufferedRequestCount += 1;
      } else {
        doWrite(stream, state, false, len, chunk, encoding, cb);
      }
      return ret;
    }
    function doWrite(stream, state, writev, len, chunk, encoding, cb) {
      state.writelen = len;
      state.writecb = cb;
      state.writing = true;
      state.sync = true;
      if (writev)
        stream._writev(chunk, state.onwrite);
      else
        stream._write(chunk, encoding, state.onwrite);
      state.sync = false;
    }
    function onwriteError(stream, state, sync, er, cb) {
      --state.pendingcb;
      if (sync) {
        pna.nextTick(cb, er);
        pna.nextTick(finishMaybe, stream, state);
        stream._writableState.errorEmitted = true;
        stream.emit("error", er);
      } else {
        cb(er);
        stream._writableState.errorEmitted = true;
        stream.emit("error", er);
        finishMaybe(stream, state);
      }
    }
    function onwriteStateUpdate(state) {
      state.writing = false;
      state.writecb = null;
      state.length -= state.writelen;
      state.writelen = 0;
    }
    function onwrite(stream, er) {
      var state = stream._writableState;
      var sync = state.sync;
      var cb = state.writecb;
      onwriteStateUpdate(state);
      if (er)
        onwriteError(stream, state, sync, er, cb);
      else {
        var finished = needFinish(state);
        if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
          clearBuffer(stream, state);
        }
        if (sync) {
          asyncWrite(afterWrite, stream, state, finished, cb);
        } else {
          afterWrite(stream, state, finished, cb);
        }
      }
    }
    function afterWrite(stream, state, finished, cb) {
      if (!finished)
        onwriteDrain(stream, state);
      state.pendingcb--;
      cb();
      finishMaybe(stream, state);
    }
    function onwriteDrain(stream, state) {
      if (state.length === 0 && state.needDrain) {
        state.needDrain = false;
        stream.emit("drain");
      }
    }
    function clearBuffer(stream, state) {
      state.bufferProcessing = true;
      var entry = state.bufferedRequest;
      if (stream._writev && entry && entry.next) {
        var l = state.bufferedRequestCount;
        var buffer = new Array(l);
        var holder = state.corkedRequestsFree;
        holder.entry = entry;
        var count = 0;
        var allBuffers = true;
        while (entry) {
          buffer[count] = entry;
          if (!entry.isBuf)
            allBuffers = false;
          entry = entry.next;
          count += 1;
        }
        buffer.allBuffers = allBuffers;
        doWrite(stream, state, true, state.length, buffer, "", holder.finish);
        state.pendingcb++;
        state.lastBufferedRequest = null;
        if (holder.next) {
          state.corkedRequestsFree = holder.next;
          holder.next = null;
        } else {
          state.corkedRequestsFree = new CorkedRequest(state);
        }
        state.bufferedRequestCount = 0;
      } else {
        while (entry) {
          var chunk = entry.chunk;
          var encoding = entry.encoding;
          var cb = entry.callback;
          var len = state.objectMode ? 1 : chunk.length;
          doWrite(stream, state, false, len, chunk, encoding, cb);
          entry = entry.next;
          state.bufferedRequestCount--;
          if (state.writing) {
            break;
          }
        }
        if (entry === null)
          state.lastBufferedRequest = null;
      }
      state.bufferedRequest = entry;
      state.bufferProcessing = false;
    }
    Writable.prototype._write = function(chunk, encoding, cb) {
      cb(new Error("_write() is not implemented"));
    };
    Writable.prototype._writev = null;
    Writable.prototype.end = function(chunk, encoding, cb) {
      var state = this._writableState;
      if (typeof chunk === "function") {
        cb = chunk;
        chunk = null;
        encoding = null;
      } else if (typeof encoding === "function") {
        cb = encoding;
        encoding = null;
      }
      if (chunk !== null && chunk !== void 0)
        this.write(chunk, encoding);
      if (state.corked) {
        state.corked = 1;
        this.uncork();
      }
      if (!state.ending && !state.finished)
        endWritable(this, state, cb);
    };
    function needFinish(state) {
      return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
    }
    function callFinal(stream, state) {
      stream._final(function(err) {
        state.pendingcb--;
        if (err) {
          stream.emit("error", err);
        }
        state.prefinished = true;
        stream.emit("prefinish");
        finishMaybe(stream, state);
      });
    }
    function prefinish(stream, state) {
      if (!state.prefinished && !state.finalCalled) {
        if (typeof stream._final === "function") {
          state.pendingcb++;
          state.finalCalled = true;
          pna.nextTick(callFinal, stream, state);
        } else {
          state.prefinished = true;
          stream.emit("prefinish");
        }
      }
    }
    function finishMaybe(stream, state) {
      var need = needFinish(state);
      if (need) {
        prefinish(stream, state);
        if (state.pendingcb === 0) {
          state.finished = true;
          stream.emit("finish");
        }
      }
      return need;
    }
    function endWritable(stream, state, cb) {
      state.ending = true;
      finishMaybe(stream, state);
      if (cb) {
        if (state.finished)
          pna.nextTick(cb);
        else
          stream.once("finish", cb);
      }
      state.ended = true;
      stream.writable = false;
    }
    function onCorkedFinish(corkReq, state, err) {
      var entry = corkReq.entry;
      corkReq.entry = null;
      while (entry) {
        var cb = entry.callback;
        state.pendingcb--;
        cb(err);
        entry = entry.next;
      }
      if (state.corkedRequestsFree) {
        state.corkedRequestsFree.next = corkReq;
      } else {
        state.corkedRequestsFree = corkReq;
      }
    }
    Object.defineProperty(Writable.prototype, "destroyed", {
      get: function() {
        if (this._writableState === void 0) {
          return false;
        }
        return this._writableState.destroyed;
      },
      set: function(value) {
        if (!this._writableState) {
          return;
        }
        this._writableState.destroyed = value;
      }
    });
    Writable.prototype.destroy = destroyImpl.destroy;
    Writable.prototype._undestroy = destroyImpl.undestroy;
    Writable.prototype._destroy = function(err, cb) {
      this.end();
      cb(err);
    };
  }
});

// node_modules/readable-stream/lib/_stream_duplex.js
var require_stream_duplex = __commonJS({
  "node_modules/readable-stream/lib/_stream_duplex.js"(exports, module2) {
    init_shims();
    "use strict";
    var pna = require_process_nextick_args();
    var objectKeys = Object.keys || function(obj) {
      var keys2 = [];
      for (var key in obj) {
        keys2.push(key);
      }
      return keys2;
    };
    module2.exports = Duplex;
    var util = Object.create(require_util());
    util.inherits = require_inherits();
    var Readable = require_stream_readable();
    var Writable = require_stream_writable();
    util.inherits(Duplex, Readable);
    {
      keys = objectKeys(Writable.prototype);
      for (v = 0; v < keys.length; v++) {
        method = keys[v];
        if (!Duplex.prototype[method])
          Duplex.prototype[method] = Writable.prototype[method];
      }
    }
    var keys;
    var method;
    var v;
    function Duplex(options2) {
      if (!(this instanceof Duplex))
        return new Duplex(options2);
      Readable.call(this, options2);
      Writable.call(this, options2);
      if (options2 && options2.readable === false)
        this.readable = false;
      if (options2 && options2.writable === false)
        this.writable = false;
      this.allowHalfOpen = true;
      if (options2 && options2.allowHalfOpen === false)
        this.allowHalfOpen = false;
      this.once("end", onend);
    }
    Object.defineProperty(Duplex.prototype, "writableHighWaterMark", {
      enumerable: false,
      get: function() {
        return this._writableState.highWaterMark;
      }
    });
    function onend() {
      if (this.allowHalfOpen || this._writableState.ended)
        return;
      pna.nextTick(onEndNT, this);
    }
    function onEndNT(self2) {
      self2.end();
    }
    Object.defineProperty(Duplex.prototype, "destroyed", {
      get: function() {
        if (this._readableState === void 0 || this._writableState === void 0) {
          return false;
        }
        return this._readableState.destroyed && this._writableState.destroyed;
      },
      set: function(value) {
        if (this._readableState === void 0 || this._writableState === void 0) {
          return;
        }
        this._readableState.destroyed = value;
        this._writableState.destroyed = value;
      }
    });
    Duplex.prototype._destroy = function(err, cb) {
      this.push(null);
      this.end();
      pna.nextTick(cb, err);
    };
  }
});

// node_modules/readable-stream/lib/_stream_readable.js
var require_stream_readable = __commonJS({
  "node_modules/readable-stream/lib/_stream_readable.js"(exports, module2) {
    init_shims();
    "use strict";
    var pna = require_process_nextick_args();
    module2.exports = Readable;
    var isArray = require_isarray();
    var Duplex;
    Readable.ReadableState = ReadableState;
    var EE = require("events").EventEmitter;
    var EElistenerCount = function(emitter, type) {
      return emitter.listeners(type).length;
    };
    var Stream2 = require_stream();
    var Buffer2 = require_safe_buffer().Buffer;
    var OurUint8Array = global.Uint8Array || function() {
    };
    function _uint8ArrayToBuffer(chunk) {
      return Buffer2.from(chunk);
    }
    function _isUint8Array(obj) {
      return Buffer2.isBuffer(obj) || obj instanceof OurUint8Array;
    }
    var util = Object.create(require_util());
    util.inherits = require_inherits();
    var debugUtil = require("util");
    var debug = void 0;
    if (debugUtil && debugUtil.debuglog) {
      debug = debugUtil.debuglog("stream");
    } else {
      debug = function() {
      };
    }
    var BufferList = require_BufferList();
    var destroyImpl = require_destroy();
    var StringDecoder;
    util.inherits(Readable, Stream2);
    var kProxyEvents = ["error", "close", "destroy", "pause", "resume"];
    function prependListener(emitter, event, fn) {
      if (typeof emitter.prependListener === "function")
        return emitter.prependListener(event, fn);
      if (!emitter._events || !emitter._events[event])
        emitter.on(event, fn);
      else if (isArray(emitter._events[event]))
        emitter._events[event].unshift(fn);
      else
        emitter._events[event] = [fn, emitter._events[event]];
    }
    function ReadableState(options2, stream) {
      Duplex = Duplex || require_stream_duplex();
      options2 = options2 || {};
      var isDuplex = stream instanceof Duplex;
      this.objectMode = !!options2.objectMode;
      if (isDuplex)
        this.objectMode = this.objectMode || !!options2.readableObjectMode;
      var hwm = options2.highWaterMark;
      var readableHwm = options2.readableHighWaterMark;
      var defaultHwm = this.objectMode ? 16 : 16 * 1024;
      if (hwm || hwm === 0)
        this.highWaterMark = hwm;
      else if (isDuplex && (readableHwm || readableHwm === 0))
        this.highWaterMark = readableHwm;
      else
        this.highWaterMark = defaultHwm;
      this.highWaterMark = Math.floor(this.highWaterMark);
      this.buffer = new BufferList();
      this.length = 0;
      this.pipes = null;
      this.pipesCount = 0;
      this.flowing = null;
      this.ended = false;
      this.endEmitted = false;
      this.reading = false;
      this.sync = true;
      this.needReadable = false;
      this.emittedReadable = false;
      this.readableListening = false;
      this.resumeScheduled = false;
      this.destroyed = false;
      this.defaultEncoding = options2.defaultEncoding || "utf8";
      this.awaitDrain = 0;
      this.readingMore = false;
      this.decoder = null;
      this.encoding = null;
      if (options2.encoding) {
        if (!StringDecoder)
          StringDecoder = require("string_decoder/").StringDecoder;
        this.decoder = new StringDecoder(options2.encoding);
        this.encoding = options2.encoding;
      }
    }
    function Readable(options2) {
      Duplex = Duplex || require_stream_duplex();
      if (!(this instanceof Readable))
        return new Readable(options2);
      this._readableState = new ReadableState(options2, this);
      this.readable = true;
      if (options2) {
        if (typeof options2.read === "function")
          this._read = options2.read;
        if (typeof options2.destroy === "function")
          this._destroy = options2.destroy;
      }
      Stream2.call(this);
    }
    Object.defineProperty(Readable.prototype, "destroyed", {
      get: function() {
        if (this._readableState === void 0) {
          return false;
        }
        return this._readableState.destroyed;
      },
      set: function(value) {
        if (!this._readableState) {
          return;
        }
        this._readableState.destroyed = value;
      }
    });
    Readable.prototype.destroy = destroyImpl.destroy;
    Readable.prototype._undestroy = destroyImpl.undestroy;
    Readable.prototype._destroy = function(err, cb) {
      this.push(null);
      cb(err);
    };
    Readable.prototype.push = function(chunk, encoding) {
      var state = this._readableState;
      var skipChunkCheck;
      if (!state.objectMode) {
        if (typeof chunk === "string") {
          encoding = encoding || state.defaultEncoding;
          if (encoding !== state.encoding) {
            chunk = Buffer2.from(chunk, encoding);
            encoding = "";
          }
          skipChunkCheck = true;
        }
      } else {
        skipChunkCheck = true;
      }
      return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
    };
    Readable.prototype.unshift = function(chunk) {
      return readableAddChunk(this, chunk, null, true, false);
    };
    function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
      var state = stream._readableState;
      if (chunk === null) {
        state.reading = false;
        onEofChunk(stream, state);
      } else {
        var er;
        if (!skipChunkCheck)
          er = chunkInvalid(state, chunk);
        if (er) {
          stream.emit("error", er);
        } else if (state.objectMode || chunk && chunk.length > 0) {
          if (typeof chunk !== "string" && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer2.prototype) {
            chunk = _uint8ArrayToBuffer(chunk);
          }
          if (addToFront) {
            if (state.endEmitted)
              stream.emit("error", new Error("stream.unshift() after end event"));
            else
              addChunk(stream, state, chunk, true);
          } else if (state.ended) {
            stream.emit("error", new Error("stream.push() after EOF"));
          } else {
            state.reading = false;
            if (state.decoder && !encoding) {
              chunk = state.decoder.write(chunk);
              if (state.objectMode || chunk.length !== 0)
                addChunk(stream, state, chunk, false);
              else
                maybeReadMore(stream, state);
            } else {
              addChunk(stream, state, chunk, false);
            }
          }
        } else if (!addToFront) {
          state.reading = false;
        }
      }
      return needMoreData(state);
    }
    function addChunk(stream, state, chunk, addToFront) {
      if (state.flowing && state.length === 0 && !state.sync) {
        stream.emit("data", chunk);
        stream.read(0);
      } else {
        state.length += state.objectMode ? 1 : chunk.length;
        if (addToFront)
          state.buffer.unshift(chunk);
        else
          state.buffer.push(chunk);
        if (state.needReadable)
          emitReadable(stream);
      }
      maybeReadMore(stream, state);
    }
    function chunkInvalid(state, chunk) {
      var er;
      if (!_isUint8Array(chunk) && typeof chunk !== "string" && chunk !== void 0 && !state.objectMode) {
        er = new TypeError("Invalid non-string/buffer chunk");
      }
      return er;
    }
    function needMoreData(state) {
      return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);
    }
    Readable.prototype.isPaused = function() {
      return this._readableState.flowing === false;
    };
    Readable.prototype.setEncoding = function(enc) {
      if (!StringDecoder)
        StringDecoder = require("string_decoder/").StringDecoder;
      this._readableState.decoder = new StringDecoder(enc);
      this._readableState.encoding = enc;
      return this;
    };
    var MAX_HWM = 8388608;
    function computeNewHighWaterMark(n) {
      if (n >= MAX_HWM) {
        n = MAX_HWM;
      } else {
        n--;
        n |= n >>> 1;
        n |= n >>> 2;
        n |= n >>> 4;
        n |= n >>> 8;
        n |= n >>> 16;
        n++;
      }
      return n;
    }
    function howMuchToRead(n, state) {
      if (n <= 0 || state.length === 0 && state.ended)
        return 0;
      if (state.objectMode)
        return 1;
      if (n !== n) {
        if (state.flowing && state.length)
          return state.buffer.head.data.length;
        else
          return state.length;
      }
      if (n > state.highWaterMark)
        state.highWaterMark = computeNewHighWaterMark(n);
      if (n <= state.length)
        return n;
      if (!state.ended) {
        state.needReadable = true;
        return 0;
      }
      return state.length;
    }
    Readable.prototype.read = function(n) {
      debug("read", n);
      n = parseInt(n, 10);
      var state = this._readableState;
      var nOrig = n;
      if (n !== 0)
        state.emittedReadable = false;
      if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {
        debug("read: emitReadable", state.length, state.ended);
        if (state.length === 0 && state.ended)
          endReadable(this);
        else
          emitReadable(this);
        return null;
      }
      n = howMuchToRead(n, state);
      if (n === 0 && state.ended) {
        if (state.length === 0)
          endReadable(this);
        return null;
      }
      var doRead = state.needReadable;
      debug("need readable", doRead);
      if (state.length === 0 || state.length - n < state.highWaterMark) {
        doRead = true;
        debug("length less than watermark", doRead);
      }
      if (state.ended || state.reading) {
        doRead = false;
        debug("reading or ended", doRead);
      } else if (doRead) {
        debug("do read");
        state.reading = true;
        state.sync = true;
        if (state.length === 0)
          state.needReadable = true;
        this._read(state.highWaterMark);
        state.sync = false;
        if (!state.reading)
          n = howMuchToRead(nOrig, state);
      }
      var ret;
      if (n > 0)
        ret = fromList(n, state);
      else
        ret = null;
      if (ret === null) {
        state.needReadable = true;
        n = 0;
      } else {
        state.length -= n;
      }
      if (state.length === 0) {
        if (!state.ended)
          state.needReadable = true;
        if (nOrig !== n && state.ended)
          endReadable(this);
      }
      if (ret !== null)
        this.emit("data", ret);
      return ret;
    };
    function onEofChunk(stream, state) {
      if (state.ended)
        return;
      if (state.decoder) {
        var chunk = state.decoder.end();
        if (chunk && chunk.length) {
          state.buffer.push(chunk);
          state.length += state.objectMode ? 1 : chunk.length;
        }
      }
      state.ended = true;
      emitReadable(stream);
    }
    function emitReadable(stream) {
      var state = stream._readableState;
      state.needReadable = false;
      if (!state.emittedReadable) {
        debug("emitReadable", state.flowing);
        state.emittedReadable = true;
        if (state.sync)
          pna.nextTick(emitReadable_, stream);
        else
          emitReadable_(stream);
      }
    }
    function emitReadable_(stream) {
      debug("emit readable");
      stream.emit("readable");
      flow(stream);
    }
    function maybeReadMore(stream, state) {
      if (!state.readingMore) {
        state.readingMore = true;
        pna.nextTick(maybeReadMore_, stream, state);
      }
    }
    function maybeReadMore_(stream, state) {
      var len = state.length;
      while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {
        debug("maybeReadMore read 0");
        stream.read(0);
        if (len === state.length)
          break;
        else
          len = state.length;
      }
      state.readingMore = false;
    }
    Readable.prototype._read = function(n) {
      this.emit("error", new Error("_read() is not implemented"));
    };
    Readable.prototype.pipe = function(dest, pipeOpts) {
      var src2 = this;
      var state = this._readableState;
      switch (state.pipesCount) {
        case 0:
          state.pipes = dest;
          break;
        case 1:
          state.pipes = [state.pipes, dest];
          break;
        default:
          state.pipes.push(dest);
          break;
      }
      state.pipesCount += 1;
      debug("pipe count=%d opts=%j", state.pipesCount, pipeOpts);
      var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;
      var endFn = doEnd ? onend : unpipe;
      if (state.endEmitted)
        pna.nextTick(endFn);
      else
        src2.once("end", endFn);
      dest.on("unpipe", onunpipe);
      function onunpipe(readable2, unpipeInfo) {
        debug("onunpipe");
        if (readable2 === src2) {
          if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
            unpipeInfo.hasUnpiped = true;
            cleanup();
          }
        }
      }
      function onend() {
        debug("onend");
        dest.end();
      }
      var ondrain = pipeOnDrain(src2);
      dest.on("drain", ondrain);
      var cleanedUp = false;
      function cleanup() {
        debug("cleanup");
        dest.removeListener("close", onclose);
        dest.removeListener("finish", onfinish);
        dest.removeListener("drain", ondrain);
        dest.removeListener("error", onerror);
        dest.removeListener("unpipe", onunpipe);
        src2.removeListener("end", onend);
        src2.removeListener("end", unpipe);
        src2.removeListener("data", ondata);
        cleanedUp = true;
        if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain))
          ondrain();
      }
      var increasedAwaitDrain = false;
      src2.on("data", ondata);
      function ondata(chunk) {
        debug("ondata");
        increasedAwaitDrain = false;
        var ret = dest.write(chunk);
        if (ret === false && !increasedAwaitDrain) {
          if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
            debug("false write response, pause", src2._readableState.awaitDrain);
            src2._readableState.awaitDrain++;
            increasedAwaitDrain = true;
          }
          src2.pause();
        }
      }
      function onerror(er) {
        debug("onerror", er);
        unpipe();
        dest.removeListener("error", onerror);
        if (EElistenerCount(dest, "error") === 0)
          dest.emit("error", er);
      }
      prependListener(dest, "error", onerror);
      function onclose() {
        dest.removeListener("finish", onfinish);
        unpipe();
      }
      dest.once("close", onclose);
      function onfinish() {
        debug("onfinish");
        dest.removeListener("close", onclose);
        unpipe();
      }
      dest.once("finish", onfinish);
      function unpipe() {
        debug("unpipe");
        src2.unpipe(dest);
      }
      dest.emit("pipe", src2);
      if (!state.flowing) {
        debug("pipe resume");
        src2.resume();
      }
      return dest;
    };
    function pipeOnDrain(src2) {
      return function() {
        var state = src2._readableState;
        debug("pipeOnDrain", state.awaitDrain);
        if (state.awaitDrain)
          state.awaitDrain--;
        if (state.awaitDrain === 0 && EElistenerCount(src2, "data")) {
          state.flowing = true;
          flow(src2);
        }
      };
    }
    Readable.prototype.unpipe = function(dest) {
      var state = this._readableState;
      var unpipeInfo = { hasUnpiped: false };
      if (state.pipesCount === 0)
        return this;
      if (state.pipesCount === 1) {
        if (dest && dest !== state.pipes)
          return this;
        if (!dest)
          dest = state.pipes;
        state.pipes = null;
        state.pipesCount = 0;
        state.flowing = false;
        if (dest)
          dest.emit("unpipe", this, unpipeInfo);
        return this;
      }
      if (!dest) {
        var dests = state.pipes;
        var len = state.pipesCount;
        state.pipes = null;
        state.pipesCount = 0;
        state.flowing = false;
        for (var i = 0; i < len; i++) {
          dests[i].emit("unpipe", this, unpipeInfo);
        }
        return this;
      }
      var index2 = indexOf(state.pipes, dest);
      if (index2 === -1)
        return this;
      state.pipes.splice(index2, 1);
      state.pipesCount -= 1;
      if (state.pipesCount === 1)
        state.pipes = state.pipes[0];
      dest.emit("unpipe", this, unpipeInfo);
      return this;
    };
    Readable.prototype.on = function(ev, fn) {
      var res = Stream2.prototype.on.call(this, ev, fn);
      if (ev === "data") {
        if (this._readableState.flowing !== false)
          this.resume();
      } else if (ev === "readable") {
        var state = this._readableState;
        if (!state.endEmitted && !state.readableListening) {
          state.readableListening = state.needReadable = true;
          state.emittedReadable = false;
          if (!state.reading) {
            pna.nextTick(nReadingNextTick, this);
          } else if (state.length) {
            emitReadable(this);
          }
        }
      }
      return res;
    };
    Readable.prototype.addListener = Readable.prototype.on;
    function nReadingNextTick(self2) {
      debug("readable nexttick read 0");
      self2.read(0);
    }
    Readable.prototype.resume = function() {
      var state = this._readableState;
      if (!state.flowing) {
        debug("resume");
        state.flowing = true;
        resume(this, state);
      }
      return this;
    };
    function resume(stream, state) {
      if (!state.resumeScheduled) {
        state.resumeScheduled = true;
        pna.nextTick(resume_, stream, state);
      }
    }
    function resume_(stream, state) {
      if (!state.reading) {
        debug("resume read 0");
        stream.read(0);
      }
      state.resumeScheduled = false;
      state.awaitDrain = 0;
      stream.emit("resume");
      flow(stream);
      if (state.flowing && !state.reading)
        stream.read(0);
    }
    Readable.prototype.pause = function() {
      debug("call pause flowing=%j", this._readableState.flowing);
      if (this._readableState.flowing !== false) {
        debug("pause");
        this._readableState.flowing = false;
        this.emit("pause");
      }
      return this;
    };
    function flow(stream) {
      var state = stream._readableState;
      debug("flow", state.flowing);
      while (state.flowing && stream.read() !== null) {
      }
    }
    Readable.prototype.wrap = function(stream) {
      var _this = this;
      var state = this._readableState;
      var paused = false;
      stream.on("end", function() {
        debug("wrapped end");
        if (state.decoder && !state.ended) {
          var chunk = state.decoder.end();
          if (chunk && chunk.length)
            _this.push(chunk);
        }
        _this.push(null);
      });
      stream.on("data", function(chunk) {
        debug("wrapped data");
        if (state.decoder)
          chunk = state.decoder.write(chunk);
        if (state.objectMode && (chunk === null || chunk === void 0))
          return;
        else if (!state.objectMode && (!chunk || !chunk.length))
          return;
        var ret = _this.push(chunk);
        if (!ret) {
          paused = true;
          stream.pause();
        }
      });
      for (var i in stream) {
        if (this[i] === void 0 && typeof stream[i] === "function") {
          this[i] = function(method) {
            return function() {
              return stream[method].apply(stream, arguments);
            };
          }(i);
        }
      }
      for (var n = 0; n < kProxyEvents.length; n++) {
        stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
      }
      this._read = function(n2) {
        debug("wrapped _read", n2);
        if (paused) {
          paused = false;
          stream.resume();
        }
      };
      return this;
    };
    Object.defineProperty(Readable.prototype, "readableHighWaterMark", {
      enumerable: false,
      get: function() {
        return this._readableState.highWaterMark;
      }
    });
    Readable._fromList = fromList;
    function fromList(n, state) {
      if (state.length === 0)
        return null;
      var ret;
      if (state.objectMode)
        ret = state.buffer.shift();
      else if (!n || n >= state.length) {
        if (state.decoder)
          ret = state.buffer.join("");
        else if (state.buffer.length === 1)
          ret = state.buffer.head.data;
        else
          ret = state.buffer.concat(state.length);
        state.buffer.clear();
      } else {
        ret = fromListPartial(n, state.buffer, state.decoder);
      }
      return ret;
    }
    function fromListPartial(n, list, hasStrings) {
      var ret;
      if (n < list.head.data.length) {
        ret = list.head.data.slice(0, n);
        list.head.data = list.head.data.slice(n);
      } else if (n === list.head.data.length) {
        ret = list.shift();
      } else {
        ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);
      }
      return ret;
    }
    function copyFromBufferString(n, list) {
      var p = list.head;
      var c = 1;
      var ret = p.data;
      n -= ret.length;
      while (p = p.next) {
        var str = p.data;
        var nb = n > str.length ? str.length : n;
        if (nb === str.length)
          ret += str;
        else
          ret += str.slice(0, n);
        n -= nb;
        if (n === 0) {
          if (nb === str.length) {
            ++c;
            if (p.next)
              list.head = p.next;
            else
              list.head = list.tail = null;
          } else {
            list.head = p;
            p.data = str.slice(nb);
          }
          break;
        }
        ++c;
      }
      list.length -= c;
      return ret;
    }
    function copyFromBuffer(n, list) {
      var ret = Buffer2.allocUnsafe(n);
      var p = list.head;
      var c = 1;
      p.data.copy(ret);
      n -= p.data.length;
      while (p = p.next) {
        var buf = p.data;
        var nb = n > buf.length ? buf.length : n;
        buf.copy(ret, ret.length - n, 0, nb);
        n -= nb;
        if (n === 0) {
          if (nb === buf.length) {
            ++c;
            if (p.next)
              list.head = p.next;
            else
              list.head = list.tail = null;
          } else {
            list.head = p;
            p.data = buf.slice(nb);
          }
          break;
        }
        ++c;
      }
      list.length -= c;
      return ret;
    }
    function endReadable(stream) {
      var state = stream._readableState;
      if (state.length > 0)
        throw new Error('"endReadable()" called on non-empty stream');
      if (!state.endEmitted) {
        state.ended = true;
        pna.nextTick(endReadableNT, state, stream);
      }
    }
    function endReadableNT(state, stream) {
      if (!state.endEmitted && state.length === 0) {
        state.endEmitted = true;
        stream.readable = false;
        stream.emit("end");
      }
    }
    function indexOf(xs, x) {
      for (var i = 0, l = xs.length; i < l; i++) {
        if (xs[i] === x)
          return i;
      }
      return -1;
    }
  }
});

// node_modules/readable-stream/lib/_stream_transform.js
var require_stream_transform = __commonJS({
  "node_modules/readable-stream/lib/_stream_transform.js"(exports, module2) {
    init_shims();
    "use strict";
    module2.exports = Transform;
    var Duplex = require_stream_duplex();
    var util = Object.create(require_util());
    util.inherits = require_inherits();
    util.inherits(Transform, Duplex);
    function afterTransform(er, data) {
      var ts = this._transformState;
      ts.transforming = false;
      var cb = ts.writecb;
      if (!cb) {
        return this.emit("error", new Error("write callback called multiple times"));
      }
      ts.writechunk = null;
      ts.writecb = null;
      if (data != null)
        this.push(data);
      cb(er);
      var rs = this._readableState;
      rs.reading = false;
      if (rs.needReadable || rs.length < rs.highWaterMark) {
        this._read(rs.highWaterMark);
      }
    }
    function Transform(options2) {
      if (!(this instanceof Transform))
        return new Transform(options2);
      Duplex.call(this, options2);
      this._transformState = {
        afterTransform: afterTransform.bind(this),
        needTransform: false,
        transforming: false,
        writecb: null,
        writechunk: null,
        writeencoding: null
      };
      this._readableState.needReadable = true;
      this._readableState.sync = false;
      if (options2) {
        if (typeof options2.transform === "function")
          this._transform = options2.transform;
        if (typeof options2.flush === "function")
          this._flush = options2.flush;
      }
      this.on("prefinish", prefinish);
    }
    function prefinish() {
      var _this = this;
      if (typeof this._flush === "function") {
        this._flush(function(er, data) {
          done(_this, er, data);
        });
      } else {
        done(this, null, null);
      }
    }
    Transform.prototype.push = function(chunk, encoding) {
      this._transformState.needTransform = false;
      return Duplex.prototype.push.call(this, chunk, encoding);
    };
    Transform.prototype._transform = function(chunk, encoding, cb) {
      throw new Error("_transform() is not implemented");
    };
    Transform.prototype._write = function(chunk, encoding, cb) {
      var ts = this._transformState;
      ts.writecb = cb;
      ts.writechunk = chunk;
      ts.writeencoding = encoding;
      if (!ts.transforming) {
        var rs = this._readableState;
        if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark)
          this._read(rs.highWaterMark);
      }
    };
    Transform.prototype._read = function(n) {
      var ts = this._transformState;
      if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
        ts.transforming = true;
        this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
      } else {
        ts.needTransform = true;
      }
    };
    Transform.prototype._destroy = function(err, cb) {
      var _this2 = this;
      Duplex.prototype._destroy.call(this, err, function(err2) {
        cb(err2);
        _this2.emit("close");
      });
    };
    function done(stream, er, data) {
      if (er)
        return stream.emit("error", er);
      if (data != null)
        stream.push(data);
      if (stream._writableState.length)
        throw new Error("Calling transform done when ws.length != 0");
      if (stream._transformState.transforming)
        throw new Error("Calling transform done when still transforming");
      return stream.push(null);
    }
  }
});

// node_modules/readable-stream/lib/_stream_passthrough.js
var require_stream_passthrough = __commonJS({
  "node_modules/readable-stream/lib/_stream_passthrough.js"(exports, module2) {
    init_shims();
    "use strict";
    module2.exports = PassThrough2;
    var Transform = require_stream_transform();
    var util = Object.create(require_util());
    util.inherits = require_inherits();
    util.inherits(PassThrough2, Transform);
    function PassThrough2(options2) {
      if (!(this instanceof PassThrough2))
        return new PassThrough2(options2);
      Transform.call(this, options2);
    }
    PassThrough2.prototype._transform = function(chunk, encoding, cb) {
      cb(null, chunk);
    };
  }
});

// node_modules/readable-stream/readable.js
var require_readable = __commonJS({
  "node_modules/readable-stream/readable.js"(exports, module2) {
    init_shims();
    var Stream2 = require("stream");
    if (process.env.READABLE_STREAM === "disable" && Stream2) {
      module2.exports = Stream2;
      exports = module2.exports = Stream2.Readable;
      exports.Readable = Stream2.Readable;
      exports.Writable = Stream2.Writable;
      exports.Duplex = Stream2.Duplex;
      exports.Transform = Stream2.Transform;
      exports.PassThrough = Stream2.PassThrough;
      exports.Stream = Stream2;
    } else {
      exports = module2.exports = require_stream_readable();
      exports.Stream = Stream2 || exports;
      exports.Readable = exports;
      exports.Writable = require_stream_writable();
      exports.Duplex = require_stream_duplex();
      exports.Transform = require_stream_transform();
      exports.PassThrough = require_stream_passthrough();
    }
  }
});

// node_modules/from2/index.js
var require_from2 = __commonJS({
  "node_modules/from2/index.js"(exports, module2) {
    init_shims();
    var Readable = require_readable().Readable;
    var inherits = require_inherits();
    module2.exports = from2;
    from2.ctor = ctor;
    from2.obj = obj;
    var Proto = ctor();
    function toFunction(list) {
      list = list.slice();
      return function(_, cb) {
        var err = null;
        var item = list.length ? list.shift() : null;
        if (item instanceof Error) {
          err = item;
          item = null;
        }
        cb(err, item);
      };
    }
    function from2(opts, read) {
      if (typeof opts !== "object" || Array.isArray(opts)) {
        read = opts;
        opts = {};
      }
      var rs = new Proto(opts);
      rs._from = Array.isArray(read) ? toFunction(read) : read || noop2;
      return rs;
    }
    function ctor(opts, read) {
      if (typeof opts === "function") {
        read = opts;
        opts = {};
      }
      opts = defaults(opts);
      inherits(Class, Readable);
      function Class(override) {
        if (!(this instanceof Class))
          return new Class(override);
        this._reading = false;
        this._callback = check;
        this.destroyed = false;
        Readable.call(this, override || opts);
        var self2 = this;
        var hwm = this._readableState.highWaterMark;
        function check(err, data) {
          if (self2.destroyed)
            return;
          if (err)
            return self2.destroy(err);
          if (data === null)
            return self2.push(null);
          self2._reading = false;
          if (self2.push(data))
            self2._read(hwm);
        }
      }
      Class.prototype._from = read || noop2;
      Class.prototype._read = function(size) {
        if (this._reading || this.destroyed)
          return;
        this._reading = true;
        this._from(size, this._callback);
      };
      Class.prototype.destroy = function(err) {
        if (this.destroyed)
          return;
        this.destroyed = true;
        var self2 = this;
        process.nextTick(function() {
          if (err)
            self2.emit("error", err);
          self2.emit("close");
        });
      };
      return Class;
    }
    function obj(opts, read) {
      if (typeof opts === "function" || Array.isArray(opts)) {
        read = opts;
        opts = {};
      }
      opts = defaults(opts);
      opts.objectMode = true;
      opts.highWaterMark = 16;
      return from2(opts, read);
    }
    function noop2() {
    }
    function defaults(opts) {
      opts = opts || {};
      return opts;
    }
  }
});

// node_modules/p-is-promise/index.js
var require_p_is_promise = __commonJS({
  "node_modules/p-is-promise/index.js"(exports, module2) {
    init_shims();
    "use strict";
    module2.exports = (x) => x instanceof Promise || x !== null && typeof x === "object" && typeof x.then === "function" && typeof x.catch === "function";
  }
});

// node_modules/into-stream/index.js
var require_into_stream = __commonJS({
  "node_modules/into-stream/index.js"(exports, module2) {
    init_shims();
    "use strict";
    var from = require_from2();
    var pIsPromise = require_p_is_promise();
    module2.exports = (x) => {
      if (Array.isArray(x)) {
        x = x.slice();
      }
      let promise;
      let iterator;
      prepare(x);
      function prepare(value) {
        x = value;
        promise = pIsPromise(x) ? x : null;
        const shouldIterate = !promise && x[Symbol.iterator] && typeof x !== "string" && !Buffer.isBuffer(x);
        iterator = shouldIterate ? x[Symbol.iterator]() : null;
      }
      return from(function reader(size, cb) {
        if (promise) {
          promise.then(prepare).then(() => reader.call(this, size, cb), cb);
          return;
        }
        if (iterator) {
          const obj = iterator.next();
          setImmediate(cb, null, obj.done ? null : obj.value);
          return;
        }
        if (x.length === 0) {
          setImmediate(cb, null, null);
          return;
        }
        const chunk = x.slice(0, size);
        x = x.slice(size);
        setImmediate(cb, null, chunk);
      });
    };
    module2.exports.obj = (x) => {
      if (Array.isArray(x)) {
        x = x.slice();
      }
      let promise;
      let iterator;
      prepare(x);
      function prepare(value) {
        x = value;
        promise = pIsPromise(x) ? x : null;
        iterator = !promise && x[Symbol.iterator] ? x[Symbol.iterator]() : null;
      }
      return from.obj(function reader(size, cb) {
        if (promise) {
          promise.then(prepare).then(() => reader.call(this, size, cb), cb);
          return;
        }
        if (iterator) {
          const obj = iterator.next();
          setImmediate(cb, null, obj.done ? null : obj.value);
          return;
        }
        this.push(x);
        setImmediate(cb, null, null);
      });
    };
  }
});

// node_modules/xtend/immutable.js
var require_immutable = __commonJS({
  "node_modules/xtend/immutable.js"(exports, module2) {
    init_shims();
    module2.exports = extend;
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    function extend() {
      var target = {};
      for (var i = 0; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    }
  }
});

// node_modules/through2/through2.js
var require_through2 = __commonJS({
  "node_modules/through2/through2.js"(exports, module2) {
    init_shims();
    var Transform = require_readable().Transform;
    var inherits = require("util").inherits;
    var xtend = require_immutable();
    function DestroyableTransform(opts) {
      Transform.call(this, opts);
      this._destroyed = false;
    }
    inherits(DestroyableTransform, Transform);
    DestroyableTransform.prototype.destroy = function(err) {
      if (this._destroyed)
        return;
      this._destroyed = true;
      var self2 = this;
      process.nextTick(function() {
        if (err)
          self2.emit("error", err);
        self2.emit("close");
      });
    };
    function noop2(chunk, enc, callback) {
      callback(null, chunk);
    }
    function through2(construct) {
      return function(options2, transform, flush) {
        if (typeof options2 == "function") {
          flush = transform;
          transform = options2;
          options2 = {};
        }
        if (typeof transform != "function")
          transform = noop2;
        if (typeof flush != "function")
          flush = null;
        return construct(options2, transform, flush);
      };
    }
    module2.exports = through2(function(options2, transform, flush) {
      var t2 = new DestroyableTransform(options2);
      t2._transform = transform;
      if (flush)
        t2._flush = flush;
      return t2;
    });
    module2.exports.ctor = through2(function(options2, transform, flush) {
      function Through2(override) {
        if (!(this instanceof Through2))
          return new Through2(override);
        this.options = xtend(options2, override);
        DestroyableTransform.call(this, this.options);
      }
      inherits(Through2, DestroyableTransform);
      Through2.prototype._transform = transform;
      if (flush)
        Through2.prototype._flush = flush;
      return Through2;
    });
    module2.exports.obj = through2(function(options2, transform, flush) {
      var t2 = new DestroyableTransform(xtend({ objectMode: true, highWaterMark: 16 }, options2));
      t2._transform = transform;
      if (flush)
        t2._flush = flush;
      return t2;
    });
  }
});

// node_modules/speedometer/index.js
var require_speedometer = __commonJS({
  "node_modules/speedometer/index.js"(exports, module2) {
    init_shims();
    var tick = 1;
    var maxTick = 65535;
    var resolution = 4;
    var inc = function() {
      tick = tick + 1 & maxTick;
    };
    var timer = setInterval(inc, 1e3 / resolution | 0);
    if (timer.unref)
      timer.unref();
    module2.exports = function(seconds) {
      var size = resolution * (seconds || 5);
      var buffer = [0];
      var pointer = 1;
      var last = tick - 1 & maxTick;
      return function(delta) {
        var dist = tick - last & maxTick;
        if (dist > size)
          dist = size;
        last = tick;
        while (dist--) {
          if (pointer === size)
            pointer = 0;
          buffer[pointer] = buffer[pointer === 0 ? size - 1 : pointer - 1];
          pointer++;
        }
        if (delta)
          buffer[pointer - 1] += delta;
        var top = buffer[pointer - 1];
        var btm = buffer.length < size ? 0 : buffer[pointer === size ? 0 : pointer];
        return buffer.length < resolution ? top : (top - btm) * resolution / buffer.length;
      };
    };
  }
});

// node_modules/progress-stream/index.js
var require_progress_stream = __commonJS({
  "node_modules/progress-stream/index.js"(exports, module2) {
    init_shims();
    var through = require_through2();
    var speedometer = require_speedometer();
    module2.exports = function(options2, onprogress) {
      if (typeof options2 === "function")
        return module2.exports(null, options2);
      options2 = options2 || {};
      var length = options2.length || 0;
      var time = options2.time || 0;
      var drain = options2.drain || false;
      var transferred = options2.transferred || 0;
      var nextUpdate = Date.now() + time;
      var delta = 0;
      var speed = speedometer(options2.speed || 5e3);
      var startTime = Date.now();
      var update = {
        percentage: 0,
        transferred,
        length,
        remaining: length,
        eta: 0,
        runtime: 0
      };
      var emit = function(ended) {
        update.delta = delta;
        update.percentage = ended ? 100 : length ? transferred / length * 100 : 0;
        update.speed = speed(delta);
        update.eta = Math.round(update.remaining / update.speed);
        update.runtime = parseInt((Date.now() - startTime) / 1e3);
        nextUpdate = Date.now() + time;
        delta = 0;
        tr.emit("progress", update);
      };
      var write = function(chunk, enc, callback) {
        var len = options2.objectMode ? 1 : chunk.length;
        transferred += len;
        delta += len;
        update.transferred = transferred;
        update.remaining = length >= transferred ? length - transferred : 0;
        if (Date.now() >= nextUpdate)
          emit(false);
        callback(null, chunk);
      };
      var end = function(callback) {
        emit(true);
        callback();
      };
      var tr = through(options2.objectMode ? { objectMode: true, highWaterMark: 16 } : {}, write, end);
      var onlength = function(newLength) {
        length = newLength;
        update.length = length;
        update.remaining = length - update.transferred;
        tr.emit("length", length);
      };
      tr.setLength = onlength;
      tr.on("pipe", function(stream) {
        if (typeof length === "number")
          return;
        if (stream.readable && !stream.writable && stream.headers) {
          return onlength(parseInt(stream.headers["content-length"] || 0));
        }
        if (typeof stream.length === "number") {
          return onlength(stream.length);
        }
        stream.on("response", function(res) {
          if (!res || !res.headers)
            return;
          if (res.headers["content-encoding"] === "gzip")
            return;
          if (res.headers["content-length"]) {
            return onlength(parseInt(res.headers["content-length"]));
          }
        });
      });
      if (drain)
        tr.resume();
      if (onprogress)
        tr.on("progress", onprogress);
      tr.progress = function() {
        update.speed = speed(0);
        update.eta = Math.round(update.remaining / update.speed);
        return update;
      };
      return tr;
    };
  }
});

// node_modules/mimic-response/index.js
var require_mimic_response = __commonJS({
  "node_modules/mimic-response/index.js"(exports, module2) {
    init_shims();
    "use strict";
    var knownProps = [
      "destroy",
      "setTimeout",
      "socket",
      "headers",
      "trailers",
      "rawHeaders",
      "statusCode",
      "httpVersion",
      "httpVersionMinor",
      "httpVersionMajor",
      "rawTrailers",
      "statusMessage"
    ];
    module2.exports = (fromStream, toStream) => {
      const fromProps = new Set(Object.keys(fromStream).concat(knownProps));
      for (const prop of fromProps) {
        if (prop in toStream) {
          continue;
        }
        toStream[prop] = typeof fromStream[prop] === "function" ? fromStream[prop].bind(fromStream) : fromStream[prop];
      }
    };
  }
});

// node_modules/decompress-response/index.js
var require_decompress_response = __commonJS({
  "node_modules/decompress-response/index.js"(exports, module2) {
    init_shims();
    "use strict";
    var PassThrough2 = require("stream").PassThrough;
    var zlib2 = require("zlib");
    var mimicResponse = require_mimic_response();
    module2.exports = (response) => {
      if (["gzip", "deflate"].indexOf(response.headers["content-encoding"]) === -1) {
        return response;
      }
      const unzip = zlib2.createUnzip();
      const stream = new PassThrough2();
      mimicResponse(response, stream);
      unzip.on("error", (err) => {
        if (err.code === "Z_BUF_ERROR") {
          stream.end();
          return;
        }
        stream.emit("error", err);
      });
      response.pipe(unzip).pipe(stream);
      return stream;
    };
  }
});

// node_modules/get-it/lib-node/request/node/proxy.js
var require_proxy = __commonJS({
  "node_modules/get-it/lib-node/request/node/proxy.js"(exports) {
    init_shims();
    "use strict";
    var url = require("url");
    var objectAssign = require_object_assign();
    function formatHostname(hostname) {
      return hostname.replace(/^\.*/, ".").toLowerCase();
    }
    function parseNoProxyZone(zoneStr) {
      const zone = zoneStr.trim().toLowerCase();
      const zoneParts = zone.split(":", 2);
      const zoneHost = formatHostname(zoneParts[0]);
      const zonePort = zoneParts[1];
      const hasPort = zone.indexOf(":") > -1;
      return { hostname: zoneHost, port: zonePort, hasPort };
    }
    function uriInNoProxy(uri, noProxy) {
      const port = uri.port || (uri.protocol === "https:" ? "443" : "80");
      const hostname = formatHostname(uri.hostname);
      const noProxyList = noProxy.split(",");
      return noProxyList.map(parseNoProxyZone).some((noProxyZone) => {
        const isMatchedAt = hostname.indexOf(noProxyZone.hostname);
        const hostnameMatched = isMatchedAt > -1 && isMatchedAt === hostname.length - noProxyZone.hostname.length;
        if (noProxyZone.hasPort) {
          return port === noProxyZone.port && hostnameMatched;
        }
        return hostnameMatched;
      });
    }
    function getProxyFromUri(uri) {
      const noProxy = process.env.NO_PROXY || process.env.no_proxy || "";
      if (noProxy === "*") {
        return null;
      }
      if (noProxy !== "" && uriInNoProxy(uri, noProxy)) {
        return null;
      }
      if (uri.protocol === "http:") {
        return process.env.HTTP_PROXY || process.env.http_proxy || null;
      }
      if (uri.protocol === "https:") {
        return process.env.HTTPS_PROXY || process.env.https_proxy || process.env.HTTP_PROXY || process.env.http_proxy || null;
      }
      return null;
    }
    function getHostFromUri(uri) {
      let host = uri.host;
      if (uri.port) {
        if (uri.port === "80" && uri.protocol === "http:" || uri.port === "443" && uri.protocol === "https:") {
          host = uri.hostname;
        }
      }
      return host;
    }
    function getHostHeaderWithPort(uri) {
      const port = uri.port || (uri.protocol === "https:" ? "443" : "80");
      return `${uri.hostname}:${port}`;
    }
    function rewriteUriForProxy(reqOpts, uri, proxy) {
      const headers = reqOpts.headers || {};
      const options2 = objectAssign({}, reqOpts, { headers });
      headers.host = headers.host || getHostHeaderWithPort(uri);
      options2.protocol = proxy.protocol || options2.protocol;
      options2.hostname = proxy.host.replace(/:\d+/, "");
      options2.port = proxy.port;
      options2.host = getHostFromUri(objectAssign({}, uri, proxy));
      options2.href = `${options2.protocol}//${options2.host}${options2.path}`;
      options2.path = url.format(uri);
      return options2;
    }
    function getProxyOptions(options2) {
      let proxy;
      if (options2.hasOwnProperty("proxy")) {
        proxy = options2.proxy;
      } else {
        const uri = url.parse(options2.url);
        proxy = getProxyFromUri(uri);
      }
      return typeof proxy === "string" ? url.parse(proxy) : proxy;
    }
    exports.rewriteUriForProxy = rewriteUriForProxy;
    exports.getProxyOptions = getProxyOptions;
  }
});

// node_modules/safe-buffer/index.js
var require_safe_buffer2 = __commonJS({
  "node_modules/safe-buffer/index.js"(exports, module2) {
    init_shims();
    var buffer = require("buffer");
    var Buffer2 = buffer.Buffer;
    function copyProps(src2, dst) {
      for (var key in src2) {
        dst[key] = src2[key];
      }
    }
    if (Buffer2.from && Buffer2.alloc && Buffer2.allocUnsafe && Buffer2.allocUnsafeSlow) {
      module2.exports = buffer;
    } else {
      copyProps(buffer, exports);
      exports.Buffer = SafeBuffer;
    }
    function SafeBuffer(arg, encodingOrOffset, length) {
      return Buffer2(arg, encodingOrOffset, length);
    }
    SafeBuffer.prototype = Object.create(Buffer2.prototype);
    copyProps(Buffer2, SafeBuffer);
    SafeBuffer.from = function(arg, encodingOrOffset, length) {
      if (typeof arg === "number") {
        throw new TypeError("Argument must not be a number");
      }
      return Buffer2(arg, encodingOrOffset, length);
    };
    SafeBuffer.alloc = function(size, fill, encoding) {
      if (typeof size !== "number") {
        throw new TypeError("Argument must be a number");
      }
      var buf = Buffer2(size);
      if (fill !== void 0) {
        if (typeof encoding === "string") {
          buf.fill(fill, encoding);
        } else {
          buf.fill(fill);
        }
      } else {
        buf.fill(0);
      }
      return buf;
    };
    SafeBuffer.allocUnsafe = function(size) {
      if (typeof size !== "number") {
        throw new TypeError("Argument must be a number");
      }
      return Buffer2(size);
    };
    SafeBuffer.allocUnsafeSlow = function(size) {
      if (typeof size !== "number") {
        throw new TypeError("Argument must be a number");
      }
      return buffer.SlowBuffer(size);
    };
  }
});

// node_modules/tunnel-agent/index.js
var require_tunnel_agent = __commonJS({
  "node_modules/tunnel-agent/index.js"(exports) {
    init_shims();
    "use strict";
    var net = require("net");
    var tls = require("tls");
    var http2 = require("http");
    var https2 = require("https");
    var events = require("events");
    var assert = require("assert");
    var util = require("util");
    var Buffer2 = require_safe_buffer2().Buffer;
    exports.httpOverHttp = httpOverHttp;
    exports.httpsOverHttp = httpsOverHttp;
    exports.httpOverHttps = httpOverHttps;
    exports.httpsOverHttps = httpsOverHttps;
    function httpOverHttp(options2) {
      var agent = new TunnelingAgent(options2);
      agent.request = http2.request;
      return agent;
    }
    function httpsOverHttp(options2) {
      var agent = new TunnelingAgent(options2);
      agent.request = http2.request;
      agent.createSocket = createSecureSocket;
      agent.defaultPort = 443;
      return agent;
    }
    function httpOverHttps(options2) {
      var agent = new TunnelingAgent(options2);
      agent.request = https2.request;
      return agent;
    }
    function httpsOverHttps(options2) {
      var agent = new TunnelingAgent(options2);
      agent.request = https2.request;
      agent.createSocket = createSecureSocket;
      agent.defaultPort = 443;
      return agent;
    }
    function TunnelingAgent(options2) {
      var self2 = this;
      self2.options = options2 || {};
      self2.proxyOptions = self2.options.proxy || {};
      self2.maxSockets = self2.options.maxSockets || http2.Agent.defaultMaxSockets;
      self2.requests = [];
      self2.sockets = [];
      self2.on("free", function onFree(socket, host, port) {
        for (var i = 0, len = self2.requests.length; i < len; ++i) {
          var pending = self2.requests[i];
          if (pending.host === host && pending.port === port) {
            self2.requests.splice(i, 1);
            pending.request.onSocket(socket);
            return;
          }
        }
        socket.destroy();
        self2.removeSocket(socket);
      });
    }
    util.inherits(TunnelingAgent, events.EventEmitter);
    TunnelingAgent.prototype.addRequest = function addRequest(req, options2) {
      var self2 = this;
      if (typeof options2 === "string") {
        options2 = {
          host: options2,
          port: arguments[2],
          path: arguments[3]
        };
      }
      if (self2.sockets.length >= this.maxSockets) {
        self2.requests.push({ host: options2.host, port: options2.port, request: req });
        return;
      }
      self2.createConnection({ host: options2.host, port: options2.port, request: req });
    };
    TunnelingAgent.prototype.createConnection = function createConnection(pending) {
      var self2 = this;
      self2.createSocket(pending, function(socket) {
        socket.on("free", onFree);
        socket.on("close", onCloseOrRemove);
        socket.on("agentRemove", onCloseOrRemove);
        pending.request.onSocket(socket);
        function onFree() {
          self2.emit("free", socket, pending.host, pending.port);
        }
        function onCloseOrRemove(err) {
          self2.removeSocket(socket);
          socket.removeListener("free", onFree);
          socket.removeListener("close", onCloseOrRemove);
          socket.removeListener("agentRemove", onCloseOrRemove);
        }
      });
    };
    TunnelingAgent.prototype.createSocket = function createSocket(options2, cb) {
      var self2 = this;
      var placeholder = {};
      self2.sockets.push(placeholder);
      var connectOptions = mergeOptions({}, self2.proxyOptions, {
        method: "CONNECT",
        path: options2.host + ":" + options2.port,
        agent: false
      });
      if (connectOptions.proxyAuth) {
        connectOptions.headers = connectOptions.headers || {};
        connectOptions.headers["Proxy-Authorization"] = "Basic " + Buffer2.from(connectOptions.proxyAuth).toString("base64");
      }
      debug("making CONNECT request");
      var connectReq = self2.request(connectOptions);
      connectReq.useChunkedEncodingByDefault = false;
      connectReq.once("response", onResponse);
      connectReq.once("upgrade", onUpgrade);
      connectReq.once("connect", onConnect);
      connectReq.once("error", onError);
      connectReq.end();
      function onResponse(res) {
        res.upgrade = true;
      }
      function onUpgrade(res, socket, head) {
        process.nextTick(function() {
          onConnect(res, socket, head);
        });
      }
      function onConnect(res, socket, head) {
        connectReq.removeAllListeners();
        socket.removeAllListeners();
        if (res.statusCode === 200) {
          assert.equal(head.length, 0);
          debug("tunneling connection has established");
          self2.sockets[self2.sockets.indexOf(placeholder)] = socket;
          cb(socket);
        } else {
          debug("tunneling socket could not be established, statusCode=%d", res.statusCode);
          var error2 = new Error("tunneling socket could not be established, statusCode=" + res.statusCode);
          error2.code = "ECONNRESET";
          options2.request.emit("error", error2);
          self2.removeSocket(placeholder);
        }
      }
      function onError(cause) {
        connectReq.removeAllListeners();
        debug("tunneling socket could not be established, cause=%s\n", cause.message, cause.stack);
        var error2 = new Error("tunneling socket could not be established, cause=" + cause.message);
        error2.code = "ECONNRESET";
        options2.request.emit("error", error2);
        self2.removeSocket(placeholder);
      }
    };
    TunnelingAgent.prototype.removeSocket = function removeSocket(socket) {
      var pos = this.sockets.indexOf(socket);
      if (pos === -1)
        return;
      this.sockets.splice(pos, 1);
      var pending = this.requests.shift();
      if (pending) {
        this.createConnection(pending);
      }
    };
    function createSecureSocket(options2, cb) {
      var self2 = this;
      TunnelingAgent.prototype.createSocket.call(self2, options2, function(socket) {
        var secureSocket = tls.connect(0, mergeOptions({}, self2.options, {
          servername: options2.host,
          socket
        }));
        self2.sockets[self2.sockets.indexOf(socket)] = secureSocket;
        cb(secureSocket);
      });
    }
    function mergeOptions(target) {
      for (var i = 1, len = arguments.length; i < len; ++i) {
        var overrides = arguments[i];
        if (typeof overrides === "object") {
          var keys = Object.keys(overrides);
          for (var j = 0, keyLen = keys.length; j < keyLen; ++j) {
            var k = keys[j];
            if (overrides[k] !== void 0) {
              target[k] = overrides[k];
            }
          }
        }
      }
      return target;
    }
    var debug;
    if (process.env.NODE_DEBUG && /\btunnel\b/.test(process.env.NODE_DEBUG)) {
      debug = function() {
        var args = Array.prototype.slice.call(arguments);
        if (typeof args[0] === "string") {
          args[0] = "TUNNEL: " + args[0];
        } else {
          args.unshift("TUNNEL:");
        }
        console.error.apply(console, args);
      };
    } else {
      debug = function() {
      };
    }
    exports.debug = debug;
  }
});

// node_modules/get-it/lib-node/request/node/tunnel.js
var require_tunnel = __commonJS({
  "node_modules/get-it/lib-node/request/node/tunnel.js"(exports) {
    init_shims();
    "use strict";
    var url = require("url");
    var tunnel = require_tunnel_agent();
    var objectAssign = require_object_assign();
    var uriParts = ["protocol", "slashes", "auth", "host", "port", "hostname", "hash", "search", "query", "pathname", "path", "href"];
    var defaultProxyHeaderWhiteList = ["accept", "accept-charset", "accept-encoding", "accept-language", "accept-ranges", "cache-control", "content-encoding", "content-language", "content-location", "content-md5", "content-range", "content-type", "connection", "date", "expect", "max-forwards", "pragma", "referer", "te", "user-agent", "via"];
    var defaultProxyHeaderExclusiveList = ["proxy-authorization"];
    exports.shouldEnable = (options2, tunnelOption) => {
      if (typeof options2.tunnel !== "undefined") {
        return Boolean(options2.tunnel);
      }
      const uri = url.parse(options2.url);
      if (uri.protocol === "https:") {
        return true;
      }
      return false;
    };
    exports.applyAgent = function() {
      let opts = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      let proxy = arguments[1];
      const options2 = objectAssign({}, opts);
      const proxyHeaderWhiteList = defaultProxyHeaderWhiteList.concat(options2.proxyHeaderWhiteList || []).map((header) => header.toLowerCase());
      const proxyHeaderExclusiveList = defaultProxyHeaderExclusiveList.concat(options2.proxyHeaderExclusiveList || []).map((header) => header.toLowerCase());
      const proxyHeaders = getAllowedProxyHeaders(options2.headers, proxyHeaderWhiteList);
      proxyHeaders.host = constructProxyHost(options2);
      options2.headers = Object.keys(options2.headers || {}).reduce((headers, header) => {
        const isAllowed = proxyHeaderExclusiveList.indexOf(header.toLowerCase()) === -1;
        if (isAllowed) {
          headers[header] = options2.headers[header];
        }
        return headers;
      }, {});
      const tunnelFn = getTunnelFn(options2, proxy);
      const tunnelOptions = constructTunnelOptions(options2, proxy, proxyHeaders);
      options2.agent = tunnelFn(tunnelOptions);
      return options2;
    };
    function getTunnelFn(options2, proxy) {
      const uri = getUriParts(options2);
      const tunnelFnName = constructTunnelFnName(uri, proxy);
      return tunnel[tunnelFnName];
    }
    function getUriParts(options2) {
      return uriParts.reduce((uri, part) => {
        uri[part] = options2[part];
        return uri;
      }, {});
    }
    function constructTunnelFnName(uri, proxy) {
      const uriProtocol = uri.protocol === "https:" ? "https" : "http";
      const proxyProtocol = proxy.protocol === "https:" ? "Https" : "Http";
      return [uriProtocol, proxyProtocol].join("Over");
    }
    function constructProxyHost(uri) {
      const port = uri.port;
      const protocol = uri.protocol;
      let proxyHost = `${uri.hostname}:`;
      if (port) {
        proxyHost += port;
      } else if (protocol === "https:") {
        proxyHost += "443";
      } else {
        proxyHost += "80";
      }
      return proxyHost;
    }
    function getAllowedProxyHeaders(headers, whiteList) {
      return Object.keys(headers).filter((header) => whiteList.indexOf(header.toLowerCase()) !== -1).reduce((set, header) => {
        set[header] = headers[header];
        return set;
      }, {});
    }
    function constructTunnelOptions(options2, proxy, proxyHeaders) {
      return {
        proxy: {
          host: proxy.hostname,
          port: +proxy.port,
          proxyAuth: proxy.auth,
          headers: proxyHeaders
        },
        headers: options2.headers,
        ca: options2.ca,
        cert: options2.cert,
        key: options2.key,
        passphrase: options2.passphrase,
        pfx: options2.pfx,
        ciphers: options2.ciphers,
        rejectUnauthorized: options2.rejectUnauthorized,
        secureOptions: options2.secureOptions,
        secureProtocol: options2.secureProtocol
      };
    }
  }
});

// node_modules/get-it/lib-node/request/node-request.js
var require_node_request = __commonJS({
  "node_modules/get-it/lib-node/request/node-request.js"(exports, module2) {
    init_shims();
    "use strict";
    var _slicedToArray = function() {
      function sliceIterator(arr, i) {
        var _arr = [];
        var _n = true;
        var _d = false;
        var _e = void 0;
        try {
          for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
            _arr.push(_s.value);
            if (i && _arr.length === i)
              break;
          }
        } catch (err) {
          _d = true;
          _e = err;
        } finally {
          try {
            if (!_n && _i["return"])
              _i["return"]();
          } finally {
            if (_d)
              throw _e;
          }
        }
        return _arr;
      }
      return function(arr, i) {
        if (Array.isArray(arr)) {
          return arr;
        } else if (Symbol.iterator in Object(arr)) {
          return sliceIterator(arr, i);
        } else {
          throw new TypeError("Invalid attempt to destructure non-iterable instance");
        }
      };
    }();
    var qs = require("querystring");
    var url = require("url");
    var http2 = require("http");
    var https2 = require("https");
    var concat = require_simple_concat();
    var follow = require_follow_redirects();
    var timedOut = require_timed_out();
    var isStream = require_is_stream();
    var toStream = require_into_stream();
    var objectAssign = require_object_assign();
    var progressStream = require_progress_stream();
    var decompressResponse = require_decompress_response();
    var _require = require_proxy();
    var getProxyOptions = _require.getProxyOptions;
    var rewriteUriForProxy = _require.rewriteUriForProxy;
    var tunneling = require_tunnel();
    var adapter = "node";
    var reduceResponse = (res, reqUrl, method, body) => ({
      body,
      url: reqUrl,
      method,
      headers: res.headers,
      statusCode: res.statusCode,
      statusMessage: res.statusMessage
    });
    module2.exports = (context, cb) => {
      const options2 = context.options;
      const uri = objectAssign({}, url.parse(options2.url));
      const bodyType = isStream(options2.body) ? "stream" : typeof options2.body;
      if (bodyType !== "undefined" && bodyType !== "stream" && bodyType !== "string" && !Buffer.isBuffer(options2.body)) {
        throw new Error(`Request body must be a string, buffer or stream, got ${bodyType}`);
      }
      const lengthHeader = {};
      if (options2.bodySize) {
        lengthHeader["content-length"] = options2.bodySize;
      } else if (options2.body && bodyType !== "stream") {
        lengthHeader["content-length"] = Buffer.byteLength(options2.body);
      }
      let aborted = false;
      const callback = (err, res) => !aborted && cb(err, res);
      context.channels.abort.subscribe(() => {
        aborted = true;
      });
      let reqOpts = objectAssign({}, uri, {
        method: options2.method,
        headers: objectAssign({}, lowerCaseHeaders(options2.headers), lengthHeader),
        maxRedirects: options2.maxRedirects
      });
      const proxy = getProxyOptions(options2);
      const tunnel = proxy && tunneling.shouldEnable(options2);
      const injectedResponse = context.applyMiddleware("interceptRequest", void 0, {
        adapter,
        context
      });
      if (injectedResponse) {
        const cbTimer = setImmediate(callback, null, injectedResponse);
        const abort = () => clearImmediate(cbTimer);
        return { abort };
      }
      if (options2.maxRedirects !== 0) {
        reqOpts.maxRedirects = options2.maxRedirects || 5;
      }
      if (proxy && tunnel) {
        reqOpts = tunneling.applyAgent(reqOpts, proxy);
      } else if (proxy && !tunnel) {
        reqOpts = rewriteUriForProxy(reqOpts, uri, proxy);
      }
      if (!tunnel && proxy && proxy.auth && !reqOpts.headers["proxy-authorization"]) {
        var _ref = proxy.auth.username ? [proxy.auth.username, proxy.auth.password] : proxy.auth.split(":").map((item) => qs.unescape(item)), _ref2 = _slicedToArray(_ref, 2);
        const username = _ref2[0], password = _ref2[1];
        const auth = Buffer.from(`${username}:${password}`, "utf8");
        const authBase64 = auth.toString("base64");
        reqOpts.headers["proxy-authorization"] = `Basic ${authBase64}`;
      }
      const transport = getRequestTransport(reqOpts, proxy, tunnel);
      if (typeof options2.debug === "function" && proxy) {
        options2.debug("Proxying using %s", reqOpts.agent ? "tunnel agent" : `${reqOpts.host}:${reqOpts.port}`);
      }
      const finalOptions = context.applyMiddleware("finalizeOptions", reqOpts);
      const request = transport.request(finalOptions, (response) => {
        const tryDecompress = reqOpts.method !== "HEAD";
        const res = tryDecompress ? decompressResponse(response) : response;
        const resStream = context.applyMiddleware("onHeaders", res, {
          headers: response.headers,
          adapter,
          context
        });
        concat(resStream, (err, data) => {
          if (err) {
            return callback(err);
          }
          const body = options2.rawBody ? data : data.toString();
          const reduced = reduceResponse(res, response.responseUrl || options2.url, reqOpts.method, body);
          return callback(null, reduced);
        });
      });
      if (options2.timeout) {
        timedOut(request, options2.timeout);
      }
      request.once("error", callback);
      var _getProgressStream = getProgressStream(options2);
      const bodyStream = _getProgressStream.bodyStream, progress = _getProgressStream.progress;
      context.applyMiddleware("onRequest", { options: options2, adapter, request, context, progress });
      if (bodyStream) {
        bodyStream.pipe(request);
      } else {
        request.end(options2.body);
      }
      return { abort: () => request.abort() };
    };
    function getProgressStream(options2) {
      if (!options2.body) {
        return {};
      }
      const bodyIsStream = isStream(options2.body);
      const length = options2.bodySize || (bodyIsStream ? null : Buffer.byteLength(options2.body));
      if (!length) {
        return bodyIsStream ? { bodyStream: options2.body } : {};
      }
      const progress = progressStream({ time: 16, length });
      const bodyStream = bodyIsStream ? options2.body : toStream(options2.body);
      return { bodyStream: bodyStream.pipe(progress), progress };
    }
    function getRequestTransport(reqOpts, proxy, tunnel) {
      const isHttpsRequest = reqOpts.protocol === "https:";
      const transports = reqOpts.maxRedirects === 0 ? { http: http2, https: https2 } : { http: follow.http, https: follow.https };
      if (!proxy || tunnel) {
        return isHttpsRequest ? transports.https : transports.http;
      }
      let isHttpsProxy = proxy.port === 443;
      if (proxy.protocol) {
        isHttpsProxy = /^https:?/.test(proxy.protocol);
      }
      return isHttpsProxy ? transports.https : transports.http;
    }
    function lowerCaseHeaders(headers) {
      return Object.keys(headers || {}).reduce((acc, header) => {
        acc[header.toLowerCase()] = headers[header];
        return acc;
      }, {});
    }
  }
});

// node_modules/get-it/lib-node/request/index.js
var require_request = __commonJS({
  "node_modules/get-it/lib-node/request/index.js"(exports, module2) {
    init_shims();
    "use strict";
    module2.exports = require_node_request();
  }
});

// node_modules/get-it/lib-node/index.js
var require_lib_node = __commonJS({
  "node_modules/get-it/lib-node/index.js"(exports, module2) {
    init_shims();
    "use strict";
    var pubsub = require_nano_pubsub();
    var middlewareReducer = require_middlewareReducer();
    var processOptions = require_defaultOptionsProcessor();
    var validateOptions = require_defaultOptionsValidator();
    var httpRequest = require_request();
    var channelNames = ["request", "response", "progress", "error", "abort"];
    var middlehooks = ["processOptions", "validateOptions", "interceptRequest", "finalizeOptions", "onRequest", "onResponse", "onError", "onReturn", "onHeaders"];
    module2.exports = function createRequester() {
      let initMiddleware = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
      const loadedMiddleware = [];
      const middleware = middlehooks.reduce((ware, name) => {
        ware[name] = ware[name] || [];
        return ware;
      }, {
        processOptions: [processOptions],
        validateOptions: [validateOptions]
      });
      function request(opts) {
        const channels = channelNames.reduce((target, name) => {
          target[name] = pubsub();
          return target;
        }, {});
        const applyMiddleware = middlewareReducer(middleware);
        const options2 = applyMiddleware("processOptions", opts);
        applyMiddleware("validateOptions", options2);
        const context = {
          options: options2,
          channels,
          applyMiddleware
        };
        let ongoingRequest = null;
        const unsubscribe = channels.request.subscribe((ctx) => {
          ongoingRequest = httpRequest(ctx, (err, res) => onResponse(err, res, ctx));
        });
        channels.abort.subscribe(() => {
          unsubscribe();
          if (ongoingRequest) {
            ongoingRequest.abort();
          }
        });
        const returnValue = applyMiddleware("onReturn", channels, context);
        if (returnValue === channels) {
          channels.request.publish(context);
        }
        return returnValue;
        function onResponse(reqErr, res, ctx) {
          let error2 = reqErr;
          let response = res;
          if (!error2) {
            try {
              response = applyMiddleware("onResponse", res, ctx);
            } catch (err) {
              response = null;
              error2 = err;
            }
          }
          error2 = error2 && applyMiddleware("onError", error2, ctx);
          if (error2) {
            channels.error.publish(error2);
          } else if (response) {
            channels.response.publish(response);
          }
        }
      }
      request.use = function use(newMiddleware) {
        if (!newMiddleware) {
          throw new Error("Tried to add middleware that resolved to falsey value");
        }
        if (typeof newMiddleware === "function") {
          throw new Error("Tried to add middleware that was a function. It probably expects you to pass options to it.");
        }
        if (newMiddleware.onReturn && middleware.onReturn.length > 0) {
          throw new Error("Tried to add new middleware with `onReturn` handler, but another handler has already been registered for this event");
        }
        middlehooks.forEach((key) => {
          if (newMiddleware[key]) {
            middleware[key].push(newMiddleware[key]);
          }
        });
        loadedMiddleware.push(newMiddleware);
        return request;
      };
      request.clone = function clone2() {
        return createRequester(loadedMiddleware);
      };
      initMiddleware.forEach(request.use);
      return request;
    };
  }
});

// node_modules/get-it/index.js
var require_get_it = __commonJS({
  "node_modules/get-it/index.js"(exports, module2) {
    init_shims();
    module2.exports = require_lib_node();
  }
});

// node_modules/get-it/lib/util/global.js
var require_global = __commonJS({
  "node_modules/get-it/lib/util/global.js"(exports, module2) {
    init_shims();
    "use strict";
    if (typeof window !== "undefined") {
      module2.exports = window;
    } else if (typeof global !== "undefined") {
      module2.exports = global;
    } else if (typeof self !== "undefined") {
      module2.exports = self;
    } else {
      module2.exports = {};
    }
  }
});

// node_modules/get-it/lib/middleware/observable.js
var require_observable2 = __commonJS({
  "node_modules/get-it/lib/middleware/observable.js"(exports, module2) {
    init_shims();
    "use strict";
    var global2 = require_global();
    var objectAssign = require_object_assign();
    module2.exports = function() {
      var opts = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      var Observable = opts.implementation || global2.Observable;
      if (!Observable) {
        throw new Error("`Observable` is not available in global scope, and no implementation was passed");
      }
      return {
        onReturn: function onReturn(channels, context) {
          return new Observable(function(observer) {
            channels.error.subscribe(function(err) {
              return observer.error(err);
            });
            channels.progress.subscribe(function(event) {
              return observer.next(objectAssign({ type: "progress" }, event));
            });
            channels.response.subscribe(function(response) {
              observer.next(objectAssign({ type: "response" }, response));
              observer.complete();
            });
            channels.request.publish(context);
            return function() {
              return channels.abort.publish();
            };
          });
        }
      };
    };
  }
});

// node_modules/isobject/index.js
var require_isobject = __commonJS({
  "node_modules/isobject/index.js"(exports, module2) {
    init_shims();
    "use strict";
    module2.exports = function isObject(val) {
      return val != null && typeof val === "object" && Array.isArray(val) === false;
    };
  }
});

// node_modules/is-plain-object/index.js
var require_is_plain_object = __commonJS({
  "node_modules/is-plain-object/index.js"(exports, module2) {
    init_shims();
    "use strict";
    var isObject = require_isobject();
    function isObjectObject(o) {
      return isObject(o) === true && Object.prototype.toString.call(o) === "[object Object]";
    }
    module2.exports = function isPlainObject(o) {
      var ctor, prot;
      if (isObjectObject(o) === false)
        return false;
      ctor = o.constructor;
      if (typeof ctor !== "function")
        return false;
      prot = ctor.prototype;
      if (isObjectObject(prot) === false)
        return false;
      if (prot.hasOwnProperty("isPrototypeOf") === false) {
        return false;
      }
      return true;
    };
  }
});

// node_modules/get-it/lib/middleware/jsonRequest.js
var require_jsonRequest = __commonJS({
  "node_modules/get-it/lib/middleware/jsonRequest.js"(exports, module2) {
    init_shims();
    "use strict";
    var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(obj) {
      return typeof obj;
    } : function(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
    var objectAssign = require_object_assign();
    var isPlainObject = require_is_plain_object();
    var serializeTypes = ["boolean", "string", "number"];
    var isBuffer = function isBuffer2(obj) {
      return !!obj.constructor && typeof obj.constructor.isBuffer === "function" && obj.constructor.isBuffer(obj);
    };
    module2.exports = function() {
      return {
        processOptions: function processOptions(options2) {
          var body = options2.body;
          if (!body) {
            return options2;
          }
          var isStream = typeof body.pipe === "function";
          var shouldSerialize = !isStream && !isBuffer(body) && (serializeTypes.indexOf(typeof body === "undefined" ? "undefined" : _typeof(body)) !== -1 || Array.isArray(body) || isPlainObject(body));
          if (!shouldSerialize) {
            return options2;
          }
          return objectAssign({}, options2, {
            body: JSON.stringify(options2.body),
            headers: objectAssign({}, options2.headers, {
              "Content-Type": "application/json"
            })
          });
        }
      };
    };
  }
});

// node_modules/get-it/lib/middleware/jsonResponse.js
var require_jsonResponse = __commonJS({
  "node_modules/get-it/lib/middleware/jsonResponse.js"(exports, module2) {
    init_shims();
    "use strict";
    var objectAssign = require_object_assign();
    module2.exports = function(opts) {
      return {
        onResponse: function onResponse(response) {
          var contentType = response.headers["content-type"] || "";
          var shouldDecode = opts && opts.force || contentType.indexOf("application/json") !== -1;
          if (!response.body || !contentType || !shouldDecode) {
            return response;
          }
          return objectAssign({}, response, { body: tryParse(response.body) });
        },
        processOptions: function processOptions(options2) {
          return objectAssign({}, options2, {
            headers: objectAssign({ Accept: "application/json" }, options2.headers)
          });
        }
      };
    };
    function tryParse(body) {
      try {
        return JSON.parse(body);
      } catch (err) {
        err.message = "Failed to parsed response body as JSON: " + err.message;
        throw err;
      }
    }
  }
});

// node_modules/get-it/lib/middleware/progress/node-progress.js
var require_node_progress = __commonJS({
  "node_modules/get-it/lib/middleware/progress/node-progress.js"(exports, module2) {
    init_shims();
    "use strict";
    var progressStream = require_progress_stream();
    function normalizer(stage) {
      return function(prog) {
        return {
          stage,
          percent: prog.percentage,
          total: prog.length,
          loaded: prog.transferred,
          lengthComputable: !(prog.length === 0 && prog.percentage === 0)
        };
      };
    }
    module2.exports = function() {
      return {
        onHeaders: function onHeaders(response, evt) {
          var progress = progressStream({ time: 16 });
          var normalize2 = normalizer("download");
          var contentLength = response.headers["content-length"];
          var length = contentLength && Number(contentLength);
          if (!isNaN(length) && length > 0) {
            progress.setLength(length);
          }
          progress.on("progress", function(prog) {
            return evt.context.channels.progress.publish(normalize2(prog));
          });
          return response.pipe(progress);
        },
        onRequest: function onRequest(evt) {
          if (!evt.progress) {
            return;
          }
          var normalize2 = normalizer("upload");
          evt.progress.on("progress", function(prog) {
            return evt.context.channels.progress.publish(normalize2(prog));
          });
        }
      };
    };
  }
});

// node_modules/get-it/lib/middleware/progress/index.js
var require_progress = __commonJS({
  "node_modules/get-it/lib/middleware/progress/index.js"(exports, module2) {
    init_shims();
    "use strict";
    module2.exports = require_node_progress();
  }
});

// node_modules/make-error/index.js
var require_make_error = __commonJS({
  "node_modules/make-error/index.js"(exports, module2) {
    init_shims();
    "use strict";
    var construct = typeof Reflect !== "undefined" ? Reflect.construct : void 0;
    var defineProperty = Object.defineProperty;
    var captureStackTrace = Error.captureStackTrace;
    if (captureStackTrace === void 0) {
      captureStackTrace = function captureStackTrace2(error2) {
        var container = new Error();
        defineProperty(error2, "stack", {
          configurable: true,
          get: function getStack() {
            var stack = container.stack;
            defineProperty(this, "stack", {
              configurable: true,
              value: stack,
              writable: true
            });
            return stack;
          },
          set: function setStack(stack) {
            defineProperty(error2, "stack", {
              configurable: true,
              value: stack,
              writable: true
            });
          }
        });
      };
    }
    function BaseError(message) {
      if (message !== void 0) {
        defineProperty(this, "message", {
          configurable: true,
          value: message,
          writable: true
        });
      }
      var cname = this.constructor.name;
      if (cname !== void 0 && cname !== this.name) {
        defineProperty(this, "name", {
          configurable: true,
          value: cname,
          writable: true
        });
      }
      captureStackTrace(this, this.constructor);
    }
    BaseError.prototype = Object.create(Error.prototype, {
      constructor: {
        configurable: true,
        value: BaseError,
        writable: true
      }
    });
    var setFunctionName = function() {
      function setFunctionName2(fn, name) {
        return defineProperty(fn, "name", {
          configurable: true,
          value: name
        });
      }
      try {
        var f = function() {
        };
        setFunctionName2(f, "foo");
        if (f.name === "foo") {
          return setFunctionName2;
        }
      } catch (_) {
      }
    }();
    function makeError(constructor, super_) {
      if (super_ == null || super_ === Error) {
        super_ = BaseError;
      } else if (typeof super_ !== "function") {
        throw new TypeError("super_ should be a function");
      }
      var name;
      if (typeof constructor === "string") {
        name = constructor;
        constructor = construct !== void 0 ? function() {
          return construct(super_, arguments, this.constructor);
        } : function() {
          super_.apply(this, arguments);
        };
        if (setFunctionName !== void 0) {
          setFunctionName(constructor, name);
          name = void 0;
        }
      } else if (typeof constructor !== "function") {
        throw new TypeError("constructor should be either a string or a function");
      }
      constructor.super_ = constructor["super"] = super_;
      var properties = {
        constructor: {
          configurable: true,
          value: constructor,
          writable: true
        }
      };
      if (name !== void 0) {
        properties.name = {
          configurable: true,
          value: name,
          writable: true
        };
      }
      constructor.prototype = Object.create(super_.prototype, properties);
      return constructor;
    }
    exports = module2.exports = makeError;
    exports.BaseError = BaseError;
  }
});

// node_modules/@sanity/client/lib/http/errors.js
var require_errors = __commonJS({
  "node_modules/@sanity/client/lib/http/errors.js"(exports) {
    init_shims();
    "use strict";
    var makeError = require_make_error();
    var assign = require_object_assign();
    function ClientError(res) {
      var props = extractErrorProps(res);
      ClientError.super.call(this, props.message);
      assign(this, props);
    }
    function ServerError(res) {
      var props = extractErrorProps(res);
      ServerError.super.call(this, props.message);
      assign(this, props);
    }
    function extractErrorProps(res) {
      var body = res.body;
      var props = {
        response: res,
        statusCode: res.statusCode,
        responseBody: stringifyBody(body, res)
      };
      if (body.error && body.message) {
        props.message = "".concat(body.error, " - ").concat(body.message);
        return props;
      }
      if (body.error && body.error.description) {
        props.message = body.error.description;
        props.details = body.error;
        return props;
      }
      props.message = body.error || body.message || httpErrorMessage(res);
      return props;
    }
    function httpErrorMessage(res) {
      var statusMessage = res.statusMessage ? " ".concat(res.statusMessage) : "";
      return "".concat(res.method, "-request to ").concat(res.url, " resulted in HTTP ").concat(res.statusCode).concat(statusMessage);
    }
    function stringifyBody(body, res) {
      var contentType = (res.headers["content-type"] || "").toLowerCase();
      var isJson = contentType.indexOf("application/json") !== -1;
      return isJson ? JSON.stringify(body, null, 2) : body;
    }
    makeError(ClientError);
    makeError(ServerError);
    exports.ClientError = ClientError;
    exports.ServerError = ServerError;
  }
});

// node_modules/is-retry-allowed/index.js
var require_is_retry_allowed = __commonJS({
  "node_modules/is-retry-allowed/index.js"(exports, module2) {
    init_shims();
    "use strict";
    var WHITELIST = [
      "ETIMEDOUT",
      "ECONNRESET",
      "EADDRINUSE",
      "ESOCKETTIMEDOUT",
      "ECONNREFUSED",
      "EPIPE",
      "EHOSTUNREACH",
      "EAI_AGAIN"
    ];
    var BLACKLIST = [
      "ENOTFOUND",
      "ENETUNREACH",
      "UNABLE_TO_GET_ISSUER_CERT",
      "UNABLE_TO_GET_CRL",
      "UNABLE_TO_DECRYPT_CERT_SIGNATURE",
      "UNABLE_TO_DECRYPT_CRL_SIGNATURE",
      "UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY",
      "CERT_SIGNATURE_FAILURE",
      "CRL_SIGNATURE_FAILURE",
      "CERT_NOT_YET_VALID",
      "CERT_HAS_EXPIRED",
      "CRL_NOT_YET_VALID",
      "CRL_HAS_EXPIRED",
      "ERROR_IN_CERT_NOT_BEFORE_FIELD",
      "ERROR_IN_CERT_NOT_AFTER_FIELD",
      "ERROR_IN_CRL_LAST_UPDATE_FIELD",
      "ERROR_IN_CRL_NEXT_UPDATE_FIELD",
      "OUT_OF_MEM",
      "DEPTH_ZERO_SELF_SIGNED_CERT",
      "SELF_SIGNED_CERT_IN_CHAIN",
      "UNABLE_TO_GET_ISSUER_CERT_LOCALLY",
      "UNABLE_TO_VERIFY_LEAF_SIGNATURE",
      "CERT_CHAIN_TOO_LONG",
      "CERT_REVOKED",
      "INVALID_CA",
      "PATH_LENGTH_EXCEEDED",
      "INVALID_PURPOSE",
      "CERT_UNTRUSTED",
      "CERT_REJECTED"
    ];
    module2.exports = function(err) {
      if (!err || !err.code) {
        return true;
      }
      if (WHITELIST.indexOf(err.code) !== -1) {
        return true;
      }
      if (BLACKLIST.indexOf(err.code) !== -1) {
        return false;
      }
      return true;
    };
  }
});

// node_modules/get-it/lib-node/util/node-shouldRetry.js
var require_node_shouldRetry = __commonJS({
  "node_modules/get-it/lib-node/util/node-shouldRetry.js"(exports, module2) {
    init_shims();
    "use strict";
    var allowed = require_is_retry_allowed();
    module2.exports = (err, num, options2) => {
      if (options2.method !== "GET" && options2.method !== "HEAD") {
        return false;
      }
      if (err.response && err.response.statusCode) {
        return false;
      }
      return allowed(err);
    };
  }
});

// node_modules/get-it/lib-node/middleware/retry.js
var require_retry = __commonJS({
  "node_modules/get-it/lib-node/middleware/retry.js"(exports, module2) {
    init_shims();
    "use strict";
    var objectAssign = require_object_assign();
    var defaultShouldRetry = require_node_shouldRetry();
    var isStream = (stream) => stream !== null && typeof stream === "object" && typeof stream.pipe === "function";
    var retry = function retry2() {
      let opts = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      const maxRetries = opts.maxRetries || 5;
      const retryDelay = opts.retryDelay || getRetryDelay;
      const allowRetry = opts.shouldRetry || defaultShouldRetry;
      return {
        onError: (err, context) => {
          const options2 = context.options;
          const max = options2.maxRetries || maxRetries;
          const shouldRetry = options2.shouldRetry || allowRetry;
          const attemptNumber = options2.attemptNumber || 0;
          if (isStream(options2.body)) {
            return err;
          }
          if (!shouldRetry(err, attemptNumber, options2) || attemptNumber >= max) {
            return err;
          }
          const newContext = objectAssign({}, context, {
            options: objectAssign({}, options2, { attemptNumber: attemptNumber + 1 })
          });
          setTimeout(() => context.channels.request.publish(newContext), retryDelay(attemptNumber));
          return null;
        }
      };
    };
    retry.shouldRetry = defaultShouldRetry;
    module2.exports = retry;
    function getRetryDelay(attemptNum) {
      return 100 * Math.pow(2, attemptNum) + Math.random() * 100;
    }
  }
});

// node_modules/get-it/node_modules/ms/index.js
var require_ms2 = __commonJS({
  "node_modules/get-it/node_modules/ms/index.js"(exports, module2) {
    init_shims();
    var s2 = 1e3;
    var m = s2 * 60;
    var h2 = m * 60;
    var d2 = h2 * 24;
    var y = d2 * 365.25;
    module2.exports = function(val, options2) {
      options2 = options2 || {};
      var type = typeof val;
      if (type === "string" && val.length > 0) {
        return parse(val);
      } else if (type === "number" && isNaN(val) === false) {
        return options2.long ? fmtLong(val) : fmtShort(val);
      }
      throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(val));
    };
    function parse(str) {
      str = String(str);
      if (str.length > 100) {
        return;
      }
      var match = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);
      if (!match) {
        return;
      }
      var n = parseFloat(match[1]);
      var type = (match[2] || "ms").toLowerCase();
      switch (type) {
        case "years":
        case "year":
        case "yrs":
        case "yr":
        case "y":
          return n * y;
        case "days":
        case "day":
        case "d":
          return n * d2;
        case "hours":
        case "hour":
        case "hrs":
        case "hr":
        case "h":
          return n * h2;
        case "minutes":
        case "minute":
        case "mins":
        case "min":
        case "m":
          return n * m;
        case "seconds":
        case "second":
        case "secs":
        case "sec":
        case "s":
          return n * s2;
        case "milliseconds":
        case "millisecond":
        case "msecs":
        case "msec":
        case "ms":
          return n;
        default:
          return void 0;
      }
    }
    function fmtShort(ms) {
      if (ms >= d2) {
        return Math.round(ms / d2) + "d";
      }
      if (ms >= h2) {
        return Math.round(ms / h2) + "h";
      }
      if (ms >= m) {
        return Math.round(ms / m) + "m";
      }
      if (ms >= s2) {
        return Math.round(ms / s2) + "s";
      }
      return ms + "ms";
    }
    function fmtLong(ms) {
      return plural(ms, d2, "day") || plural(ms, h2, "hour") || plural(ms, m, "minute") || plural(ms, s2, "second") || ms + " ms";
    }
    function plural(ms, n, name) {
      if (ms < n) {
        return;
      }
      if (ms < n * 1.5) {
        return Math.floor(ms / n) + " " + name;
      }
      return Math.ceil(ms / n) + " " + name + "s";
    }
  }
});

// node_modules/get-it/node_modules/debug/src/debug.js
var require_debug2 = __commonJS({
  "node_modules/get-it/node_modules/debug/src/debug.js"(exports, module2) {
    init_shims();
    exports = module2.exports = createDebug.debug = createDebug["default"] = createDebug;
    exports.coerce = coerce;
    exports.disable = disable;
    exports.enable = enable;
    exports.enabled = enabled;
    exports.humanize = require_ms2();
    exports.names = [];
    exports.skips = [];
    exports.formatters = {};
    var prevTime;
    function selectColor(namespace) {
      var hash2 = 0, i;
      for (i in namespace) {
        hash2 = (hash2 << 5) - hash2 + namespace.charCodeAt(i);
        hash2 |= 0;
      }
      return exports.colors[Math.abs(hash2) % exports.colors.length];
    }
    function createDebug(namespace) {
      function debug() {
        if (!debug.enabled)
          return;
        var self2 = debug;
        var curr = +new Date();
        var ms = curr - (prevTime || curr);
        self2.diff = ms;
        self2.prev = prevTime;
        self2.curr = curr;
        prevTime = curr;
        var args = new Array(arguments.length);
        for (var i = 0; i < args.length; i++) {
          args[i] = arguments[i];
        }
        args[0] = exports.coerce(args[0]);
        if (typeof args[0] !== "string") {
          args.unshift("%O");
        }
        var index2 = 0;
        args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format3) {
          if (match === "%%")
            return match;
          index2++;
          var formatter = exports.formatters[format3];
          if (typeof formatter === "function") {
            var val = args[index2];
            match = formatter.call(self2, val);
            args.splice(index2, 1);
            index2--;
          }
          return match;
        });
        exports.formatArgs.call(self2, args);
        var logFn = debug.log || exports.log || console.log.bind(console);
        logFn.apply(self2, args);
      }
      debug.namespace = namespace;
      debug.enabled = exports.enabled(namespace);
      debug.useColors = exports.useColors();
      debug.color = selectColor(namespace);
      if (typeof exports.init === "function") {
        exports.init(debug);
      }
      return debug;
    }
    function enable(namespaces) {
      exports.save(namespaces);
      exports.names = [];
      exports.skips = [];
      var split = (typeof namespaces === "string" ? namespaces : "").split(/[\s,]+/);
      var len = split.length;
      for (var i = 0; i < len; i++) {
        if (!split[i])
          continue;
        namespaces = split[i].replace(/\*/g, ".*?");
        if (namespaces[0] === "-") {
          exports.skips.push(new RegExp("^" + namespaces.substr(1) + "$"));
        } else {
          exports.names.push(new RegExp("^" + namespaces + "$"));
        }
      }
    }
    function disable() {
      exports.enable("");
    }
    function enabled(name) {
      var i, len;
      for (i = 0, len = exports.skips.length; i < len; i++) {
        if (exports.skips[i].test(name)) {
          return false;
        }
      }
      for (i = 0, len = exports.names.length; i < len; i++) {
        if (exports.names[i].test(name)) {
          return true;
        }
      }
      return false;
    }
    function coerce(val) {
      if (val instanceof Error)
        return val.stack || val.message;
      return val;
    }
  }
});

// node_modules/get-it/node_modules/debug/src/browser.js
var require_browser2 = __commonJS({
  "node_modules/get-it/node_modules/debug/src/browser.js"(exports, module2) {
    init_shims();
    exports = module2.exports = require_debug2();
    exports.log = log;
    exports.formatArgs = formatArgs;
    exports.save = save;
    exports.load = load2;
    exports.useColors = useColors;
    exports.storage = typeof chrome != "undefined" && typeof chrome.storage != "undefined" ? chrome.storage.local : localstorage();
    exports.colors = [
      "lightseagreen",
      "forestgreen",
      "goldenrod",
      "dodgerblue",
      "darkorchid",
      "crimson"
    ];
    function useColors() {
      if (typeof window !== "undefined" && window.process && window.process.type === "renderer") {
        return true;
      }
      return typeof document !== "undefined" && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || typeof window !== "undefined" && window.console && (window.console.firebug || window.console.exception && window.console.table) || typeof navigator !== "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || typeof navigator !== "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
    }
    exports.formatters.j = function(v) {
      try {
        return JSON.stringify(v);
      } catch (err) {
        return "[UnexpectedJSONParseError]: " + err.message;
      }
    };
    function formatArgs(args) {
      var useColors2 = this.useColors;
      args[0] = (useColors2 ? "%c" : "") + this.namespace + (useColors2 ? " %c" : " ") + args[0] + (useColors2 ? "%c " : " ") + "+" + exports.humanize(this.diff);
      if (!useColors2)
        return;
      var c = "color: " + this.color;
      args.splice(1, 0, c, "color: inherit");
      var index2 = 0;
      var lastC = 0;
      args[0].replace(/%[a-zA-Z%]/g, function(match) {
        if (match === "%%")
          return;
        index2++;
        if (match === "%c") {
          lastC = index2;
        }
      });
      args.splice(lastC, 0, c);
    }
    function log() {
      return typeof console === "object" && console.log && Function.prototype.apply.call(console.log, console, arguments);
    }
    function save(namespaces) {
      try {
        if (namespaces == null) {
          exports.storage.removeItem("debug");
        } else {
          exports.storage.debug = namespaces;
        }
      } catch (e) {
      }
    }
    function load2() {
      var r;
      try {
        r = exports.storage.debug;
      } catch (e) {
      }
      if (!r && typeof process !== "undefined" && "env" in process) {
        r = process.env.DEBUG;
      }
      return r;
    }
    exports.enable(load2());
    function localstorage() {
      try {
        return window.localStorage;
      } catch (e) {
      }
    }
  }
});

// node_modules/get-it/node_modules/debug/src/node.js
var require_node4 = __commonJS({
  "node_modules/get-it/node_modules/debug/src/node.js"(exports, module2) {
    init_shims();
    var tty = require("tty");
    var util = require("util");
    exports = module2.exports = require_debug2();
    exports.init = init2;
    exports.log = log;
    exports.formatArgs = formatArgs;
    exports.save = save;
    exports.load = load2;
    exports.useColors = useColors;
    exports.colors = [6, 2, 3, 4, 5, 1];
    exports.inspectOpts = Object.keys(process.env).filter(function(key) {
      return /^debug_/i.test(key);
    }).reduce(function(obj, key) {
      var prop = key.substring(6).toLowerCase().replace(/_([a-z])/g, function(_, k) {
        return k.toUpperCase();
      });
      var val = process.env[key];
      if (/^(yes|on|true|enabled)$/i.test(val))
        val = true;
      else if (/^(no|off|false|disabled)$/i.test(val))
        val = false;
      else if (val === "null")
        val = null;
      else
        val = Number(val);
      obj[prop] = val;
      return obj;
    }, {});
    var fd = parseInt(process.env.DEBUG_FD, 10) || 2;
    if (fd !== 1 && fd !== 2) {
      util.deprecate(function() {
      }, "except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)")();
    }
    var stream = fd === 1 ? process.stdout : fd === 2 ? process.stderr : createWritableStdioStream(fd);
    function useColors() {
      return "colors" in exports.inspectOpts ? Boolean(exports.inspectOpts.colors) : tty.isatty(fd);
    }
    exports.formatters.o = function(v) {
      this.inspectOpts.colors = this.useColors;
      return util.inspect(v, this.inspectOpts).split("\n").map(function(str) {
        return str.trim();
      }).join(" ");
    };
    exports.formatters.O = function(v) {
      this.inspectOpts.colors = this.useColors;
      return util.inspect(v, this.inspectOpts);
    };
    function formatArgs(args) {
      var name = this.namespace;
      var useColors2 = this.useColors;
      if (useColors2) {
        var c = this.color;
        var prefix = "  [3" + c + ";1m" + name + " [0m";
        args[0] = prefix + args[0].split("\n").join("\n" + prefix);
        args.push("[3" + c + "m+" + exports.humanize(this.diff) + "[0m");
      } else {
        args[0] = new Date().toUTCString() + " " + name + " " + args[0];
      }
    }
    function log() {
      return stream.write(util.format.apply(util, arguments) + "\n");
    }
    function save(namespaces) {
      if (namespaces == null) {
        delete process.env.DEBUG;
      } else {
        process.env.DEBUG = namespaces;
      }
    }
    function load2() {
      return process.env.DEBUG;
    }
    function createWritableStdioStream(fd2) {
      var stream2;
      var tty_wrap = process.binding("tty_wrap");
      switch (tty_wrap.guessHandleType(fd2)) {
        case "TTY":
          stream2 = new tty.WriteStream(fd2);
          stream2._type = "tty";
          if (stream2._handle && stream2._handle.unref) {
            stream2._handle.unref();
          }
          break;
        case "FILE":
          var fs = require("fs");
          stream2 = new fs.SyncWriteStream(fd2, { autoClose: false });
          stream2._type = "fs";
          break;
        case "PIPE":
        case "TCP":
          var net = require("net");
          stream2 = new net.Socket({
            fd: fd2,
            readable: false,
            writable: true
          });
          stream2.readable = false;
          stream2.read = null;
          stream2._type = "pipe";
          if (stream2._handle && stream2._handle.unref) {
            stream2._handle.unref();
          }
          break;
        default:
          throw new Error("Implement me. Unknown stream file type!");
      }
      stream2.fd = fd2;
      stream2._isStdio = true;
      return stream2;
    }
    function init2(debug) {
      debug.inspectOpts = {};
      var keys = Object.keys(exports.inspectOpts);
      for (var i = 0; i < keys.length; i++) {
        debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];
      }
    }
    exports.enable(load2());
  }
});

// node_modules/get-it/node_modules/debug/src/index.js
var require_src2 = __commonJS({
  "node_modules/get-it/node_modules/debug/src/index.js"(exports, module2) {
    init_shims();
    if (typeof process !== "undefined" && process.type === "renderer") {
      module2.exports = require_browser2();
    } else {
      module2.exports = require_node4();
    }
  }
});

// node_modules/get-it/lib-node/middleware/debug.js
var require_debug3 = __commonJS({
  "node_modules/get-it/lib-node/middleware/debug.js"(exports, module2) {
    init_shims();
    "use strict";
    var debugIt = require_src2();
    var SENSITIVE_HEADERS = ["Cookie", "Authorization"];
    var hasOwn = Object.prototype.hasOwnProperty;
    var redactKeys = (source, keys) => {
      const target = {};
      for (const key in source) {
        if (hasOwn.call(source, key)) {
          target[key] = keys.indexOf(key) > -1 ? "<redacted>" : source[key];
        }
      }
      return target;
    };
    module2.exports = function() {
      let opts = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      const verbose = opts.verbose;
      const namespace = opts.namespace || "get-it";
      const defaultLogger = debugIt(namespace);
      const log = opts.log || defaultLogger;
      const shortCircuit = log === defaultLogger && !debugIt.enabled(namespace);
      let requestId = 0;
      return {
        processOptions: (options2) => {
          options2.debug = log;
          options2.requestId = options2.requestId || ++requestId;
          return options2;
        },
        onRequest: (event) => {
          if (shortCircuit || !event) {
            return event;
          }
          const options2 = event.options;
          log("[%s] HTTP %s %s", options2.requestId, options2.method, options2.url);
          if (verbose && options2.body && typeof options2.body === "string") {
            log("[%s] Request body: %s", options2.requestId, options2.body);
          }
          if (verbose && options2.headers) {
            const headers = opts.redactSensitiveHeaders === false ? options2.headers : redactKeys(options2.headers, SENSITIVE_HEADERS);
            log("[%s] Request headers: %s", options2.requestId, JSON.stringify(headers, null, 2));
          }
          return event;
        },
        onResponse: (res, context) => {
          if (shortCircuit || !res) {
            return res;
          }
          const reqId = context.options.requestId;
          log("[%s] Response code: %s %s", reqId, res.statusCode, res.statusMessage);
          if (verbose && res.body) {
            log("[%s] Response body: %s", reqId, stringifyBody(res));
          }
          return res;
        },
        onError: (err, context) => {
          const reqId = context.options.requestId;
          if (!err) {
            log("[%s] Error encountered, but handled by an earlier middleware", reqId);
            return err;
          }
          log("[%s] ERROR: %s", reqId, err.message);
          return err;
        }
      };
    };
    function stringifyBody(res) {
      const contentType = (res.headers["content-type"] || "").toLowerCase();
      const isJson = contentType.indexOf("application/json") !== -1;
      return isJson ? tryFormat(res.body) : res.body;
    }
    function tryFormat(body) {
      try {
        const parsed = typeof body === "string" ? JSON.parse(body) : body;
        return JSON.stringify(parsed, null, 2);
      } catch (err) {
        return body;
      }
    }
  }
});

// node_modules/get-it/lib-node/middleware/headers.js
var require_headers = __commonJS({
  "node_modules/get-it/lib-node/middleware/headers.js"(exports, module2) {
    init_shims();
    "use strict";
    var objectAssign = require_object_assign();
    module2.exports = function(headers) {
      let opts = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      return {
        processOptions: (options2) => {
          const existing = options2.headers || {};
          options2.headers = opts.override ? objectAssign({}, existing, headers) : objectAssign({}, headers, existing);
          return options2;
        }
      };
    };
  }
});

// node_modules/@sanity/client/package.json
var require_package = __commonJS({
  "node_modules/@sanity/client/package.json"(exports, module2) {
    module2.exports = {
      name: "@sanity/client",
      version: "2.19.0",
      description: "Client for retrieving data from Sanity",
      main: "lib/sanityClient.js",
      umd: "umd/sanityClient.min.js",
      unpkg: "umd/sanityClient.min.js",
      types: "./sanityClient.d.ts",
      scripts: {
        analyze: "NODE_ENV=production BROWSERIFY_ENV=build DEBUG='' browserify --full-paths -t envify -g uglifyify lib/sanityClient.js --standalone=SanityClient | discify --open",
        browserify: "NODE_ENV=production BROWSERIFY_ENV=build DEBUG='' browserify -t envify -g uglifyify lib/sanityClient.js -o umd/sanityClient.js --standalone=SanityClient",
        build: "babel src --copy-files --out-dir lib && npm run browserify && npm run minify && npm run size",
        size: "node -r @babel/register src/scripts/print-bundle-size",
        clean: "rimraf lib coverage .nyc_output umd/*.js",
        coverage: "DEBUG=sanity NODE_ENV=test nyc --reporter=html --reporter=lcov --reporter=text npm test",
        minify: "terser -c -m -- umd/sanityClient.js > umd/sanityClient.min.js",
        prepublishOnly: "npm run build",
        test: "NODE_ENV=test tape -r @babel/register test/*.test.js"
      },
      browser: {
        "./src/http/nodeMiddleware.js": "./src/http/browserMiddleware.js",
        "./lib/http/nodeMiddleware.js": "./lib/http/browserMiddleware.js"
      },
      dependencies: {
        "@sanity/eventsource": "2.14.0",
        "@sanity/generate-help-url": "2.18.0",
        "@sanity/observable": "2.0.9",
        "deep-assign": "^2.0.0",
        "get-it": "^5.0.3",
        "make-error": "^1.3.0",
        "object-assign": "^4.1.1"
      },
      devDependencies: {
        "@babel/cli": "^7.11.6",
        "@babel/core": "^7.11.6",
        "@babel/preset-env": "^7.11.5",
        boxen: "^4.1.0",
        browserify: "^14.3.0",
        chalk: "^2.4.2",
        disc: "^1.3.2",
        envify: "^4.0.0",
        "gzip-size": "^3.0.0",
        "hard-rejection": "^2.1.0",
        nock: "^9.0.5",
        nyc: "^11.0.3",
        "pretty-bytes": "^4.0.2",
        rimraf: "^2.7.1",
        rxjs: "^6.5.3",
        "sse-channel": "^2.0.6",
        tape: "^4.8.0",
        terser: "^5.7.2",
        uglifyify: "^5.0.1",
        xtend: "4.0.2"
      },
      repository: {
        type: "git",
        url: "git+https://github.com/sanity-io/sanity.git",
        directory: "packages/@sanity/client"
      },
      keywords: [
        "sanity",
        "cms",
        "headless",
        "realtime",
        "content",
        "client",
        "fetch",
        "api",
        "gradient"
      ],
      author: "Sanity.io <hello@sanity.io>",
      license: "MIT",
      bugs: {
        url: "https://github.com/sanity-io/sanity/issues"
      },
      homepage: "https://www.sanity.io/",
      nyc: {
        include: [
          "src/**/*.js"
        ],
        require: [
          "@babel/register"
        ],
        sourceMap: false
      },
      gitHead: "1ff5ac5a90d72596c44eb8368e7ed22c85923991"
    };
  }
});

// node_modules/@sanity/client/lib/http/nodeMiddleware.js
var require_nodeMiddleware = __commonJS({
  "node_modules/@sanity/client/lib/http/nodeMiddleware.js"(exports, module2) {
    init_shims();
    "use strict";
    var retry = require_retry();
    var debug = require_debug3();
    var headers = require_headers();
    var pkg = require_package();
    var middleware = [debug({
      verbose: true,
      namespace: "sanity:client"
    }), headers({
      "User-Agent": "".concat(pkg.name, " ").concat(pkg.version)
    }), retry({
      maxRetries: 3
    })];
    module2.exports = middleware;
  }
});

// node_modules/@sanity/client/lib/http/request.js
var require_request2 = __commonJS({
  "node_modules/@sanity/client/lib/http/request.js"(exports, module2) {
    init_shims();
    "use strict";
    var getIt = require_get_it();
    var assign = require_object_assign();
    var observable = require_observable2();
    var jsonRequest = require_jsonRequest();
    var jsonResponse = require_jsonResponse();
    var progress = require_progress();
    var Observable = require_minimal();
    var _require = require_errors();
    var ClientError = _require.ClientError;
    var ServerError = _require.ServerError;
    var httpError = {
      onResponse: function onResponse(res) {
        if (res.statusCode >= 500) {
          throw new ServerError(res);
        } else if (res.statusCode >= 400) {
          throw new ClientError(res);
        }
        return res;
      }
    };
    var printWarnings = {
      onResponse: function onResponse(res) {
        var warn = res.headers["x-sanity-warning"];
        var warnings = Array.isArray(warn) ? warn : [warn];
        warnings.filter(Boolean).forEach(function(msg) {
          return console.warn(msg);
        });
        return res;
      }
    };
    var envSpecific = require_nodeMiddleware();
    var middleware = envSpecific.concat([printWarnings, jsonRequest(), jsonResponse(), progress(), httpError, observable({
      implementation: Observable
    })]);
    var request = getIt(middleware);
    function httpRequest(options2) {
      var requester = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : request;
      return requester(assign({
        maxRedirects: 0
      }, options2));
    }
    httpRequest.defaultRequester = request;
    httpRequest.ClientError = ClientError;
    httpRequest.ServerError = ServerError;
    module2.exports = httpRequest;
  }
});

// node_modules/@sanity/client/lib/http/requestOptions.js
var require_requestOptions = __commonJS({
  "node_modules/@sanity/client/lib/http/requestOptions.js"(exports, module2) {
    init_shims();
    "use strict";
    var assign = require_object_assign();
    var projectHeader = "X-Sanity-Project-ID";
    module2.exports = function(config) {
      var overrides = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      var headers = {};
      var token = overrides.token || config.token;
      if (token) {
        headers.Authorization = "Bearer ".concat(token);
      }
      if (!overrides.useGlobalApi && !config.useProjectHostname && config.projectId) {
        headers[projectHeader] = config.projectId;
      }
      var withCredentials = Boolean(typeof overrides.withCredentials === "undefined" ? config.token || config.withCredentials : overrides.withCredentials);
      var timeout = typeof overrides.timeout === "undefined" ? config.timeout : overrides.timeout;
      return assign({}, overrides, {
        headers: assign({}, headers, overrides.headers || {}),
        timeout: typeof timeout === "undefined" ? 5 * 60 * 1e3 : timeout,
        proxy: overrides.proxy || config.proxy,
        json: true,
        withCredentials
      });
    };
  }
});

// node_modules/@sanity/client/lib/warnings.js
var require_warnings = __commonJS({
  "node_modules/@sanity/client/lib/warnings.js"(exports) {
    init_shims();
    "use strict";
    var generateHelpUrl = require_generate_help_url();
    var once = require_once();
    var createWarningPrinter = function createWarningPrinter2(message) {
      return once(function() {
        var _console;
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        return (_console = console).warn.apply(_console, [message.join(" ")].concat(args));
      });
    };
    exports.printCdnWarning = createWarningPrinter(["You are not using the Sanity CDN. That means your data is always fresh, but the CDN is faster and", "cheaper. Think about it! For more info, see ".concat(generateHelpUrl("js-client-cdn-configuration"), "."), "To hide this warning, please set the `useCdn` option to either `true` or `false` when creating", "the client."]);
    exports.printBrowserTokenWarning = createWarningPrinter(["You have configured Sanity client to use a token in the browser. This may cause unintentional security issues.", "See ".concat(generateHelpUrl("js-client-browser-token"), " for more information and how to hide this warning.")]);
    exports.printCdnTokenWarning = createWarningPrinter(["You have set `useCdn` to `true` while also specifying a token. This is usually not what you", "want. The CDN cannot be used with an authorization token, since private data cannot be cached.", "See ".concat(generateHelpUrl("js-client-usecdn-token"), " for more information.")]);
    exports.printNoApiVersionSpecifiedWarning = createWarningPrinter(["Using the Sanity client without specifying an API version is deprecated.", "See ".concat(generateHelpUrl("js-client-api-version"))]);
  }
});

// node_modules/@sanity/client/lib/config.js
var require_config2 = __commonJS({
  "node_modules/@sanity/client/lib/config.js"(exports) {
    init_shims();
    "use strict";
    var generateHelpUrl = require_generate_help_url();
    var assign = require_object_assign();
    var validate = require_validators();
    var warnings = require_warnings();
    var defaultCdnHost = "apicdn.sanity.io";
    var defaultConfig = {
      apiHost: "https://api.sanity.io",
      apiVersion: "1",
      useProjectHostname: true,
      gradientMode: false,
      isPromiseAPI: true
    };
    var LOCALHOSTS = ["localhost", "127.0.0.1", "0.0.0.0"];
    var isLocal = function isLocal2(host) {
      return LOCALHOSTS.indexOf(host) !== -1;
    };
    exports.defaultConfig = defaultConfig;
    exports.initConfig = function(config, prevConfig) {
      var specifiedConfig = assign({}, prevConfig, config);
      if (!specifiedConfig.apiVersion) {
        warnings.printNoApiVersionSpecifiedWarning();
      }
      var newConfig = assign({}, defaultConfig, specifiedConfig);
      var gradientMode = newConfig.gradientMode;
      var projectBased = !gradientMode && newConfig.useProjectHostname;
      if (typeof Promise === "undefined") {
        var helpUrl = generateHelpUrl("js-client-promise-polyfill");
        throw new Error("No native Promise-implementation found, polyfill needed - see ".concat(helpUrl));
      }
      if (gradientMode && !newConfig.namespace) {
        throw new Error("Configuration must contain `namespace` when running in gradient mode");
      }
      if (projectBased && !newConfig.projectId) {
        throw new Error("Configuration must contain `projectId`");
      }
      var isBrowser = typeof window !== "undefined" && window.location && window.location.hostname;
      var isLocalhost = isBrowser && isLocal(window.location.hostname);
      if (isBrowser && isLocalhost && newConfig.token && newConfig.ignoreBrowserTokenWarning !== true) {
        warnings.printBrowserTokenWarning();
      } else if ((!isBrowser || isLocalhost) && newConfig.useCdn && newConfig.token) {
        warnings.printCdnTokenWarning();
      } else if (typeof newConfig.useCdn === "undefined") {
        warnings.printCdnWarning();
      }
      if (projectBased) {
        validate.projectId(newConfig.projectId);
      }
      if (!gradientMode && newConfig.dataset) {
        validate.dataset(newConfig.dataset, newConfig.gradientMode);
      }
      if ("requestTagPrefix" in newConfig) {
        newConfig.requestTagPrefix = newConfig.requestTagPrefix ? validate.requestTag(newConfig.requestTagPrefix).replace(/\.+$/, "") : void 0;
      }
      newConfig.apiVersion = "".concat(newConfig.apiVersion).replace(/^v/, "");
      newConfig.isDefaultApi = newConfig.apiHost === defaultConfig.apiHost;
      newConfig.useCdn = Boolean(newConfig.useCdn) && !newConfig.token && !newConfig.withCredentials;
      exports.validateApiVersion(newConfig.apiVersion);
      if (newConfig.gradientMode) {
        newConfig.url = newConfig.apiHost;
        newConfig.cdnUrl = newConfig.apiHost;
      } else {
        var hostParts = newConfig.apiHost.split("://", 2);
        var protocol = hostParts[0];
        var host = hostParts[1];
        var cdnHost = newConfig.isDefaultApi ? defaultCdnHost : host;
        if (newConfig.useProjectHostname) {
          newConfig.url = "".concat(protocol, "://").concat(newConfig.projectId, ".").concat(host, "/v").concat(newConfig.apiVersion);
          newConfig.cdnUrl = "".concat(protocol, "://").concat(newConfig.projectId, ".").concat(cdnHost, "/v").concat(newConfig.apiVersion);
        } else {
          newConfig.url = "".concat(newConfig.apiHost, "/v").concat(newConfig.apiVersion);
          newConfig.cdnUrl = newConfig.url;
        }
      }
      return newConfig;
    };
    exports.validateApiVersion = function validateApiVersion(apiVersion) {
      if (apiVersion === "1" || apiVersion === "X") {
        return;
      }
      var apiDate = new Date(apiVersion);
      var apiVersionValid = /^\d{4}-\d{2}-\d{2}$/.test(apiVersion) && apiDate instanceof Date && apiDate.getTime() > 0;
      if (!apiVersionValid) {
        throw new Error("Invalid API version string, expected `1` or date in format `YYYY-MM-DD`");
      }
    };
  }
});

// node_modules/@sanity/client/lib/sanityClient.js
var require_sanityClient = __commonJS({
  "node_modules/@sanity/client/lib/sanityClient.js"(exports, module2) {
    init_shims();
    "use strict";
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
          symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
          });
        }
        keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};
        if (i % 2) {
          ownKeys(Object(source), true).forEach(function(key) {
            _defineProperty(target, key, source[key]);
          });
        } else if (Object.getOwnPropertyDescriptors) {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        } else {
          ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
          });
        }
      }
      return target;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var assign = require_object_assign();
    var _require = require_filter2();
    var filter = _require.filter;
    var _require2 = require_map2();
    var map = _require2.map;
    var Patch = require_patch();
    var Transaction = require_transaction();
    var dataMethods = require_dataMethods();
    var DatasetsClient = require_datasetsClient();
    var ProjectsClient = require_projectsClient();
    var AssetsClient = require_assetsClient();
    var UsersClient = require_usersClient();
    var AuthClient = require_authClient();
    var httpRequest = require_request2();
    var getRequestOptions = require_requestOptions();
    var _require3 = require_config2();
    var defaultConfig = _require3.defaultConfig;
    var initConfig = _require3.initConfig;
    var validate = require_validators();
    var toPromise = function toPromise2(observable) {
      return observable.toPromise();
    };
    function SanityClient() {
      var config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : defaultConfig;
      if (!(this instanceof SanityClient)) {
        return new SanityClient(config);
      }
      this.config(config);
      this.assets = new AssetsClient(this);
      this.datasets = new DatasetsClient(this);
      this.projects = new ProjectsClient(this);
      this.users = new UsersClient(this);
      this.auth = new AuthClient(this);
      if (this.clientConfig.isPromiseAPI) {
        var observableConfig = assign({}, this.clientConfig, {
          isPromiseAPI: false
        });
        this.observable = new SanityClient(observableConfig);
      }
    }
    assign(SanityClient.prototype, dataMethods);
    assign(SanityClient.prototype, {
      clone: function clone2() {
        return new SanityClient(this.config());
      },
      config: function config(newConfig) {
        if (typeof newConfig === "undefined") {
          return assign({}, this.clientConfig);
        }
        if (this.observable) {
          var observableConfig = assign({}, newConfig, {
            isPromiseAPI: false
          });
          this.observable.config(observableConfig);
        }
        this.clientConfig = initConfig(newConfig, this.clientConfig || {});
        return this;
      },
      withConfig: function withConfig(newConfig) {
        return this.clone().config(newConfig);
      },
      getUrl: function getUrl(uri) {
        var canUseCdn = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
        var base2 = canUseCdn ? this.clientConfig.cdnUrl : this.clientConfig.url;
        return "".concat(base2, "/").concat(uri.replace(/^\//, ""));
      },
      isPromiseAPI: function isPromiseAPI() {
        return this.clientConfig.isPromiseAPI;
      },
      _requestObservable: function _requestObservable(options2) {
        var uri = options2.url || options2.uri;
        var canUseCdn = this.clientConfig.useCdn && ["GET", "HEAD"].indexOf(options2.method || "GET") >= 0 && uri.indexOf("/data/") === 0;
        var tag = options2.tag && this.clientConfig.requestTagPrefix ? [this.clientConfig.requestTagPrefix, options2.tag].join(".") : options2.tag || this.clientConfig.requestTagPrefix;
        if (tag) {
          options2.query = _objectSpread({
            tag: validate.requestTag(tag)
          }, options2.query);
        }
        var reqOptions = getRequestOptions(this.clientConfig, assign({}, options2, {
          url: this.getUrl(uri, canUseCdn)
        }));
        return httpRequest(reqOptions, this.clientConfig.requester);
      },
      request: function request(options2) {
        var observable = this._requestObservable(options2).pipe(filter(function(event) {
          return event.type === "response";
        }), map(function(event) {
          return event.body;
        }));
        return this.isPromiseAPI() ? toPromise(observable) : observable;
      }
    });
    SanityClient.Patch = Patch;
    SanityClient.Transaction = Transaction;
    SanityClient.ClientError = httpRequest.ClientError;
    SanityClient.ServerError = httpRequest.ServerError;
    SanityClient.requester = httpRequest.defaultRequester;
    module2.exports = SanityClient;
  }
});

// node_modules/browser-split/index.js
var require_browser_split = __commonJS({
  "node_modules/browser-split/index.js"(exports, module2) {
    init_shims();
    module2.exports = function split(undef) {
      var nativeSplit = String.prototype.split, compliantExecNpcg = /()??/.exec("")[1] === undef, self2;
      self2 = function(str, separator, limit) {
        if (Object.prototype.toString.call(separator) !== "[object RegExp]") {
          return nativeSplit.call(str, separator, limit);
        }
        var output = [], flags = (separator.ignoreCase ? "i" : "") + (separator.multiline ? "m" : "") + (separator.extended ? "x" : "") + (separator.sticky ? "y" : ""), lastLastIndex = 0, separator = new RegExp(separator.source, flags + "g"), separator2, match, lastIndex, lastLength;
        str += "";
        if (!compliantExecNpcg) {
          separator2 = new RegExp("^" + separator.source + "$(?!\\s)", flags);
        }
        limit = limit === undef ? -1 >>> 0 : limit >>> 0;
        while (match = separator.exec(str)) {
          lastIndex = match.index + match[0].length;
          if (lastIndex > lastLastIndex) {
            output.push(str.slice(lastLastIndex, match.index));
            if (!compliantExecNpcg && match.length > 1) {
              match[0].replace(separator2, function() {
                for (var i = 1; i < arguments.length - 2; i++) {
                  if (arguments[i] === undef) {
                    match[i] = undef;
                  }
                }
              });
            }
            if (match.length > 1 && match.index < str.length) {
              Array.prototype.push.apply(output, match.slice(1));
            }
            lastLength = match[0].length;
            lastLastIndex = lastIndex;
            if (output.length >= limit) {
              break;
            }
          }
          if (separator.lastIndex === match.index) {
            separator.lastIndex++;
          }
        }
        if (lastLastIndex === str.length) {
          if (lastLength || !separator.test("")) {
            output.push("");
          }
        } else {
          output.push(str.slice(lastLastIndex));
        }
        return output.length > limit ? output.slice(0, limit) : output;
      };
      return self2;
    }();
  }
});

// node_modules/indexof/index.js
var require_indexof = __commonJS({
  "node_modules/indexof/index.js"(exports, module2) {
    init_shims();
    var indexOf = [].indexOf;
    module2.exports = function(arr, obj) {
      if (indexOf)
        return arr.indexOf(obj);
      for (var i = 0; i < arr.length; ++i) {
        if (arr[i] === obj)
          return i;
      }
      return -1;
    };
  }
});

// node_modules/class-list/index.js
var require_class_list = __commonJS({
  "node_modules/class-list/index.js"(exports, module2) {
    init_shims();
    var indexof = require_indexof();
    module2.exports = ClassList;
    function ClassList(elem) {
      var cl = elem.classList;
      if (cl) {
        return cl;
      }
      var classList = {
        add,
        remove,
        contains,
        toggle,
        toString: $toString,
        length: 0,
        item
      };
      return classList;
      function add(token) {
        var list = getTokens();
        if (indexof(list, token) > -1) {
          return;
        }
        list.push(token);
        setTokens(list);
      }
      function remove(token) {
        var list = getTokens(), index2 = indexof(list, token);
        if (index2 === -1) {
          return;
        }
        list.splice(index2, 1);
        setTokens(list);
      }
      function contains(token) {
        return indexof(getTokens(), token) > -1;
      }
      function toggle(token) {
        if (contains(token)) {
          remove(token);
          return false;
        } else {
          add(token);
          return true;
        }
      }
      function $toString() {
        return elem.className;
      }
      function item(index2) {
        var tokens = getTokens();
        return tokens[index2] || null;
      }
      function getTokens() {
        var className = elem.className;
        return filter(className.split(" "), isTruthy);
      }
      function setTokens(list) {
        var length = list.length;
        elem.className = list.join(" ");
        classList.length = length;
        for (var i = 0; i < list.length; i++) {
          classList[i] = list[i];
        }
        delete list[length];
      }
    }
    function filter(arr, fn) {
      var ret = [];
      for (var i = 0; i < arr.length; i++) {
        if (fn(arr[i]))
          ret.push(arr[i]);
      }
      return ret;
    }
    function isTruthy(value) {
      return !!value;
    }
  }
});

// node_modules/html-element/html-attributes.js
var require_html_attributes = __commonJS({
  "node_modules/html-element/html-attributes.js"(exports, module2) {
    init_shims();
    var PROPS_TO_ATTRS = {
      "className": "class",
      "htmlFor": "for"
    };
    var HTML_ATTRIBUTES = {
      "accept": new Set([
        "form",
        "input"
      ]),
      "accept-charset": new Set([
        "form"
      ]),
      "accesskey": "GLOBAL",
      "action": new Set([
        "form"
      ]),
      "align": new Set([
        "applet",
        "caption",
        "col",
        "colgroup",
        "hr",
        "iframe",
        "img",
        "table",
        "tbody",
        "td",
        "tfoot",
        "th",
        "thead",
        "tr"
      ]),
      "alt": new Set([
        "applet",
        "area",
        "img",
        "input"
      ]),
      "async": new Set([
        "script"
      ]),
      "autocomplete": new Set([
        "form",
        "input"
      ]),
      "autofocus": new Set([
        "button",
        "input",
        "keygen",
        "select",
        "textarea"
      ]),
      "autoplay": new Set([
        "audio",
        "video"
      ]),
      "autosave": new Set([
        "input"
      ]),
      "bgcolor": new Set([
        "body",
        "col",
        "colgroup",
        "marquee",
        "table",
        "tbody",
        "tfoot",
        "td",
        "th",
        "tr"
      ]),
      "border": new Set([
        "img",
        "object",
        "table"
      ]),
      "buffered": new Set([
        "audio",
        "video"
      ]),
      "challenge": new Set([
        "keygen"
      ]),
      "charset": new Set([
        "meta",
        "script"
      ]),
      "checked": new Set([
        "command",
        "input"
      ]),
      "cite": new Set([
        "blockquote",
        "del",
        "ins",
        "q"
      ]),
      "class": "GLOBAL",
      "code": new Set([
        "applet"
      ]),
      "codebase": new Set([
        "applet"
      ]),
      "color": new Set([
        "basefont",
        "font",
        "hr"
      ]),
      "cols": new Set([
        "textarea"
      ]),
      "colspan": new Set([
        "td",
        "th"
      ]),
      "content": new Set([
        "meta"
      ]),
      "contenteditable": "GLOBAL",
      "contextmenu": "GLOBAL",
      "controls": new Set([
        "audio",
        "video"
      ]),
      "coords": new Set([
        "area"
      ]),
      "data": new Set([
        "object"
      ]),
      "datetime": new Set([
        "del",
        "ins",
        "time"
      ]),
      "default": new Set([
        "track"
      ]),
      "defer": new Set([
        "script"
      ]),
      "dir": "GLOBAL",
      "dirname": new Set([
        "input",
        "textarea"
      ]),
      "disabled": new Set([
        "button",
        "command",
        "fieldset",
        "input",
        "keygen",
        "optgroup",
        "option",
        "select",
        "textarea"
      ]),
      "download": new Set([
        "a",
        "area"
      ]),
      "draggable": "GLOBAL",
      "dropzone": "GLOBAL",
      "enctype": new Set([
        "form"
      ]),
      "for": new Set([
        "label",
        "output"
      ]),
      "form": new Set([
        "button",
        "fieldset",
        "input",
        "keygen",
        "label",
        "meter",
        "object",
        "output",
        "progress",
        "select",
        "textarea"
      ]),
      "formaction": new Set([
        "input",
        "button"
      ]),
      "headers": new Set([
        "td",
        "th"
      ]),
      "height": new Set([
        "canvas",
        "embed",
        "iframe",
        "img",
        "input",
        "object",
        "video"
      ]),
      "hidden": "GLOBAL",
      "high": new Set([
        "meter"
      ]),
      "href": new Set([
        "a",
        "area",
        "base",
        "link"
      ]),
      "hreflang": new Set([
        "a",
        "area",
        "link"
      ]),
      "http-equiv": new Set([
        "meta"
      ]),
      "icon": new Set([
        "command"
      ]),
      "id": "GLOBAL",
      "ismap": new Set([
        "img"
      ]),
      "itemprop": "GLOBAL",
      "keytype": new Set([
        "keygen"
      ]),
      "kind": new Set([
        "track"
      ]),
      "label": new Set([
        "track"
      ]),
      "lang": "GLOBAL",
      "language": new Set([
        "script"
      ]),
      "list": new Set([
        "input"
      ]),
      "loop": new Set([
        "audio",
        "bgsound",
        "marquee",
        "video"
      ]),
      "low": new Set([
        "meter"
      ]),
      "manifest": new Set([
        "html"
      ]),
      "max": new Set([
        "input",
        "meter",
        "progress"
      ]),
      "maxlength": new Set([
        "input",
        "textarea"
      ]),
      "maxlength": new Set([
        "input",
        "textarea"
      ]),
      "media": new Set([
        "a",
        "area",
        "link",
        "source",
        "style"
      ]),
      "method": new Set([
        "form"
      ]),
      "min": new Set([
        "input",
        "meter"
      ]),
      "multiple": new Set([
        "input",
        "select"
      ]),
      "muted": new Set([
        "video"
      ]),
      "name": new Set([
        "button",
        "form",
        "fieldset",
        "iframe",
        "input",
        "keygen",
        "object",
        "output",
        "select",
        "textarea",
        "map",
        "meta",
        "param"
      ]),
      "novalidate": new Set([
        "form"
      ]),
      "open": new Set([
        "details"
      ]),
      "optimum": new Set([
        "meter"
      ]),
      "pattern": new Set([
        "input"
      ]),
      "ping": new Set([
        "a",
        "area"
      ]),
      "placeholder": new Set([
        "input",
        "textarea"
      ]),
      "poster": new Set([
        "video"
      ]),
      "preload": new Set([
        "audio",
        "video"
      ]),
      "radiogroup": new Set([
        "command"
      ]),
      "readonly": new Set([
        "input",
        "textarea"
      ]),
      "rel": new Set([
        "a",
        "area",
        "link"
      ]),
      "required": new Set([
        "input",
        "select",
        "textarea"
      ]),
      "reversed": new Set([
        "ol"
      ]),
      "rows": new Set([
        "textarea"
      ]),
      "rowspan": new Set([
        "td",
        "th"
      ]),
      "sandbox": new Set([
        "iframe"
      ]),
      "scope": new Set([
        "th"
      ]),
      "scoped": new Set([
        "style"
      ]),
      "seamless": new Set([
        "iframe"
      ]),
      "selected": new Set([
        "option"
      ]),
      "shape": new Set([
        "a",
        "area"
      ]),
      "size": new Set([
        "input",
        "select"
      ]),
      "sizes": new Set([
        "img",
        "link",
        "source"
      ]),
      "span": new Set([
        "col",
        "colgroup"
      ]),
      "spellcheck": "GLOBAL",
      "src": new Set([
        "audio",
        "embed",
        "iframe",
        "img",
        "input",
        "script",
        "source",
        "track",
        "video"
      ]),
      "srcdoc": new Set([
        "iframe"
      ]),
      "srclang": new Set([
        "track"
      ]),
      "srcset": new Set([
        "img"
      ]),
      "start": new Set([
        "ol"
      ]),
      "step": new Set([
        "input"
      ]),
      "style": "GLOBAL",
      "summary": new Set([
        "table"
      ]),
      "tabindex": "GLOBAL",
      "target": new Set([
        "a",
        "area",
        "base",
        "form"
      ]),
      "title": "GLOBAL",
      "type": new Set([
        "button",
        "input",
        "command",
        "embed",
        "object",
        "script",
        "source",
        "style",
        "menu"
      ]),
      "usemap": new Set([
        "img",
        "input",
        "object"
      ]),
      "value": new Set([
        "button",
        "option",
        "input",
        "li",
        "meter",
        "progress",
        "param"
      ]),
      "width": new Set([
        "canvas",
        "embed",
        "iframe",
        "img",
        "input",
        "object",
        "video"
      ]),
      "wrap": new Set([
        "textarea"
      ])
    };
    function isStandardAttribute(attrName, tagName) {
      tagName = tagName.toLowerCase();
      var attr = HTML_ATTRIBUTES[attrName.toLowerCase()];
      return !!attr && (attr === "GLOBAL" || attr.has(tagName));
    }
    function propToAttr(prop) {
      return PROPS_TO_ATTRS[prop] || prop;
    }
    module2.exports = {
      isStandardAttribute,
      propToAttr
    };
  }
});

// node_modules/html-element/index.js
var require_html_element = __commonJS({
  "node_modules/html-element/index.js"(exports, module2) {
    init_shims();
    var ClassList = require_class_list();
    var htmlAttributes = require_html_attributes();
    function Event(type, data) {
      this.type = type;
      this.target = null;
      Object.keys(data || {}).forEach(function(attr) {
        this[attr] = data[attr];
      }, this);
    }
    Event.prototype.preventDefault = function() {
    };
    Event.prototype.stopPropagation = function() {
    };
    Event.prototype.stopImmediatePropagation = function() {
    };
    function addEventListener(eventType, listener) {
      this._eventListeners = this._eventListeners || {};
      this._eventListeners[eventType] = this._eventListeners[eventType] || [];
      var listeners = this._eventListeners[eventType];
      if (listeners.indexOf(listener) === -1) {
        listeners.push(listener);
      }
    }
    function removeEventListener(eventType, listener) {
      var listeners = this._eventListeners && this._eventListeners[eventType];
      if (listeners) {
        var index2 = listeners.indexOf(listener);
        if (index2 !== -1) {
          listeners.splice(index2, 1);
        }
      }
    }
    function dispatchEvent(event) {
      event.target = this;
      var listeners = this._eventListeners && this._eventListeners[event.type];
      if (listeners) {
        listeners.forEach(function(listener) {
          listener(event);
        });
      }
      return true;
    }
    function Document() {
    }
    Document.prototype.createTextNode = function(v) {
      var n = new Text2();
      n.textContent = v;
      n.nodeName = "#text";
      n.nodeType = 3;
      return n;
    };
    Document.prototype.createElement = function(nodeName) {
      var el = new Element2();
      el.nodeName = el.tagName = nodeName;
      return el;
    };
    Document.prototype.createComment = function(data) {
      var el = new Comment();
      el.data = data;
      return el;
    };
    Document.prototype.addEventListener = addEventListener;
    Document.prototype.removeEventListener = removeEventListener;
    Document.prototype.dispatchEvent = dispatchEvent;
    function Node() {
    }
    Text2.prototype = new Node();
    Element2.prototype = new Node();
    Comment.prototype = new Node();
    function Style(el) {
      this.el = el;
      this.styles = [];
    }
    Style.prototype.setProperty = function(n, v) {
      this.el._setProperty(this.styles, { name: n, value: v });
    };
    Style.prototype.getProperty = function(n) {
      return this.el._getProperty(this.styles, n);
    };
    Style.prototype.__defineGetter__("cssText", function() {
      var stylified = "";
      this.styles.forEach(function(s2) {
        stylified += s2.name + ":" + s2.value + ";";
      });
      return stylified;
    });
    Style.prototype.__defineSetter__("cssText", function(v) {
      this.styles.length = 0;
      v.split(";").forEach(function(part) {
        var splitPoint = part.indexOf(":");
        if (splitPoint) {
          var key = part.slice(0, splitPoint).trim();
          var value = part.slice(splitPoint + 1).trim();
          this.setProperty(key, value);
        }
      }, this);
    });
    function Attribute(name, value) {
      if (name) {
        this.name = name;
        this.value = value ? value : "";
      }
    }
    function Element2() {
      var self2 = this;
      this.style = new Style(this);
      this.classList = ClassList(this);
      this.childNodes = [];
      this.attributes = [];
      this.dataset = {};
      this.className = "";
      this._setProperty = function(arr, obj, key, val) {
        var p = self2._getProperty(arr, key);
        if (p) {
          p.value = String(val);
          return;
        }
        arr.push(typeof obj === "function" ? new obj(key.toLowerCase(), String(val)) : obj);
      };
      this._getProperty = function(arr, key) {
        if (!key)
          return;
        key = key.toLowerCase();
        for (var i = 0; i < arr.length; i++) {
          if (key === arr[i].name)
            return arr[i];
        }
      };
    }
    Element2.prototype.nodeType = 1;
    Element2.prototype.appendChild = function(child) {
      child.parentElement = this;
      this.childNodes.push(child);
      return child;
    };
    Element2.prototype.setAttribute = function(n, v) {
      if (n === "style") {
        this.style.cssText = v;
      } else {
        this._setProperty(this.attributes, Attribute, n, v);
      }
    };
    Element2.prototype.getAttribute = function(n) {
      if (n === "style") {
        return this.style.cssText;
      } else {
        var result = this._getProperty(this.attributes, n);
        return typeof result !== "undefined" ? result.value : null;
      }
    };
    Element2.prototype.removeAttribute = function(n) {
      if (n === "class") {
        delete this.className;
      } else {
        for (var i = 0, len = this.attributes.length; i < len; i++) {
          if (this.attributes[i].name === n) {
            this.attributes.splice(i, 1);
            break;
          }
        }
      }
    };
    Element2.prototype.replaceChild = function(newChild, oldChild) {
      var self2 = this;
      var replaced = false;
      this.childNodes.forEach(function(child, index2) {
        if (child === oldChild) {
          self2.childNodes[index2] = newChild;
          newChild.parentElement = this;
          replaced = true;
        }
      });
      if (replaced)
        return oldChild;
    };
    Element2.prototype.removeChild = function(rChild) {
      var self2 = this;
      var removed = true;
      this.childNodes.forEach(function(child, index2) {
        if (child === rChild) {
          self2.childNodes.splice(index2, 1);
          rChild.parentElement = null;
          removed = true;
        }
      });
      if (removed)
        return rChild;
    };
    Element2.prototype.insertBefore = function(newChild, existingChild) {
      var childNodes = this.childNodes;
      if (existingChild === null) {
        childNodes.push(newChild);
      } else {
        for (var i = 0, len = childNodes.length; i < len; i++) {
          var child = childNodes[i];
          if (child === existingChild) {
            i === 0 ? childNodes.unshift(newChild) : childNodes.splice(i, 0, newChild);
            break;
          }
        }
      }
      newChild.parentElement = this;
      return newChild;
    };
    Element2.prototype.addEventListener = addEventListener;
    Element2.prototype.removeEventListener = removeEventListener;
    Element2.prototype.dispatchEvent = dispatchEvent;
    Element2.prototype.insertAdjacentHTML = function(position, text) {
    };
    Element2.prototype.__defineGetter__("innerHTML", function() {
      var s2 = this.childNodes.html || "";
      this.childNodes.forEach(function(e) {
        s2 += e.outerHTML || e.textContent;
      });
      return s2;
    });
    Element2.prototype.__defineSetter__("innerHTML", function(v) {
      this.childNodes.length = 0;
      this.childNodes.html = v;
    });
    Element2.prototype.__defineGetter__("outerHTML", function() {
      var a = [], self2 = this;
      var VOID_ELEMENTS = {
        AREA: true,
        BASE: true,
        BR: true,
        COL: true,
        EMBED: true,
        HR: true,
        IMG: true,
        INPUT: true,
        KEYGEN: true,
        LINK: true,
        META: true,
        PARAM: true,
        SOURCE: true,
        TRACK: true,
        WBR: true
      };
      function _stringify(arr) {
        var attr = [], value;
        arr.forEach(function(a2) {
          value = a2.name != "style" ? a2.value : self2.style.cssText;
          attr.push(a2.name + '="' + escapeAttribute(value) + '"');
        });
        return attr.length ? " " + attr.join(" ") : "";
      }
      function _dataify(data) {
        var attr = [], value;
        Object.keys(data).forEach(function(name) {
          attr.push("data-" + name + '="' + escapeAttribute(data[name]) + '"');
        });
        return attr.length ? " " + attr.join(" ") : "";
      }
      function _propertify() {
        var props = [];
        for (var key in self2) {
          var attrName = htmlAttributes.propToAttr(key);
          if (self2.hasOwnProperty(key) && ["string", "boolean", "number"].indexOf(typeof self2[key]) !== -1 && htmlAttributes.isStandardAttribute(attrName, self2.nodeName) && _shouldOutputProp(key, attrName)) {
            props.push({ name: attrName, value: self2[key] });
          }
        }
        return props ? _stringify(props) : "";
      }
      function _shouldOutputProp(prop, attr) {
        if (self2.getAttribute(attr)) {
          return false;
        } else {
          if (prop === "className" && !self2[prop]) {
            return false;
          }
        }
        return true;
      }
      var attrs = this.style.cssText ? this.attributes.concat([{ name: "style" }]) : this.attributes;
      a.push("<" + this.nodeName + _propertify() + _stringify(attrs) + _dataify(this.dataset) + ">");
      if (!VOID_ELEMENTS[this.nodeName.toUpperCase()]) {
        a.push(this.innerHTML);
        a.push("</" + this.nodeName + ">");
      }
      return a.join("");
    });
    Element2.prototype.__defineGetter__("textContent", function() {
      var s2 = "";
      this.childNodes.forEach(function(e) {
        s2 += e.textContent;
      });
      return s2;
    });
    Element2.prototype.__defineSetter__("textContent", function(v) {
      var textNode = new Text2();
      textNode.textContent = v;
      this.childNodes = [textNode];
      return v;
    });
    function escapeHTML(s2) {
      return String(s2).replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
    }
    function escapeAttribute(s2) {
      return escapeHTML(s2).replace(/"/g, "&quot;");
    }
    Element2.prototype.nodeValue = null;
    function Text2() {
    }
    Text2.prototype.nodeType = 3;
    Text2.prototype.nodeName = "#text";
    Text2.prototype.__defineGetter__("textContent", function() {
      return escapeHTML(this.value || "");
    });
    Text2.prototype.__defineSetter__("textContent", function(v) {
      this.value = v;
    });
    Text2.prototype.__defineGetter__("nodeValue", function() {
      return escapeHTML(this.value || "");
    });
    Text2.prototype.__defineSetter__("nodeValue", function(v) {
      this.value = v;
    });
    Text2.prototype.__defineGetter__("length", function() {
      return (this.value || "").length;
    });
    Text2.prototype.replaceData = function(offset, length, str) {
      this.value = this.value.slice(0, offset) + str + this.value.slice(offset + length);
    };
    function Comment() {
    }
    Comment.prototype.nodeType = 8;
    Comment.prototype.nodeName = "#comment";
    Comment.prototype.__defineGetter__("data", function() {
      return this.value;
    });
    Comment.prototype.__defineSetter__("data", function(v) {
      this.value = v;
    });
    Comment.prototype.__defineGetter__("outerHTML", function() {
      return "<!--" + escapeHTML(this.value || "") + "-->";
    });
    Comment.prototype.__defineGetter__("nodeValue", function() {
      return escapeHTML(this.value || "");
    });
    Comment.prototype.__defineSetter__("nodeValue", function(v) {
      this.value = v;
    });
    function defineParentNode(obj) {
      obj.__defineGetter__("parentNode", function() {
        return this.parentElement;
      });
    }
    defineParentNode(Element2.prototype);
    defineParentNode(Comment.prototype);
    defineParentNode(Text2.prototype);
    defineParentNode(Node.prototype);
    module2.exports = {
      Document,
      Node,
      Element: Element2,
      Comment,
      Text: Text2,
      document: new Document(),
      Event,
      CustomEvent: Event
    };
  }
});

// node_modules/hyperscript/index.js
var require_hyperscript = __commonJS({
  "node_modules/hyperscript/index.js"(exports, module2) {
    init_shims();
    var split = require_browser_split();
    var ClassList = require_class_list();
    var w = typeof window === "undefined" ? require_html_element() : window;
    var document2 = w.document;
    var Text2 = w.Text;
    function context() {
      var cleanupFuncs = [];
      function h3() {
        var args = [].slice.call(arguments), e = null;
        function item(l) {
          var r;
          function parseClass(string) {
            var m = split(string, /([\.#]?[^\s#.]+)/);
            if (/^\.|#/.test(m[1]))
              e = document2.createElement("div");
            forEach(m, function(v2) {
              var s3 = v2.substring(1, v2.length);
              if (!v2)
                return;
              if (!e)
                e = document2.createElement(v2);
              else if (v2[0] === ".")
                ClassList(e).add(s3);
              else if (v2[0] === "#")
                e.setAttribute("id", s3);
            });
          }
          if (l == null)
            ;
          else if (typeof l === "string") {
            if (!e)
              parseClass(l);
            else
              e.appendChild(r = document2.createTextNode(l));
          } else if (typeof l === "number" || typeof l === "boolean" || l instanceof Date || l instanceof RegExp) {
            e.appendChild(r = document2.createTextNode(l.toString()));
          } else if (isArray(l))
            forEach(l, item);
          else if (isNode(l))
            e.appendChild(r = l);
          else if (l instanceof Text2)
            e.appendChild(r = l);
          else if (typeof l === "object") {
            for (var k in l) {
              if (typeof l[k] === "function") {
                if (/^on\w+/.test(k)) {
                  (function(k2, l2) {
                    if (e.addEventListener) {
                      e.addEventListener(k2.substring(2), l2[k2], false);
                      cleanupFuncs.push(function() {
                        e.removeEventListener(k2.substring(2), l2[k2], false);
                      });
                    } else {
                      e.attachEvent(k2, l2[k2]);
                      cleanupFuncs.push(function() {
                        e.detachEvent(k2, l2[k2]);
                      });
                    }
                  })(k, l);
                } else {
                  e[k] = l[k]();
                  cleanupFuncs.push(l[k](function(v2) {
                    e[k] = v2;
                  }));
                }
              } else if (k === "style") {
                if (typeof l[k] === "string") {
                  e.style.cssText = l[k];
                } else {
                  for (var s2 in l[k])
                    (function(s3, v2) {
                      if (typeof v2 === "function") {
                        e.style.setProperty(s3, v2());
                        cleanupFuncs.push(v2(function(val) {
                          e.style.setProperty(s3, val);
                        }));
                      } else
                        var match = l[k][s3].match(/(.*)\W+!important\W*$/);
                      if (match) {
                        e.style.setProperty(s3, match[1], "important");
                      } else {
                        e.style.setProperty(s3, l[k][s3]);
                      }
                    })(s2, l[k][s2]);
                }
              } else if (k === "attrs") {
                for (var v in l[k]) {
                  e.setAttribute(v, l[k][v]);
                }
              } else if (k.substr(0, 5) === "data-") {
                e.setAttribute(k, l[k]);
              } else {
                e[k] = l[k];
              }
            }
          } else if (typeof l === "function") {
            var v = l();
            e.appendChild(r = isNode(v) ? v : document2.createTextNode(v));
            cleanupFuncs.push(l(function(v2) {
              if (isNode(v2) && r.parentElement)
                r.parentElement.replaceChild(v2, r), r = v2;
              else
                r.textContent = v2;
            }));
          }
          return r;
        }
        while (args.length)
          item(args.shift());
        return e;
      }
      h3.cleanup = function() {
        for (var i = 0; i < cleanupFuncs.length; i++) {
          cleanupFuncs[i]();
        }
        cleanupFuncs.length = 0;
      };
      return h3;
    }
    var h2 = module2.exports = context();
    h2.context = context;
    function isNode(el) {
      return el && el.nodeName && el.nodeType;
    }
    function forEach(arr, fn) {
      if (arr.forEach)
        return arr.forEach(fn);
      for (var i = 0; i < arr.length; i++)
        fn(arr[i], i);
    }
    function isArray(arr) {
      return Object.prototype.toString.call(arr) == "[object Array]";
    }
  }
});

// node_modules/@sanity/block-content-to-hyperscript/node_modules/@sanity/generate-help-url/index.js
var require_generate_help_url2 = __commonJS({
  "node_modules/@sanity/block-content-to-hyperscript/node_modules/@sanity/generate-help-url/index.js"(exports, module2) {
    init_shims();
    var baseUrl = "https://docs.sanity.io/help/";
    module2.exports = function generateHelpUrl(slug) {
      return baseUrl + slug;
    };
  }
});

// node_modules/@sanity/block-content-to-hyperscript/node_modules/@sanity/image-url/lib/node/parseAssetId.js
var require_parseAssetId = __commonJS({
  "node_modules/@sanity/block-content-to-hyperscript/node_modules/@sanity/image-url/lib/node/parseAssetId.js"(exports) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var example = "image-Tb9Ew8CXIwaY6R1kjMvI0uRR-2000x3000-jpg";
    function parseAssetId(ref) {
      var _a = ref.split("-"), id = _a[1], dimensionString = _a[2], format3 = _a[3];
      if (!id || !dimensionString || !format3) {
        throw new Error("Malformed asset _ref '" + ref + `'. Expected an id like "` + example + '".');
      }
      var _b = dimensionString.split("x"), imgWidthStr = _b[0], imgHeightStr = _b[1];
      var width = +imgWidthStr;
      var height = +imgHeightStr;
      var isValidAssetId = isFinite(width) && isFinite(height);
      if (!isValidAssetId) {
        throw new Error("Malformed asset _ref '" + ref + `'. Expected an id like "` + example + '".');
      }
      return { id, width, height, format: format3 };
    }
    exports.default = parseAssetId;
  }
});

// node_modules/@sanity/block-content-to-hyperscript/node_modules/@sanity/image-url/lib/node/parseSource.js
var require_parseSource = __commonJS({
  "node_modules/@sanity/block-content-to-hyperscript/node_modules/@sanity/image-url/lib/node/parseSource.js"(exports) {
    init_shims();
    "use strict";
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s2, i = 1, n = arguments.length; i < n; i++) {
          s2 = arguments[i];
          for (var p in s2)
            if (Object.prototype.hasOwnProperty.call(s2, p))
              t[p] = s2[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var isRef = function(src2) {
      var source = src2;
      return source ? typeof source._ref === "string" : false;
    };
    var isAsset = function(src2) {
      var source = src2;
      return source ? typeof source._id === "string" : false;
    };
    var isAssetStub = function(src2) {
      var source = src2;
      return source && source.asset ? typeof source.asset.url === "string" : false;
    };
    function parseSource(source) {
      if (!source) {
        return null;
      }
      var image;
      if (typeof source === "string" && isUrl(source)) {
        image = {
          asset: { _ref: urlToId(source) }
        };
      } else if (typeof source === "string") {
        image = {
          asset: { _ref: source }
        };
      } else if (isRef(source)) {
        image = {
          asset: source
        };
      } else if (isAsset(source)) {
        image = {
          asset: {
            _ref: source._id || ""
          }
        };
      } else if (isAssetStub(source)) {
        image = {
          asset: {
            _ref: urlToId(source.asset.url)
          }
        };
      } else if (typeof source.asset === "object") {
        image = source;
      } else {
        return null;
      }
      var img = source;
      if (img.crop) {
        image.crop = img.crop;
      }
      if (img.hotspot) {
        image.hotspot = img.hotspot;
      }
      return applyDefaults(image);
    }
    exports.default = parseSource;
    function isUrl(url) {
      return /^https?:\/\//.test("" + url);
    }
    function urlToId(url) {
      var parts = url.split("/").slice(-1);
      return ("image-" + parts[0]).replace(/\.([a-z]+)$/, "-$1");
    }
    function applyDefaults(image) {
      if (image.crop && image.hotspot) {
        return image;
      }
      var result = __assign({}, image);
      if (!result.crop) {
        result.crop = {
          left: 0,
          top: 0,
          bottom: 0,
          right: 0
        };
      }
      if (!result.hotspot) {
        result.hotspot = {
          x: 0.5,
          y: 0.5,
          height: 1,
          width: 1
        };
      }
      return result;
    }
  }
});

// node_modules/@sanity/block-content-to-hyperscript/node_modules/@sanity/image-url/lib/node/urlForImage.js
var require_urlForImage = __commonJS({
  "node_modules/@sanity/block-content-to-hyperscript/node_modules/@sanity/image-url/lib/node/urlForImage.js"(exports) {
    init_shims();
    "use strict";
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s2, i = 1, n = arguments.length; i < n; i++) {
          s2 = arguments[i];
          for (var p in s2)
            if (Object.prototype.hasOwnProperty.call(s2, p))
              t[p] = s2[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var parseAssetId_1 = __importDefault(require_parseAssetId());
    var parseSource_1 = __importDefault(require_parseSource());
    exports.parseSource = parseSource_1.default;
    exports.SPEC_NAME_TO_URL_NAME_MAPPINGS = [
      ["width", "w"],
      ["height", "h"],
      ["format", "fm"],
      ["download", "dl"],
      ["blur", "blur"],
      ["sharpen", "sharp"],
      ["invert", "invert"],
      ["orientation", "or"],
      ["minHeight", "min-h"],
      ["maxHeight", "max-h"],
      ["minWidth", "min-w"],
      ["maxWidth", "max-w"],
      ["quality", "q"],
      ["fit", "fit"],
      ["crop", "crop"],
      ["saturation", "sat"],
      ["auto", "auto"],
      ["dpr", "dpr"],
      ["pad", "pad"]
    ];
    function urlForImage(options2) {
      var spec = __assign({}, options2 || {});
      var source = spec.source;
      delete spec.source;
      var image = parseSource_1.default(source);
      if (!image) {
        return null;
      }
      var id = image.asset._ref || image.asset._id || "";
      var asset = parseAssetId_1.default(id);
      var cropLeft = Math.round(image.crop.left * asset.width);
      var cropTop = Math.round(image.crop.top * asset.height);
      var crop = {
        left: cropLeft,
        top: cropTop,
        width: Math.round(asset.width - image.crop.right * asset.width - cropLeft),
        height: Math.round(asset.height - image.crop.bottom * asset.height - cropTop)
      };
      var hotSpotVerticalRadius = image.hotspot.height * asset.height / 2;
      var hotSpotHorizontalRadius = image.hotspot.width * asset.width / 2;
      var hotSpotCenterX = image.hotspot.x * asset.width;
      var hotSpotCenterY = image.hotspot.y * asset.height;
      var hotspot = {
        left: hotSpotCenterX - hotSpotHorizontalRadius,
        top: hotSpotCenterY - hotSpotVerticalRadius,
        right: hotSpotCenterX + hotSpotHorizontalRadius,
        bottom: hotSpotCenterY + hotSpotVerticalRadius
      };
      if (!(spec.rect || spec.focalPoint || spec.ignoreImageParams || spec.crop)) {
        spec = __assign(__assign({}, spec), fit({ crop, hotspot }, spec));
      }
      return specToImageUrl(__assign(__assign({}, spec), { asset }));
    }
    exports.default = urlForImage;
    function specToImageUrl(spec) {
      var cdnUrl = spec.baseUrl || "https://cdn.sanity.io";
      var filename = spec.asset.id + "-" + spec.asset.width + "x" + spec.asset.height + "." + spec.asset.format;
      var baseUrl = cdnUrl + "/images/" + spec.projectId + "/" + spec.dataset + "/" + filename;
      var params = [];
      if (spec.rect) {
        var _a = spec.rect, left = _a.left, top_1 = _a.top, width = _a.width, height = _a.height;
        var isEffectiveCrop = left !== 0 || top_1 !== 0 || height !== spec.asset.height || width !== spec.asset.width;
        if (isEffectiveCrop) {
          params.push("rect=" + left + "," + top_1 + "," + width + "," + height);
        }
      }
      if (spec.bg) {
        params.push("bg=" + spec.bg);
      }
      if (spec.focalPoint) {
        params.push("fp-x=" + spec.focalPoint.x);
        params.push("fp-y=" + spec.focalPoint.y);
      }
      var flip = [spec.flipHorizontal && "h", spec.flipVertical && "v"].filter(Boolean).join("");
      if (flip) {
        params.push("flip=" + flip);
      }
      exports.SPEC_NAME_TO_URL_NAME_MAPPINGS.forEach(function(mapping) {
        var specName = mapping[0], param = mapping[1];
        if (typeof spec[specName] !== "undefined") {
          params.push(param + "=" + encodeURIComponent(spec[specName]));
        } else if (typeof spec[param] !== "undefined") {
          params.push(param + "=" + encodeURIComponent(spec[param]));
        }
      });
      if (params.length === 0) {
        return baseUrl;
      }
      return baseUrl + "?" + params.join("&");
    }
    function fit(source, spec) {
      var cropRect;
      var imgWidth = spec.width;
      var imgHeight = spec.height;
      if (!(imgWidth && imgHeight)) {
        return { width: imgWidth, height: imgHeight, rect: source.crop };
      }
      var crop = source.crop;
      var hotspot = source.hotspot;
      var desiredAspectRatio = imgWidth / imgHeight;
      var cropAspectRatio = crop.width / crop.height;
      if (cropAspectRatio > desiredAspectRatio) {
        var height = crop.height;
        var width = height * desiredAspectRatio;
        var top_2 = crop.top;
        var hotspotXCenter = (hotspot.right - hotspot.left) / 2 + hotspot.left;
        var left = hotspotXCenter - width / 2;
        if (left < crop.left) {
          left = crop.left;
        } else if (left + width > crop.left + crop.width) {
          left = crop.left + crop.width - width;
        }
        cropRect = {
          left: Math.round(left),
          top: Math.round(top_2),
          width: Math.round(width),
          height: Math.round(height)
        };
      } else {
        var width = crop.width;
        var height = width / desiredAspectRatio;
        var left = crop.left;
        var hotspotYCenter = (hotspot.bottom - hotspot.top) / 2 + hotspot.top;
        var top_3 = hotspotYCenter - height / 2;
        if (top_3 < crop.top) {
          top_3 = crop.top;
        } else if (top_3 + height > crop.top + crop.height) {
          top_3 = crop.top + crop.height - height;
        }
        cropRect = {
          left: Math.max(0, Math.floor(left)),
          top: Math.max(0, Math.floor(top_3)),
          width: Math.round(width),
          height: Math.round(height)
        };
      }
      return {
        width: imgWidth,
        height: imgHeight,
        rect: cropRect
      };
    }
  }
});

// node_modules/@sanity/block-content-to-hyperscript/node_modules/@sanity/image-url/lib/node/builder.js
var require_builder = __commonJS({
  "node_modules/@sanity/block-content-to-hyperscript/node_modules/@sanity/image-url/lib/node/builder.js"(exports) {
    init_shims();
    "use strict";
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s2, i = 1, n = arguments.length; i < n; i++) {
          s2 = arguments[i];
          for (var p in s2)
            if (Object.prototype.hasOwnProperty.call(s2, p))
              t[p] = s2[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (Object.hasOwnProperty.call(mod, k))
            result[k] = mod[k];
      }
      result["default"] = mod;
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var urlForImage_1 = __importStar(require_urlForImage());
    var validFits = ["clip", "crop", "fill", "fillmax", "max", "scale", "min"];
    var validCrops = ["top", "bottom", "left", "right", "center", "focalpoint", "entropy"];
    var validAutoModes = ["format"];
    function isSanityClientLike(client2) {
      return client2 ? typeof client2.clientConfig === "object" : false;
    }
    function rewriteSpecName(key) {
      var specs = urlForImage_1.SPEC_NAME_TO_URL_NAME_MAPPINGS;
      for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {
        var entry = specs_1[_i];
        var specName = entry[0], param = entry[1];
        if (key === specName || key === param) {
          return specName;
        }
      }
      return key;
    }
    function urlBuilder(options2) {
      var client2 = options2;
      if (isSanityClientLike(client2)) {
        var _a = client2.clientConfig, apiUrl = _a.apiHost, projectId = _a.projectId, dataset = _a.dataset;
        var apiHost = apiUrl || "https://api.sanity.io";
        return new ImageUrlBuilder(null, {
          baseUrl: apiHost.replace(/^https:\/\/api\./, "https://cdn."),
          projectId,
          dataset
        });
      }
      return new ImageUrlBuilder(null, options2);
    }
    exports.default = urlBuilder;
    var ImageUrlBuilder = function() {
      function ImageUrlBuilder2(parent, options2) {
        this.options = parent ? __assign(__assign({}, parent.options || {}), options2 || {}) : __assign({}, options2 || {});
      }
      ImageUrlBuilder2.prototype.withOptions = function(options2) {
        var baseUrl = options2.baseUrl || this.options.baseUrl;
        var newOptions = { baseUrl };
        for (var key in options2) {
          if (options2.hasOwnProperty(key)) {
            var specKey = rewriteSpecName(key);
            newOptions[specKey] = options2[key];
          }
        }
        return new ImageUrlBuilder2(this, __assign({ baseUrl }, newOptions));
      };
      ImageUrlBuilder2.prototype.image = function(source) {
        return this.withOptions({ source });
      };
      ImageUrlBuilder2.prototype.dataset = function(dataset) {
        return this.withOptions({ dataset });
      };
      ImageUrlBuilder2.prototype.projectId = function(projectId) {
        return this.withOptions({ projectId });
      };
      ImageUrlBuilder2.prototype.bg = function(bg) {
        return this.withOptions({ bg });
      };
      ImageUrlBuilder2.prototype.dpr = function(dpr) {
        return this.withOptions({ dpr });
      };
      ImageUrlBuilder2.prototype.width = function(width) {
        return this.withOptions({ width });
      };
      ImageUrlBuilder2.prototype.height = function(height) {
        return this.withOptions({ height });
      };
      ImageUrlBuilder2.prototype.focalPoint = function(x, y) {
        return this.withOptions({ focalPoint: { x, y } });
      };
      ImageUrlBuilder2.prototype.maxWidth = function(maxWidth) {
        return this.withOptions({ maxWidth });
      };
      ImageUrlBuilder2.prototype.minWidth = function(minWidth) {
        return this.withOptions({ minWidth });
      };
      ImageUrlBuilder2.prototype.maxHeight = function(maxHeight) {
        return this.withOptions({ maxHeight });
      };
      ImageUrlBuilder2.prototype.minHeight = function(minHeight) {
        return this.withOptions({ minHeight });
      };
      ImageUrlBuilder2.prototype.size = function(width, height) {
        return this.withOptions({ width, height });
      };
      ImageUrlBuilder2.prototype.blur = function(blur) {
        return this.withOptions({ blur });
      };
      ImageUrlBuilder2.prototype.sharpen = function(sharpen) {
        return this.withOptions({ sharpen });
      };
      ImageUrlBuilder2.prototype.rect = function(left, top, width, height) {
        return this.withOptions({ rect: { left, top, width, height } });
      };
      ImageUrlBuilder2.prototype.format = function(format3) {
        return this.withOptions({ format: format3 });
      };
      ImageUrlBuilder2.prototype.invert = function(invert) {
        return this.withOptions({ invert });
      };
      ImageUrlBuilder2.prototype.orientation = function(orientation) {
        return this.withOptions({ orientation });
      };
      ImageUrlBuilder2.prototype.quality = function(quality) {
        return this.withOptions({ quality });
      };
      ImageUrlBuilder2.prototype.forceDownload = function(download) {
        return this.withOptions({ download });
      };
      ImageUrlBuilder2.prototype.flipHorizontal = function() {
        return this.withOptions({ flipHorizontal: true });
      };
      ImageUrlBuilder2.prototype.flipVertical = function() {
        return this.withOptions({ flipVertical: true });
      };
      ImageUrlBuilder2.prototype.ignoreImageParams = function() {
        return this.withOptions({ ignoreImageParams: true });
      };
      ImageUrlBuilder2.prototype.fit = function(value) {
        if (validFits.indexOf(value) === -1) {
          throw new Error('Invalid fit mode "' + value + '"');
        }
        return this.withOptions({ fit: value });
      };
      ImageUrlBuilder2.prototype.crop = function(value) {
        if (validCrops.indexOf(value) === -1) {
          throw new Error('Invalid crop mode "' + value + '"');
        }
        return this.withOptions({ crop: value });
      };
      ImageUrlBuilder2.prototype.saturation = function(saturation) {
        return this.withOptions({ saturation });
      };
      ImageUrlBuilder2.prototype.auto = function(value) {
        if (validAutoModes.indexOf(value) === -1) {
          throw new Error('Invalid auto mode "' + value + '"');
        }
        return this.withOptions({ auto: value });
      };
      ImageUrlBuilder2.prototype.pad = function(pad) {
        return this.withOptions({ pad });
      };
      ImageUrlBuilder2.prototype.url = function() {
        return urlForImage_1.default(this.options);
      };
      ImageUrlBuilder2.prototype.toString = function() {
        return this.url();
      };
      return ImageUrlBuilder2;
    }();
    exports.ImageUrlBuilder = ImageUrlBuilder;
  }
});

// node_modules/@sanity/block-content-to-hyperscript/node_modules/@sanity/image-url/lib/node/index.js
var require_node5 = __commonJS({
  "node_modules/@sanity/block-content-to-hyperscript/node_modules/@sanity/image-url/lib/node/index.js"(exports, module2) {
    init_shims();
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    var builder_1 = __importDefault(require_builder());
    module2.exports = builder_1.default;
  }
});

// node_modules/@sanity/block-content-to-hyperscript/lib/getImageUrl.js
var require_getImageUrl = __commonJS({
  "node_modules/@sanity/block-content-to-hyperscript/lib/getImageUrl.js"(exports, module2) {
    init_shims();
    "use strict";
    var generateHelpUrl = require_generate_help_url2();
    var urlBuilder = require_node5();
    var objectAssign = require_object_assign();
    var enc = encodeURIComponent;
    var materializeError = "You must either:\n  - Pass `projectId` and `dataset` to the block renderer\n  - Materialize images to include the `url` field.\n\nFor more information, see ".concat(generateHelpUrl("block-content-image-materializing"));
    var getQueryString = function getQueryString2(options2) {
      var query = options2.imageOptions;
      var keys = Object.keys(query);
      if (!keys.length) {
        return "";
      }
      var params = keys.map(function(key) {
        return "".concat(enc(key), "=").concat(enc(query[key]));
      });
      return "?".concat(params.join("&"));
    };
    var buildUrl = function buildUrl2(props) {
      var node = props.node, options2 = props.options;
      var projectId = options2.projectId, dataset = options2.dataset;
      var asset = node.asset;
      if (!asset) {
        throw new Error("Image does not have required `asset` property");
      }
      if (asset.url) {
        return asset.url + getQueryString(options2);
      }
      if (!projectId || !dataset) {
        throw new Error(materializeError);
      }
      var ref = asset._ref;
      if (!ref) {
        throw new Error("Invalid image reference in block, no `_ref` found on `asset`");
      }
      return urlBuilder(objectAssign({
        projectId,
        dataset
      }, options2.imageOptions || {})).image(node).toString();
    };
    module2.exports = buildUrl;
  }
});

// node_modules/@sanity/block-content-to-hyperscript/lib/buildMarksTree.js
var require_buildMarksTree = __commonJS({
  "node_modules/@sanity/block-content-to-hyperscript/lib/buildMarksTree.js"(exports, module2) {
    init_shims();
    "use strict";
    var defaultMarks = ["strong", "em", "code", "underline", "strike-through"];
    var buildMarksTree = function buildMarksTree2(block) {
      var children = block.children, markDefs = block.markDefs;
      if (!children || !children.length) {
        return [];
      }
      var sortedMarks = children.map(sortMarksByOccurences);
      var rootNode = {
        _type: "span",
        children: []
      };
      var nodeStack = [rootNode];
      children.forEach(function(span, i) {
        var marksNeeded = sortedMarks[i];
        if (!marksNeeded) {
          var lastNode = nodeStack[nodeStack.length - 1];
          lastNode.children.push(span);
          return;
        }
        var pos = 1;
        if (nodeStack.length > 1) {
          for (pos; pos < nodeStack.length; pos++) {
            var mark = nodeStack[pos].markKey;
            var index2 = marksNeeded.indexOf(mark);
            if (index2 === -1) {
              break;
            }
            marksNeeded.splice(index2, 1);
          }
        }
        nodeStack = nodeStack.slice(0, pos);
        var currentNode = findLastParentNode(nodeStack);
        marksNeeded.forEach(function(mark2) {
          var node = {
            _type: "span",
            _key: span._key,
            children: [],
            mark: markDefs.find(function(def) {
              return def._key === mark2;
            }) || mark2,
            markKey: mark2
          };
          currentNode.children.push(node);
          nodeStack.push(node);
          currentNode = node;
        });
        if (isTextSpan(span)) {
          var lines = span.text.split("\n");
          for (var line = lines.length; line-- > 1; ) {
            lines.splice(line, 0, "\n");
          }
          currentNode.children = currentNode.children.concat(lines);
        } else {
          currentNode.children = currentNode.children.concat(span);
        }
      });
      return rootNode.children;
    };
    function sortMarksByOccurences(span, i, spans) {
      if (!span.marks || span.marks.length === 0) {
        return span.marks || [];
      }
      var markOccurences = span.marks.reduce(function(occurences, mark) {
        occurences[mark] = occurences[mark] ? occurences[mark] + 1 : 1;
        for (var siblingIndex = i + 1; siblingIndex < spans.length; siblingIndex++) {
          var sibling = spans[siblingIndex];
          if (sibling.marks && Array.isArray(sibling.marks) && sibling.marks.indexOf(mark) !== -1) {
            occurences[mark]++;
          } else {
            break;
          }
        }
        return occurences;
      }, {});
      var sortByOccurence = sortMarks.bind(null, markOccurences);
      return span.marks.slice().sort(sortByOccurence);
    }
    function sortMarks(occurences, markA, markB) {
      var aOccurences = occurences[markA] || 0;
      var bOccurences = occurences[markB] || 0;
      if (aOccurences !== bOccurences) {
        return bOccurences - aOccurences;
      }
      var aDefaultPos = defaultMarks.indexOf(markA);
      var bDefaultPos = defaultMarks.indexOf(markB);
      if (aDefaultPos !== bDefaultPos) {
        return aDefaultPos - bDefaultPos;
      }
      if (markA < markB) {
        return -1;
      } else if (markA > markB) {
        return 1;
      }
      return 0;
    }
    function isTextSpan(node) {
      return node._type === "span" && typeof node.text === "string" && (Array.isArray(node.marks) || typeof node.marks === "undefined");
    }
    function findLastParentNode(nodes) {
      for (var i = nodes.length - 1; i >= 0; i--) {
        var node = nodes[i];
        if (node._type === "span" && node.children) {
          return node;
        }
      }
      return void 0;
    }
    module2.exports = buildMarksTree;
  }
});

// node_modules/@sanity/block-content-to-hyperscript/lib/nestLists.js
var require_nestLists = __commonJS({
  "node_modules/@sanity/block-content-to-hyperscript/lib/nestLists.js"(exports, module2) {
    init_shims();
    "use strict";
    var objectAssign = require_object_assign();
    function nestLists(blocks) {
      var mode = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "html";
      var tree = [];
      var currentList;
      for (var i = 0; i < blocks.length; i++) {
        var block = blocks[i];
        if (!isListBlock(block)) {
          tree.push(block);
          currentList = null;
          continue;
        }
        if (!currentList) {
          currentList = listFromBlock(block);
          tree.push(currentList);
          continue;
        }
        if (blockMatchesList(block, currentList)) {
          currentList.children.push(block);
          continue;
        }
        if (block.level > currentList.level) {
          var newList = listFromBlock(block);
          if (mode === "html") {
            var lastListItem = lastChild(currentList);
            var newLastChild = objectAssign({}, lastListItem, {
              children: lastListItem.children.concat(newList)
            });
            currentList.children[currentList.children.length - 1] = newLastChild;
          } else {
            currentList.children.push(newList);
          }
          currentList = newList;
          continue;
        }
        if (block.level < currentList.level) {
          var match = findListMatching(tree[tree.length - 1], block);
          if (match) {
            currentList = match;
            currentList.children.push(block);
            continue;
          }
          currentList = listFromBlock(block);
          tree.push(currentList);
          continue;
        }
        if (block.listItem !== currentList.listItem) {
          var _match = findListMatching(tree[tree.length - 1], {
            level: block.level
          });
          if (_match && _match.listItem === block.listItem) {
            currentList = _match;
            currentList.children.push(block);
            continue;
          } else {
            currentList = listFromBlock(block);
            tree.push(currentList);
            continue;
          }
        }
        console.warn("Unknown state encountered for block", block);
        tree.push(block);
      }
      return tree;
    }
    function isListBlock(block) {
      return Boolean(block.listItem);
    }
    function blockMatchesList(block, list) {
      return block.level === list.level && block.listItem === list.listItem;
    }
    function listFromBlock(block) {
      return {
        _type: "list",
        _key: "".concat(block._key, "-parent"),
        level: block.level,
        listItem: block.listItem,
        children: [block]
      };
    }
    function lastChild(block) {
      return block.children && block.children[block.children.length - 1];
    }
    function findListMatching(rootNode, matching) {
      var filterOnType = typeof matching.listItem === "string";
      if (rootNode._type === "list" && rootNode.level === matching.level && filterOnType && rootNode.listItem === matching.listItem) {
        return rootNode;
      }
      var node = lastChild(rootNode);
      if (!node) {
        return false;
      }
      return findListMatching(node, matching);
    }
    module2.exports = nestLists;
  }
});

// node_modules/@sanity/block-content-to-hyperscript/lib/generateKeys.js
var require_generateKeys = __commonJS({
  "node_modules/@sanity/block-content-to-hyperscript/lib/generateKeys.js"(exports, module2) {
    init_shims();
    "use strict";
    var objectAssign = require_object_assign();
    module2.exports = function(blocks) {
      return blocks.map(function(block) {
        if (block._key) {
          return block;
        }
        return objectAssign({
          _key: getStaticKey(block)
        }, block);
      });
    };
    function getStaticKey(item) {
      return checksum(JSON.stringify(item)).toString(36).replace(/[^A-Za-z0-9]/g, "");
    }
    function checksum(str) {
      var hash2 = 0;
      var strlen = str.length;
      if (strlen === 0) {
        return hash2;
      }
      for (var i = 0; i < strlen; i++) {
        hash2 = (hash2 << 5) - hash2 + str.charCodeAt(i);
        hash2 &= hash2;
      }
      return hash2;
    }
  }
});

// node_modules/@sanity/block-content-to-hyperscript/lib/mergeSerializers.js
var require_mergeSerializers = __commonJS({
  "node_modules/@sanity/block-content-to-hyperscript/lib/mergeSerializers.js"(exports, module2) {
    init_shims();
    "use strict";
    function _typeof(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    var objectAssign = require_object_assign();
    var isDefined = function isDefined2(val) {
      return typeof val !== "undefined";
    };
    module2.exports = function mergeSerializers(defaultSerializers, userSerializers) {
      return Object.keys(defaultSerializers).reduce(function(acc, key) {
        var type = _typeof(defaultSerializers[key]);
        if (type === "function") {
          acc[key] = isDefined(userSerializers[key]) ? userSerializers[key] : defaultSerializers[key];
        } else if (type === "object") {
          acc[key] = objectAssign({}, defaultSerializers[key], userSerializers[key]);
        } else {
          acc[key] = typeof userSerializers[key] === "undefined" ? defaultSerializers[key] : userSerializers[key];
        }
        return acc;
      }, {});
    };
  }
});

// node_modules/@sanity/block-content-to-hyperscript/lib/blocksToNodes.js
var require_blocksToNodes = __commonJS({
  "node_modules/@sanity/block-content-to-hyperscript/lib/blocksToNodes.js"(exports, module2) {
    init_shims();
    "use strict";
    var objectAssign = require_object_assign();
    var buildMarksTree = require_buildMarksTree();
    var nestLists = require_nestLists();
    var generateKeys = require_generateKeys();
    var mergeSerializers = require_mergeSerializers();
    var optionProps = ["projectId", "dataset", "imageOptions", "ignoreUnknownTypes"];
    var isDefined = function isDefined2(val) {
      return typeof val !== "undefined";
    };
    var defaults = {
      imageOptions: {},
      ignoreUnknownTypes: true
    };
    function blocksToNodes(h2, properties, defaultSerializers, serializeSpan) {
      var props = objectAssign({}, defaults, properties);
      var rawBlocks = Array.isArray(props.blocks) ? props.blocks : [props.blocks];
      var keyedBlocks = generateKeys(rawBlocks);
      var blocks = nestLists(keyedBlocks, props.listNestMode);
      var serializers2 = mergeSerializers(defaultSerializers, props.serializers || {});
      var options2 = optionProps.reduce(function(opts, key) {
        var value = props[key];
        if (isDefined(value)) {
          opts[key] = value;
        }
        return opts;
      }, {});
      function serializeNode(node, index2, siblings, isInline) {
        if (isList(node)) {
          return serializeList(node);
        }
        if (isListItem(node)) {
          return serializeListItem(node, findListItemIndex(node, siblings));
        }
        if (isSpan(node)) {
          return serializeSpan(node, serializers2, index2, {
            serializeNode
          });
        }
        return serializeBlock(node, index2, isInline);
      }
      function findListItemIndex(node, siblings) {
        var index2 = 0;
        for (var i = 0; i < siblings.length; i++) {
          if (siblings[i] === node) {
            return index2;
          }
          if (!isListItem(siblings[i])) {
            continue;
          }
          index2++;
        }
        return index2;
      }
      function serializeBlock(block, index2, isInline) {
        var tree = buildMarksTree(block);
        var children = tree.map(function(node, i, siblings) {
          return serializeNode(node, i, siblings, true);
        });
        var blockProps = {
          key: block._key || "block-".concat(index2),
          node: block,
          isInline,
          serializers: serializers2,
          options: options2
        };
        return h2(serializers2.block, blockProps, children);
      }
      function serializeListItem(block, index2) {
        var key = block._key;
        var tree = buildMarksTree(block);
        var children = tree.map(serializeNode);
        return h2(serializers2.listItem, {
          node: block,
          serializers: serializers2,
          index: index2,
          key,
          options: options2
        }, children);
      }
      function serializeList(list) {
        var type = list.listItem;
        var level = list.level;
        var key = list._key;
        var children = list.children.map(serializeNode);
        return h2(serializers2.list, {
          key,
          level,
          type,
          options: options2
        }, children);
      }
      var renderContainerOnSingleChild = Boolean(props.renderContainerOnSingleChild);
      var nodes = blocks.map(serializeNode);
      if (renderContainerOnSingleChild || nodes.length > 1) {
        var containerProps = props.className ? {
          className: props.className
        } : {};
        return h2(serializers2.container, containerProps, nodes);
      }
      if (nodes[0]) {
        return nodes[0];
      }
      return typeof serializers2.empty === "function" ? h2(serializers2.empty) : serializers2.empty;
    }
    function isList(block) {
      return block._type === "list" && block.listItem;
    }
    function isListItem(block) {
      return block._type === "block" && block.listItem;
    }
    function isSpan(block) {
      return typeof block === "string" || block.marks || block._type === "span";
    }
    module2.exports = blocksToNodes;
  }
});

// node_modules/@sanity/block-content-to-hyperscript/lib/serializers.js
var require_serializers = __commonJS({
  "node_modules/@sanity/block-content-to-hyperscript/lib/serializers.js"(exports, module2) {
    init_shims();
    "use strict";
    var objectAssign = require_object_assign();
    var getImageUrl = require_getImageUrl();
    module2.exports = function(h2, serializerOpts) {
      var serializeOptions = serializerOpts || {
        useDashedStyles: false
      };
      function BlockSerializer(props) {
        var node = props.node, serializers2 = props.serializers, options2 = props.options, isInline = props.isInline, children = props.children;
        var blockType = node._type;
        var serializer = serializers2.types[blockType];
        if (!serializer) {
          if (options2.ignoreUnknownTypes) {
            console.warn('Unknown block type "'.concat(blockType, '", please specify a serializer for it in the `serializers.types` prop'));
            return h2(serializers2.unknownType, {
              node,
              options: options2,
              isInline
            }, children);
          }
          throw new Error('Unknown block type "'.concat(blockType, '", please specify a serializer for it in the `serializers.types` prop'));
        }
        return h2(serializer, {
          node,
          options: options2,
          isInline
        }, children);
      }
      function SpanSerializer(props) {
        var _props$node = props.node, mark = _props$node.mark, children = _props$node.children;
        var isPlain = typeof mark === "string";
        var markType = isPlain ? mark : mark._type;
        var serializer = props.serializers.marks[markType];
        if (!serializer) {
          console.warn('Unknown mark type "'.concat(markType, '", please specify a serializer for it in the `serializers.marks` prop'));
          return h2(props.serializers.unknownMark, null, children);
        }
        return h2(serializer, props.node, children);
      }
      function ListSerializer(props) {
        var tag = props.type === "bullet" ? "ul" : "ol";
        return h2(tag, null, props.children);
      }
      function ListItemSerializer(props) {
        var children = !props.node.style || props.node.style === "normal" ? props.children : h2(props.serializers.types.block, props, props.children);
        return h2("li", null, children);
      }
      function DefaultUnknownTypeSerializer(props) {
        return h2("div", {
          style: {
            display: "none"
          }
        }, 'Unknown block type "'.concat(props.node._type, '", please specify a serializer for it in the `serializers.types` prop'));
      }
      function BlockTypeSerializer(props) {
        var style = props.node.style || "normal";
        if (/^h\d/.test(style)) {
          return h2(style, null, props.children);
        }
        return style === "blockquote" ? h2("blockquote", null, props.children) : h2("p", null, props.children);
      }
      function RawMarkSerializer(tag, props) {
        return h2(tag, null, props.children);
      }
      function UnderlineSerializer(props) {
        var style = serializeOptions.useDashedStyles ? {
          "text-decoration": "underline"
        } : {
          textDecoration: "underline"
        };
        return h2("span", {
          style
        }, props.children);
      }
      function StrikeThroughSerializer(props) {
        return h2("del", null, props.children);
      }
      function LinkSerializer(props) {
        return h2("a", {
          href: props.mark.href
        }, props.children);
      }
      function ImageSerializer(props) {
        if (!props.node.asset) {
          return null;
        }
        var img = h2("img", {
          src: getImageUrl(props)
        });
        return props.isInline ? img : h2("figure", null, img);
      }
      function serializeSpan(span, serializers2, index2, options2) {
        if (span === "\n" && serializers2.hardBreak) {
          return h2(serializers2.hardBreak, {
            key: "hb-".concat(index2)
          });
        }
        if (typeof span === "string") {
          return serializers2.text ? h2(serializers2.text, {
            key: "text-".concat(index2)
          }, span) : span;
        }
        var children;
        if (span.children) {
          children = {
            children: span.children.map(function(child, i) {
              return options2.serializeNode(child, i, span.children, true);
            })
          };
        }
        var serializedNode = objectAssign({}, span, children);
        return h2(serializers2.span, {
          key: span._key || "span-".concat(index2),
          node: serializedNode,
          serializers: serializers2
        });
      }
      var HardBreakSerializer = function HardBreakSerializer2() {
        return h2("br");
      };
      var defaultMarkSerializers = {
        strong: RawMarkSerializer.bind(null, "strong"),
        em: RawMarkSerializer.bind(null, "em"),
        code: RawMarkSerializer.bind(null, "code"),
        underline: UnderlineSerializer,
        "strike-through": StrikeThroughSerializer,
        link: LinkSerializer
      };
      var defaultSerializers = {
        types: {
          block: BlockTypeSerializer,
          image: ImageSerializer
        },
        marks: defaultMarkSerializers,
        list: ListSerializer,
        listItem: ListItemSerializer,
        block: BlockSerializer,
        span: SpanSerializer,
        hardBreak: HardBreakSerializer,
        unknownType: DefaultUnknownTypeSerializer,
        unknownMark: "span",
        container: "div",
        text: void 0,
        empty: ""
      };
      return {
        defaultSerializers,
        serializeSpan
      };
    };
  }
});

// node_modules/@sanity/block-content-to-hyperscript/lib/index.js
var require_lib = __commonJS({
  "node_modules/@sanity/block-content-to-hyperscript/lib/index.js"(exports, module2) {
    init_shims();
    "use strict";
    var hyperscript = require_hyperscript();
    var objectAssign = require_object_assign();
    var getImageUrl = require_getImageUrl();
    var blocksToNodes = require_blocksToNodes();
    var getSerializers = require_serializers();
    var renderNode = function renderNode2(serializer, properties, children) {
      var props = properties || {};
      if (typeof serializer === "function") {
        return serializer(objectAssign({}, props, {
          children
        }));
      }
      var tag = serializer;
      var childNodes = props.children || children;
      return hyperscript(tag, props, childNodes);
    };
    var _getSerializers = getSerializers(renderNode, {
      useDashedStyles: true
    });
    var defaultSerializers = _getSerializers.defaultSerializers;
    var serializeSpan = _getSerializers.serializeSpan;
    var blockContentToHyperscript = function blockContentToHyperscript2(options2) {
      return blocksToNodes(renderNode, options2, defaultSerializers, serializeSpan);
    };
    blockContentToHyperscript.defaultSerializers = defaultSerializers;
    blockContentToHyperscript.getImageUrl = getImageUrl;
    blockContentToHyperscript.renderNode = renderNode;
    module2.exports = blockContentToHyperscript;
  }
});

// node_modules/@sanity/block-content-to-html/lib/blocksToHtml.js
var require_blocksToHtml = __commonJS({
  "node_modules/@sanity/block-content-to-html/lib/blocksToHtml.js"(exports, module2) {
    init_shims();
    "use strict";
    var blocksToHyperScript = require_lib();
    var h2 = blocksToHyperScript.renderNode;
    var blocksToHtml2 = function blocksToHtml3(options2) {
      var rootNode = blocksToHyperScript(options2);
      return rootNode.outerHTML || rootNode;
    };
    blocksToHtml2.defaultSerializers = blocksToHyperScript.defaultSerializers;
    blocksToHtml2.getImageUrl = blocksToHyperScript.getImageUrl;
    blocksToHtml2.renderNode = h2;
    blocksToHtml2.h = h2;
    module2.exports = blocksToHtml2;
  }
});

// node_modules/@sanity/image-url/lib/node/parseAssetId.js
var require_parseAssetId2 = __commonJS({
  "node_modules/@sanity/image-url/lib/node/parseAssetId.js"(exports) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var example = "image-Tb9Ew8CXIwaY6R1kjMvI0uRR-2000x3000-jpg";
    function parseAssetId(ref) {
      var _a = ref.split("-"), id = _a[1], dimensionString = _a[2], format3 = _a[3];
      if (!id || !dimensionString || !format3) {
        throw new Error("Malformed asset _ref '" + ref + `'. Expected an id like "` + example + '".');
      }
      var _b = dimensionString.split("x"), imgWidthStr = _b[0], imgHeightStr = _b[1];
      var width = +imgWidthStr;
      var height = +imgHeightStr;
      var isValidAssetId = isFinite(width) && isFinite(height);
      if (!isValidAssetId) {
        throw new Error("Malformed asset _ref '" + ref + `'. Expected an id like "` + example + '".');
      }
      return { id, width, height, format: format3 };
    }
    exports.default = parseAssetId;
  }
});

// node_modules/@sanity/image-url/lib/node/parseSource.js
var require_parseSource2 = __commonJS({
  "node_modules/@sanity/image-url/lib/node/parseSource.js"(exports) {
    init_shims();
    "use strict";
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s2, i = 1, n = arguments.length; i < n; i++) {
          s2 = arguments[i];
          for (var p in s2)
            if (Object.prototype.hasOwnProperty.call(s2, p))
              t[p] = s2[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var isRef = function(src2) {
      var source = src2;
      return source ? typeof source._ref === "string" : false;
    };
    var isAsset = function(src2) {
      var source = src2;
      return source ? typeof source._id === "string" : false;
    };
    var isAssetStub = function(src2) {
      var source = src2;
      return source && source.asset ? typeof source.asset.url === "string" : false;
    };
    function parseSource(source) {
      if (!source) {
        return null;
      }
      var image;
      if (typeof source === "string" && isUrl(source)) {
        image = {
          asset: { _ref: urlToId(source) }
        };
      } else if (typeof source === "string") {
        image = {
          asset: { _ref: source }
        };
      } else if (isRef(source)) {
        image = {
          asset: source
        };
      } else if (isAsset(source)) {
        image = {
          asset: {
            _ref: source._id || ""
          }
        };
      } else if (isAssetStub(source)) {
        image = {
          asset: {
            _ref: urlToId(source.asset.url)
          }
        };
      } else if (typeof source.asset === "object") {
        image = source;
      } else {
        return null;
      }
      var img = source;
      if (img.crop) {
        image.crop = img.crop;
      }
      if (img.hotspot) {
        image.hotspot = img.hotspot;
      }
      return applyDefaults(image);
    }
    exports.default = parseSource;
    function isUrl(url) {
      return /^https?:\/\//.test("" + url);
    }
    function urlToId(url) {
      var parts = url.split("/").slice(-1);
      return ("image-" + parts[0]).replace(/\.([a-z]+)$/, "-$1");
    }
    function applyDefaults(image) {
      if (image.crop && image.hotspot) {
        return image;
      }
      var result = __assign({}, image);
      if (!result.crop) {
        result.crop = {
          left: 0,
          top: 0,
          bottom: 0,
          right: 0
        };
      }
      if (!result.hotspot) {
        result.hotspot = {
          x: 0.5,
          y: 0.5,
          height: 1,
          width: 1
        };
      }
      return result;
    }
  }
});

// node_modules/@sanity/image-url/lib/node/urlForImage.js
var require_urlForImage2 = __commonJS({
  "node_modules/@sanity/image-url/lib/node/urlForImage.js"(exports) {
    init_shims();
    "use strict";
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s2, i = 1, n = arguments.length; i < n; i++) {
          s2 = arguments[i];
          for (var p in s2)
            if (Object.prototype.hasOwnProperty.call(s2, p))
              t[p] = s2[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var parseAssetId_1 = __importDefault(require_parseAssetId2());
    var parseSource_1 = __importDefault(require_parseSource2());
    exports.parseSource = parseSource_1.default;
    exports.SPEC_NAME_TO_URL_NAME_MAPPINGS = [
      ["width", "w"],
      ["height", "h"],
      ["format", "fm"],
      ["download", "dl"],
      ["blur", "blur"],
      ["sharpen", "sharp"],
      ["invert", "invert"],
      ["orientation", "or"],
      ["minHeight", "min-h"],
      ["maxHeight", "max-h"],
      ["minWidth", "min-w"],
      ["maxWidth", "max-w"],
      ["quality", "q"],
      ["fit", "fit"],
      ["crop", "crop"],
      ["saturation", "sat"],
      ["auto", "auto"],
      ["dpr", "dpr"],
      ["pad", "pad"]
    ];
    function urlForImage(options2) {
      var spec = __assign({}, options2 || {});
      var source = spec.source;
      delete spec.source;
      var image = parseSource_1.default(source);
      if (!image) {
        throw new Error("Unable to resolve image URL from source (" + JSON.stringify(source) + ")");
      }
      var id = image.asset._ref || image.asset._id || "";
      var asset = parseAssetId_1.default(id);
      var cropLeft = Math.round(image.crop.left * asset.width);
      var cropTop = Math.round(image.crop.top * asset.height);
      var crop = {
        left: cropLeft,
        top: cropTop,
        width: Math.round(asset.width - image.crop.right * asset.width - cropLeft),
        height: Math.round(asset.height - image.crop.bottom * asset.height - cropTop)
      };
      var hotSpotVerticalRadius = image.hotspot.height * asset.height / 2;
      var hotSpotHorizontalRadius = image.hotspot.width * asset.width / 2;
      var hotSpotCenterX = image.hotspot.x * asset.width;
      var hotSpotCenterY = image.hotspot.y * asset.height;
      var hotspot = {
        left: hotSpotCenterX - hotSpotHorizontalRadius,
        top: hotSpotCenterY - hotSpotVerticalRadius,
        right: hotSpotCenterX + hotSpotHorizontalRadius,
        bottom: hotSpotCenterY + hotSpotVerticalRadius
      };
      if (!(spec.rect || spec.focalPoint || spec.ignoreImageParams || spec.crop)) {
        spec = __assign(__assign({}, spec), fit({ crop, hotspot }, spec));
      }
      return specToImageUrl(__assign(__assign({}, spec), { asset }));
    }
    exports.default = urlForImage;
    function specToImageUrl(spec) {
      var cdnUrl = spec.baseUrl || "https://cdn.sanity.io";
      var filename = spec.asset.id + "-" + spec.asset.width + "x" + spec.asset.height + "." + spec.asset.format;
      var baseUrl = cdnUrl + "/images/" + spec.projectId + "/" + spec.dataset + "/" + filename;
      var params = [];
      if (spec.rect) {
        var _a = spec.rect, left = _a.left, top_1 = _a.top, width = _a.width, height = _a.height;
        var isEffectiveCrop = left !== 0 || top_1 !== 0 || height !== spec.asset.height || width !== spec.asset.width;
        if (isEffectiveCrop) {
          params.push("rect=" + left + "," + top_1 + "," + width + "," + height);
        }
      }
      if (spec.bg) {
        params.push("bg=" + spec.bg);
      }
      if (spec.focalPoint) {
        params.push("fp-x=" + spec.focalPoint.x);
        params.push("fp-y=" + spec.focalPoint.y);
      }
      var flip = [spec.flipHorizontal && "h", spec.flipVertical && "v"].filter(Boolean).join("");
      if (flip) {
        params.push("flip=" + flip);
      }
      exports.SPEC_NAME_TO_URL_NAME_MAPPINGS.forEach(function(mapping) {
        var specName = mapping[0], param = mapping[1];
        if (typeof spec[specName] !== "undefined") {
          params.push(param + "=" + encodeURIComponent(spec[specName]));
        } else if (typeof spec[param] !== "undefined") {
          params.push(param + "=" + encodeURIComponent(spec[param]));
        }
      });
      if (params.length === 0) {
        return baseUrl;
      }
      return baseUrl + "?" + params.join("&");
    }
    function fit(source, spec) {
      var cropRect;
      var imgWidth = spec.width;
      var imgHeight = spec.height;
      if (!(imgWidth && imgHeight)) {
        return { width: imgWidth, height: imgHeight, rect: source.crop };
      }
      var crop = source.crop;
      var hotspot = source.hotspot;
      var desiredAspectRatio = imgWidth / imgHeight;
      var cropAspectRatio = crop.width / crop.height;
      if (cropAspectRatio > desiredAspectRatio) {
        var height = Math.round(crop.height);
        var width = Math.round(height * desiredAspectRatio);
        var top_2 = Math.max(0, Math.round(crop.top));
        var hotspotXCenter = Math.round((hotspot.right - hotspot.left) / 2 + hotspot.left);
        var left = Math.max(0, Math.round(hotspotXCenter - width / 2));
        if (left < crop.left) {
          left = crop.left;
        } else if (left + width > crop.left + crop.width) {
          left = crop.left + crop.width - width;
        }
        cropRect = { left, top: top_2, width, height };
      } else {
        var width = crop.width;
        var height = Math.round(width / desiredAspectRatio);
        var left = Math.max(0, Math.round(crop.left));
        var hotspotYCenter = Math.round((hotspot.bottom - hotspot.top) / 2 + hotspot.top);
        var top_3 = Math.max(0, Math.round(hotspotYCenter - height / 2));
        if (top_3 < crop.top) {
          top_3 = crop.top;
        } else if (top_3 + height > crop.top + crop.height) {
          top_3 = crop.top + crop.height - height;
        }
        cropRect = { left, top: top_3, width, height };
      }
      return {
        width: imgWidth,
        height: imgHeight,
        rect: cropRect
      };
    }
  }
});

// node_modules/@sanity/image-url/lib/node/builder.js
var require_builder2 = __commonJS({
  "node_modules/@sanity/image-url/lib/node/builder.js"(exports) {
    init_shims();
    "use strict";
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s2, i = 1, n = arguments.length; i < n; i++) {
          s2 = arguments[i];
          for (var p in s2)
            if (Object.prototype.hasOwnProperty.call(s2, p))
              t[p] = s2[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (Object.hasOwnProperty.call(mod, k))
            result[k] = mod[k];
      }
      result["default"] = mod;
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var urlForImage_1 = __importStar(require_urlForImage2());
    var validFits = ["clip", "crop", "fill", "fillmax", "max", "scale", "min"];
    var validCrops = ["top", "bottom", "left", "right", "center", "focalpoint", "entropy"];
    var validAutoModes = ["format"];
    function isSanityClientLike(client2) {
      return client2 ? typeof client2.clientConfig === "object" : false;
    }
    function rewriteSpecName(key) {
      var specs = urlForImage_1.SPEC_NAME_TO_URL_NAME_MAPPINGS;
      for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {
        var entry = specs_1[_i];
        var specName = entry[0], param = entry[1];
        if (key === specName || key === param) {
          return specName;
        }
      }
      return key;
    }
    function urlBuilder(options2) {
      var client2 = options2;
      if (isSanityClientLike(client2)) {
        var _a = client2.clientConfig, apiUrl = _a.apiHost, projectId = _a.projectId, dataset = _a.dataset;
        var apiHost = apiUrl || "https://api.sanity.io";
        return new ImageUrlBuilder(null, {
          baseUrl: apiHost.replace(/^https:\/\/api\./, "https://cdn."),
          projectId,
          dataset
        });
      }
      return new ImageUrlBuilder(null, options2);
    }
    exports.default = urlBuilder;
    var ImageUrlBuilder = function() {
      function ImageUrlBuilder2(parent, options2) {
        this.options = parent ? __assign(__assign({}, parent.options || {}), options2 || {}) : __assign({}, options2 || {});
      }
      ImageUrlBuilder2.prototype.withOptions = function(options2) {
        var baseUrl = options2.baseUrl || this.options.baseUrl;
        var newOptions = { baseUrl };
        for (var key in options2) {
          if (options2.hasOwnProperty(key)) {
            var specKey = rewriteSpecName(key);
            newOptions[specKey] = options2[key];
          }
        }
        return new ImageUrlBuilder2(this, __assign({ baseUrl }, newOptions));
      };
      ImageUrlBuilder2.prototype.image = function(source) {
        return this.withOptions({ source });
      };
      ImageUrlBuilder2.prototype.dataset = function(dataset) {
        return this.withOptions({ dataset });
      };
      ImageUrlBuilder2.prototype.projectId = function(projectId) {
        return this.withOptions({ projectId });
      };
      ImageUrlBuilder2.prototype.bg = function(bg) {
        return this.withOptions({ bg });
      };
      ImageUrlBuilder2.prototype.dpr = function(dpr) {
        return this.withOptions(dpr && dpr !== 1 ? { dpr } : {});
      };
      ImageUrlBuilder2.prototype.width = function(width) {
        return this.withOptions({ width });
      };
      ImageUrlBuilder2.prototype.height = function(height) {
        return this.withOptions({ height });
      };
      ImageUrlBuilder2.prototype.focalPoint = function(x, y) {
        return this.withOptions({ focalPoint: { x, y } });
      };
      ImageUrlBuilder2.prototype.maxWidth = function(maxWidth) {
        return this.withOptions({ maxWidth });
      };
      ImageUrlBuilder2.prototype.minWidth = function(minWidth) {
        return this.withOptions({ minWidth });
      };
      ImageUrlBuilder2.prototype.maxHeight = function(maxHeight) {
        return this.withOptions({ maxHeight });
      };
      ImageUrlBuilder2.prototype.minHeight = function(minHeight) {
        return this.withOptions({ minHeight });
      };
      ImageUrlBuilder2.prototype.size = function(width, height) {
        return this.withOptions({ width, height });
      };
      ImageUrlBuilder2.prototype.blur = function(blur) {
        return this.withOptions({ blur });
      };
      ImageUrlBuilder2.prototype.sharpen = function(sharpen) {
        return this.withOptions({ sharpen });
      };
      ImageUrlBuilder2.prototype.rect = function(left, top, width, height) {
        return this.withOptions({ rect: { left, top, width, height } });
      };
      ImageUrlBuilder2.prototype.format = function(format3) {
        return this.withOptions({ format: format3 });
      };
      ImageUrlBuilder2.prototype.invert = function(invert) {
        return this.withOptions({ invert });
      };
      ImageUrlBuilder2.prototype.orientation = function(orientation) {
        return this.withOptions({ orientation });
      };
      ImageUrlBuilder2.prototype.quality = function(quality) {
        return this.withOptions({ quality });
      };
      ImageUrlBuilder2.prototype.forceDownload = function(download) {
        return this.withOptions({ download });
      };
      ImageUrlBuilder2.prototype.flipHorizontal = function() {
        return this.withOptions({ flipHorizontal: true });
      };
      ImageUrlBuilder2.prototype.flipVertical = function() {
        return this.withOptions({ flipVertical: true });
      };
      ImageUrlBuilder2.prototype.ignoreImageParams = function() {
        return this.withOptions({ ignoreImageParams: true });
      };
      ImageUrlBuilder2.prototype.fit = function(value) {
        if (validFits.indexOf(value) === -1) {
          throw new Error('Invalid fit mode "' + value + '"');
        }
        return this.withOptions({ fit: value });
      };
      ImageUrlBuilder2.prototype.crop = function(value) {
        if (validCrops.indexOf(value) === -1) {
          throw new Error('Invalid crop mode "' + value + '"');
        }
        return this.withOptions({ crop: value });
      };
      ImageUrlBuilder2.prototype.saturation = function(saturation) {
        return this.withOptions({ saturation });
      };
      ImageUrlBuilder2.prototype.auto = function(value) {
        if (validAutoModes.indexOf(value) === -1) {
          throw new Error('Invalid auto mode "' + value + '"');
        }
        return this.withOptions({ auto: value });
      };
      ImageUrlBuilder2.prototype.pad = function(pad) {
        return this.withOptions({ pad });
      };
      ImageUrlBuilder2.prototype.url = function() {
        return urlForImage_1.default(this.options);
      };
      ImageUrlBuilder2.prototype.toString = function() {
        return this.url();
      };
      return ImageUrlBuilder2;
    }();
    exports.ImageUrlBuilder = ImageUrlBuilder;
  }
});

// node_modules/@sanity/image-url/lib/node/index.js
var require_node6 = __commonJS({
  "node_modules/@sanity/image-url/lib/node/index.js"(exports, module2) {
    init_shims();
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    var builder_1 = __importDefault(require_builder2());
    module2.exports = builder_1.default;
  }
});

// node_modules/get-video-id/dist/get-video-id.js
var require_get_video_id = __commonJS({
  "node_modules/get-video-id/dist/get-video-id.js"(exports, module2) {
    init_shims();
    (function(global2, factory) {
      typeof exports === "object" && typeof module2 !== "undefined" ? module2.exports = factory() : typeof define === "function" && define.amd ? define(factory) : (global2 = global2 || self, global2.getVideoId = factory());
    })(exports, function() {
      "use strict";
      function stripParameters(shortcodeString) {
        if (shortcodeString.includes("?")) {
          return shortcodeString.split("?")[0];
        }
        if (shortcodeString.includes("/")) {
          return shortcodeString.split("/")[0];
        }
        if (shortcodeString.includes("&")) {
          return shortcodeString.split("&")[0];
        }
        return shortcodeString;
      }
      function youtube(youtubeString) {
        var string_ = youtubeString;
        string_ = string_.replace(/#t=.*$/, "");
        string_ = string_.replace(/^https?:\/\//, "");
        var shortcode = /youtube:\/\/|youtu\.be\/|y2u\.be\//g;
        if (shortcode.test(string_)) {
          var shortcodeid = string_.split(shortcode)[1];
          return stripParameters(shortcodeid);
        }
        var inlinev = /\/v\/|\/vi\//g;
        if (inlinev.test(string_)) {
          var inlineid = string_.split(inlinev)[1];
          return stripParameters(inlineid);
        }
        var parameterv = /v=|vi=/g;
        if (parameterv.test(string_)) {
          var array = string_.split(parameterv);
          return stripParameters(array[1].split("&")[0]);
        }
        var parameterwebp = /\/an_webp\//g;
        if (parameterwebp.test(string_)) {
          var webp = string_.split(parameterwebp)[1];
          return stripParameters(webp);
        }
        var eformat = /\/e\//g;
        if (eformat.test(string_)) {
          var estring = string_.split(eformat)[1];
          return stripParameters(estring);
        }
        var embedreg = /\/embed\//g;
        if (embedreg.test(string_)) {
          var embedid = string_.split(embedreg)[1];
          return stripParameters(embedid);
        }
        var usernamereg = /\/user\/([a-zA-Z\d]*)$/g;
        if (usernamereg.test(string_)) {
          return void 0;
        }
        var userreg = /\/user\/(?!.*videos)/g;
        if (userreg.test(string_)) {
          var elements = string_.split("/");
          return stripParameters(elements.pop());
        }
        var attrreg = /\/attribution_link\?.*v%3D([^%&]*)(%26|&|$)/;
        if (attrreg.test(string_)) {
          return stripParameters(string_.match(attrreg)[1]);
        }
        return void 0;
      }
      function _slicedToArray(arr, i) {
        return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
      }
      function _arrayWithHoles(arr) {
        if (Array.isArray(arr))
          return arr;
      }
      function _iterableToArrayLimit(arr, i) {
        var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
        if (_i == null)
          return;
        var _arr = [];
        var _n = true;
        var _d = false;
        var _s, _e;
        try {
          for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
            _arr.push(_s.value);
            if (i && _arr.length === i)
              break;
          }
        } catch (err) {
          _d = true;
          _e = err;
        } finally {
          try {
            if (!_n && _i["return"] != null)
              _i["return"]();
          } finally {
            if (_d)
              throw _e;
          }
        }
        return _arr;
      }
      function _unsupportedIterableToArray(o, minLen) {
        if (!o)
          return;
        if (typeof o === "string")
          return _arrayLikeToArray(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        if (n === "Object" && o.constructor)
          n = o.constructor.name;
        if (n === "Map" || n === "Set")
          return Array.from(o);
        if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
          return _arrayLikeToArray(o, minLen);
      }
      function _arrayLikeToArray(arr, len) {
        if (len == null || len > arr.length)
          len = arr.length;
        for (var i = 0, arr2 = new Array(len); i < len; i++)
          arr2[i] = arr[i];
        return arr2;
      }
      function _nonIterableRest() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      function vimeo(vimeoString) {
        var string_ = vimeoString;
        if (string_.includes("#")) {
          var _string_$split = string_.split("#");
          var _string_$split2 = _slicedToArray(_string_$split, 1);
          string_ = _string_$split2[0];
        }
        if (string_.includes("?") && !string_.includes("clip_id=")) {
          var _string_$split3 = string_.split("?");
          var _string_$split4 = _slicedToArray(_string_$split3, 1);
          string_ = _string_$split4[0];
        }
        var id;
        var array;
        var event = /https?:\/\/vimeo\.com\/event\/(\d+)$/;
        var eventMatches = event.exec(string_);
        if (eventMatches && eventMatches[1]) {
          return eventMatches[1];
        }
        var primary = /https?:\/\/vimeo\.com\/(\d+)/;
        var matches = primary.exec(string_);
        if (matches && matches[1]) {
          return matches[1];
        }
        var vimeoPipe = ["https?://player.vimeo.com/video/[0-9]+$", "https?://vimeo.com/channels", "groups", "album"].join("|");
        var vimeoRegex = new RegExp(vimeoPipe, "gim");
        if (vimeoRegex.test(string_)) {
          array = string_.split("/");
          if (array && array.length > 0) {
            id = array.pop();
          }
        } else if (/clip_id=/gim.test(string_)) {
          array = string_.split("clip_id=");
          if (array && array.length > 0) {
            var _array$1$split = array[1].split("&");
            var _array$1$split2 = _slicedToArray(_array$1$split, 1);
            id = _array$1$split2[0];
          }
        }
        return id;
      }
      function vine(string_) {
        var regex = /https:\/\/vine\.co\/v\/([a-zA-Z\d]*)\/?/;
        var matches = regex.exec(string_);
        if (matches && matches.length > 1) {
          return matches[1];
        }
        return void 0;
      }
      function videopress(urlString) {
        var idRegex;
        if (urlString.includes("embed")) {
          idRegex = /embed\/(\w{8})/;
          return urlString.match(idRegex)[1];
        }
        idRegex = /\/v\/(\w{8})/;
        var matches = urlString.match(idRegex);
        if (matches && matches.length > 0) {
          return matches[1];
        }
        return void 0;
      }
      function microsoftStream(urlString) {
        var regex = urlString.includes("embed") ? /https:\/\/web\.microsoftstream\.com\/embed\/video\/([a-zA-Z\d-]*)\/?/ : /https:\/\/web\.microsoftstream\.com\/video\/([a-zA-Z\d-]*)\/?/;
        var matches = regex.exec(urlString);
        if (matches && matches.length > 1) {
          return matches[1];
        }
        return void 0;
      }
      function tiktok(urlString) {
        var basicReg = /tiktok\.com(.*)\/video\/(\d+)/gm;
        var basicParsed = basicReg.exec(urlString);
        if (basicParsed && basicParsed.length > 2) {
          return basicParsed[2];
        }
        return void 0;
      }
      function dailymotion(urlString) {
        var basicReg = /dailymotion\.com(.*)(video)\/([a-zA-Z\d]+)/gm;
        var basicParsed = basicReg.exec(urlString);
        if (basicParsed) {
          return basicParsed[3];
        }
        var shortRegex = /dai\.ly\/([a-zA-Z\d]+)/gm;
        var shortParsed = shortRegex.exec(urlString);
        if (shortParsed && shortParsed.length > 1) {
          return shortParsed[1];
        }
        var dynamicRegex = /dailymotion\.com(.*)video=([a-zA-Z\d]+)/gm;
        var dynamicParsed = dynamicRegex.exec(urlString);
        if (dynamicParsed && dynamicParsed.length > 2) {
          return dynamicParsed[2];
        }
        return void 0;
      }
      function getSrc(input) {
        if (typeof input !== "string") {
          throw new TypeError("getSrc expected a string");
        }
        var srcRegEx = /src="(.*?)"/gm;
        var matches = srcRegEx.exec(input);
        if (matches && matches.length >= 2) {
          return matches[1];
        }
        return void 0;
      }
      function getVideoId2(urlString) {
        if (typeof urlString !== "string") {
          throw new TypeError("get-video-id expects a string");
        }
        var string_ = urlString;
        if (/<iframe/gi.test(string_)) {
          string_ = getSrc(string_);
        }
        string_ = string_.trim();
        string_ = string_.replace("-nocookie", "");
        string_ = string_.replace("/www.", "/");
        var metadata = {
          id: null,
          service: null
        };
        if (/\/\/google/.test(string_)) {
          var matches = string_.match(/url=([^&]+)&/);
          if (matches) {
            string_ = decodeURIComponent(matches[1]);
          }
        }
        if (/youtube|youtu\.be|y2u\.be|i.ytimg\./.test(string_)) {
          metadata = {
            id: youtube(string_),
            service: "youtube"
          };
        } else if (/vimeo/.test(string_)) {
          metadata = {
            id: vimeo(string_),
            service: "vimeo"
          };
        } else if (/vine/.test(string_)) {
          metadata = {
            id: vine(string_),
            service: "vine"
          };
        } else if (/videopress/.test(string_)) {
          metadata = {
            id: videopress(string_),
            service: "videopress"
          };
        } else if (/microsoftstream/.test(string_)) {
          metadata = {
            id: microsoftStream(string_),
            service: "microsoftstream"
          };
        } else if (/tiktok\.com/.test(string_)) {
          metadata = {
            id: tiktok(string_),
            service: "tiktok"
          };
        } else if (/(dailymotion\.com|dai\.ly)/.test(string_)) {
          metadata = {
            id: dailymotion(string_),
            service: "dailymotion"
          };
        }
        return metadata;
      }
      return getVideoId2;
    });
  }
});

// node_modules/lodash/_baseRandom.js
var require_baseRandom = __commonJS({
  "node_modules/lodash/_baseRandom.js"(exports, module2) {
    init_shims();
    var nativeFloor = Math.floor;
    var nativeRandom = Math.random;
    function baseRandom(lower, upper) {
      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
    }
    module2.exports = baseRandom;
  }
});

// node_modules/lodash/_arraySample.js
var require_arraySample = __commonJS({
  "node_modules/lodash/_arraySample.js"(exports, module2) {
    init_shims();
    var baseRandom = require_baseRandom();
    function arraySample(array) {
      var length = array.length;
      return length ? array[baseRandom(0, length - 1)] : void 0;
    }
    module2.exports = arraySample;
  }
});

// node_modules/lodash/_baseValues.js
var require_baseValues = __commonJS({
  "node_modules/lodash/_baseValues.js"(exports, module2) {
    init_shims();
    var arrayMap = require_arrayMap();
    function baseValues(object, props) {
      return arrayMap(props, function(key) {
        return object[key];
      });
    }
    module2.exports = baseValues;
  }
});

// node_modules/lodash/values.js
var require_values = __commonJS({
  "node_modules/lodash/values.js"(exports, module2) {
    init_shims();
    var baseValues = require_baseValues();
    var keys = require_keys();
    function values(object) {
      return object == null ? [] : baseValues(object, keys(object));
    }
    module2.exports = values;
  }
});

// node_modules/lodash/_baseSample.js
var require_baseSample = __commonJS({
  "node_modules/lodash/_baseSample.js"(exports, module2) {
    init_shims();
    var arraySample = require_arraySample();
    var values = require_values();
    function baseSample(collection) {
      return arraySample(values(collection));
    }
    module2.exports = baseSample;
  }
});

// node_modules/lodash/sample.js
var require_sample = __commonJS({
  "node_modules/lodash/sample.js"(exports, module2) {
    init_shims();
    var arraySample = require_arraySample();
    var baseSample = require_baseSample();
    var isArray = require_isArray();
    function sample(collection) {
      var func = isArray(collection) ? arraySample : baseSample;
      return func(collection);
    }
    module2.exports = sample;
  }
});

// node_modules/@popperjs/core/dist/cjs/popper.js
var require_popper = __commonJS({
  "node_modules/@popperjs/core/dist/cjs/popper.js"(exports) {
    init_shims();
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function getBoundingClientRect(element, includeScale) {
      var rect = element.getBoundingClientRect();
      var scaleX = 1;
      var scaleY = 1;
      return {
        width: rect.width / scaleX,
        height: rect.height / scaleY,
        top: rect.top / scaleY,
        right: rect.right / scaleX,
        bottom: rect.bottom / scaleY,
        left: rect.left / scaleX,
        x: rect.left / scaleX,
        y: rect.top / scaleY
      };
    }
    function getWindow(node) {
      if (node == null) {
        return window;
      }
      if (node.toString() !== "[object Window]") {
        var ownerDocument = node.ownerDocument;
        return ownerDocument ? ownerDocument.defaultView || window : window;
      }
      return node;
    }
    function getWindowScroll(node) {
      var win = getWindow(node);
      var scrollLeft = win.pageXOffset;
      var scrollTop = win.pageYOffset;
      return {
        scrollLeft,
        scrollTop
      };
    }
    function isElement(node) {
      var OwnElement = getWindow(node).Element;
      return node instanceof OwnElement || node instanceof Element;
    }
    function isHTMLElement(node) {
      var OwnElement = getWindow(node).HTMLElement;
      return node instanceof OwnElement || node instanceof HTMLElement;
    }
    function isShadowRoot(node) {
      if (typeof ShadowRoot === "undefined") {
        return false;
      }
      var OwnElement = getWindow(node).ShadowRoot;
      return node instanceof OwnElement || node instanceof ShadowRoot;
    }
    function getHTMLElementScroll(element) {
      return {
        scrollLeft: element.scrollLeft,
        scrollTop: element.scrollTop
      };
    }
    function getNodeScroll(node) {
      if (node === getWindow(node) || !isHTMLElement(node)) {
        return getWindowScroll(node);
      } else {
        return getHTMLElementScroll(node);
      }
    }
    function getNodeName(element) {
      return element ? (element.nodeName || "").toLowerCase() : null;
    }
    function getDocumentElement(element) {
      return ((isElement(element) ? element.ownerDocument : element.document) || window.document).documentElement;
    }
    function getWindowScrollBarX(element) {
      return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;
    }
    function getComputedStyle(element) {
      return getWindow(element).getComputedStyle(element);
    }
    function isScrollParent(element) {
      var _getComputedStyle = getComputedStyle(element), overflow = _getComputedStyle.overflow, overflowX = _getComputedStyle.overflowX, overflowY = _getComputedStyle.overflowY;
      return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);
    }
    function isElementScaled(element) {
      var rect = element.getBoundingClientRect();
      var scaleX = rect.width / element.offsetWidth || 1;
      var scaleY = rect.height / element.offsetHeight || 1;
      return scaleX !== 1 || scaleY !== 1;
    }
    function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {
      if (isFixed === void 0) {
        isFixed = false;
      }
      var isOffsetParentAnElement = isHTMLElement(offsetParent);
      isHTMLElement(offsetParent) && isElementScaled(offsetParent);
      var documentElement = getDocumentElement(offsetParent);
      var rect = getBoundingClientRect(elementOrVirtualElement);
      var scroll = {
        scrollLeft: 0,
        scrollTop: 0
      };
      var offsets = {
        x: 0,
        y: 0
      };
      if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
        if (getNodeName(offsetParent) !== "body" || isScrollParent(documentElement)) {
          scroll = getNodeScroll(offsetParent);
        }
        if (isHTMLElement(offsetParent)) {
          offsets = getBoundingClientRect(offsetParent);
          offsets.x += offsetParent.clientLeft;
          offsets.y += offsetParent.clientTop;
        } else if (documentElement) {
          offsets.x = getWindowScrollBarX(documentElement);
        }
      }
      return {
        x: rect.left + scroll.scrollLeft - offsets.x,
        y: rect.top + scroll.scrollTop - offsets.y,
        width: rect.width,
        height: rect.height
      };
    }
    function getLayoutRect(element) {
      var clientRect = getBoundingClientRect(element);
      var width = element.offsetWidth;
      var height = element.offsetHeight;
      if (Math.abs(clientRect.width - width) <= 1) {
        width = clientRect.width;
      }
      if (Math.abs(clientRect.height - height) <= 1) {
        height = clientRect.height;
      }
      return {
        x: element.offsetLeft,
        y: element.offsetTop,
        width,
        height
      };
    }
    function getParentNode(element) {
      if (getNodeName(element) === "html") {
        return element;
      }
      return element.assignedSlot || element.parentNode || (isShadowRoot(element) ? element.host : null) || getDocumentElement(element);
    }
    function getScrollParent(node) {
      if (["html", "body", "#document"].indexOf(getNodeName(node)) >= 0) {
        return node.ownerDocument.body;
      }
      if (isHTMLElement(node) && isScrollParent(node)) {
        return node;
      }
      return getScrollParent(getParentNode(node));
    }
    function listScrollParents(element, list) {
      var _element$ownerDocumen;
      if (list === void 0) {
        list = [];
      }
      var scrollParent = getScrollParent(element);
      var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);
      var win = getWindow(scrollParent);
      var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;
      var updatedList = list.concat(target);
      return isBody ? updatedList : updatedList.concat(listScrollParents(getParentNode(target)));
    }
    function isTableElement(element) {
      return ["table", "td", "th"].indexOf(getNodeName(element)) >= 0;
    }
    function getTrueOffsetParent(element) {
      if (!isHTMLElement(element) || getComputedStyle(element).position === "fixed") {
        return null;
      }
      return element.offsetParent;
    }
    function getContainingBlock(element) {
      var isFirefox = navigator.userAgent.toLowerCase().indexOf("firefox") !== -1;
      var isIE = navigator.userAgent.indexOf("Trident") !== -1;
      if (isIE && isHTMLElement(element)) {
        var elementCss = getComputedStyle(element);
        if (elementCss.position === "fixed") {
          return null;
        }
      }
      var currentNode = getParentNode(element);
      while (isHTMLElement(currentNode) && ["html", "body"].indexOf(getNodeName(currentNode)) < 0) {
        var css2 = getComputedStyle(currentNode);
        if (css2.transform !== "none" || css2.perspective !== "none" || css2.contain === "paint" || ["transform", "perspective"].indexOf(css2.willChange) !== -1 || isFirefox && css2.willChange === "filter" || isFirefox && css2.filter && css2.filter !== "none") {
          return currentNode;
        } else {
          currentNode = currentNode.parentNode;
        }
      }
      return null;
    }
    function getOffsetParent(element) {
      var window2 = getWindow(element);
      var offsetParent = getTrueOffsetParent(element);
      while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === "static") {
        offsetParent = getTrueOffsetParent(offsetParent);
      }
      if (offsetParent && (getNodeName(offsetParent) === "html" || getNodeName(offsetParent) === "body" && getComputedStyle(offsetParent).position === "static")) {
        return window2;
      }
      return offsetParent || getContainingBlock(element) || window2;
    }
    var top = "top";
    var bottom = "bottom";
    var right = "right";
    var left = "left";
    var auto = "auto";
    var basePlacements = [top, bottom, right, left];
    var start = "start";
    var end = "end";
    var clippingParents = "clippingParents";
    var viewport = "viewport";
    var popper = "popper";
    var reference = "reference";
    var variationPlacements = /* @__PURE__ */ basePlacements.reduce(function(acc, placement) {
      return acc.concat([placement + "-" + start, placement + "-" + end]);
    }, []);
    var placements = /* @__PURE__ */ [].concat(basePlacements, [auto]).reduce(function(acc, placement) {
      return acc.concat([placement, placement + "-" + start, placement + "-" + end]);
    }, []);
    var beforeRead = "beforeRead";
    var read = "read";
    var afterRead = "afterRead";
    var beforeMain = "beforeMain";
    var main = "main";
    var afterMain = "afterMain";
    var beforeWrite = "beforeWrite";
    var write = "write";
    var afterWrite = "afterWrite";
    var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];
    function order(modifiers) {
      var map = new Map();
      var visited = new Set();
      var result = [];
      modifiers.forEach(function(modifier) {
        map.set(modifier.name, modifier);
      });
      function sort(modifier) {
        visited.add(modifier.name);
        var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);
        requires.forEach(function(dep) {
          if (!visited.has(dep)) {
            var depModifier = map.get(dep);
            if (depModifier) {
              sort(depModifier);
            }
          }
        });
        result.push(modifier);
      }
      modifiers.forEach(function(modifier) {
        if (!visited.has(modifier.name)) {
          sort(modifier);
        }
      });
      return result;
    }
    function orderModifiers(modifiers) {
      var orderedModifiers = order(modifiers);
      return modifierPhases.reduce(function(acc, phase) {
        return acc.concat(orderedModifiers.filter(function(modifier) {
          return modifier.phase === phase;
        }));
      }, []);
    }
    function debounce(fn) {
      var pending;
      return function() {
        if (!pending) {
          pending = new Promise(function(resolve2) {
            Promise.resolve().then(function() {
              pending = void 0;
              resolve2(fn());
            });
          });
        }
        return pending;
      };
    }
    function format3(str) {
      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }
      return [].concat(args).reduce(function(p, c) {
        return p.replace(/%s/, c);
      }, str);
    }
    var INVALID_MODIFIER_ERROR = 'Popper: modifier "%s" provided an invalid %s property, expected %s but got %s';
    var MISSING_DEPENDENCY_ERROR = 'Popper: modifier "%s" requires "%s", but "%s" modifier is not available';
    var VALID_PROPERTIES = ["name", "enabled", "phase", "fn", "effect", "requires", "options"];
    function validateModifiers(modifiers) {
      modifiers.forEach(function(modifier) {
        [].concat(Object.keys(modifier), VALID_PROPERTIES).filter(function(value, index2, self2) {
          return self2.indexOf(value) === index2;
        }).forEach(function(key) {
          switch (key) {
            case "name":
              if (typeof modifier.name !== "string") {
                console.error(format3(INVALID_MODIFIER_ERROR, String(modifier.name), '"name"', '"string"', '"' + String(modifier.name) + '"'));
              }
              break;
            case "enabled":
              if (typeof modifier.enabled !== "boolean") {
                console.error(format3(INVALID_MODIFIER_ERROR, modifier.name, '"enabled"', '"boolean"', '"' + String(modifier.enabled) + '"'));
              }
              break;
            case "phase":
              if (modifierPhases.indexOf(modifier.phase) < 0) {
                console.error(format3(INVALID_MODIFIER_ERROR, modifier.name, '"phase"', "either " + modifierPhases.join(", "), '"' + String(modifier.phase) + '"'));
              }
              break;
            case "fn":
              if (typeof modifier.fn !== "function") {
                console.error(format3(INVALID_MODIFIER_ERROR, modifier.name, '"fn"', '"function"', '"' + String(modifier.fn) + '"'));
              }
              break;
            case "effect":
              if (modifier.effect != null && typeof modifier.effect !== "function") {
                console.error(format3(INVALID_MODIFIER_ERROR, modifier.name, '"effect"', '"function"', '"' + String(modifier.fn) + '"'));
              }
              break;
            case "requires":
              if (modifier.requires != null && !Array.isArray(modifier.requires)) {
                console.error(format3(INVALID_MODIFIER_ERROR, modifier.name, '"requires"', '"array"', '"' + String(modifier.requires) + '"'));
              }
              break;
            case "requiresIfExists":
              if (!Array.isArray(modifier.requiresIfExists)) {
                console.error(format3(INVALID_MODIFIER_ERROR, modifier.name, '"requiresIfExists"', '"array"', '"' + String(modifier.requiresIfExists) + '"'));
              }
              break;
            case "options":
            case "data":
              break;
            default:
              console.error('PopperJS: an invalid property has been provided to the "' + modifier.name + '" modifier, valid properties are ' + VALID_PROPERTIES.map(function(s2) {
                return '"' + s2 + '"';
              }).join(", ") + '; but "' + key + '" was provided.');
          }
          modifier.requires && modifier.requires.forEach(function(requirement) {
            if (modifiers.find(function(mod) {
              return mod.name === requirement;
            }) == null) {
              console.error(format3(MISSING_DEPENDENCY_ERROR, String(modifier.name), requirement, requirement));
            }
          });
        });
      });
    }
    function uniqueBy(arr, fn) {
      var identifiers = new Set();
      return arr.filter(function(item) {
        var identifier = fn(item);
        if (!identifiers.has(identifier)) {
          identifiers.add(identifier);
          return true;
        }
      });
    }
    function getBasePlacement(placement) {
      return placement.split("-")[0];
    }
    function mergeByName(modifiers) {
      var merged = modifiers.reduce(function(merged2, current) {
        var existing = merged2[current.name];
        merged2[current.name] = existing ? Object.assign({}, existing, current, {
          options: Object.assign({}, existing.options, current.options),
          data: Object.assign({}, existing.data, current.data)
        }) : current;
        return merged2;
      }, {});
      return Object.keys(merged).map(function(key) {
        return merged[key];
      });
    }
    function getViewportRect(element) {
      var win = getWindow(element);
      var html = getDocumentElement(element);
      var visualViewport = win.visualViewport;
      var width = html.clientWidth;
      var height = html.clientHeight;
      var x = 0;
      var y = 0;
      if (visualViewport) {
        width = visualViewport.width;
        height = visualViewport.height;
        if (!/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {
          x = visualViewport.offsetLeft;
          y = visualViewport.offsetTop;
        }
      }
      return {
        width,
        height,
        x: x + getWindowScrollBarX(element),
        y
      };
    }
    var max = Math.max;
    var min = Math.min;
    var round = Math.round;
    function getDocumentRect(element) {
      var _element$ownerDocumen;
      var html = getDocumentElement(element);
      var winScroll = getWindowScroll(element);
      var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;
      var width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);
      var height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);
      var x = -winScroll.scrollLeft + getWindowScrollBarX(element);
      var y = -winScroll.scrollTop;
      if (getComputedStyle(body || html).direction === "rtl") {
        x += max(html.clientWidth, body ? body.clientWidth : 0) - width;
      }
      return {
        width,
        height,
        x,
        y
      };
    }
    function contains(parent, child) {
      var rootNode = child.getRootNode && child.getRootNode();
      if (parent.contains(child)) {
        return true;
      } else if (rootNode && isShadowRoot(rootNode)) {
        var next = child;
        do {
          if (next && parent.isSameNode(next)) {
            return true;
          }
          next = next.parentNode || next.host;
        } while (next);
      }
      return false;
    }
    function rectToClientRect(rect) {
      return Object.assign({}, rect, {
        left: rect.x,
        top: rect.y,
        right: rect.x + rect.width,
        bottom: rect.y + rect.height
      });
    }
    function getInnerBoundingClientRect(element) {
      var rect = getBoundingClientRect(element);
      rect.top = rect.top + element.clientTop;
      rect.left = rect.left + element.clientLeft;
      rect.bottom = rect.top + element.clientHeight;
      rect.right = rect.left + element.clientWidth;
      rect.width = element.clientWidth;
      rect.height = element.clientHeight;
      rect.x = rect.left;
      rect.y = rect.top;
      return rect;
    }
    function getClientRectFromMixedType(element, clippingParent) {
      return clippingParent === viewport ? rectToClientRect(getViewportRect(element)) : isHTMLElement(clippingParent) ? getInnerBoundingClientRect(clippingParent) : rectToClientRect(getDocumentRect(getDocumentElement(element)));
    }
    function getClippingParents(element) {
      var clippingParents2 = listScrollParents(getParentNode(element));
      var canEscapeClipping = ["absolute", "fixed"].indexOf(getComputedStyle(element).position) >= 0;
      var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;
      if (!isElement(clipperElement)) {
        return [];
      }
      return clippingParents2.filter(function(clippingParent) {
        return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== "body";
      });
    }
    function getClippingRect(element, boundary, rootBoundary) {
      var mainClippingParents = boundary === "clippingParents" ? getClippingParents(element) : [].concat(boundary);
      var clippingParents2 = [].concat(mainClippingParents, [rootBoundary]);
      var firstClippingParent = clippingParents2[0];
      var clippingRect = clippingParents2.reduce(function(accRect, clippingParent) {
        var rect = getClientRectFromMixedType(element, clippingParent);
        accRect.top = max(rect.top, accRect.top);
        accRect.right = min(rect.right, accRect.right);
        accRect.bottom = min(rect.bottom, accRect.bottom);
        accRect.left = max(rect.left, accRect.left);
        return accRect;
      }, getClientRectFromMixedType(element, firstClippingParent));
      clippingRect.width = clippingRect.right - clippingRect.left;
      clippingRect.height = clippingRect.bottom - clippingRect.top;
      clippingRect.x = clippingRect.left;
      clippingRect.y = clippingRect.top;
      return clippingRect;
    }
    function getVariation(placement) {
      return placement.split("-")[1];
    }
    function getMainAxisFromPlacement(placement) {
      return ["top", "bottom"].indexOf(placement) >= 0 ? "x" : "y";
    }
    function computeOffsets(_ref) {
      var reference2 = _ref.reference, element = _ref.element, placement = _ref.placement;
      var basePlacement = placement ? getBasePlacement(placement) : null;
      var variation = placement ? getVariation(placement) : null;
      var commonX = reference2.x + reference2.width / 2 - element.width / 2;
      var commonY = reference2.y + reference2.height / 2 - element.height / 2;
      var offsets;
      switch (basePlacement) {
        case top:
          offsets = {
            x: commonX,
            y: reference2.y - element.height
          };
          break;
        case bottom:
          offsets = {
            x: commonX,
            y: reference2.y + reference2.height
          };
          break;
        case right:
          offsets = {
            x: reference2.x + reference2.width,
            y: commonY
          };
          break;
        case left:
          offsets = {
            x: reference2.x - element.width,
            y: commonY
          };
          break;
        default:
          offsets = {
            x: reference2.x,
            y: reference2.y
          };
      }
      var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;
      if (mainAxis != null) {
        var len = mainAxis === "y" ? "height" : "width";
        switch (variation) {
          case start:
            offsets[mainAxis] = offsets[mainAxis] - (reference2[len] / 2 - element[len] / 2);
            break;
          case end:
            offsets[mainAxis] = offsets[mainAxis] + (reference2[len] / 2 - element[len] / 2);
            break;
        }
      }
      return offsets;
    }
    function getFreshSideObject() {
      return {
        top: 0,
        right: 0,
        bottom: 0,
        left: 0
      };
    }
    function mergePaddingObject(paddingObject) {
      return Object.assign({}, getFreshSideObject(), paddingObject);
    }
    function expandToHashMap(value, keys) {
      return keys.reduce(function(hashMap, key) {
        hashMap[key] = value;
        return hashMap;
      }, {});
    }
    function detectOverflow(state, options2) {
      if (options2 === void 0) {
        options2 = {};
      }
      var _options = options2, _options$placement = _options.placement, placement = _options$placement === void 0 ? state.placement : _options$placement, _options$boundary = _options.boundary, boundary = _options$boundary === void 0 ? clippingParents : _options$boundary, _options$rootBoundary = _options.rootBoundary, rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary, _options$elementConte = _options.elementContext, elementContext = _options$elementConte === void 0 ? popper : _options$elementConte, _options$altBoundary = _options.altBoundary, altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary, _options$padding = _options.padding, padding = _options$padding === void 0 ? 0 : _options$padding;
      var paddingObject = mergePaddingObject(typeof padding !== "number" ? padding : expandToHashMap(padding, basePlacements));
      var altContext = elementContext === popper ? reference : popper;
      var popperRect = state.rects.popper;
      var element = state.elements[altBoundary ? altContext : elementContext];
      var clippingClientRect = getClippingRect(isElement(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary);
      var referenceClientRect = getBoundingClientRect(state.elements.reference);
      var popperOffsets2 = computeOffsets({
        reference: referenceClientRect,
        element: popperRect,
        strategy: "absolute",
        placement
      });
      var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets2));
      var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect;
      var overflowOffsets = {
        top: clippingClientRect.top - elementClientRect.top + paddingObject.top,
        bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,
        left: clippingClientRect.left - elementClientRect.left + paddingObject.left,
        right: elementClientRect.right - clippingClientRect.right + paddingObject.right
      };
      var offsetData = state.modifiersData.offset;
      if (elementContext === popper && offsetData) {
        var offset2 = offsetData[placement];
        Object.keys(overflowOffsets).forEach(function(key) {
          var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;
          var axis = [top, bottom].indexOf(key) >= 0 ? "y" : "x";
          overflowOffsets[key] += offset2[axis] * multiply;
        });
      }
      return overflowOffsets;
    }
    var INVALID_ELEMENT_ERROR = "Popper: Invalid reference or popper argument provided. They must be either a DOM element or virtual element.";
    var INFINITE_LOOP_ERROR = "Popper: An infinite loop in the modifiers cycle has been detected! The cycle has been interrupted to prevent a browser crash.";
    var DEFAULT_OPTIONS = {
      placement: "bottom",
      modifiers: [],
      strategy: "absolute"
    };
    function areValidElements() {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      return !args.some(function(element) {
        return !(element && typeof element.getBoundingClientRect === "function");
      });
    }
    function popperGenerator(generatorOptions) {
      if (generatorOptions === void 0) {
        generatorOptions = {};
      }
      var _generatorOptions = generatorOptions, _generatorOptions$def = _generatorOptions.defaultModifiers, defaultModifiers2 = _generatorOptions$def === void 0 ? [] : _generatorOptions$def, _generatorOptions$def2 = _generatorOptions.defaultOptions, defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;
      return function createPopper3(reference2, popper2, options2) {
        if (options2 === void 0) {
          options2 = defaultOptions;
        }
        var state = {
          placement: "bottom",
          orderedModifiers: [],
          options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),
          modifiersData: {},
          elements: {
            reference: reference2,
            popper: popper2
          },
          attributes: {},
          styles: {}
        };
        var effectCleanupFns = [];
        var isDestroyed = false;
        var instance = {
          state,
          setOptions: function setOptions(setOptionsAction) {
            var options3 = typeof setOptionsAction === "function" ? setOptionsAction(state.options) : setOptionsAction;
            cleanupModifierEffects();
            state.options = Object.assign({}, defaultOptions, state.options, options3);
            state.scrollParents = {
              reference: isElement(reference2) ? listScrollParents(reference2) : reference2.contextElement ? listScrollParents(reference2.contextElement) : [],
              popper: listScrollParents(popper2)
            };
            var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers2, state.options.modifiers)));
            state.orderedModifiers = orderedModifiers.filter(function(m) {
              return m.enabled;
            });
            if (process.env.NODE_ENV !== "production") {
              var modifiers = uniqueBy([].concat(orderedModifiers, state.options.modifiers), function(_ref) {
                var name = _ref.name;
                return name;
              });
              validateModifiers(modifiers);
              if (getBasePlacement(state.options.placement) === auto) {
                var flipModifier = state.orderedModifiers.find(function(_ref2) {
                  var name = _ref2.name;
                  return name === "flip";
                });
                if (!flipModifier) {
                  console.error(['Popper: "auto" placements require the "flip" modifier be', "present and enabled to work."].join(" "));
                }
              }
              var _getComputedStyle = getComputedStyle(popper2), marginTop = _getComputedStyle.marginTop, marginRight = _getComputedStyle.marginRight, marginBottom = _getComputedStyle.marginBottom, marginLeft = _getComputedStyle.marginLeft;
              if ([marginTop, marginRight, marginBottom, marginLeft].some(function(margin) {
                return parseFloat(margin);
              })) {
                console.warn(['Popper: CSS "margin" styles cannot be used to apply padding', "between the popper and its reference element or boundary.", "To replicate margin, use the `offset` modifier, as well as", "the `padding` option in the `preventOverflow` and `flip`", "modifiers."].join(" "));
              }
            }
            runModifierEffects();
            return instance.update();
          },
          forceUpdate: function forceUpdate() {
            if (isDestroyed) {
              return;
            }
            var _state$elements = state.elements, reference3 = _state$elements.reference, popper3 = _state$elements.popper;
            if (!areValidElements(reference3, popper3)) {
              if (process.env.NODE_ENV !== "production") {
                console.error(INVALID_ELEMENT_ERROR);
              }
              return;
            }
            state.rects = {
              reference: getCompositeRect(reference3, getOffsetParent(popper3), state.options.strategy === "fixed"),
              popper: getLayoutRect(popper3)
            };
            state.reset = false;
            state.placement = state.options.placement;
            state.orderedModifiers.forEach(function(modifier) {
              return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);
            });
            var __debug_loops__ = 0;
            for (var index2 = 0; index2 < state.orderedModifiers.length; index2++) {
              if (process.env.NODE_ENV !== "production") {
                __debug_loops__ += 1;
                if (__debug_loops__ > 100) {
                  console.error(INFINITE_LOOP_ERROR);
                  break;
                }
              }
              if (state.reset === true) {
                state.reset = false;
                index2 = -1;
                continue;
              }
              var _state$orderedModifie = state.orderedModifiers[index2], fn = _state$orderedModifie.fn, _state$orderedModifie2 = _state$orderedModifie.options, _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2, name = _state$orderedModifie.name;
              if (typeof fn === "function") {
                state = fn({
                  state,
                  options: _options,
                  name,
                  instance
                }) || state;
              }
            }
          },
          update: debounce(function() {
            return new Promise(function(resolve2) {
              instance.forceUpdate();
              resolve2(state);
            });
          }),
          destroy: function destroy() {
            cleanupModifierEffects();
            isDestroyed = true;
          }
        };
        if (!areValidElements(reference2, popper2)) {
          if (process.env.NODE_ENV !== "production") {
            console.error(INVALID_ELEMENT_ERROR);
          }
          return instance;
        }
        instance.setOptions(options2).then(function(state2) {
          if (!isDestroyed && options2.onFirstUpdate) {
            options2.onFirstUpdate(state2);
          }
        });
        function runModifierEffects() {
          state.orderedModifiers.forEach(function(_ref3) {
            var name = _ref3.name, _ref3$options = _ref3.options, options3 = _ref3$options === void 0 ? {} : _ref3$options, effect2 = _ref3.effect;
            if (typeof effect2 === "function") {
              var cleanupFn = effect2({
                state,
                name,
                instance,
                options: options3
              });
              var noopFn = function noopFn2() {
              };
              effectCleanupFns.push(cleanupFn || noopFn);
            }
          });
        }
        function cleanupModifierEffects() {
          effectCleanupFns.forEach(function(fn) {
            return fn();
          });
          effectCleanupFns = [];
        }
        return instance;
      };
    }
    var passive = {
      passive: true
    };
    function effect$2(_ref) {
      var state = _ref.state, instance = _ref.instance, options2 = _ref.options;
      var _options$scroll = options2.scroll, scroll = _options$scroll === void 0 ? true : _options$scroll, _options$resize = options2.resize, resize = _options$resize === void 0 ? true : _options$resize;
      var window2 = getWindow(state.elements.popper);
      var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);
      if (scroll) {
        scrollParents.forEach(function(scrollParent) {
          scrollParent.addEventListener("scroll", instance.update, passive);
        });
      }
      if (resize) {
        window2.addEventListener("resize", instance.update, passive);
      }
      return function() {
        if (scroll) {
          scrollParents.forEach(function(scrollParent) {
            scrollParent.removeEventListener("scroll", instance.update, passive);
          });
        }
        if (resize) {
          window2.removeEventListener("resize", instance.update, passive);
        }
      };
    }
    var eventListeners = {
      name: "eventListeners",
      enabled: true,
      phase: "write",
      fn: function fn() {
      },
      effect: effect$2,
      data: {}
    };
    function popperOffsets(_ref) {
      var state = _ref.state, name = _ref.name;
      state.modifiersData[name] = computeOffsets({
        reference: state.rects.reference,
        element: state.rects.popper,
        strategy: "absolute",
        placement: state.placement
      });
    }
    var popperOffsets$1 = {
      name: "popperOffsets",
      enabled: true,
      phase: "read",
      fn: popperOffsets,
      data: {}
    };
    var unsetSides = {
      top: "auto",
      right: "auto",
      bottom: "auto",
      left: "auto"
    };
    function roundOffsetsByDPR(_ref) {
      var x = _ref.x, y = _ref.y;
      var win = window;
      var dpr = win.devicePixelRatio || 1;
      return {
        x: round(round(x * dpr) / dpr) || 0,
        y: round(round(y * dpr) / dpr) || 0
      };
    }
    function mapToStyles(_ref2) {
      var _Object$assign2;
      var popper2 = _ref2.popper, popperRect = _ref2.popperRect, placement = _ref2.placement, variation = _ref2.variation, offsets = _ref2.offsets, position = _ref2.position, gpuAcceleration = _ref2.gpuAcceleration, adaptive = _ref2.adaptive, roundOffsets = _ref2.roundOffsets;
      var _ref3 = roundOffsets === true ? roundOffsetsByDPR(offsets) : typeof roundOffsets === "function" ? roundOffsets(offsets) : offsets, _ref3$x = _ref3.x, x = _ref3$x === void 0 ? 0 : _ref3$x, _ref3$y = _ref3.y, y = _ref3$y === void 0 ? 0 : _ref3$y;
      var hasX = offsets.hasOwnProperty("x");
      var hasY = offsets.hasOwnProperty("y");
      var sideX = left;
      var sideY = top;
      var win = window;
      if (adaptive) {
        var offsetParent = getOffsetParent(popper2);
        var heightProp = "clientHeight";
        var widthProp = "clientWidth";
        if (offsetParent === getWindow(popper2)) {
          offsetParent = getDocumentElement(popper2);
          if (getComputedStyle(offsetParent).position !== "static" && position === "absolute") {
            heightProp = "scrollHeight";
            widthProp = "scrollWidth";
          }
        }
        offsetParent = offsetParent;
        if (placement === top || (placement === left || placement === right) && variation === end) {
          sideY = bottom;
          y -= offsetParent[heightProp] - popperRect.height;
          y *= gpuAcceleration ? 1 : -1;
        }
        if (placement === left || (placement === top || placement === bottom) && variation === end) {
          sideX = right;
          x -= offsetParent[widthProp] - popperRect.width;
          x *= gpuAcceleration ? 1 : -1;
        }
      }
      var commonStyles = Object.assign({
        position
      }, adaptive && unsetSides);
      if (gpuAcceleration) {
        var _Object$assign;
        return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? "0" : "", _Object$assign[sideX] = hasX ? "0" : "", _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? "translate(" + x + "px, " + y + "px)" : "translate3d(" + x + "px, " + y + "px, 0)", _Object$assign));
      }
      return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + "px" : "", _Object$assign2[sideX] = hasX ? x + "px" : "", _Object$assign2.transform = "", _Object$assign2));
    }
    function computeStyles(_ref4) {
      var state = _ref4.state, options2 = _ref4.options;
      var _options$gpuAccelerat = options2.gpuAcceleration, gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat, _options$adaptive = options2.adaptive, adaptive = _options$adaptive === void 0 ? true : _options$adaptive, _options$roundOffsets = options2.roundOffsets, roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;
      if (process.env.NODE_ENV !== "production") {
        var transitionProperty = getComputedStyle(state.elements.popper).transitionProperty || "";
        if (adaptive && ["transform", "top", "right", "bottom", "left"].some(function(property) {
          return transitionProperty.indexOf(property) >= 0;
        })) {
          console.warn(["Popper: Detected CSS transitions on at least one of the following", 'CSS properties: "transform", "top", "right", "bottom", "left".', "\n\n", 'Disable the "computeStyles" modifier\'s `adaptive` option to allow', "for smooth transitions, or remove these properties from the CSS", "transition declaration on the popper element if only transitioning", "opacity or background-color for example.", "\n\n", "We recommend using the popper element as a wrapper around an inner", "element that can have any CSS property transitioned for animations."].join(" "));
        }
      }
      var commonStyles = {
        placement: getBasePlacement(state.placement),
        variation: getVariation(state.placement),
        popper: state.elements.popper,
        popperRect: state.rects.popper,
        gpuAcceleration
      };
      if (state.modifiersData.popperOffsets != null) {
        state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {
          offsets: state.modifiersData.popperOffsets,
          position: state.options.strategy,
          adaptive,
          roundOffsets
        })));
      }
      if (state.modifiersData.arrow != null) {
        state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {
          offsets: state.modifiersData.arrow,
          position: "absolute",
          adaptive: false,
          roundOffsets
        })));
      }
      state.attributes.popper = Object.assign({}, state.attributes.popper, {
        "data-popper-placement": state.placement
      });
    }
    var computeStyles$1 = {
      name: "computeStyles",
      enabled: true,
      phase: "beforeWrite",
      fn: computeStyles,
      data: {}
    };
    function applyStyles(_ref) {
      var state = _ref.state;
      Object.keys(state.elements).forEach(function(name) {
        var style = state.styles[name] || {};
        var attributes = state.attributes[name] || {};
        var element = state.elements[name];
        if (!isHTMLElement(element) || !getNodeName(element)) {
          return;
        }
        Object.assign(element.style, style);
        Object.keys(attributes).forEach(function(name2) {
          var value = attributes[name2];
          if (value === false) {
            element.removeAttribute(name2);
          } else {
            element.setAttribute(name2, value === true ? "" : value);
          }
        });
      });
    }
    function effect$1(_ref2) {
      var state = _ref2.state;
      var initialStyles = {
        popper: {
          position: state.options.strategy,
          left: "0",
          top: "0",
          margin: "0"
        },
        arrow: {
          position: "absolute"
        },
        reference: {}
      };
      Object.assign(state.elements.popper.style, initialStyles.popper);
      state.styles = initialStyles;
      if (state.elements.arrow) {
        Object.assign(state.elements.arrow.style, initialStyles.arrow);
      }
      return function() {
        Object.keys(state.elements).forEach(function(name) {
          var element = state.elements[name];
          var attributes = state.attributes[name] || {};
          var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]);
          var style = styleProperties.reduce(function(style2, property) {
            style2[property] = "";
            return style2;
          }, {});
          if (!isHTMLElement(element) || !getNodeName(element)) {
            return;
          }
          Object.assign(element.style, style);
          Object.keys(attributes).forEach(function(attribute) {
            element.removeAttribute(attribute);
          });
        });
      };
    }
    var applyStyles$1 = {
      name: "applyStyles",
      enabled: true,
      phase: "write",
      fn: applyStyles,
      effect: effect$1,
      requires: ["computeStyles"]
    };
    function distanceAndSkiddingToXY(placement, rects, offset2) {
      var basePlacement = getBasePlacement(placement);
      var invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;
      var _ref = typeof offset2 === "function" ? offset2(Object.assign({}, rects, {
        placement
      })) : offset2, skidding = _ref[0], distance = _ref[1];
      skidding = skidding || 0;
      distance = (distance || 0) * invertDistance;
      return [left, right].indexOf(basePlacement) >= 0 ? {
        x: distance,
        y: skidding
      } : {
        x: skidding,
        y: distance
      };
    }
    function offset(_ref2) {
      var state = _ref2.state, options2 = _ref2.options, name = _ref2.name;
      var _options$offset = options2.offset, offset2 = _options$offset === void 0 ? [0, 0] : _options$offset;
      var data = placements.reduce(function(acc, placement) {
        acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset2);
        return acc;
      }, {});
      var _data$state$placement = data[state.placement], x = _data$state$placement.x, y = _data$state$placement.y;
      if (state.modifiersData.popperOffsets != null) {
        state.modifiersData.popperOffsets.x += x;
        state.modifiersData.popperOffsets.y += y;
      }
      state.modifiersData[name] = data;
    }
    var offset$1 = {
      name: "offset",
      enabled: true,
      phase: "main",
      requires: ["popperOffsets"],
      fn: offset
    };
    var hash$1 = {
      left: "right",
      right: "left",
      bottom: "top",
      top: "bottom"
    };
    function getOppositePlacement(placement) {
      return placement.replace(/left|right|bottom|top/g, function(matched) {
        return hash$1[matched];
      });
    }
    var hash2 = {
      start: "end",
      end: "start"
    };
    function getOppositeVariationPlacement(placement) {
      return placement.replace(/start|end/g, function(matched) {
        return hash2[matched];
      });
    }
    function computeAutoPlacement(state, options2) {
      if (options2 === void 0) {
        options2 = {};
      }
      var _options = options2, placement = _options.placement, boundary = _options.boundary, rootBoundary = _options.rootBoundary, padding = _options.padding, flipVariations = _options.flipVariations, _options$allowedAutoP = _options.allowedAutoPlacements, allowedAutoPlacements = _options$allowedAutoP === void 0 ? placements : _options$allowedAutoP;
      var variation = getVariation(placement);
      var placements$1 = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function(placement2) {
        return getVariation(placement2) === variation;
      }) : basePlacements;
      var allowedPlacements = placements$1.filter(function(placement2) {
        return allowedAutoPlacements.indexOf(placement2) >= 0;
      });
      if (allowedPlacements.length === 0) {
        allowedPlacements = placements$1;
        if (process.env.NODE_ENV !== "production") {
          console.error(["Popper: The `allowedAutoPlacements` option did not allow any", "placements. Ensure the `placement` option matches the variation", "of the allowed placements.", 'For example, "auto" cannot be used to allow "bottom-start".', 'Use "auto-start" instead.'].join(" "));
        }
      }
      var overflows = allowedPlacements.reduce(function(acc, placement2) {
        acc[placement2] = detectOverflow(state, {
          placement: placement2,
          boundary,
          rootBoundary,
          padding
        })[getBasePlacement(placement2)];
        return acc;
      }, {});
      return Object.keys(overflows).sort(function(a, b) {
        return overflows[a] - overflows[b];
      });
    }
    function getExpandedFallbackPlacements(placement) {
      if (getBasePlacement(placement) === auto) {
        return [];
      }
      var oppositePlacement = getOppositePlacement(placement);
      return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];
    }
    function flip(_ref) {
      var state = _ref.state, options2 = _ref.options, name = _ref.name;
      if (state.modifiersData[name]._skip) {
        return;
      }
      var _options$mainAxis = options2.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options2.altAxis, checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis, specifiedFallbackPlacements = options2.fallbackPlacements, padding = options2.padding, boundary = options2.boundary, rootBoundary = options2.rootBoundary, altBoundary = options2.altBoundary, _options$flipVariatio = options2.flipVariations, flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio, allowedAutoPlacements = options2.allowedAutoPlacements;
      var preferredPlacement = state.options.placement;
      var basePlacement = getBasePlacement(preferredPlacement);
      var isBasePlacement = basePlacement === preferredPlacement;
      var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));
      var placements2 = [preferredPlacement].concat(fallbackPlacements).reduce(function(acc, placement2) {
        return acc.concat(getBasePlacement(placement2) === auto ? computeAutoPlacement(state, {
          placement: placement2,
          boundary,
          rootBoundary,
          padding,
          flipVariations,
          allowedAutoPlacements
        }) : placement2);
      }, []);
      var referenceRect = state.rects.reference;
      var popperRect = state.rects.popper;
      var checksMap = new Map();
      var makeFallbackChecks = true;
      var firstFittingPlacement = placements2[0];
      for (var i = 0; i < placements2.length; i++) {
        var placement = placements2[i];
        var _basePlacement = getBasePlacement(placement);
        var isStartVariation = getVariation(placement) === start;
        var isVertical = [top, bottom].indexOf(_basePlacement) >= 0;
        var len = isVertical ? "width" : "height";
        var overflow = detectOverflow(state, {
          placement,
          boundary,
          rootBoundary,
          altBoundary,
          padding
        });
        var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : top;
        if (referenceRect[len] > popperRect[len]) {
          mainVariationSide = getOppositePlacement(mainVariationSide);
        }
        var altVariationSide = getOppositePlacement(mainVariationSide);
        var checks = [];
        if (checkMainAxis) {
          checks.push(overflow[_basePlacement] <= 0);
        }
        if (checkAltAxis) {
          checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);
        }
        if (checks.every(function(check) {
          return check;
        })) {
          firstFittingPlacement = placement;
          makeFallbackChecks = false;
          break;
        }
        checksMap.set(placement, checks);
      }
      if (makeFallbackChecks) {
        var numberOfChecks = flipVariations ? 3 : 1;
        var _loop = function _loop2(_i2) {
          var fittingPlacement = placements2.find(function(placement2) {
            var checks2 = checksMap.get(placement2);
            if (checks2) {
              return checks2.slice(0, _i2).every(function(check) {
                return check;
              });
            }
          });
          if (fittingPlacement) {
            firstFittingPlacement = fittingPlacement;
            return "break";
          }
        };
        for (var _i = numberOfChecks; _i > 0; _i--) {
          var _ret = _loop(_i);
          if (_ret === "break")
            break;
        }
      }
      if (state.placement !== firstFittingPlacement) {
        state.modifiersData[name]._skip = true;
        state.placement = firstFittingPlacement;
        state.reset = true;
      }
    }
    var flip$1 = {
      name: "flip",
      enabled: true,
      phase: "main",
      fn: flip,
      requiresIfExists: ["offset"],
      data: {
        _skip: false
      }
    };
    function getAltAxis(axis) {
      return axis === "x" ? "y" : "x";
    }
    function within(min$1, value, max$1) {
      return max(min$1, min(value, max$1));
    }
    function preventOverflow(_ref) {
      var state = _ref.state, options2 = _ref.options, name = _ref.name;
      var _options$mainAxis = options2.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options2.altAxis, checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis, boundary = options2.boundary, rootBoundary = options2.rootBoundary, altBoundary = options2.altBoundary, padding = options2.padding, _options$tether = options2.tether, tether = _options$tether === void 0 ? true : _options$tether, _options$tetherOffset = options2.tetherOffset, tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;
      var overflow = detectOverflow(state, {
        boundary,
        rootBoundary,
        padding,
        altBoundary
      });
      var basePlacement = getBasePlacement(state.placement);
      var variation = getVariation(state.placement);
      var isBasePlacement = !variation;
      var mainAxis = getMainAxisFromPlacement(basePlacement);
      var altAxis = getAltAxis(mainAxis);
      var popperOffsets2 = state.modifiersData.popperOffsets;
      var referenceRect = state.rects.reference;
      var popperRect = state.rects.popper;
      var tetherOffsetValue = typeof tetherOffset === "function" ? tetherOffset(Object.assign({}, state.rects, {
        placement: state.placement
      })) : tetherOffset;
      var data = {
        x: 0,
        y: 0
      };
      if (!popperOffsets2) {
        return;
      }
      if (checkMainAxis || checkAltAxis) {
        var mainSide = mainAxis === "y" ? top : left;
        var altSide = mainAxis === "y" ? bottom : right;
        var len = mainAxis === "y" ? "height" : "width";
        var offset2 = popperOffsets2[mainAxis];
        var min$1 = popperOffsets2[mainAxis] + overflow[mainSide];
        var max$1 = popperOffsets2[mainAxis] - overflow[altSide];
        var additive = tether ? -popperRect[len] / 2 : 0;
        var minLen = variation === start ? referenceRect[len] : popperRect[len];
        var maxLen = variation === start ? -popperRect[len] : -referenceRect[len];
        var arrowElement = state.elements.arrow;
        var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {
          width: 0,
          height: 0
        };
        var arrowPaddingObject = state.modifiersData["arrow#persistent"] ? state.modifiersData["arrow#persistent"].padding : getFreshSideObject();
        var arrowPaddingMin = arrowPaddingObject[mainSide];
        var arrowPaddingMax = arrowPaddingObject[altSide];
        var arrowLen = within(0, referenceRect[len], arrowRect[len]);
        var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - tetherOffsetValue : minLen - arrowLen - arrowPaddingMin - tetherOffsetValue;
        var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + tetherOffsetValue : maxLen + arrowLen + arrowPaddingMax + tetherOffsetValue;
        var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);
        var clientOffset = arrowOffsetParent ? mainAxis === "y" ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;
        var offsetModifierValue = state.modifiersData.offset ? state.modifiersData.offset[state.placement][mainAxis] : 0;
        var tetherMin = popperOffsets2[mainAxis] + minOffset - offsetModifierValue - clientOffset;
        var tetherMax = popperOffsets2[mainAxis] + maxOffset - offsetModifierValue;
        if (checkMainAxis) {
          var preventedOffset = within(tether ? min(min$1, tetherMin) : min$1, offset2, tether ? max(max$1, tetherMax) : max$1);
          popperOffsets2[mainAxis] = preventedOffset;
          data[mainAxis] = preventedOffset - offset2;
        }
        if (checkAltAxis) {
          var _mainSide = mainAxis === "x" ? top : left;
          var _altSide = mainAxis === "x" ? bottom : right;
          var _offset = popperOffsets2[altAxis];
          var _min = _offset + overflow[_mainSide];
          var _max = _offset - overflow[_altSide];
          var _preventedOffset = within(tether ? min(_min, tetherMin) : _min, _offset, tether ? max(_max, tetherMax) : _max);
          popperOffsets2[altAxis] = _preventedOffset;
          data[altAxis] = _preventedOffset - _offset;
        }
      }
      state.modifiersData[name] = data;
    }
    var preventOverflow$1 = {
      name: "preventOverflow",
      enabled: true,
      phase: "main",
      fn: preventOverflow,
      requiresIfExists: ["offset"]
    };
    var toPaddingObject = function toPaddingObject2(padding, state) {
      padding = typeof padding === "function" ? padding(Object.assign({}, state.rects, {
        placement: state.placement
      })) : padding;
      return mergePaddingObject(typeof padding !== "number" ? padding : expandToHashMap(padding, basePlacements));
    };
    function arrow(_ref) {
      var _state$modifiersData$;
      var state = _ref.state, name = _ref.name, options2 = _ref.options;
      var arrowElement = state.elements.arrow;
      var popperOffsets2 = state.modifiersData.popperOffsets;
      var basePlacement = getBasePlacement(state.placement);
      var axis = getMainAxisFromPlacement(basePlacement);
      var isVertical = [left, right].indexOf(basePlacement) >= 0;
      var len = isVertical ? "height" : "width";
      if (!arrowElement || !popperOffsets2) {
        return;
      }
      var paddingObject = toPaddingObject(options2.padding, state);
      var arrowRect = getLayoutRect(arrowElement);
      var minProp = axis === "y" ? top : left;
      var maxProp = axis === "y" ? bottom : right;
      var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets2[axis] - state.rects.popper[len];
      var startDiff = popperOffsets2[axis] - state.rects.reference[axis];
      var arrowOffsetParent = getOffsetParent(arrowElement);
      var clientSize = arrowOffsetParent ? axis === "y" ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;
      var centerToReference = endDiff / 2 - startDiff / 2;
      var min2 = paddingObject[minProp];
      var max2 = clientSize - arrowRect[len] - paddingObject[maxProp];
      var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;
      var offset2 = within(min2, center, max2);
      var axisProp = axis;
      state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset2, _state$modifiersData$.centerOffset = offset2 - center, _state$modifiersData$);
    }
    function effect(_ref2) {
      var state = _ref2.state, options2 = _ref2.options;
      var _options$element = options2.element, arrowElement = _options$element === void 0 ? "[data-popper-arrow]" : _options$element;
      if (arrowElement == null) {
        return;
      }
      if (typeof arrowElement === "string") {
        arrowElement = state.elements.popper.querySelector(arrowElement);
        if (!arrowElement) {
          return;
        }
      }
      if (process.env.NODE_ENV !== "production") {
        if (!isHTMLElement(arrowElement)) {
          console.error(['Popper: "arrow" element must be an HTMLElement (not an SVGElement).', "To use an SVG arrow, wrap it in an HTMLElement that will be used as", "the arrow."].join(" "));
        }
      }
      if (!contains(state.elements.popper, arrowElement)) {
        if (process.env.NODE_ENV !== "production") {
          console.error(['Popper: "arrow" modifier\'s `element` must be a child of the popper', "element."].join(" "));
        }
        return;
      }
      state.elements.arrow = arrowElement;
    }
    var arrow$1 = {
      name: "arrow",
      enabled: true,
      phase: "main",
      fn: arrow,
      effect,
      requires: ["popperOffsets"],
      requiresIfExists: ["preventOverflow"]
    };
    function getSideOffsets(overflow, rect, preventedOffsets) {
      if (preventedOffsets === void 0) {
        preventedOffsets = {
          x: 0,
          y: 0
        };
      }
      return {
        top: overflow.top - rect.height - preventedOffsets.y,
        right: overflow.right - rect.width + preventedOffsets.x,
        bottom: overflow.bottom - rect.height + preventedOffsets.y,
        left: overflow.left - rect.width - preventedOffsets.x
      };
    }
    function isAnySideFullyClipped(overflow) {
      return [top, right, bottom, left].some(function(side) {
        return overflow[side] >= 0;
      });
    }
    function hide(_ref) {
      var state = _ref.state, name = _ref.name;
      var referenceRect = state.rects.reference;
      var popperRect = state.rects.popper;
      var preventedOffsets = state.modifiersData.preventOverflow;
      var referenceOverflow = detectOverflow(state, {
        elementContext: "reference"
      });
      var popperAltOverflow = detectOverflow(state, {
        altBoundary: true
      });
      var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);
      var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);
      var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);
      var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);
      state.modifiersData[name] = {
        referenceClippingOffsets,
        popperEscapeOffsets,
        isReferenceHidden,
        hasPopperEscaped
      };
      state.attributes.popper = Object.assign({}, state.attributes.popper, {
        "data-popper-reference-hidden": isReferenceHidden,
        "data-popper-escaped": hasPopperEscaped
      });
    }
    var hide$1 = {
      name: "hide",
      enabled: true,
      phase: "main",
      requiresIfExists: ["preventOverflow"],
      fn: hide
    };
    var defaultModifiers$1 = [eventListeners, popperOffsets$1, computeStyles$1, applyStyles$1];
    var createPopper$1 = /* @__PURE__ */ popperGenerator({
      defaultModifiers: defaultModifiers$1
    });
    var defaultModifiers = [eventListeners, popperOffsets$1, computeStyles$1, applyStyles$1, offset$1, flip$1, preventOverflow$1, arrow$1, hide$1];
    var createPopper2 = /* @__PURE__ */ popperGenerator({
      defaultModifiers
    });
    exports.applyStyles = applyStyles$1;
    exports.arrow = arrow$1;
    exports.computeStyles = computeStyles$1;
    exports.createPopper = createPopper2;
    exports.createPopperLite = createPopper$1;
    exports.defaultModifiers = defaultModifiers;
    exports.detectOverflow = detectOverflow;
    exports.eventListeners = eventListeners;
    exports.flip = flip$1;
    exports.hide = hide$1;
    exports.offset = offset$1;
    exports.popperGenerator = popperGenerator;
    exports.popperOffsets = popperOffsets$1;
    exports.preventOverflow = preventOverflow$1;
  }
});

// .svelte-kit/netlify/entry.js
__export(exports, {
  handler: () => handler
});
init_shims();

// .svelte-kit/output/server/app.js
init_shims();
var import_has = __toModule(require_has());
var import_slugify = __toModule(require_slugify());
var import_date_fns = __toModule(require_date_fns());
var import_get = __toModule(require_get());
var import_truncate = __toModule(require_truncate());
var import_groupBy = __toModule(require_groupBy());
var import_keyBy = __toModule(require_keyBy());
var import_client = __toModule(require_sanityClient());
var import_block_content_to_html = __toModule(require_blocksToHtml());
var import_image_url = __toModule(require_node6());
var import_get_video_id = __toModule(require_get_video_id());
var import_sample = __toModule(require_sample());
var import_core = __toModule(require_popper());
var __accessCheck = (obj, member, msg) => {
  if (!member.has(obj))
    throw TypeError("Cannot " + msg);
};
var __privateGet = (obj, member, getter) => {
  __accessCheck(obj, member, "read from private field");
  return getter ? getter.call(obj) : member.get(obj);
};
var __privateAdd = (obj, member, value) => {
  if (member.has(obj))
    throw TypeError("Cannot add the same private member more than once");
  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);
};
var __privateSet = (obj, member, value, setter) => {
  __accessCheck(obj, member, "write to private field");
  setter ? setter.call(obj, value) : member.set(obj, value);
  return value;
};
var _map;
function get_single_valued_header(headers, key) {
  const value = headers[key];
  if (Array.isArray(value)) {
    if (value.length === 0) {
      return void 0;
    }
    if (value.length > 1) {
      throw new Error(`Multiple headers provided for ${key}. Multiple may be provided only for set-cookie`);
    }
    return value[0];
  }
  return value;
}
function coalesce_to_error(err) {
  return err instanceof Error || err && err.name && err.message ? err : new Error(JSON.stringify(err));
}
function lowercase_keys(obj) {
  const clone2 = {};
  for (const key in obj) {
    clone2[key.toLowerCase()] = obj[key];
  }
  return clone2;
}
function error$1(body) {
  return {
    status: 500,
    body,
    headers: {}
  };
}
function is_string(s2) {
  return typeof s2 === "string" || s2 instanceof String;
}
function is_content_type_textual(content_type) {
  if (!content_type)
    return true;
  const [type] = content_type.split(";");
  return type === "text/plain" || type === "application/json" || type === "application/x-www-form-urlencoded" || type === "multipart/form-data";
}
async function render_endpoint(request, route, match) {
  const mod = await route.load();
  const handler2 = mod[request.method.toLowerCase().replace("delete", "del")];
  if (!handler2) {
    return;
  }
  const params = route.params(match);
  const response = await handler2({ ...request, params });
  const preface = `Invalid response from route ${request.path}`;
  if (!response) {
    return;
  }
  if (typeof response !== "object") {
    return error$1(`${preface}: expected an object, got ${typeof response}`);
  }
  let { status = 200, body, headers = {} } = response;
  headers = lowercase_keys(headers);
  const type = get_single_valued_header(headers, "content-type");
  const is_type_textual = is_content_type_textual(type);
  if (!is_type_textual && !(body instanceof Uint8Array || is_string(body))) {
    return error$1(`${preface}: body must be an instance of string or Uint8Array if content-type is not a supported textual content-type`);
  }
  let normalized_body;
  if ((typeof body === "object" || typeof body === "undefined") && !(body instanceof Uint8Array) && (!type || type.startsWith("application/json"))) {
    headers = { ...headers, "content-type": "application/json; charset=utf-8" };
    normalized_body = JSON.stringify(typeof body === "undefined" ? {} : body);
  } else {
    normalized_body = body;
  }
  return { status, body: normalized_body, headers };
}
var chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_$";
var unsafeChars = /[<>\b\f\n\r\t\0\u2028\u2029]/g;
var reserved = /^(?:do|if|in|for|int|let|new|try|var|byte|case|char|else|enum|goto|long|this|void|with|await|break|catch|class|const|final|float|short|super|throw|while|yield|delete|double|export|import|native|return|switch|throws|typeof|boolean|default|extends|finally|package|private|abstract|continue|debugger|function|volatile|interface|protected|transient|implements|instanceof|synchronized)$/;
var escaped$1 = {
  "<": "\\u003C",
  ">": "\\u003E",
  "/": "\\u002F",
  "\\": "\\\\",
  "\b": "\\b",
  "\f": "\\f",
  "\n": "\\n",
  "\r": "\\r",
  "	": "\\t",
  "\0": "\\0",
  "\u2028": "\\u2028",
  "\u2029": "\\u2029"
};
var objectProtoOwnPropertyNames = Object.getOwnPropertyNames(Object.prototype).sort().join("\0");
function devalue(value) {
  var counts = new Map();
  function walk(thing) {
    if (typeof thing === "function") {
      throw new Error("Cannot stringify a function");
    }
    if (counts.has(thing)) {
      counts.set(thing, counts.get(thing) + 1);
      return;
    }
    counts.set(thing, 1);
    if (!isPrimitive(thing)) {
      var type = getType(thing);
      switch (type) {
        case "Number":
        case "String":
        case "Boolean":
        case "Date":
        case "RegExp":
          return;
        case "Array":
          thing.forEach(walk);
          break;
        case "Set":
        case "Map":
          Array.from(thing).forEach(walk);
          break;
        default:
          var proto = Object.getPrototypeOf(thing);
          if (proto !== Object.prototype && proto !== null && Object.getOwnPropertyNames(proto).sort().join("\0") !== objectProtoOwnPropertyNames) {
            throw new Error("Cannot stringify arbitrary non-POJOs");
          }
          if (Object.getOwnPropertySymbols(thing).length > 0) {
            throw new Error("Cannot stringify POJOs with symbolic keys");
          }
          Object.keys(thing).forEach(function(key) {
            return walk(thing[key]);
          });
      }
    }
  }
  walk(value);
  var names = new Map();
  Array.from(counts).filter(function(entry) {
    return entry[1] > 1;
  }).sort(function(a, b) {
    return b[1] - a[1];
  }).forEach(function(entry, i) {
    names.set(entry[0], getName(i));
  });
  function stringify(thing) {
    if (names.has(thing)) {
      return names.get(thing);
    }
    if (isPrimitive(thing)) {
      return stringifyPrimitive(thing);
    }
    var type = getType(thing);
    switch (type) {
      case "Number":
      case "String":
      case "Boolean":
        return "Object(" + stringify(thing.valueOf()) + ")";
      case "RegExp":
        return "new RegExp(" + stringifyString(thing.source) + ', "' + thing.flags + '")';
      case "Date":
        return "new Date(" + thing.getTime() + ")";
      case "Array":
        var members = thing.map(function(v, i) {
          return i in thing ? stringify(v) : "";
        });
        var tail = thing.length === 0 || thing.length - 1 in thing ? "" : ",";
        return "[" + members.join(",") + tail + "]";
      case "Set":
      case "Map":
        return "new " + type + "([" + Array.from(thing).map(stringify).join(",") + "])";
      default:
        var obj = "{" + Object.keys(thing).map(function(key) {
          return safeKey(key) + ":" + stringify(thing[key]);
        }).join(",") + "}";
        var proto = Object.getPrototypeOf(thing);
        if (proto === null) {
          return Object.keys(thing).length > 0 ? "Object.assign(Object.create(null)," + obj + ")" : "Object.create(null)";
        }
        return obj;
    }
  }
  var str = stringify(value);
  if (names.size) {
    var params_1 = [];
    var statements_1 = [];
    var values_1 = [];
    names.forEach(function(name, thing) {
      params_1.push(name);
      if (isPrimitive(thing)) {
        values_1.push(stringifyPrimitive(thing));
        return;
      }
      var type = getType(thing);
      switch (type) {
        case "Number":
        case "String":
        case "Boolean":
          values_1.push("Object(" + stringify(thing.valueOf()) + ")");
          break;
        case "RegExp":
          values_1.push(thing.toString());
          break;
        case "Date":
          values_1.push("new Date(" + thing.getTime() + ")");
          break;
        case "Array":
          values_1.push("Array(" + thing.length + ")");
          thing.forEach(function(v, i) {
            statements_1.push(name + "[" + i + "]=" + stringify(v));
          });
          break;
        case "Set":
          values_1.push("new Set");
          statements_1.push(name + "." + Array.from(thing).map(function(v) {
            return "add(" + stringify(v) + ")";
          }).join("."));
          break;
        case "Map":
          values_1.push("new Map");
          statements_1.push(name + "." + Array.from(thing).map(function(_a) {
            var k = _a[0], v = _a[1];
            return "set(" + stringify(k) + ", " + stringify(v) + ")";
          }).join("."));
          break;
        default:
          values_1.push(Object.getPrototypeOf(thing) === null ? "Object.create(null)" : "{}");
          Object.keys(thing).forEach(function(key) {
            statements_1.push("" + name + safeProp(key) + "=" + stringify(thing[key]));
          });
      }
    });
    statements_1.push("return " + str);
    return "(function(" + params_1.join(",") + "){" + statements_1.join(";") + "}(" + values_1.join(",") + "))";
  } else {
    return str;
  }
}
function getName(num) {
  var name = "";
  do {
    name = chars[num % chars.length] + name;
    num = ~~(num / chars.length) - 1;
  } while (num >= 0);
  return reserved.test(name) ? name + "_" : name;
}
function isPrimitive(thing) {
  return Object(thing) !== thing;
}
function stringifyPrimitive(thing) {
  if (typeof thing === "string")
    return stringifyString(thing);
  if (thing === void 0)
    return "void 0";
  if (thing === 0 && 1 / thing < 0)
    return "-0";
  var str = String(thing);
  if (typeof thing === "number")
    return str.replace(/^(-)?0\./, "$1.");
  return str;
}
function getType(thing) {
  return Object.prototype.toString.call(thing).slice(8, -1);
}
function escapeUnsafeChar(c) {
  return escaped$1[c] || c;
}
function escapeUnsafeChars(str) {
  return str.replace(unsafeChars, escapeUnsafeChar);
}
function safeKey(key) {
  return /^[_$a-zA-Z][_$a-zA-Z0-9]*$/.test(key) ? key : escapeUnsafeChars(JSON.stringify(key));
}
function safeProp(key) {
  return /^[_$a-zA-Z][_$a-zA-Z0-9]*$/.test(key) ? "." + key : "[" + escapeUnsafeChars(JSON.stringify(key)) + "]";
}
function stringifyString(str) {
  var result = '"';
  for (var i = 0; i < str.length; i += 1) {
    var char = str.charAt(i);
    var code = char.charCodeAt(0);
    if (char === '"') {
      result += '\\"';
    } else if (char in escaped$1) {
      result += escaped$1[char];
    } else if (code >= 55296 && code <= 57343) {
      var next = str.charCodeAt(i + 1);
      if (code <= 56319 && (next >= 56320 && next <= 57343)) {
        result += char + str[++i];
      } else {
        result += "\\u" + code.toString(16).toUpperCase();
      }
    } else {
      result += char;
    }
  }
  result += '"';
  return result;
}
function noop$1() {
}
function safe_not_equal$1(a, b) {
  return a != a ? b == b : a !== b || (a && typeof a === "object" || typeof a === "function");
}
Promise.resolve();
var subscriber_queue$1 = [];
function writable$1(value, start = noop$1) {
  let stop;
  const subscribers = new Set();
  function set(new_value) {
    if (safe_not_equal$1(value, new_value)) {
      value = new_value;
      if (stop) {
        const run_queue = !subscriber_queue$1.length;
        for (const subscriber of subscribers) {
          subscriber[1]();
          subscriber_queue$1.push(subscriber, value);
        }
        if (run_queue) {
          for (let i = 0; i < subscriber_queue$1.length; i += 2) {
            subscriber_queue$1[i][0](subscriber_queue$1[i + 1]);
          }
          subscriber_queue$1.length = 0;
        }
      }
    }
  }
  function update(fn) {
    set(fn(value));
  }
  function subscribe2(run2, invalidate = noop$1) {
    const subscriber = [run2, invalidate];
    subscribers.add(subscriber);
    if (subscribers.size === 1) {
      stop = start(set) || noop$1;
    }
    run2(value);
    return () => {
      subscribers.delete(subscriber);
      if (subscribers.size === 0) {
        stop();
        stop = null;
      }
    };
  }
  return { set, update, subscribe: subscribe2 };
}
function hash(value) {
  let hash2 = 5381;
  let i = value.length;
  if (typeof value === "string") {
    while (i)
      hash2 = hash2 * 33 ^ value.charCodeAt(--i);
  } else {
    while (i)
      hash2 = hash2 * 33 ^ value[--i];
  }
  return (hash2 >>> 0).toString(36);
}
var escape_json_string_in_html_dict = {
  '"': '\\"',
  "<": "\\u003C",
  ">": "\\u003E",
  "/": "\\u002F",
  "\\": "\\\\",
  "\b": "\\b",
  "\f": "\\f",
  "\n": "\\n",
  "\r": "\\r",
  "	": "\\t",
  "\0": "\\0",
  "\u2028": "\\u2028",
  "\u2029": "\\u2029"
};
function escape_json_string_in_html(str) {
  return escape$1(str, escape_json_string_in_html_dict, (code) => `\\u${code.toString(16).toUpperCase()}`);
}
var escape_html_attr_dict = {
  "<": "&lt;",
  ">": "&gt;",
  '"': "&quot;"
};
function escape_html_attr(str) {
  return '"' + escape$1(str, escape_html_attr_dict, (code) => `&#${code};`) + '"';
}
function escape$1(str, dict, unicode_encoder) {
  let result = "";
  for (let i = 0; i < str.length; i += 1) {
    const char = str.charAt(i);
    const code = char.charCodeAt(0);
    if (char in dict) {
      result += dict[char];
    } else if (code >= 55296 && code <= 57343) {
      const next = str.charCodeAt(i + 1);
      if (code <= 56319 && next >= 56320 && next <= 57343) {
        result += char + str[++i];
      } else {
        result += unicode_encoder(code);
      }
    } else {
      result += char;
    }
  }
  return result;
}
var s$1 = JSON.stringify;
async function render_response({
  branch,
  options: options2,
  $session,
  page_config,
  status,
  error: error2,
  page: page2
}) {
  const css2 = new Set(options2.entry.css);
  const js = new Set(options2.entry.js);
  const styles = new Set();
  const serialized_data = [];
  let rendered;
  let is_private = false;
  let maxage;
  if (error2) {
    error2.stack = options2.get_stack(error2);
  }
  if (page_config.ssr) {
    branch.forEach(({ node, loaded: loaded2, fetched, uses_credentials }) => {
      if (node.css)
        node.css.forEach((url) => css2.add(url));
      if (node.js)
        node.js.forEach((url) => js.add(url));
      if (node.styles)
        node.styles.forEach((content) => styles.add(content));
      if (fetched && page_config.hydrate)
        serialized_data.push(...fetched);
      if (uses_credentials)
        is_private = true;
      maxage = loaded2.maxage;
    });
    const session = writable$1($session);
    const props = {
      stores: {
        page: writable$1(null),
        navigating: writable$1(null),
        session
      },
      page: page2,
      components: branch.map(({ node }) => node.module.default)
    };
    for (let i = 0; i < branch.length; i += 1) {
      props[`props_${i}`] = await branch[i].loaded.props;
    }
    let session_tracking_active = false;
    const unsubscribe = session.subscribe(() => {
      if (session_tracking_active)
        is_private = true;
    });
    session_tracking_active = true;
    try {
      rendered = options2.root.render(props);
    } finally {
      unsubscribe();
    }
  } else {
    rendered = { head: "", html: "", css: { code: "", map: null } };
  }
  const include_js = page_config.router || page_config.hydrate;
  if (!include_js)
    js.clear();
  const links = options2.amp ? styles.size > 0 || rendered.css.code.length > 0 ? `<style amp-custom>${Array.from(styles).concat(rendered.css.code).join("\n")}</style>` : "" : [
    ...Array.from(js).map((dep) => `<link rel="modulepreload" href="${dep}">`),
    ...Array.from(css2).map((dep) => `<link rel="stylesheet" href="${dep}">`)
  ].join("\n		");
  let init2 = "";
  if (options2.amp) {
    init2 = `
		<style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style>
		<noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>
		<script async src="https://cdn.ampproject.org/v0.js"><\/script>`;
  } else if (include_js) {
    init2 = `<script type="module">
			import { start } from ${s$1(options2.entry.file)};
			start({
				target: ${options2.target ? `document.querySelector(${s$1(options2.target)})` : "document.body"},
				paths: ${s$1(options2.paths)},
				session: ${try_serialize($session, (error3) => {
      throw new Error(`Failed to serialize session data: ${error3.message}`);
    })},
				host: ${page2 && page2.host ? s$1(page2.host) : "location.host"},
				route: ${!!page_config.router},
				spa: ${!page_config.ssr},
				trailing_slash: ${s$1(options2.trailing_slash)},
				hydrate: ${page_config.ssr && page_config.hydrate ? `{
					status: ${status},
					error: ${serialize_error(error2)},
					nodes: [
						${(branch || []).map(({ node }) => `import(${s$1(node.entry)})`).join(",\n						")}
					],
					page: {
						host: ${page2 && page2.host ? s$1(page2.host) : "location.host"}, // TODO this is redundant
						path: ${s$1(page2 && page2.path)},
						query: new URLSearchParams(${page2 ? s$1(page2.query.toString()) : ""}),
						params: ${page2 && s$1(page2.params)}
					}
				}` : "null"}
			});
		<\/script>`;
  }
  if (options2.service_worker) {
    init2 += `<script>
			if ('serviceWorker' in navigator) {
				navigator.serviceWorker.register('${options2.service_worker}');
			}
		<\/script>`;
  }
  const head = [
    rendered.head,
    styles.size && !options2.amp ? `<style data-svelte>${Array.from(styles).join("\n")}</style>` : "",
    links,
    init2
  ].join("\n\n		");
  const body = options2.amp ? rendered.html : `${rendered.html}

			${serialized_data.map(({ url, body: body2, json }) => {
    let attributes = `type="application/json" data-type="svelte-data" data-url=${escape_html_attr(url)}`;
    if (body2)
      attributes += ` data-body="${hash(body2)}"`;
    return `<script ${attributes}>${json}<\/script>`;
  }).join("\n\n	")}
		`;
  const headers = {
    "content-type": "text/html"
  };
  if (maxage) {
    headers["cache-control"] = `${is_private ? "private" : "public"}, max-age=${maxage}`;
  }
  if (!options2.floc) {
    headers["permissions-policy"] = "interest-cohort=()";
  }
  return {
    status,
    headers,
    body: options2.template({ head, body })
  };
}
function try_serialize(data, fail) {
  try {
    return devalue(data);
  } catch (err) {
    if (fail)
      fail(coalesce_to_error(err));
    return null;
  }
}
function serialize_error(error2) {
  if (!error2)
    return null;
  let serialized = try_serialize(error2);
  if (!serialized) {
    const { name, message, stack } = error2;
    serialized = try_serialize({ ...error2, name, message, stack });
  }
  if (!serialized) {
    serialized = "{}";
  }
  return serialized;
}
function normalize(loaded2) {
  const has_error_status = loaded2.status && loaded2.status >= 400 && loaded2.status <= 599 && !loaded2.redirect;
  if (loaded2.error || has_error_status) {
    const status = loaded2.status;
    if (!loaded2.error && has_error_status) {
      return {
        status: status || 500,
        error: new Error()
      };
    }
    const error2 = typeof loaded2.error === "string" ? new Error(loaded2.error) : loaded2.error;
    if (!(error2 instanceof Error)) {
      return {
        status: 500,
        error: new Error(`"error" property returned from load() must be a string or instance of Error, received type "${typeof error2}"`)
      };
    }
    if (!status || status < 400 || status > 599) {
      console.warn('"error" returned from load() without a valid status code \u2014 defaulting to 500');
      return { status: 500, error: error2 };
    }
    return { status, error: error2 };
  }
  if (loaded2.redirect) {
    if (!loaded2.status || Math.floor(loaded2.status / 100) !== 3) {
      return {
        status: 500,
        error: new Error('"redirect" property returned from load() must be accompanied by a 3xx status code')
      };
    }
    if (typeof loaded2.redirect !== "string") {
      return {
        status: 500,
        error: new Error('"redirect" property returned from load() must be a string')
      };
    }
  }
  if (loaded2.context) {
    throw new Error('You are returning "context" from a load function. "context" was renamed to "stuff", please adjust your code accordingly.');
  }
  return loaded2;
}
var s = JSON.stringify;
async function load_node({
  request,
  options: options2,
  state,
  route,
  page: page2,
  node,
  $session,
  stuff,
  prerender_enabled,
  is_leaf,
  is_error,
  status,
  error: error2
}) {
  const { module: module2 } = node;
  let uses_credentials = false;
  const fetched = [];
  let set_cookie_headers = [];
  let loaded2;
  const page_proxy = new Proxy(page2, {
    get: (target, prop, receiver) => {
      if (prop === "query" && prerender_enabled) {
        throw new Error("Cannot access query on a page with prerendering enabled");
      }
      return Reflect.get(target, prop, receiver);
    }
  });
  if (module2.load) {
    const load_input = {
      page: page_proxy,
      get session() {
        uses_credentials = true;
        return $session;
      },
      fetch: async (resource, opts = {}) => {
        let url;
        if (typeof resource === "string") {
          url = resource;
        } else {
          url = resource.url;
          opts = {
            method: resource.method,
            headers: resource.headers,
            body: resource.body,
            mode: resource.mode,
            credentials: resource.credentials,
            cache: resource.cache,
            redirect: resource.redirect,
            referrer: resource.referrer,
            integrity: resource.integrity,
            ...opts
          };
        }
        const resolved = resolve(request.path, url.split("?")[0]);
        let response;
        const filename = resolved.replace(options2.paths.assets, "").slice(1);
        const filename_html = `${filename}/index.html`;
        const asset = options2.manifest.assets.find((d2) => d2.file === filename || d2.file === filename_html);
        if (asset) {
          response = options2.read ? new Response(options2.read(asset.file), {
            headers: asset.type ? { "content-type": asset.type } : {}
          }) : await fetch(`http://${page2.host}/${asset.file}`, opts);
        } else if (resolved.startsWith("/") && !resolved.startsWith("//")) {
          const relative = resolved;
          const headers = {
            ...opts.headers
          };
          if (opts.credentials !== "omit") {
            uses_credentials = true;
            headers.cookie = request.headers.cookie;
            if (!headers.authorization) {
              headers.authorization = request.headers.authorization;
            }
          }
          if (opts.body && typeof opts.body !== "string") {
            throw new Error("Request body must be a string");
          }
          const search = url.includes("?") ? url.slice(url.indexOf("?") + 1) : "";
          const rendered = await respond({
            host: request.host,
            method: opts.method || "GET",
            headers,
            path: relative,
            rawBody: opts.body == null ? null : new TextEncoder().encode(opts.body),
            query: new URLSearchParams(search)
          }, options2, {
            fetched: url,
            initiator: route
          });
          if (rendered) {
            if (state.prerender) {
              state.prerender.dependencies.set(relative, rendered);
            }
            response = new Response(rendered.body, {
              status: rendered.status,
              headers: rendered.headers
            });
          }
        } else {
          if (resolved.startsWith("//")) {
            throw new Error(`Cannot request protocol-relative URL (${url}) in server-side fetch`);
          }
          if (typeof request.host !== "undefined") {
            const { hostname: fetch_hostname } = new URL(url);
            const [server_hostname] = request.host.split(":");
            if (`.${fetch_hostname}`.endsWith(`.${server_hostname}`) && opts.credentials !== "omit") {
              uses_credentials = true;
              opts.headers = {
                ...opts.headers,
                cookie: request.headers.cookie
              };
            }
          }
          const external_request = new Request(url, opts);
          response = await options2.hooks.externalFetch.call(null, external_request);
        }
        if (response) {
          const proxy = new Proxy(response, {
            get(response2, key, receiver) {
              async function text() {
                const body = await response2.text();
                const headers = {};
                for (const [key2, value] of response2.headers) {
                  if (key2 === "set-cookie") {
                    set_cookie_headers = set_cookie_headers.concat(value);
                  } else if (key2 !== "etag") {
                    headers[key2] = value;
                  }
                }
                if (!opts.body || typeof opts.body === "string") {
                  fetched.push({
                    url,
                    body: opts.body,
                    json: `{"status":${response2.status},"statusText":${s(response2.statusText)},"headers":${s(headers)},"body":"${escape_json_string_in_html(body)}"}`
                  });
                }
                return body;
              }
              if (key === "text") {
                return text;
              }
              if (key === "json") {
                return async () => {
                  return JSON.parse(await text());
                };
              }
              return Reflect.get(response2, key, response2);
            }
          });
          return proxy;
        }
        return response || new Response("Not found", {
          status: 404
        });
      },
      stuff: { ...stuff }
    };
    if (is_error) {
      load_input.status = status;
      load_input.error = error2;
    }
    loaded2 = await module2.load.call(null, load_input);
  } else {
    loaded2 = {};
  }
  if (!loaded2 && is_leaf && !is_error)
    return;
  if (!loaded2) {
    throw new Error(`${node.entry} - load must return a value except for page fall through`);
  }
  return {
    node,
    loaded: normalize(loaded2),
    stuff: loaded2.stuff || stuff,
    fetched,
    set_cookie_headers,
    uses_credentials
  };
}
var absolute = /^([a-z]+:)?\/?\//;
function resolve(base2, path) {
  const base_match = absolute.exec(base2);
  const path_match = absolute.exec(path);
  if (!base_match) {
    throw new Error(`bad base path: "${base2}"`);
  }
  const baseparts = path_match ? [] : base2.slice(base_match[0].length).split("/");
  const pathparts = path_match ? path.slice(path_match[0].length).split("/") : path.split("/");
  baseparts.pop();
  for (let i = 0; i < pathparts.length; i += 1) {
    const part = pathparts[i];
    if (part === ".")
      continue;
    else if (part === "..")
      baseparts.pop();
    else
      baseparts.push(part);
  }
  const prefix = path_match && path_match[0] || base_match && base_match[0] || "";
  return `${prefix}${baseparts.join("/")}`;
}
async function respond_with_error({ request, options: options2, state, $session, status, error: error2 }) {
  const default_layout = await options2.load_component(options2.manifest.layout);
  const default_error = await options2.load_component(options2.manifest.error);
  const page2 = {
    host: request.host,
    path: request.path,
    query: request.query,
    params: {}
  };
  const loaded2 = await load_node({
    request,
    options: options2,
    state,
    route: null,
    page: page2,
    node: default_layout,
    $session,
    stuff: {},
    prerender_enabled: is_prerender_enabled(options2, default_error, state),
    is_leaf: false,
    is_error: false
  });
  const branch = [
    loaded2,
    await load_node({
      request,
      options: options2,
      state,
      route: null,
      page: page2,
      node: default_error,
      $session,
      stuff: loaded2 ? loaded2.stuff : {},
      prerender_enabled: is_prerender_enabled(options2, default_error, state),
      is_leaf: false,
      is_error: true,
      status,
      error: error2
    })
  ];
  try {
    return await render_response({
      options: options2,
      $session,
      page_config: {
        hydrate: options2.hydrate,
        router: options2.router,
        ssr: options2.ssr
      },
      status,
      error: error2,
      branch,
      page: page2
    });
  } catch (err) {
    const error3 = coalesce_to_error(err);
    options2.handle_error(error3, request);
    return {
      status: 500,
      headers: {},
      body: error3.stack
    };
  }
}
function is_prerender_enabled(options2, node, state) {
  return options2.prerender && (!!node.module.prerender || !!state.prerender && state.prerender.all);
}
async function respond$1(opts) {
  const { request, options: options2, state, $session, route } = opts;
  let nodes;
  try {
    nodes = await Promise.all(route.a.map((id) => id ? options2.load_component(id) : void 0));
  } catch (err) {
    const error3 = coalesce_to_error(err);
    options2.handle_error(error3, request);
    return await respond_with_error({
      request,
      options: options2,
      state,
      $session,
      status: 500,
      error: error3
    });
  }
  const leaf = nodes[nodes.length - 1].module;
  let page_config = get_page_config(leaf, options2);
  if (!leaf.prerender && state.prerender && !state.prerender.all) {
    return {
      status: 204,
      headers: {},
      body: ""
    };
  }
  let branch = [];
  let status = 200;
  let error2;
  let set_cookie_headers = [];
  ssr:
    if (page_config.ssr) {
      let stuff = {};
      for (let i = 0; i < nodes.length; i += 1) {
        const node = nodes[i];
        let loaded2;
        if (node) {
          try {
            loaded2 = await load_node({
              ...opts,
              node,
              stuff,
              prerender_enabled: is_prerender_enabled(options2, node, state),
              is_leaf: i === nodes.length - 1,
              is_error: false
            });
            if (!loaded2)
              return;
            set_cookie_headers = set_cookie_headers.concat(loaded2.set_cookie_headers);
            if (loaded2.loaded.redirect) {
              return with_cookies({
                status: loaded2.loaded.status,
                headers: {
                  location: encodeURI(loaded2.loaded.redirect)
                }
              }, set_cookie_headers);
            }
            if (loaded2.loaded.error) {
              ({ status, error: error2 } = loaded2.loaded);
            }
          } catch (err) {
            const e = coalesce_to_error(err);
            options2.handle_error(e, request);
            status = 500;
            error2 = e;
          }
          if (loaded2 && !error2) {
            branch.push(loaded2);
          }
          if (error2) {
            while (i--) {
              if (route.b[i]) {
                const error_node = await options2.load_component(route.b[i]);
                let node_loaded;
                let j = i;
                while (!(node_loaded = branch[j])) {
                  j -= 1;
                }
                try {
                  const error_loaded = await load_node({
                    ...opts,
                    node: error_node,
                    stuff: node_loaded.stuff,
                    prerender_enabled: is_prerender_enabled(options2, error_node, state),
                    is_leaf: false,
                    is_error: true,
                    status,
                    error: error2
                  });
                  if (error_loaded.loaded.error) {
                    continue;
                  }
                  page_config = get_page_config(error_node.module, options2);
                  branch = branch.slice(0, j + 1).concat(error_loaded);
                  break ssr;
                } catch (err) {
                  const e = coalesce_to_error(err);
                  options2.handle_error(e, request);
                  continue;
                }
              }
            }
            return with_cookies(await respond_with_error({
              request,
              options: options2,
              state,
              $session,
              status,
              error: error2
            }), set_cookie_headers);
          }
        }
        if (loaded2 && loaded2.loaded.stuff) {
          stuff = {
            ...stuff,
            ...loaded2.loaded.stuff
          };
        }
      }
    }
  try {
    return with_cookies(await render_response({
      ...opts,
      page_config,
      status,
      error: error2,
      branch: branch.filter(Boolean)
    }), set_cookie_headers);
  } catch (err) {
    const error3 = coalesce_to_error(err);
    options2.handle_error(error3, request);
    return with_cookies(await respond_with_error({
      ...opts,
      status: 500,
      error: error3
    }), set_cookie_headers);
  }
}
function get_page_config(leaf, options2) {
  return {
    ssr: "ssr" in leaf ? !!leaf.ssr : options2.ssr,
    router: "router" in leaf ? !!leaf.router : options2.router,
    hydrate: "hydrate" in leaf ? !!leaf.hydrate : options2.hydrate
  };
}
function with_cookies(response, set_cookie_headers) {
  if (set_cookie_headers.length) {
    response.headers["set-cookie"] = set_cookie_headers;
  }
  return response;
}
async function render_page(request, route, match, options2, state) {
  if (state.initiator === route) {
    return {
      status: 404,
      headers: {},
      body: `Not found: ${request.path}`
    };
  }
  const params = route.params(match);
  const page2 = {
    host: request.host,
    path: request.path,
    query: request.query,
    params
  };
  const $session = await options2.hooks.getSession(request);
  const response = await respond$1({
    request,
    options: options2,
    state,
    $session,
    route,
    page: page2
  });
  if (response) {
    return response;
  }
  if (state.fetched) {
    return {
      status: 500,
      headers: {},
      body: `Bad request in load function: failed to fetch ${state.fetched}`
    };
  }
}
function read_only_form_data() {
  const map = new Map();
  return {
    append(key, value) {
      if (map.has(key)) {
        (map.get(key) || []).push(value);
      } else {
        map.set(key, [value]);
      }
    },
    data: new ReadOnlyFormData(map)
  };
}
var ReadOnlyFormData = class {
  constructor(map) {
    __privateAdd(this, _map, void 0);
    __privateSet(this, _map, map);
  }
  get(key) {
    const value = __privateGet(this, _map).get(key);
    return value && value[0];
  }
  getAll(key) {
    return __privateGet(this, _map).get(key);
  }
  has(key) {
    return __privateGet(this, _map).has(key);
  }
  *[Symbol.iterator]() {
    for (const [key, value] of __privateGet(this, _map)) {
      for (let i = 0; i < value.length; i += 1) {
        yield [key, value[i]];
      }
    }
  }
  *entries() {
    for (const [key, value] of __privateGet(this, _map)) {
      for (let i = 0; i < value.length; i += 1) {
        yield [key, value[i]];
      }
    }
  }
  *keys() {
    for (const [key] of __privateGet(this, _map))
      yield key;
  }
  *values() {
    for (const [, value] of __privateGet(this, _map)) {
      for (let i = 0; i < value.length; i += 1) {
        yield value[i];
      }
    }
  }
};
_map = new WeakMap();
function parse_body(raw, headers) {
  if (!raw)
    return raw;
  const content_type = headers["content-type"];
  const [type, ...directives] = content_type ? content_type.split(/;\s*/) : [];
  const text = () => new TextDecoder(headers["content-encoding"] || "utf-8").decode(raw);
  switch (type) {
    case "text/plain":
      return text();
    case "application/json":
      return JSON.parse(text());
    case "application/x-www-form-urlencoded":
      return get_urlencoded(text());
    case "multipart/form-data": {
      const boundary = directives.find((directive) => directive.startsWith("boundary="));
      if (!boundary)
        throw new Error("Missing boundary");
      return get_multipart(text(), boundary.slice("boundary=".length));
    }
    default:
      return raw;
  }
}
function get_urlencoded(text) {
  const { data, append } = read_only_form_data();
  text.replace(/\+/g, " ").split("&").forEach((str) => {
    const [key, value] = str.split("=");
    append(decodeURIComponent(key), decodeURIComponent(value));
  });
  return data;
}
function get_multipart(text, boundary) {
  const parts = text.split(`--${boundary}`);
  if (parts[0] !== "" || parts[parts.length - 1].trim() !== "--") {
    throw new Error("Malformed form data");
  }
  const { data, append } = read_only_form_data();
  parts.slice(1, -1).forEach((part) => {
    const match = /\s*([\s\S]+?)\r\n\r\n([\s\S]*)\s*/.exec(part);
    if (!match) {
      throw new Error("Malformed form data");
    }
    const raw_headers = match[1];
    const body = match[2].trim();
    let key;
    const headers = {};
    raw_headers.split("\r\n").forEach((str) => {
      const [raw_header, ...raw_directives] = str.split("; ");
      let [name, value] = raw_header.split(": ");
      name = name.toLowerCase();
      headers[name] = value;
      const directives = {};
      raw_directives.forEach((raw_directive) => {
        const [name2, value2] = raw_directive.split("=");
        directives[name2] = JSON.parse(value2);
      });
      if (name === "content-disposition") {
        if (value !== "form-data")
          throw new Error("Malformed form data");
        if (directives.filename) {
          throw new Error("File upload is not yet implemented");
        }
        if (directives.name) {
          key = directives.name;
        }
      }
    });
    if (!key)
      throw new Error("Malformed form data");
    append(key, body);
  });
  return data;
}
async function respond(incoming, options2, state = {}) {
  if (incoming.path !== "/" && options2.trailing_slash !== "ignore") {
    const has_trailing_slash = incoming.path.endsWith("/");
    if (has_trailing_slash && options2.trailing_slash === "never" || !has_trailing_slash && options2.trailing_slash === "always" && !(incoming.path.split("/").pop() || "").includes(".")) {
      const path = has_trailing_slash ? incoming.path.slice(0, -1) : incoming.path + "/";
      const q = incoming.query.toString();
      return {
        status: 301,
        headers: {
          location: options2.paths.base + path + (q ? `?${q}` : "")
        }
      };
    }
  }
  const headers = lowercase_keys(incoming.headers);
  const request = {
    ...incoming,
    headers,
    body: parse_body(incoming.rawBody, headers),
    params: {},
    locals: {}
  };
  try {
    return await options2.hooks.handle({
      request,
      resolve: async (request2) => {
        if (state.prerender && state.prerender.fallback) {
          return await render_response({
            options: options2,
            $session: await options2.hooks.getSession(request2),
            page_config: { ssr: false, router: true, hydrate: true },
            status: 200,
            branch: []
          });
        }
        const decoded = decodeURI(request2.path);
        for (const route of options2.manifest.routes) {
          const match = route.pattern.exec(decoded);
          if (!match)
            continue;
          const response = route.type === "endpoint" ? await render_endpoint(request2, route, match) : await render_page(request2, route, match, options2, state);
          if (response) {
            if (response.status === 200) {
              const cache_control = get_single_valued_header(response.headers, "cache-control");
              if (!cache_control || !/(no-store|immutable)/.test(cache_control)) {
                const etag = `"${hash(response.body || "")}"`;
                if (request2.headers["if-none-match"] === etag) {
                  return {
                    status: 304,
                    headers: {},
                    body: ""
                  };
                }
                response.headers["etag"] = etag;
              }
            }
            return response;
          }
        }
        const $session = await options2.hooks.getSession(request2);
        return await respond_with_error({
          request: request2,
          options: options2,
          state,
          $session,
          status: 404,
          error: new Error(`Not found: ${request2.path}`)
        });
      }
    });
  } catch (err) {
    const e = coalesce_to_error(err);
    options2.handle_error(e, request);
    return {
      status: 500,
      headers: {},
      body: options2.dev ? e.stack : e.message
    };
  }
}
function noop() {
}
function is_promise(value) {
  return value && typeof value === "object" && typeof value.then === "function";
}
function run(fn) {
  return fn();
}
function blank_object() {
  return Object.create(null);
}
function run_all(fns) {
  fns.forEach(run);
}
function is_function(thing) {
  return typeof thing === "function";
}
function safe_not_equal(a, b) {
  return a != a ? b == b : a !== b || (a && typeof a === "object" || typeof a === "function");
}
function subscribe(store, ...callbacks) {
  if (store == null) {
    return noop;
  }
  const unsub = store.subscribe(...callbacks);
  return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;
}
var current_component;
function set_current_component(component) {
  current_component = component;
}
function get_current_component() {
  if (!current_component)
    throw new Error("Function called outside component initialization");
  return current_component;
}
function onDestroy(fn) {
  get_current_component().$$.on_destroy.push(fn);
}
function setContext(key, context) {
  get_current_component().$$.context.set(key, context);
}
function getContext(key) {
  return get_current_component().$$.context.get(key);
}
Promise.resolve();
var escaped = {
  '"': "&quot;",
  "'": "&#39;",
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;"
};
function escape(html) {
  return String(html).replace(/["'&<>]/g, (match) => escaped[match]);
}
function each(items, fn) {
  let str = "";
  for (let i = 0; i < items.length; i += 1) {
    str += fn(items[i], i);
  }
  return str;
}
var missing_component = {
  $$render: () => ""
};
function validate_component(component, name) {
  if (!component || !component.$$render) {
    if (name === "svelte:component")
      name += " this={...}";
    throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);
  }
  return component;
}
var on_destroy;
function create_ssr_component(fn) {
  function $$render(result, props, bindings, slots, context) {
    const parent_component = current_component;
    const $$ = {
      on_destroy,
      context: new Map(context || (parent_component ? parent_component.$$.context : [])),
      on_mount: [],
      before_update: [],
      after_update: [],
      callbacks: blank_object()
    };
    set_current_component({ $$ });
    const html = fn(result, props, bindings, slots);
    set_current_component(parent_component);
    return html;
  }
  return {
    render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {
      on_destroy = [];
      const result = { title: "", head: "", css: new Set() };
      const html = $$render(result, props, {}, $$slots, context);
      run_all(on_destroy);
      return {
        html,
        css: {
          code: Array.from(result.css).map((css2) => css2.code).join("\n"),
          map: null
        },
        head: result.title + result.head
      };
    },
    $$render
  };
}
function add_attribute(name, value, boolean) {
  if (value == null || boolean && !value)
    return "";
  return ` ${name}${value === true ? "" : `=${typeof value === "string" ? JSON.stringify(escape(value)) : `"${value}"`}`}`;
}
function add_classes(classes) {
  return classes ? ` class="${classes}"` : "";
}
function afterUpdate() {
}
var css$Y = {
  code: "#svelte-announcer.svelte-1j55zn5{position:absolute;left:0;top:0;clip:rect(0 0 0 0);clip-path:inset(50%);overflow:hidden;white-space:nowrap;width:1px;height:1px}",
  map: `{"version":3,"file":"root.svelte","sources":["root.svelte"],"sourcesContent":["<!-- This file is generated by @sveltejs/kit \u2014 do not edit it! -->\\n<script>\\n\\timport { setContext, afterUpdate, onMount } from 'svelte';\\n\\n\\t// stores\\n\\texport let stores;\\n\\texport let page;\\n\\n\\texport let components;\\n\\texport let props_0 = null;\\n\\texport let props_1 = null;\\n\\texport let props_2 = null;\\n\\n\\tsetContext('__svelte__', stores);\\n\\n\\t$: stores.page.set(page);\\n\\tafterUpdate(stores.page.notify);\\n\\n\\tlet mounted = false;\\n\\tlet navigated = false;\\n\\tlet title = null;\\n\\n\\tonMount(() => {\\n\\t\\tconst unsubscribe = stores.page.subscribe(() => {\\n\\t\\t\\tif (mounted) {\\n\\t\\t\\t\\tnavigated = true;\\n\\t\\t\\t\\ttitle = document.title || 'untitled page';\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\tmounted = true;\\n\\t\\treturn unsubscribe;\\n\\t});\\n<\/script>\\n\\n<svelte:component this={components[0]} {...(props_0 || {})}>\\n\\t{#if components[1]}\\n\\t\\t<svelte:component this={components[1]} {...(props_1 || {})}>\\n\\t\\t\\t{#if components[2]}\\n\\t\\t\\t\\t<svelte:component this={components[2]} {...(props_2 || {})}/>\\n\\t\\t\\t{/if}\\n\\t\\t</svelte:component>\\n\\t{/if}\\n</svelte:component>\\n\\n{#if mounted}\\n\\t<div id=\\"svelte-announcer\\" aria-live=\\"assertive\\" aria-atomic=\\"true\\">\\n\\t\\t{#if navigated}\\n\\t\\t\\t{title}\\n\\t\\t{/if}\\n\\t</div>\\n{/if}\\n\\n<style>\\n\\t#svelte-announcer {\\n\\t\\tposition: absolute;\\n\\t\\tleft: 0;\\n\\t\\ttop: 0;\\n\\t\\tclip: rect(0 0 0 0);\\n\\t\\tclip-path: inset(50%);\\n\\t\\toverflow: hidden;\\n\\t\\twhite-space: nowrap;\\n\\t\\twidth: 1px;\\n\\t\\theight: 1px;\\n\\t}\\n</style>"],"names":[],"mappings":"AAsDC,iBAAiB,eAAC,CAAC,AAClB,QAAQ,CAAE,QAAQ,CAClB,IAAI,CAAE,CAAC,CACP,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACnB,SAAS,CAAE,MAAM,GAAG,CAAC,CACrB,QAAQ,CAAE,MAAM,CAChB,WAAW,CAAE,MAAM,CACnB,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,GAAG,AACZ,CAAC"}`
};
var Root = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { stores } = $$props;
  let { page: page2 } = $$props;
  let { components } = $$props;
  let { props_0 = null } = $$props;
  let { props_1 = null } = $$props;
  let { props_2 = null } = $$props;
  setContext("__svelte__", stores);
  afterUpdate(stores.page.notify);
  if ($$props.stores === void 0 && $$bindings.stores && stores !== void 0)
    $$bindings.stores(stores);
  if ($$props.page === void 0 && $$bindings.page && page2 !== void 0)
    $$bindings.page(page2);
  if ($$props.components === void 0 && $$bindings.components && components !== void 0)
    $$bindings.components(components);
  if ($$props.props_0 === void 0 && $$bindings.props_0 && props_0 !== void 0)
    $$bindings.props_0(props_0);
  if ($$props.props_1 === void 0 && $$bindings.props_1 && props_1 !== void 0)
    $$bindings.props_1(props_1);
  if ($$props.props_2 === void 0 && $$bindings.props_2 && props_2 !== void 0)
    $$bindings.props_2(props_2);
  $$result.css.add(css$Y);
  {
    stores.page.set(page2);
  }
  return `


${validate_component(components[0] || missing_component, "svelte:component").$$render($$result, Object.assign(props_0 || {}), {}, {
    default: () => `${components[1] ? `${validate_component(components[1] || missing_component, "svelte:component").$$render($$result, Object.assign(props_1 || {}), {}, {
      default: () => `${components[2] ? `${validate_component(components[2] || missing_component, "svelte:component").$$render($$result, Object.assign(props_2 || {}), {}, {})}` : ``}`
    })}` : ``}`
  })}

${``}`;
});
var base = "";
var assets = "";
function set_paths(paths) {
  base = paths.base;
  assets = paths.assets || base;
}
function set_prerendering(value) {
}
var user_hooks = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module"
});
var template = ({ head, body }) => '<!DOCTYPE html>\n<html lang="en">\n\n<head>\n	<meta charset="utf-8" />\n	<link rel="icon" href="/favicon.png" />\n	<link rel="preconnect" href="https://fonts.googleapis.com">\n	<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>\n	<link href="https://fonts.googleapis.com/css2?family=Literata:ital,wght@0,400;0,700;1,400;1,700&display=swap"\n		rel="stylesheet">\n	<meta name="viewport" content="width=device-width, initial-scale=1" />\n	' + head + '\n\n\n\n</head>\n\n<body>\n	<div id="svelte">' + body + "</div>\n</body>\n\n</html>";
var options = null;
var default_settings = { paths: { "base": "", "assets": "" } };
function init(settings = default_settings) {
  set_paths(settings.paths);
  set_prerendering(settings.prerendering || false);
  const hooks = get_hooks(user_hooks);
  options = {
    amp: false,
    dev: false,
    entry: {
      file: assets + "/_app/start-037057fa.js",
      css: [assets + "/_app/assets/start-61d1577b.css"],
      js: [assets + "/_app/start-037057fa.js", assets + "/_app/chunks/vendor-213107dc.js"]
    },
    fetched: void 0,
    floc: false,
    get_component_path: (id) => assets + "/_app/" + entry_lookup[id],
    get_stack: (error2) => String(error2),
    handle_error: (error2, request) => {
      hooks.handleError({ error: error2, request });
      error2.stack = options.get_stack(error2);
    },
    hooks,
    hydrate: true,
    initiator: void 0,
    load_component,
    manifest,
    paths: settings.paths,
    prerender: true,
    read: settings.read,
    root: Root,
    service_worker: null,
    router: true,
    ssr: true,
    target: "#svelte",
    template,
    trailing_slash: "never"
  };
}
var d = (s2) => s2.replace(/%23/g, "#").replace(/%3[Bb]/g, ";").replace(/%2[Cc]/g, ",").replace(/%2[Ff]/g, "/").replace(/%3[Ff]/g, "?").replace(/%3[Aa]/g, ":").replace(/%40/g, "@").replace(/%26/g, "&").replace(/%3[Dd]/g, "=").replace(/%2[Bb]/g, "+").replace(/%24/g, "$");
var empty = () => ({});
var manifest = {
  assets: [{ "file": "favicon.png", "size": 1571, "type": "image/png" }],
  layout: "src/routes/__layout.svelte",
  error: ".svelte-kit/build/components/error.svelte",
  routes: [
    {
      type: "endpoint",
      pattern: /^\/index\.json$/,
      params: empty,
      load: () => Promise.resolve().then(function() {
        return index_json$a;
      })
    },
    {
      type: "page",
      pattern: /^\/$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/index.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "endpoint",
      pattern: /^\/eyebeam-is-changing\.json$/,
      params: empty,
      load: () => Promise.resolve().then(function() {
        return index_json$9;
      })
    },
    {
      type: "page",
      pattern: /^\/eyebeam-is-changing\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/eyebeam-is-changing/index.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "endpoint",
      pattern: /^\/press-and-news\.json$/,
      params: empty,
      load: () => Promise.resolve().then(function() {
        return index_json$8;
      })
    },
    {
      type: "page",
      pattern: /^\/press-and-news\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/press-and-news/index.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "endpoint",
      pattern: /^\/press-and-news\/([^/]+?)\.json$/,
      params: (m) => ({ slug: d(m[1]) }),
      load: () => Promise.resolve().then(function() {
        return _slug__json$8;
      })
    },
    {
      type: "page",
      pattern: /^\/press-and-news\/([^/]+?)\/?$/,
      params: (m) => ({ slug: d(m[1]) }),
      a: ["src/routes/__layout.svelte", "src/routes/press-and-news/[slug].svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "endpoint",
      pattern: /^\/everything\.json$/,
      params: empty,
      load: () => Promise.resolve().then(function() {
        return index_json$7;
      })
    },
    {
      type: "page",
      pattern: /^\/everything\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/everything/index.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "endpoint",
      pattern: /^\/newsletter\.json$/,
      params: empty,
      load: () => Promise.resolve().then(function() {
        return index_json$6;
      })
    },
    {
      type: "page",
      pattern: /^\/newsletter\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/newsletter/index.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "endpoint",
      pattern: /^\/statements\.json$/,
      params: empty,
      load: () => Promise.resolve().then(function() {
        return index_json$5;
      })
    },
    {
      type: "page",
      pattern: /^\/statements\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/statements/index.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "endpoint",
      pattern: /^\/programs\.json$/,
      params: empty,
      load: () => Promise.resolve().then(function() {
        return index_json$4;
      })
    },
    {
      type: "page",
      pattern: /^\/programs\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/programs/index.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "endpoint",
      pattern: /^\/programs\/([^/]+?)\.json$/,
      params: (m) => ({ slug: d(m[1]) }),
      load: () => Promise.resolve().then(function() {
        return _slug__json$7;
      })
    },
    {
      type: "page",
      pattern: /^\/programs\/([^/]+?)\/?$/,
      params: (m) => ({ slug: d(m[1]) }),
      a: ["src/routes/__layout.svelte", "src/routes/programs/[slug].svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/projects\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/projects/index.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "endpoint",
      pattern: /^\/projects\/([^/]+?)\.json$/,
      params: (m) => ({ slug: d(m[1]) }),
      load: () => Promise.resolve().then(function() {
        return _slug__json$6;
      })
    },
    {
      type: "page",
      pattern: /^\/projects\/([^/]+?)\/?$/,
      params: (m) => ({ slug: d(m[1]) }),
      a: ["src/routes/__layout.svelte", "src/routes/projects/[slug].svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "endpoint",
      pattern: /^\/journal\.json$/,
      params: empty,
      load: () => Promise.resolve().then(function() {
        return index_json$3;
      })
    },
    {
      type: "page",
      pattern: /^\/journal\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/journal/index.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "endpoint",
      pattern: /^\/journal\/([^/]+?)\.json$/,
      params: (m) => ({ slug: d(m[1]) }),
      load: () => Promise.resolve().then(function() {
        return _slug__json$5;
      })
    },
    {
      type: "page",
      pattern: /^\/journal\/([^/]+?)\/?$/,
      params: (m) => ({ slug: d(m[1]) }),
      a: ["src/routes/__layout.svelte", "src/routes/journal/[slug].svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "endpoint",
      pattern: /^\/support\.json$/,
      params: empty,
      load: () => Promise.resolve().then(function() {
        return index_json$2;
      })
    },
    {
      type: "page",
      pattern: /^\/support\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/support/index.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/events\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/events/index.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "endpoint",
      pattern: /^\/events\/([^/]+?)\.json$/,
      params: (m) => ({ slug: d(m[1]) }),
      load: () => Promise.resolve().then(function() {
        return _slug__json$4;
      })
    },
    {
      type: "page",
      pattern: /^\/events\/([^/]+?)\/?$/,
      params: (m) => ({ slug: d(m[1]) }),
      a: ["src/routes/__layout.svelte", "src/routes/events/[slug].svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "endpoint",
      pattern: /^\/people\.json$/,
      params: empty,
      load: () => Promise.resolve().then(function() {
        return index_json$1;
      })
    },
    {
      type: "page",
      pattern: /^\/people\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/people/index.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "endpoint",
      pattern: /^\/people\/([^/]+?)\.json$/,
      params: (m) => ({ slug: d(m[1]) }),
      load: () => Promise.resolve().then(function() {
        return _slug__json$3;
      })
    },
    {
      type: "page",
      pattern: /^\/people\/([^/]+?)\/?$/,
      params: (m) => ({ slug: d(m[1]) }),
      a: ["src/routes/__layout.svelte", "src/routes/people/[slug].svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/videos\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/videos/index.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "endpoint",
      pattern: /^\/videos\/([^/]+?)\.json$/,
      params: (m) => ({ slug: d(m[1]) }),
      load: () => Promise.resolve().then(function() {
        return _slug__json$2;
      })
    },
    {
      type: "page",
      pattern: /^\/videos\/([^/]+?)\/?$/,
      params: (m) => ({ slug: d(m[1]) }),
      a: ["src/routes/__layout.svelte", "src/routes/videos/[slug].svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "endpoint",
      pattern: /^\/about\.json$/,
      params: empty,
      load: () => Promise.resolve().then(function() {
        return index_json;
      })
    },
    {
      type: "page",
      pattern: /^\/about\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/about/index.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "endpoint",
      pattern: /^\/about\/([^/]+?)\.json$/,
      params: (m) => ({ slug: d(m[1]) }),
      load: () => Promise.resolve().then(function() {
        return _slug__json$1;
      })
    },
    {
      type: "page",
      pattern: /^\/about\/([^/]+?)\/?$/,
      params: (m) => ({ slug: d(m[1]) }),
      a: ["src/routes/__layout.svelte", "src/routes/about/[slug].svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/notes\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/notes/index.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "endpoint",
      pattern: /^\/notes\/([^/]+?)\.json$/,
      params: (m) => ({ slug: d(m[1]) }),
      load: () => Promise.resolve().then(function() {
        return _slug__json;
      })
    },
    {
      type: "page",
      pattern: /^\/notes\/([^/]+?)\/?$/,
      params: (m) => ({ slug: d(m[1]) }),
      a: ["src/routes/__layout.svelte", "src/routes/notes/[slug].svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    }
  ]
};
var get_hooks = (hooks) => ({
  getSession: hooks.getSession || (() => ({})),
  handle: hooks.handle || (({ request, resolve: resolve2 }) => resolve2(request)),
  handleError: hooks.handleError || (({ error: error2 }) => console.error(error2.stack)),
  externalFetch: hooks.externalFetch || fetch
});
var module_lookup = {
  "src/routes/__layout.svelte": () => Promise.resolve().then(function() {
    return __layout;
  }),
  ".svelte-kit/build/components/error.svelte": () => Promise.resolve().then(function() {
    return error;
  }),
  "src/routes/index.svelte": () => Promise.resolve().then(function() {
    return index$e;
  }),
  "src/routes/eyebeam-is-changing/index.svelte": () => Promise.resolve().then(function() {
    return index$d;
  }),
  "src/routes/press-and-news/index.svelte": () => Promise.resolve().then(function() {
    return index$c;
  }),
  "src/routes/press-and-news/[slug].svelte": () => Promise.resolve().then(function() {
    return _slug_$8;
  }),
  "src/routes/everything/index.svelte": () => Promise.resolve().then(function() {
    return index$b;
  }),
  "src/routes/newsletter/index.svelte": () => Promise.resolve().then(function() {
    return index$a;
  }),
  "src/routes/statements/index.svelte": () => Promise.resolve().then(function() {
    return index$9;
  }),
  "src/routes/programs/index.svelte": () => Promise.resolve().then(function() {
    return index$8;
  }),
  "src/routes/programs/[slug].svelte": () => Promise.resolve().then(function() {
    return _slug_$7;
  }),
  "src/routes/projects/index.svelte": () => Promise.resolve().then(function() {
    return index$7;
  }),
  "src/routes/projects/[slug].svelte": () => Promise.resolve().then(function() {
    return _slug_$6;
  }),
  "src/routes/journal/index.svelte": () => Promise.resolve().then(function() {
    return index$6;
  }),
  "src/routes/journal/[slug].svelte": () => Promise.resolve().then(function() {
    return _slug_$5;
  }),
  "src/routes/support/index.svelte": () => Promise.resolve().then(function() {
    return index$5;
  }),
  "src/routes/events/index.svelte": () => Promise.resolve().then(function() {
    return index$4;
  }),
  "src/routes/events/[slug].svelte": () => Promise.resolve().then(function() {
    return _slug_$4;
  }),
  "src/routes/people/index.svelte": () => Promise.resolve().then(function() {
    return index$3;
  }),
  "src/routes/people/[slug].svelte": () => Promise.resolve().then(function() {
    return _slug_$3;
  }),
  "src/routes/videos/index.svelte": () => Promise.resolve().then(function() {
    return index$2;
  }),
  "src/routes/videos/[slug].svelte": () => Promise.resolve().then(function() {
    return _slug_$2;
  }),
  "src/routes/about/index.svelte": () => Promise.resolve().then(function() {
    return index$1;
  }),
  "src/routes/about/[slug].svelte": () => Promise.resolve().then(function() {
    return _slug_$1;
  }),
  "src/routes/notes/index.svelte": () => Promise.resolve().then(function() {
    return index;
  }),
  "src/routes/notes/[slug].svelte": () => Promise.resolve().then(function() {
    return _slug_;
  })
};
var metadata_lookup = { "src/routes/__layout.svelte": { "entry": "pages/__layout.svelte-16b246f4.js", "css": ["assets/pages/__layout.svelte-d2ce061f.css", "assets/person-link-0f3dc9c3.css", "assets/blocks-96e1310d.css", "assets/external-link-f76f3378.css", "assets/arrow-down-3c5d3438.css", "assets/search-391555f3.css", "assets/big-beam-6c8b2f67.css", "assets/logo-af8bc4d7.css"], "js": ["pages/__layout.svelte-16b246f4.js", "chunks/vendor-213107dc.js", "chunks/stores-31368217.js", "chunks/stores-e55d07bf.js", "chunks/person-link-0342ab33.js", "chunks/sanity-4feb09dc.js", "chunks/blocks-1616788c.js", "chunks/external-link-f69e77af.js", "chunks/arrow-down-5bcd27eb.js", "chunks/search-3439f34e.js", "chunks/big-beam-8af199dd.js", "chunks/logo-7ea3a2c3.js"], "styles": [] }, ".svelte-kit/build/components/error.svelte": { "entry": "error.svelte-6c106e1e.js", "css": [], "js": ["error.svelte-6c106e1e.js", "chunks/vendor-213107dc.js"], "styles": [] }, "src/routes/index.svelte": { "entry": "pages/index.svelte-cda9ff35.js", "css": ["assets/pages/index.svelte-09946df1.css", "assets/person-link-0f3dc9c3.css", "assets/logo-af8bc4d7.css", "assets/search-391555f3.css", "assets/open-eyebeam-52296917.css", "assets/blocks-96e1310d.css", "assets/external-link-f76f3378.css", "assets/arrow-down-3c5d3438.css"], "js": ["pages/index.svelte-cda9ff35.js", "chunks/vendor-213107dc.js", "chunks/person-link-0342ab33.js", "chunks/sanity-4feb09dc.js", "chunks/logo-7ea3a2c3.js", "chunks/search-3439f34e.js", "chunks/open-eyebeam-c5f39b8d.js", "chunks/blocks-1616788c.js", "chunks/external-link-f69e77af.js", "chunks/arrow-down-5bcd27eb.js"], "styles": [] }, "src/routes/eyebeam-is-changing/index.svelte": { "entry": "pages/eyebeam-is-changing/index.svelte-fb88bc72.js", "css": ["assets/pages/eyebeam-is-changing/index.svelte-dca60188.css", "assets/bottom-bar-2543ef25.css", "assets/logo-af8bc4d7.css", "assets/open-eyebeam-52296917.css", "assets/person-link-0f3dc9c3.css", "assets/blocks-96e1310d.css", "assets/external-link-f76f3378.css", "assets/arrow-down-3c5d3438.css"], "js": ["pages/eyebeam-is-changing/index.svelte-fb88bc72.js", "chunks/vendor-213107dc.js", "chunks/sanity-4feb09dc.js", "chunks/bottom-bar-52786491.js", "chunks/logo-7ea3a2c3.js", "chunks/open-eyebeam-c5f39b8d.js", "chunks/person-link-0342ab33.js", "chunks/stores-e55d07bf.js", "chunks/blocks-1616788c.js", "chunks/external-link-f69e77af.js", "chunks/arrow-down-5bcd27eb.js"], "styles": [] }, "src/routes/press-and-news/index.svelte": { "entry": "pages/press-and-news/index.svelte-f180a2e0.js", "css": ["assets/pages/press-and-news/index.svelte-304f43e3.css", "assets/bottom-bar-2543ef25.css", "assets/logo-af8bc4d7.css", "assets/open-eyebeam-52296917.css", "assets/person-link-0f3dc9c3.css", "assets/press-and-news-item-9f1c083a.css", "assets/blocks-96e1310d.css", "assets/external-link-f76f3378.css", "assets/arrow-down-3c5d3438.css", "assets/see-also-84e3aaea.css"], "js": ["pages/press-and-news/index.svelte-f180a2e0.js", "chunks/vendor-213107dc.js", "chunks/bottom-bar-52786491.js", "chunks/sanity-4feb09dc.js", "chunks/logo-7ea3a2c3.js", "chunks/open-eyebeam-c5f39b8d.js", "chunks/person-link-0342ab33.js", "chunks/stores-e55d07bf.js", "chunks/press-and-news-item-ba7cd4ac.js", "chunks/blocks-1616788c.js", "chunks/external-link-f69e77af.js", "chunks/arrow-down-5bcd27eb.js", "chunks/see-also-ca34a4a9.js"], "styles": [] }, "src/routes/press-and-news/[slug].svelte": { "entry": "pages/press-and-news/[slug].svelte-26e66950.js", "css": ["assets/pages/press-and-news/[slug].svelte-4d232d1e.css", "assets/person-link-0f3dc9c3.css", "assets/bottom-bar-2543ef25.css", "assets/logo-af8bc4d7.css", "assets/open-eyebeam-52296917.css", "assets/blocks-96e1310d.css", "assets/external-link-f76f3378.css", "assets/arrow-down-3c5d3438.css", "assets/see-also-84e3aaea.css"], "js": ["pages/press-and-news/[slug].svelte-26e66950.js", "chunks/vendor-213107dc.js", "chunks/person-link-0342ab33.js", "chunks/sanity-4feb09dc.js", "chunks/stores-31368217.js", "chunks/stores-e55d07bf.js", "chunks/bottom-bar-52786491.js", "chunks/logo-7ea3a2c3.js", "chunks/open-eyebeam-c5f39b8d.js", "chunks/blocks-1616788c.js", "chunks/external-link-f69e77af.js", "chunks/arrow-down-5bcd27eb.js", "chunks/see-also-ca34a4a9.js"], "styles": [] }, "src/routes/everything/index.svelte": { "entry": "pages/everything/index.svelte-24953aed.js", "css": ["assets/pages/everything/index.svelte-a5e4f9b5.css", "assets/person-link-0f3dc9c3.css", "assets/blocks-96e1310d.css", "assets/external-link-f76f3378.css", "assets/arrow-down-3c5d3438.css"], "js": ["pages/everything/index.svelte-24953aed.js", "chunks/vendor-213107dc.js", "chunks/person-link-0342ab33.js", "chunks/sanity-4feb09dc.js", "chunks/blocks-1616788c.js", "chunks/external-link-f69e77af.js", "chunks/arrow-down-5bcd27eb.js"], "styles": [] }, "src/routes/newsletter/index.svelte": { "entry": "pages/newsletter/index.svelte-3074137f.js", "css": ["assets/pages/newsletter/index.svelte-4ada1e93.css", "assets/bottom-bar-2543ef25.css", "assets/logo-af8bc4d7.css", "assets/open-eyebeam-52296917.css", "assets/person-link-0f3dc9c3.css"], "js": ["pages/newsletter/index.svelte-3074137f.js", "chunks/vendor-213107dc.js", "chunks/sanity-4feb09dc.js", "chunks/bottom-bar-52786491.js", "chunks/logo-7ea3a2c3.js", "chunks/open-eyebeam-c5f39b8d.js", "chunks/person-link-0342ab33.js", "chunks/stores-e55d07bf.js"], "styles": [] }, "src/routes/statements/index.svelte": { "entry": "pages/statements/index.svelte-6b35a4d1.js", "css": ["assets/pages/statements/index.svelte-53ac1640.css", "assets/person-link-0f3dc9c3.css", "assets/bottom-bar-2543ef25.css", "assets/logo-af8bc4d7.css", "assets/open-eyebeam-52296917.css", "assets/big-beam-6c8b2f67.css"], "js": ["pages/statements/index.svelte-6b35a4d1.js", "chunks/vendor-213107dc.js", "chunks/sanity-4feb09dc.js", "chunks/person-link-0342ab33.js", "chunks/bottom-bar-52786491.js", "chunks/logo-7ea3a2c3.js", "chunks/open-eyebeam-c5f39b8d.js", "chunks/stores-e55d07bf.js", "chunks/big-beam-8af199dd.js"], "styles": [] }, "src/routes/programs/index.svelte": { "entry": "pages/programs/index.svelte-a86faeee.js", "css": ["assets/pages/programs/index.svelte-6e047ae5.css", "assets/person-link-0f3dc9c3.css", "assets/bottom-bar-2543ef25.css", "assets/logo-af8bc4d7.css", "assets/open-eyebeam-52296917.css"], "js": ["pages/programs/index.svelte-a86faeee.js", "chunks/vendor-213107dc.js", "chunks/sanity-4feb09dc.js", "chunks/person-link-0342ab33.js", "chunks/bottom-bar-52786491.js", "chunks/logo-7ea3a2c3.js", "chunks/open-eyebeam-c5f39b8d.js", "chunks/stores-e55d07bf.js"], "styles": [] }, "src/routes/programs/[slug].svelte": { "entry": "pages/programs/[slug].svelte-52276502.js", "css": ["assets/pages/programs/[slug].svelte-21bcda90.css", "assets/person-link-0f3dc9c3.css", "assets/bottom-bar-2543ef25.css", "assets/logo-af8bc4d7.css", "assets/open-eyebeam-52296917.css", "assets/blocks-96e1310d.css", "assets/external-link-f76f3378.css", "assets/arrow-down-3c5d3438.css", "assets/see-also-84e3aaea.css"], "js": ["pages/programs/[slug].svelte-52276502.js", "chunks/vendor-213107dc.js", "chunks/person-link-0342ab33.js", "chunks/sanity-4feb09dc.js", "chunks/stores-31368217.js", "chunks/stores-e55d07bf.js", "chunks/bottom-bar-52786491.js", "chunks/logo-7ea3a2c3.js", "chunks/open-eyebeam-c5f39b8d.js", "chunks/blocks-1616788c.js", "chunks/external-link-f69e77af.js", "chunks/arrow-down-5bcd27eb.js", "chunks/see-also-ca34a4a9.js"], "styles": [] }, "src/routes/projects/index.svelte": { "entry": "pages/projects/index.svelte-b94a46f1.js", "css": [], "js": ["pages/projects/index.svelte-b94a46f1.js", "chunks/vendor-213107dc.js"], "styles": [] }, "src/routes/projects/[slug].svelte": { "entry": "pages/projects/[slug].svelte-b2ef80e8.js", "css": ["assets/pages/events/[slug].svelte-f7e7057f.css", "assets/person-link-0f3dc9c3.css", "assets/bottom-bar-2543ef25.css", "assets/logo-af8bc4d7.css", "assets/open-eyebeam-52296917.css", "assets/blocks-96e1310d.css", "assets/external-link-f76f3378.css", "assets/arrow-down-3c5d3438.css", "assets/see-also-84e3aaea.css"], "js": ["pages/projects/[slug].svelte-b2ef80e8.js", "chunks/vendor-213107dc.js", "chunks/sanity-4feb09dc.js", "chunks/person-link-0342ab33.js", "chunks/stores-31368217.js", "chunks/stores-e55d07bf.js", "chunks/bottom-bar-52786491.js", "chunks/logo-7ea3a2c3.js", "chunks/open-eyebeam-c5f39b8d.js", "chunks/blocks-1616788c.js", "chunks/external-link-f69e77af.js", "chunks/arrow-down-5bcd27eb.js", "chunks/see-also-ca34a4a9.js"], "styles": [] }, "src/routes/journal/index.svelte": { "entry": "pages/journal/index.svelte-36e122d2.js", "css": [], "js": ["pages/journal/index.svelte-36e122d2.js", "chunks/vendor-213107dc.js"], "styles": [] }, "src/routes/journal/[slug].svelte": { "entry": "pages/journal/[slug].svelte-c4a0e09b.js", "css": [], "js": ["pages/journal/[slug].svelte-c4a0e09b.js", "chunks/vendor-213107dc.js", "chunks/sanity-4feb09dc.js"], "styles": [] }, "src/routes/support/index.svelte": { "entry": "pages/support/index.svelte-b5f7b961.js", "css": ["assets/pages/support/index.svelte-94653528.css", "assets/bottom-bar-2543ef25.css", "assets/logo-af8bc4d7.css", "assets/open-eyebeam-52296917.css", "assets/person-link-0f3dc9c3.css", "assets/see-also-84e3aaea.css", "assets/external-link-f76f3378.css"], "js": ["pages/support/index.svelte-b5f7b961.js", "chunks/vendor-213107dc.js", "chunks/sanity-4feb09dc.js", "chunks/bottom-bar-52786491.js", "chunks/logo-7ea3a2c3.js", "chunks/open-eyebeam-c5f39b8d.js", "chunks/person-link-0342ab33.js", "chunks/stores-e55d07bf.js", "chunks/see-also-ca34a4a9.js", "chunks/external-link-f69e77af.js"], "styles": [] }, "src/routes/events/index.svelte": { "entry": "pages/events/index.svelte-fcb43f3d.js", "css": [], "js": ["pages/events/index.svelte-fcb43f3d.js", "chunks/vendor-213107dc.js"], "styles": [] }, "src/routes/events/[slug].svelte": { "entry": "pages/events/[slug].svelte-8b6f437d.js", "css": ["assets/pages/events/[slug].svelte-f7e7057f.css", "assets/person-link-0f3dc9c3.css", "assets/bottom-bar-2543ef25.css", "assets/logo-af8bc4d7.css", "assets/open-eyebeam-52296917.css", "assets/blocks-96e1310d.css", "assets/external-link-f76f3378.css", "assets/arrow-down-3c5d3438.css", "assets/see-also-84e3aaea.css"], "js": ["pages/events/[slug].svelte-8b6f437d.js", "chunks/vendor-213107dc.js", "chunks/sanity-4feb09dc.js", "chunks/person-link-0342ab33.js", "chunks/stores-31368217.js", "chunks/stores-e55d07bf.js", "chunks/bottom-bar-52786491.js", "chunks/logo-7ea3a2c3.js", "chunks/open-eyebeam-c5f39b8d.js", "chunks/blocks-1616788c.js", "chunks/external-link-f69e77af.js", "chunks/arrow-down-5bcd27eb.js", "chunks/see-also-ca34a4a9.js"], "styles": [] }, "src/routes/people/index.svelte": { "entry": "pages/people/index.svelte-8a6a5f2b.js", "css": ["assets/pages/people/index.svelte-6338a8ca.css", "assets/person-link-0f3dc9c3.css", "assets/bottom-bar-2543ef25.css", "assets/logo-af8bc4d7.css", "assets/open-eyebeam-52296917.css", "assets/arrow-down-3c5d3438.css"], "js": ["pages/people/index.svelte-8a6a5f2b.js", "chunks/vendor-213107dc.js", "chunks/person-link-0342ab33.js", "chunks/sanity-4feb09dc.js", "chunks/bottom-bar-52786491.js", "chunks/logo-7ea3a2c3.js", "chunks/open-eyebeam-c5f39b8d.js", "chunks/stores-e55d07bf.js", "chunks/arrow-down-5bcd27eb.js"], "styles": [] }, "src/routes/people/[slug].svelte": { "entry": "pages/people/[slug].svelte-2b054c42.js", "css": ["assets/pages/people/[slug].svelte-fb8ca458.css", "assets/person-link-0f3dc9c3.css", "assets/external-link-f76f3378.css", "assets/bottom-bar-2543ef25.css", "assets/logo-af8bc4d7.css", "assets/open-eyebeam-52296917.css", "assets/blocks-96e1310d.css", "assets/arrow-down-3c5d3438.css", "assets/see-also-84e3aaea.css"], "js": ["pages/people/[slug].svelte-2b054c42.js", "chunks/vendor-213107dc.js", "chunks/sanity-4feb09dc.js", "chunks/person-link-0342ab33.js", "chunks/external-link-f69e77af.js", "chunks/stores-31368217.js", "chunks/stores-e55d07bf.js", "chunks/bottom-bar-52786491.js", "chunks/logo-7ea3a2c3.js", "chunks/open-eyebeam-c5f39b8d.js", "chunks/blocks-1616788c.js", "chunks/arrow-down-5bcd27eb.js", "chunks/see-also-ca34a4a9.js"], "styles": [] }, "src/routes/videos/index.svelte": { "entry": "pages/videos/index.svelte-7a101306.js", "css": [], "js": ["pages/videos/index.svelte-7a101306.js", "chunks/vendor-213107dc.js"], "styles": [] }, "src/routes/videos/[slug].svelte": { "entry": "pages/videos/[slug].svelte-d80764fa.js", "css": ["assets/pages/notes/[slug].svelte-c4785f6e.css", "assets/person-link-0f3dc9c3.css", "assets/bottom-bar-2543ef25.css", "assets/logo-af8bc4d7.css", "assets/open-eyebeam-52296917.css", "assets/blocks-96e1310d.css", "assets/external-link-f76f3378.css", "assets/arrow-down-3c5d3438.css", "assets/see-also-84e3aaea.css"], "js": ["pages/videos/[slug].svelte-d80764fa.js", "chunks/vendor-213107dc.js", "chunks/person-link-0342ab33.js", "chunks/sanity-4feb09dc.js", "chunks/stores-31368217.js", "chunks/stores-e55d07bf.js", "chunks/bottom-bar-52786491.js", "chunks/logo-7ea3a2c3.js", "chunks/open-eyebeam-c5f39b8d.js", "chunks/blocks-1616788c.js", "chunks/external-link-f69e77af.js", "chunks/arrow-down-5bcd27eb.js", "chunks/see-also-ca34a4a9.js"], "styles": [] }, "src/routes/about/index.svelte": { "entry": "pages/about/index.svelte-76683f3b.js", "css": ["assets/pages/about/index.svelte-6e4feae3.css", "assets/bottom-bar-2543ef25.css", "assets/logo-af8bc4d7.css", "assets/open-eyebeam-52296917.css", "assets/person-link-0f3dc9c3.css", "assets/press-and-news-item-9f1c083a.css"], "js": ["pages/about/index.svelte-76683f3b.js", "chunks/vendor-213107dc.js", "chunks/sanity-4feb09dc.js", "chunks/bottom-bar-52786491.js", "chunks/logo-7ea3a2c3.js", "chunks/open-eyebeam-c5f39b8d.js", "chunks/person-link-0342ab33.js", "chunks/stores-e55d07bf.js", "chunks/press-and-news-item-ba7cd4ac.js"], "styles": [] }, "src/routes/about/[slug].svelte": { "entry": "pages/about/[slug].svelte-c77c1fb3.js", "css": ["assets/pages/about/[slug].svelte-fff1020b.css", "assets/person-link-0f3dc9c3.css", "assets/bottom-bar-2543ef25.css", "assets/logo-af8bc4d7.css", "assets/open-eyebeam-52296917.css", "assets/blocks-96e1310d.css", "assets/external-link-f76f3378.css", "assets/arrow-down-3c5d3438.css", "assets/see-also-84e3aaea.css"], "js": ["pages/about/[slug].svelte-c77c1fb3.js", "chunks/vendor-213107dc.js", "chunks/sanity-4feb09dc.js", "chunks/person-link-0342ab33.js", "chunks/stores-31368217.js", "chunks/stores-e55d07bf.js", "chunks/bottom-bar-52786491.js", "chunks/logo-7ea3a2c3.js", "chunks/open-eyebeam-c5f39b8d.js", "chunks/blocks-1616788c.js", "chunks/external-link-f69e77af.js", "chunks/arrow-down-5bcd27eb.js", "chunks/see-also-ca34a4a9.js"], "styles": [] }, "src/routes/notes/index.svelte": { "entry": "pages/notes/index.svelte-f0e7a983.js", "css": [], "js": ["pages/notes/index.svelte-f0e7a983.js", "chunks/vendor-213107dc.js"], "styles": [] }, "src/routes/notes/[slug].svelte": { "entry": "pages/notes/[slug].svelte-af800363.js", "css": ["assets/pages/notes/[slug].svelte-c4785f6e.css", "assets/person-link-0f3dc9c3.css", "assets/bottom-bar-2543ef25.css", "assets/logo-af8bc4d7.css", "assets/open-eyebeam-52296917.css", "assets/blocks-96e1310d.css", "assets/external-link-f76f3378.css", "assets/arrow-down-3c5d3438.css", "assets/see-also-84e3aaea.css"], "js": ["pages/notes/[slug].svelte-af800363.js", "chunks/vendor-213107dc.js", "chunks/person-link-0342ab33.js", "chunks/sanity-4feb09dc.js", "chunks/stores-31368217.js", "chunks/stores-e55d07bf.js", "chunks/bottom-bar-52786491.js", "chunks/logo-7ea3a2c3.js", "chunks/open-eyebeam-c5f39b8d.js", "chunks/blocks-1616788c.js", "chunks/external-link-f69e77af.js", "chunks/arrow-down-5bcd27eb.js", "chunks/see-also-ca34a4a9.js"], "styles": [] } };
async function load_component(file) {
  const { entry, css: css2, js, styles } = metadata_lookup[file];
  return {
    module: await module_lookup[file](),
    entry: assets + "/_app/" + entry,
    css: css2.map((dep) => assets + "/_app/" + dep),
    js: js.map((dep) => assets + "/_app/" + dep),
    styles
  };
}
function render(request, {
  prerender
} = {}) {
  const host = request.headers["host"];
  return respond({ ...request, host }, options, { prerender });
}
var SANITY_ID = "3knpqano";
var client = (0, import_client.default)({
  projectId: SANITY_ID,
  dataset: "production",
  apiVersion: "2021-10-05",
  useCdn: false
});
var h = import_block_content_to_html.default.h;
var prepareTextElements = (props) => {
  let textElements = [];
  if ((0, import_has.default)(props, "node.caption.content"))
    textElements.push(h("figcaption", { className: "caption" }, toPlainText(props.node.caption.content)));
  if ((0, import_has.default)(props, "node.attribution"))
    textElements.push(h("figcaption", { className: "credits" }, props.node.attribution));
  return textElements;
};
var renderBlockText = (text) => (0, import_block_content_to_html.default)({
  blocks: text,
  serializers,
  projectId: SANITY_ID,
  dataset: "production"
});
var toPlainText = (blocks = []) => {
  return blocks.map((block) => {
    if (block._type !== "block" || !block.children) {
      return "";
    }
    return block.children.map((child) => child.text).join("");
  }).join("\n\n");
};
var builder = (0, import_image_url.default)(client);
var urlFor = (source) => builder.image(source);
var serializers = {
  marks: {
    link: (props) => h("a", { target: "_blank", rel: "noreferrer", href: props.mark.href }, props.children),
    interviewName: (props) => h("span", { className: "interview-name" }, props.children),
    footnote: (props) => {
      return h("span", props.children, h("a", { id: "link-" + props.mark._key, className: "footnote-link", href: "#note-" + props.mark._key }));
    }
  },
  types: {
    block: (props) => {
      const style = props.node.style || "normal";
      if (style === "blockquote")
        return h("blockquote", {}, props.children);
      if (style === "h2")
        return h("h2", {}, props.children);
      if (style === "h3")
        return h("h3", {}, props.children);
      if (style === "h4")
        return h("h4", {}, props.children);
      return h("p", { className: style }, props.children);
    },
    image: (props) => {
      return h("figure", { className: "image" }, [
        h("img", {
          src: urlFor(props.node.asset).width(800).saturation(-100).quality(90).auto("format").url()
        }),
        ...prepareTextElements(props)
      ]);
    },
    embedBlock: (props) => {
      if (props.node.url.includes("youtube")) {
        return h("figure", { className: "youtube" }, [
          h("div", { className: "embed-container" }, h("iframe", { width: "720", height: "480", src: "https://www.youtube.com/embed/" + (0, import_get_video_id.default)(props.node.url).id, frameborder: "no", allow: "accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture", allowfullscreen: true })),
          ...prepareTextElements(props)
        ]);
      }
      if (props.node.url.includes("vimeo")) {
        return h("figure", { className: "vimeo" }, [
          h("div", { className: "embed-container" }, h("iframe", { width: "720", height: "480", src: "https://player.vimeo.com/video/" + (0, import_get_video_id.default)(props.node.url).id, frameborder: "no", byline: false, color: "#ffffff", allow: "autoplay; fullscreen", allowfullscreen: true })),
          ...prepareTextElements(props)
        ]);
      }
      if (props.node.url.includes("soundcloud")) {
        return h("figure", { className: "soundcloud" }, [
          h("div", { className: "soundcloud-container" }, h("iframe", { width: "100%", height: "300", src: "https://w.soundcloud.com/player/?url=" + props.node.url + "&color=%23fffff", frameborder: "no", scrolling: "no", allow: "autoplay" })),
          ...prepareTextElements(props)
        ]);
      }
    },
    videoBlock: (props) => {
      const videoUrl = "https://cdn.sanity.io/files/yesqrmft/production/" + props.node.videoFile.asset._ref.replace("file-", "").replace("-mp4", ".mp4");
      return h("figure", { className: "video" }, [
        h("video", { src: videoUrl, controls: true, loop: true, autoplay: props.node.autoPlay }),
        ...prepareTextElements(props)
      ]);
    },
    audioBlock: (props) => {
      const audioUrl = "https://cdn.sanity.io/files/yesqrmft/production/" + props.node.audioFile.asset._ref.replace("file-", "").replace("-mp3", ".mp3");
      return h("figure", { className: "audio" }, [
        h("audio", { src: audioUrl, controls: true }),
        ...prepareTextElements(props)
      ]);
    }
  }
};
var loadData = async (query, params) => {
  try {
    const res = await client.fetch(query, params);
    if (res === null) {
      return Promise.reject("No posts");
    }
    return res;
  } catch (err) {
    return Promise.reject(new Error(404));
  }
};
var get$j = async (request) => {
  const programs = await loadData("*[_type == 'program']");
  const events = await loadData("*[_type == 'event']{..., people[]->{...}}");
  const stickers = await loadData("*[_id == 'stickers']{...}[0]");
  const response = {
    programs,
    events,
    stickers
  };
  return { body: response.status === 404 ? "ERROR" : response };
};
var index_json$a = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  get: get$j
});
var get$i = async (request) => {
  const response = await loadData("*[_id == 'eyebeam-is-changing'][0]");
  return { body: response.status === 404 ? "ERROR" : response };
};
var index_json$9 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  get: get$i
});
var get$h = async (request) => {
  const news = await loadData("*[_type == 'news']");
  const press = await loadData("*[_type == 'press']");
  const page2 = await loadData("*[_id == 'press-and-news']{..., internalLinks[]->{...}}[0]");
  const response = {
    news,
    press,
    page: page2
  };
  return { body: response.status === 404 ? "ERROR" : response };
};
var index_json$8 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  get: get$h
});
var get$g = async (request) => {
  const response = await loadData("*[slug.current == $slug]{..., people[]->{...}, internalLinks[]->{...}}[0]", { slug: request.params.slug });
  return { body: response.status === 404 ? "ERROR" : response };
};
var _slug__json$8 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  get: get$g
});
var get$f = async () => {
  const posts = await loadData("*[_type in ['event', 'project', 'press', 'news', 'program', 'note', 'videoPost']]{..., people[]->{...}}");
  const page2 = await loadData("*[_id == 'everything'][0]");
  const response = {
    page: page2,
    posts
  };
  return { body: response.status === 404 ? "ERROR" : response };
};
var index_json$7 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  get: get$f
});
var get$e = async (request) => {
  const response = await loadData("*[_id == 'newsletter'][0]");
  return { body: response.status === 404 ? "ERROR" : response };
};
var index_json$6 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  get: get$e
});
var get$d = async () => {
  const response = await loadData("*[_type == 'statement']{..., person->{...}}");
  return { body: response.status === 404 ? "ERROR" : response };
};
var index_json$5 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  get: get$d
});
var get$c = async (request) => {
  const response = await loadData("*[_type == 'program']");
  return { body: response.status === 404 ? "ERROR" : response };
};
var index_json$4 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  get: get$c
});
var get$b = async (request) => {
  const response = await loadData("*[_type == 'program' && slug.current == $slug]{..., people[]->{...}, internalLinks[]->{...}}[0]", { slug: request.params.slug });
  return { body: response.status === 404 ? "ERROR" : response };
};
var _slug__json$7 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  get: get$b
});
var get$a = async (request) => {
  const response = await loadData("*[_type == 'project' && slug.current == $slug]{..., people[]->{...}, internalLinks[]->{...}}[0]", { slug: request.params.slug });
  return { body: response.status === 404 ? "ERROR" : response };
};
var _slug__json$6 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  get: get$a
});
var get$9 = async (request) => {
  const response = await loadData("*[_type == 'blogPost']");
  return { body: response.status === 404 ? "ERROR" : response };
};
var index_json$3 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  get: get$9
});
var get$8 = async (request) => {
  const response = await loadData("*[_type == 'blogPost' && slug.current == $slug]{...,people[]->{...}}[0]", { slug: request.params.slug });
  return { body: response.status === 404 ? "ERROR" : response };
};
var _slug__json$5 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  get: get$8
});
var get$7 = async (request) => {
  const response = await loadData("*[_id == 'support-eyebeam']{..., internalLinks[]->{...}}[0]");
  return { body: response.status === 404 ? "ERROR" : response };
};
var index_json$2 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  get: get$7
});
var get$6 = async (request) => {
  const response = await loadData("*[_type == 'event' && slug.current == $slug]{...,people[]->{...}, internalLinks[]->{...}}[0]", { slug: request.params.slug });
  return { body: response.status === 404 ? "ERROR" : response };
};
var _slug__json$4 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  get: get$6
});
var get$5 = async () => {
  const response = await loadData("*[_type == 'person']");
  return { body: response.status === 404 ? "ERROR" : response };
};
var index_json$1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  get: get$5
});
var get$4 = async (request) => {
  const response = await loadData("*[_type == 'person' && slug.current == $slug]{..., internalLinks[]->{...}}[0]", { slug: request.params.slug });
  return { body: response.status === 404 ? "ERROR" : response };
};
var _slug__json$3 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  get: get$4
});
var get$3 = async (request) => {
  const response = await loadData("*[_type == 'videoPost' && slug.current == $slug]{...,people[]->{...}, internalLinks[]->{...}}[0]", { slug: request.params.slug });
  console.log(response);
  return { body: response.status === 404 ? "ERROR" : response };
};
var _slug__json$2 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  get: get$3
});
var get$2 = async (request) => {
  const response = await loadData("*[_id in ['what-is-eyebeam', 'our-mission-and-values', 'our-history', 'staff-and-board', 'artists', 'support-eyebeam', 'get-involved', 'press-and-news', 'our-operating-documents', 'media-kit', 'contact']]");
  return { body: response.status === 404 ? "ERROR" : response };
};
var index_json = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  get: get$2
});
var get$1 = async (request) => {
  const response = await loadData("*[_id == $slug]{..., internalLinks[]->{...}}[0]", { slug: request.params.slug });
  return { body: response.status === 404 ? "ERROR" : response };
};
var _slug__json$1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  get: get$1
});
var get = async (request) => {
  const response = await loadData("*[_type == 'note' && slug.current == $slug]{...,people[]->{...}, internalLinks[]->{...}}[0]", { slug: request.params.slug });
  return { body: response.status === 404 ? "ERROR" : response };
};
var _slug__json = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  get
});
var subscriber_queue = [];
function readable(value, start) {
  return {
    subscribe: writable(value, start).subscribe
  };
}
function writable(value, start = noop) {
  let stop;
  const subscribers = new Set();
  function set(new_value) {
    if (safe_not_equal(value, new_value)) {
      value = new_value;
      if (stop) {
        const run_queue = !subscriber_queue.length;
        for (const subscriber of subscribers) {
          subscriber[1]();
          subscriber_queue.push(subscriber, value);
        }
        if (run_queue) {
          for (let i = 0; i < subscriber_queue.length; i += 2) {
            subscriber_queue[i][0](subscriber_queue[i + 1]);
          }
          subscriber_queue.length = 0;
        }
      }
    }
  }
  function update(fn) {
    set(fn(value));
  }
  function subscribe2(run2, invalidate = noop) {
    const subscriber = [run2, invalidate];
    subscribers.add(subscriber);
    if (subscribers.size === 1) {
      stop = start(set) || noop;
    }
    run2(value);
    return () => {
      subscribers.delete(subscriber);
      if (subscribers.size === 0) {
        stop();
        stop = null;
      }
    };
  }
  return { set, update, subscribe: subscribe2 };
}
function derived(stores, fn, initial_value) {
  const single = !Array.isArray(stores);
  const stores_array = single ? [stores] : stores;
  const auto = fn.length < 2;
  return readable(initial_value, (set) => {
    let inited = false;
    const values = [];
    let pending = 0;
    let cleanup = noop;
    const sync = () => {
      if (pending) {
        return;
      }
      cleanup();
      const result = fn(single ? values[0] : values, set);
      if (auto) {
        set(result);
      } else {
        cleanup = is_function(result) ? result : noop;
      }
    };
    const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {
      values[i] = value;
      pending &= ~(1 << i);
      if (inited) {
        sync();
      }
    }, () => {
      pending |= 1 << i;
    }));
    inited = true;
    sync();
    return function stop() {
      run_all(unsubscribers);
      cleanup();
    };
  });
}
var getStores = () => {
  const stores = getContext("__svelte__");
  return {
    page: {
      subscribe: stores.page.subscribe
    },
    navigating: {
      subscribe: stores.navigating.subscribe
    },
    get preloading() {
      console.error("stores.preloading is deprecated; use stores.navigating instead");
      return {
        subscribe: stores.navigating.subscribe
      };
    },
    session: stores.session
  };
};
var page = {
  subscribe(fn) {
    const store = getStores().page;
    return store.subscribe(fn);
  }
};
var postTypeToCategory = {
  program: "programs",
  person: "people",
  blogPost: "blog",
  event: "events",
  aboutPage: "about",
  project: "projects",
  note: "notes",
  videoPost: "videos",
  press: "press-and-news",
  news: "press-and-news"
};
var postTypeToName = {
  program: "Program",
  person: "Person",
  blogPost: "Blog",
  event: "Event",
  aboutPage: "About",
  project: "Project",
  note: "Note",
  videoPost: "Video",
  press: "Press",
  news: "News"
};
var categoryToName = {
  programs: "Programs",
  people: "People",
  blog: "Blog",
  events: "Events",
  about: "About",
  projects: "Projects",
  notes: "Notes",
  videos: "Videos",
  statements: "Statements",
  everything: "Everything",
  press: "Press",
  news: "News"
};
var roleToRoleName = {
  artist: "Artist",
  staff: "Staff",
  board: "Board",
  advisoryCommittee: "Advisory Committee"
};
var dotFormatDate = (date) => {
  try {
    if (date) {
      return (0, import_date_fns.format)((0, import_date_fns.parseISO)(date), "dd.MM.yyyy");
    }
  } catch (err) {
    console.dir(err);
  }
};
var longFormatDate = (date) => {
  try {
    if (date) {
      return (0, import_date_fns.format)((0, import_date_fns.parseISO)(date), "MMMM d, yyyy");
    }
  } catch (err) {
    console.dir(err);
  }
};
var shortFormatDate = (date) => {
  try {
    if (date) {
      return (0, import_date_fns.format)((0, import_date_fns.parseISO)(date), "MMMM yyyy");
    }
  } catch (err) {
    console.dir(err);
  }
};
var distanceToDate = (date) => {
  try {
    if (date) {
      const parsedDate = (0, import_date_fns.parseISO)(date);
      if ((0, import_date_fns.isFuture)(parsedDate)) {
        return "On " + (0, import_date_fns.format)(parsedDate, "MMMM d");
      }
      return (0, import_date_fns.formatDistanceToNow)(parsedDate) + " ago";
    }
    return "";
  } catch (err) {
    console.dir(err);
  }
};
var getCurrentYear = () => {
  return Number((0, import_date_fns.format)(new Date(), "yyyy"));
};
var parseToc = (text) => {
  let tempToc = [];
  if (text && Array.isArray(text)) {
    let headers = text.filter((b) => b.style == "h2" || b._type == "columnsBlock" || b._type == "faq");
    tempToc = headers.map((b) => {
      if (b._type == "columnsBlock" || b._type == "faq") {
        return {
          title: b.title,
          link: "#" + (0, import_slugify.default)(b.title, {
            lower: true
          })
        };
      } else {
        return {
          title: b.children[0].text,
          link: "#" + (0, import_slugify.default)(b.children[0].text, {
            lower: true
          })
        };
      }
    });
  }
  return tempToc;
};
var currentPage = writable(null);
var loaded = writable(false);
var trayOpen = writable(false);
var theme = writable("ink");
var inversion = writable(false);
var activeCity = writable({});
var currentCategory = derived(page, ($page) => {
  let pathArray = $page.path.split("/").filter((p) => p);
  if (pathArray[0] && categoryToName[pathArray[0]]) {
    return { slug: pathArray[0], name: categoryToName[pathArray[0]] };
  } else {
    return null;
  }
});
var css$X = {
  code: ".clock.svelte-13is0nm{font-size:12px;color:#f5f4ee}",
  map: `{"version":3,"file":"clock.svelte","sources":["clock.svelte"],"sourcesContent":["<script>\\n\\t// # # # # # # # # # # # # #\\n\\t//\\n\\t//  CLOCK\\n\\t//\\n\\t// # # # # # # # # # # # # #\\n\\n\\timport has from 'lodash/has.js';\\n\\n\\t// __ STORES\\n\\timport { activeCity } from '$lib/stores.js';\\n\\n\\tconst API_KEY = 'a9b67d6b5ed093b28c410750ef6a70cd';\\n\\n\\tlet currentTime;\\n\\tlet currentWeather = {\\n\\t\\tdescription: '',\\n\\t\\ttemperature: 0\\n\\t};\\n\\n\\tconst updateTime = () => {\\n\\t\\tlet d = new Date();\\n\\t\\tif ($activeCity.timezone) {\\n\\t\\t\\tcurrentTime = new Intl.DateTimeFormat('en-US', {\\n\\t\\t\\t\\ttimeZone: $activeCity.timezone,\\n\\t\\t\\t\\thour: 'numeric',\\n\\t\\t\\t\\tminute: 'numeric'\\n\\t\\t\\t}).format(d);\\n\\t\\t}\\n\\t};\\n\\n\\tsetInterval(updateTime, 10000);\\n\\tupdateTime();\\n\\n\\tconst updateWeather = (city, country) => {\\n\\t\\tconsole.log(city + ' ' + country);\\n\\t\\t// NEW YORK\\n\\t\\tfetch('https://api.openweathermap.org/data/2.5/weather?q=' + city + '&appid=' + API_KEY)\\n\\t\\t\\t.then((response) => response.json())\\n\\t\\t\\t.then((data) => {\\n\\t\\t\\t\\tconsole.log(data);\\n\\t\\t\\t\\tif (has(data, 'weather[0].description')) {\\n\\t\\t\\t\\t\\tcurrentWeather.description = data.weather[0].description;\\n\\t\\t\\t\\t\\tcurrentWeather.temperature = Math.round(((data.main.temp - 273.15) * 9) / 5 + 32);\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t};\\n\\n\\t$: {\\n\\t\\tupdateWeather($activeCity.name);\\n\\t\\tupdateTime();\\n\\t}\\n<\/script>\\n\\n<div class=\\"clock\\">\\n\\t{#if $activeCity.name}\\n\\t\\t<span>It\u2019s {currentTime} and {currentWeather.description} in {$activeCity.name}</span>\\n\\t{/if}\\n</div>\\n\\n<style lang=\\"scss\\">.clock {\\n  font-size: 12px;\\n  color: #f5f4ee; }\\n  .clock a {\\n    color: #f5f4ee;\\n    text-decoration: none; }\\n</style>\\n"],"names":[],"mappings":"AA4DmB,MAAM,eAAC,CAAC,AACzB,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,OAAO,AAAE,CAAC"}`
};
var API_KEY = "a9b67d6b5ed093b28c410750ef6a70cd";
var Clock = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $activeCity, $$unsubscribe_activeCity;
  $$unsubscribe_activeCity = subscribe(activeCity, (value) => $activeCity = value);
  let currentTime;
  let currentWeather = { description: "", temperature: 0 };
  const updateTime = () => {
    let d2 = new Date();
    if ($activeCity.timezone) {
      currentTime = new Intl.DateTimeFormat("en-US", {
        timeZone: $activeCity.timezone,
        hour: "numeric",
        minute: "numeric"
      }).format(d2);
    }
  };
  setInterval(updateTime, 1e4);
  updateTime();
  const updateWeather = (city, country) => {
    console.log(city + " " + country);
    fetch("https://api.openweathermap.org/data/2.5/weather?q=" + city + "&appid=" + API_KEY).then((response) => response.json()).then((data) => {
      console.log(data);
      if ((0, import_has.default)(data, "weather[0].description")) {
        currentWeather.description = data.weather[0].description;
        currentWeather.temperature = Math.round((data.main.temp - 273.15) * 9 / 5 + 32);
      }
    });
  };
  $$result.css.add(css$X);
  {
    {
      updateWeather($activeCity.name);
      updateTime();
    }
  }
  $$unsubscribe_activeCity();
  return `<div class="${"clock svelte-13is0nm"}">${$activeCity.name ? `<span>It\u2019s ${escape(currentTime)} and ${escape(currentWeather.description)} in ${escape($activeCity.name)}</span>` : ``}
</div>`;
});
var css$W = {
  code: ".pop-up.svelte-13pist6.svelte-13pist6{display:none;background:#f5f4ee;padding:10px;border:1px solid #221f20;z-index:1000}.pop-up.svelte-13pist6 .name.svelte-13pist6{font-weight:bold;margin-right:10px}a.svelte-13pist6.svelte-13pist6{color:#221f20;background:#e0ded7;text-decoration:none}a.svelte-13pist6:hover+.pop-up.svelte-13pist6{display:flex}.column.first.svelte-13pist6.svelte-13pist6{padding-right:10px}",
  map: `{"version":3,"file":"person-link.svelte","sources":["person-link.svelte"],"sourcesContent":["<script>\\n\\t// # # # # # # # # # # # # #\\n\\t//\\n\\t//  Person link\\n\\t//\\n\\t// # # # # # # # # # # # # #\\n\\n\\t//  __ IMPORTS\\n\\timport { createPopper } from '@popperjs/core';\\n\\timport { onMount } from 'svelte';\\n\\timport { loadData, urlFor } from '$lib/sanity.js';\\n\\timport { roleToRoleName } from '$lib/global.js';\\n\\timport get from 'lodash/get.js';\\n\\n\\t// __ PROPS\\n\\texport let person = false;\\n\\texport let overrideText = false;\\n\\texport let personId = false;\\n\\n\\t// __ VARIABLES\\n\\tlet linkEl = {};\\n\\tlet popEl = {};\\n\\n\\tconst initPopper = () => {\\n\\t\\tcreatePopper(linkEl, popEl, {\\n\\t\\t\\tplacement: 'bottom'\\n\\t\\t});\\n\\t};\\n\\n\\tconst renderNewLines = (t) => t.replace(/(?:\\\\r\\\\n|\\\\r|\\\\n)/g, '<br>');\\n\\n\\tif (personId) {\\n\\t\\tloadData('*[_id == \\"' + personId + '\\"][0]').then((p) => {\\n\\t\\t\\tperson = p;\\n\\t\\t\\tsetTimeout(initPopper, 1000);\\n\\t\\t});\\n\\t}\\n\\n\\tonMount(async () => {\\n\\t\\tif (person) {\\n\\t\\t\\tinitPopper();\\n\\t\\t}\\n\\t});\\n<\/script>\\n\\n{#if person}\\n\\t<a href={'/people/' + get(person, 'slug.current')} bind:this={linkEl} sveltekit:prefetch>\\n\\t\\t{@html overrideText ? renderNewLines(overrideText) : person.title}\\n\\t</a>\\n\\n\\t<div class=\\"pop-up\\" bind:this={popEl}>\\n\\t\\t<!-- FIRST COLUMN -->\\n\\t\\t<div class=\\"column first\\">\\n\\t\\t\\t<!-- NAME -->\\n\\t\\t\\t<div class=\\"name\\">{person.title}</div>\\n\\n\\t\\t\\t<!-- BADGES -->\\n\\t\\t\\t<div class=\\"badges\\">\\n\\t\\t\\t\\t{#if person.role}\\n\\t\\t\\t\\t\\t<div class=\\"badge\\">{roleToRoleName[person.role]}</div>\\n\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t{#if person.groupTags}\\n\\t\\t\\t\\t\\t{#each person.groupTags as tag}\\n\\t\\t\\t\\t\\t\\t<div class=\\"badge\\">{tag.label}</div>\\n\\t\\t\\t\\t\\t{/each}\\n\\t\\t\\t\\t{/if}\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<!-- SECOND COLUMN -->\\n\\t\\t<div class=\\"column second\\">\\n\\t\\t\\t<!-- IMAGE -->\\n\\t\\t\\t{#if person.mainImage}\\n\\t\\t\\t\\t<img\\n\\t\\t\\t\\t\\tclass=\\"image\\"\\n\\t\\t\\t\\t\\talt={person.title}\\n\\t\\t\\t\\t\\tsrc={urlFor(person.mainImage).quality(90).saturation(-100).width(100).height(100).url()}\\n\\t\\t\\t\\t/>\\n\\t\\t\\t{/if}\\n\\t\\t</div>\\n\\t</div>\\n{/if}\\n\\n<style lang=\\"scss\\">.pop-up {\\n  display: none;\\n  background: #f5f4ee;\\n  padding: 10px;\\n  border: 1px solid #221f20;\\n  z-index: 1000; }\\n  .pop-up .name {\\n    font-weight: bold;\\n    margin-right: 10px; }\\n\\na {\\n  color: #221f20;\\n  background: #e0ded7;\\n  text-decoration: none; }\\n  a:hover + .pop-up {\\n    display: flex; }\\n\\n.column.first {\\n  padding-right: 10px; }\\n</style>\\n"],"names":[],"mappings":"AAkFmB,OAAO,8BAAC,CAAC,AAC1B,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,OAAO,CACnB,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,OAAO,CAAE,IAAI,AAAE,CAAC,AAChB,sBAAO,CAAC,KAAK,eAAC,CAAC,AACb,WAAW,CAAE,IAAI,CACjB,YAAY,CAAE,IAAI,AAAE,CAAC,AAEzB,CAAC,8BAAC,CAAC,AACD,KAAK,CAAE,OAAO,CACd,UAAU,CAAE,OAAO,CACnB,eAAe,CAAE,IAAI,AAAE,CAAC,AACxB,gBAAC,MAAM,CAAG,OAAO,eAAC,CAAC,AACjB,OAAO,CAAE,IAAI,AAAE,CAAC,AAEpB,OAAO,MAAM,8BAAC,CAAC,AACb,aAAa,CAAE,IAAI,AAAE,CAAC"}`
};
var Person_link = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { person = false } = $$props;
  let { overrideText = false } = $$props;
  let { personId = false } = $$props;
  let linkEl = {};
  let popEl = {};
  const initPopper = () => {
    (0, import_core.createPopper)(linkEl, popEl, { placement: "bottom" });
  };
  const renderNewLines = (t) => t.replace(/(?:\r\n|\r|\n)/g, "<br>");
  if (personId) {
    loadData('*[_id == "' + personId + '"][0]').then((p) => {
      person = p;
      setTimeout(initPopper, 1e3);
    });
  }
  if ($$props.person === void 0 && $$bindings.person && person !== void 0)
    $$bindings.person(person);
  if ($$props.overrideText === void 0 && $$bindings.overrideText && overrideText !== void 0)
    $$bindings.overrideText(overrideText);
  if ($$props.personId === void 0 && $$bindings.personId && personId !== void 0)
    $$bindings.personId(personId);
  $$result.css.add(css$W);
  return `${person ? `<a${add_attribute("href", "/people/" + (0, import_get.default)(person, "slug.current"), 0)} sveltekit:prefetch class="${"svelte-13pist6"}"${add_attribute("this", linkEl, 0)}><!-- HTML_TAG_START -->${overrideText ? renderNewLines(overrideText) : person.title}<!-- HTML_TAG_END --></a>

	<div class="${"pop-up svelte-13pist6"}"${add_attribute("this", popEl, 0)}>
		<div class="${"column first svelte-13pist6"}">
			<div class="${"name svelte-13pist6"}">${escape(person.title)}</div>

			
			<div class="${"badges"}">${person.role ? `<div class="${"badge"}">${escape(roleToRoleName[person.role])}</div>` : ``}
				${person.groupTags ? `${each(person.groupTags, (tag) => `<div class="${"badge"}">${escape(tag.label)}</div>`)}` : ``}</div></div>
		
		<div class="${"column second"}">
			${person.mainImage ? `<img class="${"image"}"${add_attribute("alt", person.title, 0)}${add_attribute("src", urlFor(person.mainImage).quality(90).saturation(-100).width(100).height(100).url(), 0)}>` : ``}</div></div>` : ``}`;
});
var css$V = {
  code: "svg.svelte-18gy7aj.svelte-18gy7aj{margin-left:4px}svg.svelte-18gy7aj path.svelte-18gy7aj{fill:#221f20}",
  map: '{"version":3,"file":"external-link.svelte","sources":["external-link.svelte"],"sourcesContent":["<svg width=\\"11\\" height=\\"11\\" viewBox=\\"0 0 11 11\\" fill=\\"none\\" xmlns=\\"http://www.w3.org/2000/svg\\">\\n\\t<path\\n\\t\\td=\\"M3.9378 1.68763V2.81271H1.12509V9.00068H7.31305V6.18797H8.43814V9.56322C8.43814 9.72074 8.38376 9.85387 8.275 9.96263C8.16624 10.0714 8.03311 10.1258 7.8756 10.1258H0.562543C0.40503 10.1258 0.271896 10.0714 0.163137 9.96263C0.0543785 9.85387 0 9.72074 0 9.56322V2.25017C0 2.09266 0.0543785 1.95952 0.163137 1.85077C0.271896 1.74201 0.40503 1.68763 0.562543 1.68763H3.9378ZM10.1258 0V4.50034H9.00068V1.9239L4.61285 6.30048L3.82529 5.51292L8.20187 1.12509H5.62543V0H10.1258Z\\"\\n\\t/>\\n</svg>\\n\\n<style type=\\"scss\\">svg {\\n  margin-left: 4px; }\\n  svg path {\\n    fill: #221f20; }\\n</style>\\n"],"names":[],"mappings":"AAMmB,GAAG,8BAAC,CAAC,AACtB,WAAW,CAAE,GAAG,AAAE,CAAC,AACnB,kBAAG,CAAC,IAAI,eAAC,CAAC,AACR,IAAI,CAAE,OAAO,AAAE,CAAC"}'
};
var External_link = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  $$result.css.add(css$V);
  return `<svg width="${"11"}" height="${"11"}" viewBox="${"0 0 11 11"}" fill="${"none"}" xmlns="${"http://www.w3.org/2000/svg"}" class="${"svelte-18gy7aj"}"><path d="${"M3.9378 1.68763V2.81271H1.12509V9.00068H7.31305V6.18797H8.43814V9.56322C8.43814 9.72074 8.38376 9.85387 8.275 9.96263C8.16624 10.0714 8.03311 10.1258 7.8756 10.1258H0.562543C0.40503 10.1258 0.271896 10.0714 0.163137 9.96263C0.0543785 9.85387 0 9.72074 0 9.56322V2.25017C0 2.09266 0.0543785 1.95952 0.163137 1.85077C0.271896 1.74201 0.40503 1.68763 0.562543 1.68763H3.9378ZM10.1258 0V4.50034H9.00068V1.9239L4.61285 6.30048L3.82529 5.51292L8.20187 1.12509H5.62543V0H10.1258Z"}" class="${"svelte-18gy7aj"}"></path></svg>`;
});
var Text = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { b = {} } = $$props;
  const renderNewLines = (t) => t.replace(/(?:\r\n|\r|\n)/g, "<br>");
  if ($$props.b === void 0 && $$bindings.b && b !== void 0)
    $$bindings.b(b);
  return `${b.children && b.children.length > 0 ? `${b.style == "h2" ? `<h2${add_attribute("id", (0, import_slugify.default)(b.children[0].text, { lower: true }), 0)}>${each(b.children, (c) => `${!c.marks || c.marks.length === 0 ? `${escape(c.text)}` : `<strong>${escape(c.text)}</strong>`}`)}</h2>` : `${b.style == "h3" ? `<h3>${each(b.children, (c) => `${escape(c.text)}`)}</h3>` : `<p>${each(b.children, (c) => `${!c.marks || c.marks.length === 0 ? `<!-- HTML_TAG_START -->${renderNewLines(c.text)}<!-- HTML_TAG_END -->` : `${c.marks.includes("em") ? `<em><!-- HTML_TAG_START -->${renderNewLines(c.text)}<!-- HTML_TAG_END --></em>` : `${c.marks.includes("strong") ? `<strong><!-- HTML_TAG_START -->${renderNewLines(c.text)}<!-- HTML_TAG_END --></strong>` : `${b.markDefs.find((m) => m._key === c.marks[0])._type === "link" ? `<a${add_attribute("href", b.markDefs.find((m) => m._key === c.marks[0]).href, 0)}><!-- HTML_TAG_START -->${renderNewLines(c.text)}<!-- HTML_TAG_END --> ${validate_component(External_link, "ExternalLink").$$render($$result, {}, {}, {})}</a>` : ``}
					${b.markDefs.find((m) => m._key === c.marks[0])._type === "person" ? `${validate_component(Person_link, "PersonLink").$$render($$result, {
    overrideText: c.text,
    personId: b.markDefs.find((m) => m._key === c.marks[0]).link._ref
  }, {}, {})}` : ``}`}`}`}`)}</p>`}`}` : ``}`;
});
var css$U = {
  code: "figure.svelte-e2rpze.svelte-e2rpze{margin-left:20px;margin-right:20px;float:left;border:1px solid #221f20;float:left;max-width:50%}figure.right.svelte-e2rpze.svelte-e2rpze{float:right;max-width:50%}figure.full.svelte-e2rpze.svelte-e2rpze{float:unset;margin-left:0;margin-right:0;margin-top:0;border:unset;max-width:unset;width:100%}figure.full.svelte-e2rpze img.svelte-e2rpze{display:block;margin-left:auto;margin-right:auto}figure.full.svelte-e2rpze figcaption.svelte-e2rpze{padding:20px;border-top:1px solid #221f20;border-bottom:1px solid #221f20}figure.cover.svelte-e2rpze.svelte-e2rpze{float:unset}figure.cover.svelte-e2rpze img.svelte-e2rpze{width:100%;height:600px;object-fit:cover;object-position:center}figure.cover.svelte-e2rpze figcaption.svelte-e2rpze{padding:20px;border-top:1px solid #221f20;border-bottom:1px solid #221f20}",
  map: `{"version":3,"file":"image.svelte","sources":["image.svelte"],"sourcesContent":["<script>\\n\\t// # # # # # # # # # # # # #\\n\\t//\\n\\t//  IMAGE RENDERER\\n\\t//\\n\\t// # # # # # # # # # # # # #\\n\\n\\t// __ IMPORTS\\n\\timport { urlFor } from '$lib/sanity.js';\\n\\timport has from 'lodash/has.js';\\n\\n\\t// __ BLOCKS\\n\\timport Blocks from '$lib/blocks/blocks.svelte';\\n\\n\\t// *** PROPS\\n\\texport let b = {};\\n<\/script>\\n\\n<figure\\n\\tclass:left={b.layout == 'left'}\\n\\tclass:right={b.layout == 'right'}\\n\\tclass:full={b.fullWidth}\\n\\tclass:cover={b.coverAndCrop}\\n>\\n\\t<img\\n\\t\\tsrc={urlFor(b.asset).quality(90).saturation(-100).width(1000).url()}\\n\\t\\talt={b.alt ? b.alt : ''}\\n\\t/>\\n\\t{#if has(b, 'caption.content')}\\n\\t\\t<figcaption>\\n\\t\\t\\t<Blocks blocks={b.caption.content} />\\n\\t\\t</figcaption>\\n\\t{/if}\\n</figure>\\n\\n<style lang=\\"scss\\">figure {\\n  margin-left: 20px;\\n  margin-right: 20px;\\n  float: left;\\n  border: 1px solid #221f20;\\n  float: left;\\n  max-width: 50%; }\\n  figure.right {\\n    float: right;\\n    max-width: 50%; }\\n  figure.full {\\n    float: unset;\\n    margin-left: 0;\\n    margin-right: 0;\\n    margin-top: 0;\\n    border: unset;\\n    max-width: unset;\\n    width: 100%; }\\n    figure.full img {\\n      display: block;\\n      margin-left: auto;\\n      margin-right: auto; }\\n    figure.full figcaption {\\n      padding: 20px;\\n      border-top: 1px solid #221f20;\\n      border-bottom: 1px solid #221f20; }\\n      figure.full figcaption p {\\n        margin: 0;\\n        padding: 0; }\\n  figure.cover {\\n    float: unset; }\\n    figure.cover img {\\n      width: 100%;\\n      height: 600px;\\n      object-fit: cover;\\n      object-position: center; }\\n    figure.cover figcaption {\\n      padding: 20px;\\n      border-top: 1px solid #221f20;\\n      border-bottom: 1px solid #221f20; }\\n      figure.cover figcaption p {\\n        margin: 0;\\n        padding: 0; }\\n</style>\\n"],"names":[],"mappings":"AAmCmB,MAAM,4BAAC,CAAC,AACzB,WAAW,CAAE,IAAI,CACjB,YAAY,CAAE,IAAI,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,KAAK,CAAE,IAAI,CACX,SAAS,CAAE,GAAG,AAAE,CAAC,AACjB,MAAM,MAAM,4BAAC,CAAC,AACZ,KAAK,CAAE,KAAK,CACZ,SAAS,CAAE,GAAG,AAAE,CAAC,AACnB,MAAM,KAAK,4BAAC,CAAC,AACX,KAAK,CAAE,KAAK,CACZ,WAAW,CAAE,CAAC,CACd,YAAY,CAAE,CAAC,CACf,UAAU,CAAE,CAAC,CACb,MAAM,CAAE,KAAK,CACb,SAAS,CAAE,KAAK,CAChB,KAAK,CAAE,IAAI,AAAE,CAAC,AACd,MAAM,mBAAK,CAAC,GAAG,cAAC,CAAC,AACf,OAAO,CAAE,KAAK,CACd,WAAW,CAAE,IAAI,CACjB,YAAY,CAAE,IAAI,AAAE,CAAC,AACvB,MAAM,mBAAK,CAAC,UAAU,cAAC,CAAC,AACtB,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAC7B,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,AAAE,CAAC,AAIvC,MAAM,MAAM,4BAAC,CAAC,AACZ,KAAK,CAAE,KAAK,AAAE,CAAC,AACf,MAAM,oBAAM,CAAC,GAAG,cAAC,CAAC,AAChB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,KAAK,CACb,UAAU,CAAE,KAAK,CACjB,eAAe,CAAE,MAAM,AAAE,CAAC,AAC5B,MAAM,oBAAM,CAAC,UAAU,cAAC,CAAC,AACvB,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAC7B,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,AAAE,CAAC"}`
};
var Image = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { b = {} } = $$props;
  if ($$props.b === void 0 && $$bindings.b && b !== void 0)
    $$bindings.b(b);
  $$result.css.add(css$U);
  return `<figure class="${[
    "svelte-e2rpze",
    (b.layout == "left" ? "left" : "") + " " + (b.layout == "right" ? "right" : "") + " " + (b.fullWidth ? "full" : "") + " " + (b.coverAndCrop ? "cover" : "")
  ].join(" ").trim()}"><img${add_attribute("src", urlFor(b.asset).quality(90).saturation(-100).width(1e3).url(), 0)}${add_attribute("alt", b.alt ? b.alt : "", 0)} class="${"svelte-e2rpze"}">
	${(0, import_has.default)(b, "caption.content") ? `<figcaption class="${"svelte-e2rpze"}">${validate_component(Blocks, "Blocks").$$render($$result, { blocks: b.caption.content }, {}, {})}</figcaption>` : ``}
</figure>`;
});
var css$T = {
  code: ".inverted-block.svelte-g37r8{width:100%;background:#221f20;padding:40px;color:#f5f4ee}",
  map: `{"version":3,"file":"invertedBlock.svelte","sources":["invertedBlock.svelte"],"sourcesContent":["<script>\\n\\t// # # # # # # # # # # # # #\\n\\t//\\n\\t//  INVERTED BLOCK\\n\\t//\\n\\t// # # # # # # # # # # # # #\\n\\n\\t// __ BLOCKS\\n\\timport Text from '$lib/blocks/text.svelte';\\n\\n\\t// *** PROPS\\n\\texport let b = {};\\n<\/script>\\n\\n<div class=\\"inverted-block\\">\\n\\t<Text {b} />\\n</div>\\n\\n<style lang=\\"scss\\">.inverted-block {\\n  width: 100%;\\n  background: #221f20;\\n  padding: 40px;\\n  color: #f5f4ee; }\\n</style>\\n"],"names":[],"mappings":"AAkBmB,eAAe,aAAC,CAAC,AAClC,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,OAAO,CACnB,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,OAAO,AAAE,CAAC"}`
};
var InvertedBlock = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { b = {} } = $$props;
  if ($$props.b === void 0 && $$bindings.b && b !== void 0)
    $$bindings.b(b);
  $$result.css.add(css$T);
  return `<div class="${"inverted-block svelte-g37r8"}">${validate_component(Text, "Text").$$render($$result, { b }, {}, {})}
</div>`;
});
var css$S = {
  code: "svg.svelte-rcvwz1.svelte-rcvwz1{height:90%}svg.svelte-rcvwz1 path.svelte-rcvwz1{fill:none;stroke:#221f20;stroke-width:2.5px;stroke-miterlimit:10}",
  map: '{"version":3,"file":"block-beam.svelte","sources":["block-beam.svelte"],"sourcesContent":["<svg\\n\\tversion=\\"1.1\\"\\n\\tid=\\"Layer_1\\"\\n\\txmlns=\\"http://www.w3.org/2000/svg\\"\\n\\txmlns:xlink=\\"http://www.w3.org/1999/xlink\\"\\n\\tx=\\"0px\\"\\n\\ty=\\"0px\\"\\n\\tviewBox=\\"0 0 326.4 167.6\\"\\n\\tstyle=\\"enable-background:new 0 0 326.4 167.6;\\"\\n\\txml:space=\\"preserve\\"\\n>\\n\\t<path\\n\\t\\tclass=\\"st0\\"\\n\\t\\td=\\"M323.1,136.7l-121.6,21.4 M316.2,109.3l-116,42.2 M304.3,83.3l-106.9,61.6 M287.8,60.7L193.2,140 M269.1,41\\n\\t\\tl-79.3,94.4 M245.5,24.3L183.8,131 M219.2,12L177,127.9 M192.5,4.4l-21.4,121.4 M325,165.7H201.5 M2.4,136.7l121.6,21.4 M9.3,109.3\\n\\t\\tl116,42.2 M21.2,83.3l106.9,61.6 M37.7,60.7l94.6,79.2 M56.4,41l79.3,94.4 M80,24.3L141.7,131 M106.3,12l42.2,115.8 M133,4.4\\n\\t\\tl21.4,121.4 M161.9,1.8l0,123.3 M0.5,165.7H124\\"\\n\\t/>\\n</svg>\\n\\n<style type=\\"scss\\">svg {\\n  height: 90%; }\\n  svg path {\\n    fill: none;\\n    stroke: #221f20;\\n    stroke-width: 2.5px;\\n    stroke-miterlimit: 10; }\\n</style>\\n"],"names":[],"mappings":"AAoBmB,GAAG,4BAAC,CAAC,AACtB,MAAM,CAAE,GAAG,AAAE,CAAC,AACd,iBAAG,CAAC,IAAI,cAAC,CAAC,AACR,IAAI,CAAE,IAAI,CACV,MAAM,CAAE,OAAO,CACf,YAAY,CAAE,KAAK,CACnB,iBAAiB,CAAE,EAAE,AAAE,CAAC"}'
};
var Block_beam = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  $$result.css.add(css$S);
  return `<svg version="${"1.1"}" id="${"Layer_1"}" xmlns="${"http://www.w3.org/2000/svg"}" xmlns:xlink="${"http://www.w3.org/1999/xlink"}" x="${"0px"}" y="${"0px"}" viewBox="${"0 0 326.4 167.6"}" style="${"enable-background:new 0 0 326.4 167.6;"}" xml:space="${"preserve"}" class="${"svelte-rcvwz1"}"><path class="${"st0 svelte-rcvwz1"}" d="${"M323.1,136.7l-121.6,21.4 M316.2,109.3l-116,42.2 M304.3,83.3l-106.9,61.6 M287.8,60.7L193.2,140 M269.1,41\n		l-79.3,94.4 M245.5,24.3L183.8,131 M219.2,12L177,127.9 M192.5,4.4l-21.4,121.4 M325,165.7H201.5 M2.4,136.7l121.6,21.4 M9.3,109.3\n		l116,42.2 M21.2,83.3l106.9,61.6 M37.7,60.7l94.6,79.2 M56.4,41l79.3,94.4 M80,24.3L141.7,131 M106.3,12l42.2,115.8 M133,4.4\n		l21.4,121.4 M161.9,1.8l0,123.3 M0.5,165.7H124"}"></path></svg>`;
});
var css$R = {
  code: ".logo-block.svelte-1ckayfg.svelte-1ckayfg{margin-left:20px;margin-right:20px;width:calc(100% - 40px);border-bottom:1px solid #221f20;font-size:16px}.logo-block.svelte-1ckayfg .top-row.svelte-1ckayfg{display:flex}.logo-block.svelte-1ckayfg .top-row .beam.svelte-1ckayfg{width:160px;position:relative;top:7px}.logo-block.svelte-1ckayfg .top-row .line.svelte-1ckayfg{border-bottom:1px solid #221f20;width:100%}.logo-block.svelte-1ckayfg .logoblock-text.svelte-1ckayfg{padding-top:40px;padding-bottom:40px}.logoblock-text p{padding-left:0;padding-right:0}",
  map: `{"version":3,"file":"logoBlock.svelte","sources":["logoBlock.svelte"],"sourcesContent":["<script>\\n\\t// # # # # # # # # # # # # #\\n\\t//\\n\\t//  LOGO BLOCK\\n\\t//\\n\\t// # # # # # # # # # # # # #\\n\\t// __ BLOCKS\\n\\timport Text from '$lib/blocks/text.svelte';\\n\\n\\t// __ GRAPHICS\\n\\timport BlockBeam from '$lib/graphics/block-beam.svelte';\\n\\n\\t// *** PROPS\\n\\texport let b = {};\\n<\/script>\\n\\n<div class=\\"logo-block\\">\\n\\t<div class=\\"top-row\\">\\n\\t\\t<div class=\\"beam\\">\\n\\t\\t\\t<BlockBeam />\\n\\t\\t</div>\\n\\t\\t<div class=\\"line\\" />\\n\\t</div>\\n\\t<div class=\\"logoblock-text\\">\\n\\t\\t<Text {b} />\\n\\t</div>\\n</div>\\n\\n<style lang=\\"scss\\">.logo-block {\\n  margin-left: 20px;\\n  margin-right: 20px;\\n  width: calc(100% - 40px);\\n  border-bottom: 1px solid #221f20;\\n  font-size: 16px; }\\n  .logo-block .top-row {\\n    display: flex; }\\n    .logo-block .top-row .beam {\\n      width: 160px;\\n      position: relative;\\n      top: 7px; }\\n    .logo-block .top-row .line {\\n      border-bottom: 1px solid #221f20;\\n      width: 100%; }\\n  .logo-block .logoblock-text {\\n    padding-top: 40px;\\n    padding-bottom: 40px; }\\n\\n:global(.logoblock-text p) {\\n  padding-left: 0;\\n  padding-right: 0; }\\n</style>\\n"],"names":[],"mappings":"AA4BmB,WAAW,8BAAC,CAAC,AAC9B,WAAW,CAAE,IAAI,CACjB,YAAY,CAAE,IAAI,CAClB,KAAK,CAAE,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CACxB,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAChC,SAAS,CAAE,IAAI,AAAE,CAAC,AAClB,0BAAW,CAAC,QAAQ,eAAC,CAAC,AACpB,OAAO,CAAE,IAAI,AAAE,CAAC,AAChB,0BAAW,CAAC,QAAQ,CAAC,KAAK,eAAC,CAAC,AAC1B,KAAK,CAAE,KAAK,CACZ,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,GAAG,AAAE,CAAC,AACb,0BAAW,CAAC,QAAQ,CAAC,KAAK,eAAC,CAAC,AAC1B,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAChC,KAAK,CAAE,IAAI,AAAE,CAAC,AAClB,0BAAW,CAAC,eAAe,eAAC,CAAC,AAC3B,WAAW,CAAE,IAAI,CACjB,cAAc,CAAE,IAAI,AAAE,CAAC,AAEnB,iBAAiB,AAAE,CAAC,AAC1B,YAAY,CAAE,CAAC,CACf,aAAa,CAAE,CAAC,AAAE,CAAC"}`
};
var LogoBlock = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { b = {} } = $$props;
  if ($$props.b === void 0 && $$bindings.b && b !== void 0)
    $$bindings.b(b);
  $$result.css.add(css$R);
  return `<div class="${"logo-block svelte-1ckayfg"}"><div class="${"top-row svelte-1ckayfg"}"><div class="${"beam svelte-1ckayfg"}">${validate_component(Block_beam, "BlockBeam").$$render($$result, {}, {}, {})}</div>
		<div class="${"line svelte-1ckayfg"}"></div></div>
	<div class="${"logoblock-text svelte-1ckayfg"}">${validate_component(Text, "Text").$$render($$result, { b }, {}, {})}</div>
</div>`;
});
var css$Q = {
  code: ".embed.svelte-1h4bm76.svelte-1h4bm76{color:#f5f4ee;margin-bottom:20px;cursor:pointer;display:flex;justify-content:center;align-items:center;padding-bottom:20px;padding-top:20px;width:100%}.embed.svelte-1h4bm76 .inner.svelte-1h4bm76{width:720px}@media(max-width: 900px){.embed.svelte-1h4bm76 .inner.svelte-1h4bm76{width:480px}}.embed.svelte-1h4bm76 .inner iframe.svelte-1h4bm76{width:100%}.embed.full .inner.svelte-1h4bm76 iframe.svelte-1h4bm76{height:100vh}",
  map: `{"version":3,"file":"embed.svelte","sources":["embed.svelte"],"sourcesContent":["<script>\\n\\t// # # # # # # # # # # # # #\\n\\t//\\n\\t//  EMBED RENDERER\\n\\t//\\n\\t// # # # # # # # # # # # # #\\n\\n\\t// __ IMPORTS\\n\\timport has from 'lodash/has.js';\\n\\timport getVideoId from 'get-video-id';\\n\\n\\t// __ BLOCKS\\n\\timport Blocks from '$lib/blocks/blocks.svelte';\\n\\n\\t// *** PROPS\\n\\texport let b = {};\\n<\/script>\\n\\n<div class=\\"embed\\">\\n\\t<div class=\\"inner\\">\\n\\t\\t{#if b.url.includes('youtube')}\\n\\t\\t\\t<iframe\\n\\t\\t\\t\\twidth=\\"720\\"\\n\\t\\t\\t\\theight=\\"480\\"\\n\\t\\t\\t\\tsrc=\\"https://www.youtube.com/embed/{getVideoId(b.url).id}\\"\\n\\t\\t\\t\\tframeborder=\\"0\\"\\n\\t\\t\\t\\tallow=\\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\\"\\n\\t\\t\\t\\tallowfullscreen\\n\\t\\t\\t/>\\n\\t\\t{/if}\\n\\t\\t{#if b.url.includes('vimeo')}\\n\\t\\t\\t<iframe\\n\\t\\t\\t\\twidth=\\"720\\"\\n\\t\\t\\t\\theight=\\"480\\"\\n\\t\\t\\t\\tsrc=\\"https://player.vimeo.com/video/{getVideoId(b.url).id}\\"\\n\\t\\t\\t\\tframeborder=\\"0\\"\\n\\t\\t\\t\\tbyline=\\"false\\"\\n\\t\\t\\t\\tcolor=\\"#ffffff\\"\\n\\t\\t\\t\\tallow=\\"autoplay; fullscreen\\"\\n\\t\\t\\t\\tallowfullscreen\\n\\t\\t\\t/>\\n\\t\\t{/if}\\n\\t</div>\\n</div>\\n\\n{#if has(b, 'caption.content')}\\n\\t<figcaption>\\n\\t\\t<Blocks blocks={b.caption.content} />\\n\\t</figcaption>\\n{/if}\\n\\n<style lang=\\"scss\\">.embed {\\n  color: #f5f4ee;\\n  margin-bottom: 20px;\\n  cursor: pointer;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  padding-bottom: 20px;\\n  padding-top: 20px;\\n  width: 100%; }\\n  .embed .inner {\\n    width: 720px; }\\n    @media (max-width: 900px) {\\n      .embed .inner {\\n        width: 480px; } }\\n    .embed .inner iframe {\\n      width: 100%; }\\n  .embed.full .inner {\\n    width: 100vw; }\\n    .embed.full .inner iframe {\\n      height: 100vh; }\\n</style>\\n"],"names":[],"mappings":"AAmDmB,MAAM,8BAAC,CAAC,AACzB,KAAK,CAAE,OAAO,CACd,aAAa,CAAE,IAAI,CACnB,MAAM,CAAE,OAAO,CACf,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,CACnB,cAAc,CAAE,IAAI,CACpB,WAAW,CAAE,IAAI,CACjB,KAAK,CAAE,IAAI,AAAE,CAAC,AACd,qBAAM,CAAC,MAAM,eAAC,CAAC,AACb,KAAK,CAAE,KAAK,AAAE,CAAC,AACf,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,qBAAM,CAAC,MAAM,eAAC,CAAC,AACb,KAAK,CAAE,KAAK,AAAE,CAAC,AAAC,CAAC,AACrB,qBAAM,CAAC,MAAM,CAAC,MAAM,eAAC,CAAC,AACpB,KAAK,CAAE,IAAI,AAAE,CAAC,AAGhB,MAAM,KAAK,CAAC,qBAAM,CAAC,MAAM,eAAC,CAAC,AACzB,MAAM,CAAE,KAAK,AAAE,CAAC"}`
};
var Embed = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { b = {} } = $$props;
  if ($$props.b === void 0 && $$bindings.b && b !== void 0)
    $$bindings.b(b);
  $$result.css.add(css$Q);
  return `<div class="${"embed svelte-1h4bm76"}"><div class="${"inner svelte-1h4bm76"}">${b.url.includes("youtube") ? `<iframe width="${"720"}" height="${"480"}" src="${"https://www.youtube.com/embed/" + escape((0, import_get_video_id.default)(b.url).id)}" frameborder="${"0"}" allow="${"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"}" allowfullscreen class="${"svelte-1h4bm76"}"></iframe>` : ``}
		${b.url.includes("vimeo") ? `<iframe width="${"720"}" height="${"480"}" src="${"https://player.vimeo.com/video/" + escape((0, import_get_video_id.default)(b.url).id)}" frameborder="${"0"}" byline="${"false"}" color="${"#ffffff"}" allow="${"autoplay; fullscreen"}" allowfullscreen class="${"svelte-1h4bm76"}"></iframe>` : ``}</div></div>

${(0, import_has.default)(b, "caption.content") ? `<figcaption>${validate_component(Blocks, "Blocks").$$render($$result, { blocks: b.caption.content }, {}, {})}</figcaption>` : ``}`;
});
var css$P = {
  code: ".divider.svelte-ibl5lr{margin-top:20px;margin-bottom:20px;height:1px;border-top:1px solid #221f20;width:100%}",
  map: '{"version":3,"file":"divider.svelte","sources":["divider.svelte"],"sourcesContent":["<script>\\n\\t// # # # # # # # # # # # # #\\n\\t//\\n\\t//  DIVIDER BLOCK\\n\\t//\\n\\t// # # # # # # # # # # # # #\\n\\n\\t// *** PROPS\\n\\texport let b = {};\\n<\/script>\\n\\n<div class=\\"divider\\" />\\n\\n<style lang=\\"scss\\">.divider {\\n  margin-top: 20px;\\n  margin-bottom: 20px;\\n  height: 1px;\\n  border-top: 1px solid #221f20;\\n  width: 100%; }\\n</style>\\n"],"names":[],"mappings":"AAamB,QAAQ,cAAC,CAAC,AAC3B,UAAU,CAAE,IAAI,CAChB,aAAa,CAAE,IAAI,CACnB,MAAM,CAAE,GAAG,CACX,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAC7B,KAAK,CAAE,IAAI,AAAE,CAAC"}'
};
var Divider = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { b = {} } = $$props;
  if ($$props.b === void 0 && $$bindings.b && b !== void 0)
    $$bindings.b(b);
  $$result.css.add(css$P);
  return `<div class="${"divider svelte-ibl5lr"}"></div>`;
});
var css$O = {
  code: ".columns.svelte-1yggcq h2.svelte-1yggcq{padding-top:20px;padding-bottom:20px}.columns.svelte-1yggcq .inner.svelte-1yggcq{width:100%;column-count:2;column-fill:balance;column-width:50%}",
  map: `{"version":3,"file":"columns.svelte","sources":["columns.svelte"],"sourcesContent":["<script>\\n\\t// # # # # # # # # # # # # #\\n\\t//\\n\\t//  TWO-COLUMNS RENDERER\\n\\t//\\n\\t// # # # # # # # # # # # # #\\n\\n\\t// __ IMPORTS\\n\\timport has from 'lodash/has.js';\\n\\timport slugify from 'slugify';\\n\\n\\t// __ BLOCKS\\n\\timport Blocks from '$lib/blocks/blocks.svelte';\\n\\n\\t// *** PROPS\\n\\texport let b = {};\\n<\/script>\\n\\n<div class=\\"columns\\">\\n\\t{#if b.title}\\n\\t\\t<h2\\n\\t\\t\\tid={slugify(b.title, {\\n\\t\\t\\t\\tlower: true\\n\\t\\t\\t})}\\n\\t\\t>\\n\\t\\t\\t{b.title}\\n\\t\\t</h2>\\n\\t{/if}\\n\\t{#if has(b, 'columnContent.content')}\\n\\t\\t<div class=\\"inner\\">\\n\\t\\t\\t<Blocks blocks={b.columnContent.content} />\\n\\t\\t</div>\\n\\t{/if}\\n</div>\\n\\n<style lang=\\"scss\\">.columns h2 {\\n  padding-top: 20px;\\n  padding-bottom: 20px; }\\n\\n.columns .inner {\\n  width: 100%;\\n  column-count: 2;\\n  column-fill: balance;\\n  column-width: 50%; }\\n</style>\\n"],"names":[],"mappings":"AAmCmB,sBAAQ,CAAC,EAAE,cAAC,CAAC,AAC9B,WAAW,CAAE,IAAI,CACjB,cAAc,CAAE,IAAI,AAAE,CAAC,AAEzB,sBAAQ,CAAC,MAAM,cAAC,CAAC,AACf,KAAK,CAAE,IAAI,CACX,YAAY,CAAE,CAAC,CACf,WAAW,CAAE,OAAO,CACpB,YAAY,CAAE,GAAG,AAAE,CAAC"}`
};
var Columns = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { b = {} } = $$props;
  if ($$props.b === void 0 && $$bindings.b && b !== void 0)
    $$bindings.b(b);
  $$result.css.add(css$O);
  return `<div class="${"columns svelte-1yggcq"}">${b.title ? `<h2${add_attribute("id", (0, import_slugify.default)(b.title, { lower: true }), 0)} class="${"svelte-1yggcq"}">${escape(b.title)}</h2>` : ``}
	${(0, import_has.default)(b, "columnContent.content") ? `<div class="${"inner svelte-1yggcq"}">${validate_component(Blocks, "Blocks").$$render($$result, { blocks: b.columnContent.content }, {}, {})}</div>` : ``}
</div>`;
});
var css$N = {
  code: ".donation-widget.svelte-1oywgf0{margin-top:20px;height:400px;background:red;width:100%}",
  map: '{"version":3,"file":"donationWidget.svelte","sources":["donationWidget.svelte"],"sourcesContent":["<script>\\n\\t// # # # # # # # # # # # # #\\n\\t//\\n\\t//  DONATION WIDGET\\n\\t//\\n\\t// # # # # # # # # # # # # #\\n\\n\\t// *** PROPS\\n\\texport let b = {};\\n<\/script>\\n\\n<div class=\\"donation-widget\\">TODO: DONATION WIDGET</div>\\n\\n<style lang=\\"scss\\">.donation-widget {\\n  margin-top: 20px;\\n  height: 400px;\\n  background: red;\\n  width: 100%; }\\n</style>\\n"],"names":[],"mappings":"AAamB,gBAAgB,eAAC,CAAC,AACnC,UAAU,CAAE,IAAI,CAChB,MAAM,CAAE,KAAK,CACb,UAAU,CAAE,GAAG,CACf,KAAK,CAAE,IAAI,AAAE,CAAC"}'
};
var DonationWidget = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { b = {} } = $$props;
  if ($$props.b === void 0 && $$bindings.b && b !== void 0)
    $$bindings.b(b);
  $$result.css.add(css$N);
  return `<div class="${"donation-widget svelte-1oywgf0"}">TODO: DONATION WIDGET</div>`;
});
var css$M = {
  code: ".application-button-small.svelte-10e0zf4.svelte-10e0zf4{margin-top:0;margin-bottom:40px;display:inline-block;width:100%}.application-button-small.svelte-10e0zf4 .application-button-inner.svelte-10e0zf4{margin:20px;display:inline-block}.application-button-small.svelte-10e0zf4 .application-button-inner .button.svelte-10e0zf4{background:#e0ded7;padding:15px;display:flex;align-items:center;text-decoration:none}.application-button-small.svelte-10e0zf4 .application-button-inner .button .circle.svelte-10e0zf4{width:20px;height:20px;border-radius:50%;background:#221f20}.application-button-small.svelte-10e0zf4 .application-button-inner .button .applications-text.svelte-10e0zf4{margin-left:10px;font-size:14px}.application-button-small.svelte-10e0zf4 .application-button-inner .button.svelte-10e0zf4:hover{background:#221f20;color:#e0ded7}.application-button-small.svelte-10e0zf4 .application-button-inner .button:hover .circle.svelte-10e0zf4{background:#e0ded7}.application-button-small.svelte-10e0zf4 .application-button-inner .date.svelte-10e0zf4{margin-top:8px;font-style:italic}.application-button-large.svelte-10e0zf4.svelte-10e0zf4{width:100%;background:#221f20;height:220px;padding:20px;color:#f5f4ee;display:flex}.application-button-large.svelte-10e0zf4 .column.svelte-10e0zf4{height:100%}.application-button-large.svelte-10e0zf4 .column.first.svelte-10e0zf4{width:80%;display:flex;flex-direction:column;justify-content:space-between}.application-button-large.svelte-10e0zf4 .column.second.svelte-10e0zf4{width:220px}.application-button-large.svelte-10e0zf4 .top.svelte-10e0zf4{display:flex;font-size:14px}.application-button-large.svelte-10e0zf4 .top .col.second.svelte-10e0zf4{margin-left:10px}.application-button-large.svelte-10e0zf4 .circle.svelte-10e0zf4{width:20px;height:20px;background:#f5f4ee;border-radius:50%;float:left;margin-top:2px}.application-button-large.svelte-10e0zf4 .headline.svelte-10e0zf4{font-size:12px;letter-spacing:1px}.application-button-large.svelte-10e0zf4 .date.svelte-10e0zf4{font-style:italic}.application-button-large.svelte-10e0zf4 .text.svelte-10e0zf4{padding-right:40px;font-size:16px}.application-button-large.svelte-10e0zf4 .apply-now.svelte-10e0zf4{border:1px solid #f5f4ee;height:100%;display:flex;justify-content:center;align-items:center;cursor:pointer;user-select:none;color:#f5f4ee;text-decoration:none;font-size:16px}.application-button-large.svelte-10e0zf4 .apply-now.svelte-10e0zf4:hover{background:#f5f4ee;color:#221f20}",
  map: `{"version":3,"file":"applicationButton.svelte","sources":["applicationButton.svelte"],"sourcesContent":["<script>\\n\\t// # # # # # # # # # # # # #\\n\\t//\\n\\t//  APPLICATION BUTTON\\n\\t//\\n\\t// # # # # # # # # # # # # #\\n\\n\\t// __ IMPORTS\\n\\timport { longFormatDate } from '$lib/global';\\n\\timport has from 'lodash/has.js';\\n\\n\\t// __ COMPONENTS\\n\\timport Blocks from '$lib/blocks/blocks.svelte';\\n\\n\\t// *** PROPS\\n\\texport let b = {};\\n<\/script>\\n\\n{#if b.size == 'large'}\\n\\t<!-- BIG -->\\n\\t<div class=\\"application-button-large\\">\\n\\t\\t<div class=\\"column first\\">\\n\\t\\t\\t<!-- HEADER -->\\n\\t\\t\\t<div class=\\"top\\">\\n\\t\\t\\t\\t<div class=\\"col first\\">\\n\\t\\t\\t\\t\\t<div class=\\"circle\\" />\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\"col second\\">\\n\\t\\t\\t\\t\\t<div class=\\"headline\\">APPLICATIONS ARE OPEN</div>\\n\\t\\t\\t\\t\\t{#if b.applicationEndDate}\\n\\t\\t\\t\\t\\t\\t<div class=\\"date\\">\\n\\t\\t\\t\\t\\t\\t\\tDue by {longFormatDate(b.applicationEndDate)}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<!-- TEXT -->\\n\\t\\t\\t{#if has(b, 'longText.content')}\\n\\t\\t\\t\\t<div class=\\"text\\">\\n\\t\\t\\t\\t\\t<Blocks blocks={b.longText.content} />\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t{/if}\\n\\t\\t</div>\\n\\n\\t\\t<div class=\\"column second\\">\\n\\t\\t\\t<!-- BUTTON -->\\n\\t\\t\\t<a href={b.url} target=\\"_blank\\" class=\\"apply-now\\">{b.shortText}</a>\\n\\t\\t</div>\\n\\t</div>\\n{:else}\\n\\t<!-- SMALL -->\\n\\t<div class=\\"application-button-small\\">\\n\\t\\t<div class=\\"application-button-inner\\">\\n\\t\\t\\t<a href={b.url} target=\\"_blank\\" class=\\"button\\">\\n\\t\\t\\t\\t{#if b.applicationEndDate}\\n\\t\\t\\t\\t\\t<div class=\\"circle\\" />\\n\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t<span class=\\"applications-text\\">{b.shortText}</span>\\n\\t\\t\\t</a>\\n\\t\\t\\t{#if b.applicationEndDate}\\n\\t\\t\\t\\t<div class=\\"date\\">\\n\\t\\t\\t\\t\\tApplications Due by {longFormatDate(b.applicationEndDate)}\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t{/if}\\n\\t\\t</div>\\n\\t</div>\\n{/if}\\n\\n<style lang=\\"scss\\">.application-button-small {\\n  margin-top: 0;\\n  margin-bottom: 40px;\\n  display: inline-block;\\n  width: 100%; }\\n  .application-button-small .application-button-inner {\\n    margin: 20px;\\n    display: inline-block; }\\n    .application-button-small .application-button-inner .button {\\n      background: #e0ded7;\\n      padding: 15px;\\n      display: flex;\\n      align-items: center;\\n      text-decoration: none; }\\n      .application-button-small .application-button-inner .button .circle {\\n        width: 20px;\\n        height: 20px;\\n        border-radius: 50%;\\n        background: #221f20; }\\n      .application-button-small .application-button-inner .button .applications-text {\\n        margin-left: 10px;\\n        font-size: 14px; }\\n      .application-button-small .application-button-inner .button:hover {\\n        background: #221f20;\\n        color: #e0ded7; }\\n        .application-button-small .application-button-inner .button:hover .circle {\\n          background: #e0ded7; }\\n    .application-button-small .application-button-inner .date {\\n      margin-top: 8px;\\n      font-style: italic; }\\n\\n.application-button-large {\\n  width: 100%;\\n  background: #221f20;\\n  height: 220px;\\n  padding: 20px;\\n  color: #f5f4ee;\\n  display: flex; }\\n  .application-button-large .column {\\n    height: 100%; }\\n    .application-button-large .column.first {\\n      width: 80%;\\n      display: flex;\\n      flex-direction: column;\\n      justify-content: space-between; }\\n    .application-button-large .column.second {\\n      width: 220px; }\\n  .application-button-large .top {\\n    display: flex;\\n    font-size: 14px; }\\n    .application-button-large .top .col.second {\\n      margin-left: 10px; }\\n  .application-button-large .circle {\\n    width: 20px;\\n    height: 20px;\\n    background: #f5f4ee;\\n    border-radius: 50%;\\n    float: left;\\n    margin-top: 2px; }\\n  .application-button-large .headline {\\n    font-size: 12px;\\n    letter-spacing: 1px; }\\n  .application-button-large .date {\\n    font-style: italic; }\\n  .application-button-large .text {\\n    padding-right: 40px;\\n    font-size: 16px; }\\n  .application-button-large .apply-now {\\n    border: 1px solid #f5f4ee;\\n    height: 100%;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    cursor: pointer;\\n    user-select: none;\\n    color: #f5f4ee;\\n    text-decoration: none;\\n    font-size: 16px; }\\n    .application-button-large .apply-now:hover {\\n      background: #f5f4ee;\\n      color: #221f20; }\\n</style>\\n"],"names":[],"mappings":"AAqEmB,yBAAyB,8BAAC,CAAC,AAC5C,UAAU,CAAE,CAAC,CACb,aAAa,CAAE,IAAI,CACnB,OAAO,CAAE,YAAY,CACrB,KAAK,CAAE,IAAI,AAAE,CAAC,AACd,wCAAyB,CAAC,yBAAyB,eAAC,CAAC,AACnD,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,YAAY,AAAE,CAAC,AACxB,wCAAyB,CAAC,yBAAyB,CAAC,OAAO,eAAC,CAAC,AAC3D,UAAU,CAAE,OAAO,CACnB,OAAO,CAAE,IAAI,CACb,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,IAAI,AAAE,CAAC,AACxB,wCAAyB,CAAC,yBAAyB,CAAC,OAAO,CAAC,OAAO,eAAC,CAAC,AACnE,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,OAAO,AAAE,CAAC,AACxB,wCAAyB,CAAC,yBAAyB,CAAC,OAAO,CAAC,kBAAkB,eAAC,CAAC,AAC9E,WAAW,CAAE,IAAI,CACjB,SAAS,CAAE,IAAI,AAAE,CAAC,AACpB,wCAAyB,CAAC,yBAAyB,CAAC,sBAAO,MAAM,AAAC,CAAC,AACjE,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,OAAO,AAAE,CAAC,AACjB,wCAAyB,CAAC,yBAAyB,CAAC,OAAO,MAAM,CAAC,OAAO,eAAC,CAAC,AACzE,UAAU,CAAE,OAAO,AAAE,CAAC,AAC5B,wCAAyB,CAAC,yBAAyB,CAAC,KAAK,eAAC,CAAC,AACzD,UAAU,CAAE,GAAG,CACf,UAAU,CAAE,MAAM,AAAE,CAAC,AAE3B,yBAAyB,8BAAC,CAAC,AACzB,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,OAAO,CACnB,MAAM,CAAE,KAAK,CACb,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,OAAO,CACd,OAAO,CAAE,IAAI,AAAE,CAAC,AAChB,wCAAyB,CAAC,OAAO,eAAC,CAAC,AACjC,MAAM,CAAE,IAAI,AAAE,CAAC,AACf,wCAAyB,CAAC,OAAO,MAAM,eAAC,CAAC,AACvC,KAAK,CAAE,GAAG,CACV,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,eAAe,CAAE,aAAa,AAAE,CAAC,AACnC,wCAAyB,CAAC,OAAO,OAAO,eAAC,CAAC,AACxC,KAAK,CAAE,KAAK,AAAE,CAAC,AACnB,wCAAyB,CAAC,IAAI,eAAC,CAAC,AAC9B,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,IAAI,AAAE,CAAC,AAClB,wCAAyB,CAAC,IAAI,CAAC,IAAI,OAAO,eAAC,CAAC,AAC1C,WAAW,CAAE,IAAI,AAAE,CAAC,AACxB,wCAAyB,CAAC,OAAO,eAAC,CAAC,AACjC,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,OAAO,CACnB,aAAa,CAAE,GAAG,CAClB,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,GAAG,AAAE,CAAC,AACpB,wCAAyB,CAAC,SAAS,eAAC,CAAC,AACnC,SAAS,CAAE,IAAI,CACf,cAAc,CAAE,GAAG,AAAE,CAAC,AACxB,wCAAyB,CAAC,KAAK,eAAC,CAAC,AAC/B,UAAU,CAAE,MAAM,AAAE,CAAC,AACvB,wCAAyB,CAAC,KAAK,eAAC,CAAC,AAC/B,aAAa,CAAE,IAAI,CACnB,SAAS,CAAE,IAAI,AAAE,CAAC,AACpB,wCAAyB,CAAC,UAAU,eAAC,CAAC,AACpC,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,CACnB,MAAM,CAAE,OAAO,CACf,WAAW,CAAE,IAAI,CACjB,KAAK,CAAE,OAAO,CACd,eAAe,CAAE,IAAI,CACrB,SAAS,CAAE,IAAI,AAAE,CAAC,AAClB,wCAAyB,CAAC,yBAAU,MAAM,AAAC,CAAC,AAC1C,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,OAAO,AAAE,CAAC"}`
};
var ApplicationButton = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { b = {} } = $$props;
  if ($$props.b === void 0 && $$bindings.b && b !== void 0)
    $$bindings.b(b);
  $$result.css.add(css$M);
  return `${b.size == "large" ? `
	<div class="${"application-button-large svelte-10e0zf4"}"><div class="${"column first svelte-10e0zf4"}">
			<div class="${"top svelte-10e0zf4"}"><div class="${"col first"}"><div class="${"circle svelte-10e0zf4"}"></div></div>
				<div class="${"col second svelte-10e0zf4"}"><div class="${"headline svelte-10e0zf4"}">APPLICATIONS ARE OPEN</div>
					${b.applicationEndDate ? `<div class="${"date svelte-10e0zf4"}">Due by ${escape(longFormatDate(b.applicationEndDate))}</div>` : ``}</div></div>

			
			${(0, import_has.default)(b, "longText.content") ? `<div class="${"text svelte-10e0zf4"}">${validate_component(Blocks, "Blocks").$$render($$result, { blocks: b.longText.content }, {}, {})}</div>` : ``}</div>

		<div class="${"column second svelte-10e0zf4"}">
			<a${add_attribute("href", b.url, 0)} target="${"_blank"}" class="${"apply-now svelte-10e0zf4"}">${escape(b.shortText)}</a></div></div>` : `
	<div class="${"application-button-small svelte-10e0zf4"}"><div class="${"application-button-inner svelte-10e0zf4"}"><a${add_attribute("href", b.url, 0)} target="${"_blank"}" class="${"button svelte-10e0zf4"}">${b.applicationEndDate ? `<div class="${"circle svelte-10e0zf4"}"></div>` : ``}
				<span class="${"applications-text svelte-10e0zf4"}">${escape(b.shortText)}</span></a>
			${b.applicationEndDate ? `<div class="${"date svelte-10e0zf4"}">Applications Due by ${escape(longFormatDate(b.applicationEndDate))}</div>` : ``}</div></div>`}`;
});
var css$L = {
  code: "svg.svelte-bl0yym path.svelte-bl0yym{fill:#221f20}",
  map: '{"version":3,"file":"arrow-down.svelte","sources":["arrow-down.svelte"],"sourcesContent":["<svg width=\\"9\\" height=\\"8\\" viewBox=\\"0 0 9 8\\" fill=\\"none\\" xmlns=\\"http://www.w3.org/2000/svg\\">\\n\\t<path d=\\"M4.78393 7.78516L0.640486 0.608508L8.92737 0.608508L4.78393 7.78516Z\\" fill=\\"#221F20\\" />\\n</svg>\\n\\n<style type=\\"scss\\">svg path {\\n  fill: #221f20; }\\n</style>\\n"],"names":[],"mappings":"AAImB,iBAAG,CAAC,IAAI,cAAC,CAAC,AAC3B,IAAI,CAAE,OAAO,AAAE,CAAC"}'
};
var Arrow_down = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  $$result.css.add(css$L);
  return `<svg width="${"9"}" height="${"8"}" viewBox="${"0 0 9 8"}" fill="${"none"}" xmlns="${"http://www.w3.org/2000/svg"}" class="${"svelte-bl0yym"}"><path d="${"M4.78393 7.78516L0.640486 0.608508L8.92737 0.608508L4.78393 7.78516Z"}" fill="${"#221F20"}" class="${"svelte-bl0yym"}"></path></svg>`;
});
var css$K = {
  code: "svg.svelte-bl0yym path.svelte-bl0yym{fill:#221f20}",
  map: '{"version":3,"file":"arrow-left.svelte","sources":["arrow-left.svelte"],"sourcesContent":["<svg width=\\"8\\" height=\\"10\\" viewBox=\\"0 0 8 10\\" fill=\\"none\\" xmlns=\\"http://www.w3.org/2000/svg\\">\\n\\t<path d=\\"M-0.000488072 5.06677L7.17615 9.45473L7.17615 0.678818L-0.000488072 5.06677Z\\" />\\n</svg>\\n\\n<style type=\\"scss\\">svg path {\\n  fill: #221f20; }\\n</style>\\n"],"names":[],"mappings":"AAImB,iBAAG,CAAC,IAAI,cAAC,CAAC,AAC3B,IAAI,CAAE,OAAO,AAAE,CAAC"}'
};
var Arrow_left = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  $$result.css.add(css$K);
  return `<svg width="${"8"}" height="${"10"}" viewBox="${"0 0 8 10"}" fill="${"none"}" xmlns="${"http://www.w3.org/2000/svg"}" class="${"svelte-bl0yym"}"><path d="${"M-0.000488072 5.06677L7.17615 9.45473L7.17615 0.678818L-0.000488072 5.06677Z"}" class="${"svelte-bl0yym"}"></path></svg>`;
});
var css$J = {
  code: ".qa.svelte-nx2f1v.svelte-nx2f1v{width:100%;display:inline-block}.qa.svelte-nx2f1v .question.svelte-nx2f1v{width:100%;display:flex;justify-content:space-between;border-bottom:1px solid #221f20;cursor:pointer}.qa.svelte-nx2f1v .question .text.svelte-nx2f1v{font-style:italic;user-select:none;padding-top:10px;padding-bottom:10px;font-size:14px}.qa.svelte-nx2f1v .question .icon.svelte-nx2f1v{position:relative;top:6px}.qa.svelte-nx2f1v .answer.svelte-nx2f1v{border-bottom:1px solid #221f20}",
  map: `{"version":3,"file":"qa.svelte","sources":["qa.svelte"],"sourcesContent":["<script>\\n\\t// # # # # # # # # # # # # #\\n\\t//\\n\\t//  FAQ\\n\\t//\\n\\t// # # # # # # # # # # # # #\\n\\n\\t// __ IMPORTS\\n\\timport has from 'lodash/has.js';\\n\\n\\t// __ COMPONENTS\\n\\timport Blocks from '$lib/blocks/blocks.svelte';\\n\\n\\t// __ GRAPHICS\\n\\timport ArrowDown from '$lib/graphics/arrow-down.svelte';\\n\\timport ArrowLeft from '$lib/graphics/arrow-left.svelte';\\n\\n\\t// *** PROPS\\n\\texport let item = {};\\n\\n\\t// *** VARIABLES\\n\\tlet open = false;\\n\\n\\tconst toggleOpen = () => {\\n\\t\\topen = !open;\\n\\t};\\n<\/script>\\n\\n<div class=\\"qa\\">\\n\\t<div class=\\"question\\" on:click={toggleOpen}>\\n\\t\\t<div class=\\"text\\">{item.question}</div>\\n\\t\\t<div class=\\"icon\\">\\n\\t\\t\\t{#if open}\\n\\t\\t\\t\\t<ArrowDown />\\n\\t\\t\\t{:else}\\n\\t\\t\\t\\t<ArrowLeft />\\n\\t\\t\\t{/if}\\n\\t\\t</div>\\n\\t</div>\\n\\t{#if open}\\n\\t\\t<div class=\\"answer\\">\\n\\t\\t\\t{#if has(item, 'answer.content', [])}\\n\\t\\t\\t\\t<Blocks blocks={item.answer.content} />\\n\\t\\t\\t{/if}\\n\\t\\t</div>\\n\\t{/if}\\n</div>\\n\\n<style lang=\\"scss\\">.qa {\\n  width: 100%;\\n  display: inline-block; }\\n  .qa .question {\\n    width: 100%;\\n    display: flex;\\n    justify-content: space-between;\\n    border-bottom: 1px solid #221f20;\\n    cursor: pointer; }\\n    .qa .question .text {\\n      font-style: italic;\\n      user-select: none;\\n      padding-top: 10px;\\n      padding-bottom: 10px;\\n      font-size: 14px; }\\n    .qa .question .icon {\\n      position: relative;\\n      top: 6px; }\\n  .qa .answer {\\n    border-bottom: 1px solid #221f20; }\\n</style>\\n"],"names":[],"mappings":"AAgDmB,GAAG,4BAAC,CAAC,AACtB,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,YAAY,AAAE,CAAC,AACxB,iBAAG,CAAC,SAAS,cAAC,CAAC,AACb,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,CAC9B,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAChC,MAAM,CAAE,OAAO,AAAE,CAAC,AAClB,iBAAG,CAAC,SAAS,CAAC,KAAK,cAAC,CAAC,AACnB,UAAU,CAAE,MAAM,CAClB,WAAW,CAAE,IAAI,CACjB,WAAW,CAAE,IAAI,CACjB,cAAc,CAAE,IAAI,CACpB,SAAS,CAAE,IAAI,AAAE,CAAC,AACpB,iBAAG,CAAC,SAAS,CAAC,KAAK,cAAC,CAAC,AACnB,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,GAAG,AAAE,CAAC,AACf,iBAAG,CAAC,OAAO,cAAC,CAAC,AACX,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,AAAE,CAAC"}`
};
var Qa = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { item = {} } = $$props;
  if ($$props.item === void 0 && $$bindings.item && item !== void 0)
    $$bindings.item(item);
  $$result.css.add(css$J);
  return `<div class="${"qa svelte-nx2f1v"}"><div class="${"question svelte-nx2f1v"}"><div class="${"text svelte-nx2f1v"}">${escape(item.question)}</div>
		<div class="${"icon svelte-nx2f1v"}">${`${validate_component(Arrow_left, "ArrowLeft").$$render($$result, {}, {}, {})}`}</div></div>
	${``}
</div>`;
});
var css$I = {
  code: ".faq.svelte-1xam6mq.svelte-1xam6mq{display:inline-block;width:100%;padding:15px;margin-bottom:40px}.faq.svelte-1xam6mq .faq-inner.svelte-1xam6mq{margin-top:1em}",
  map: `{"version":3,"file":"faq.svelte","sources":["faq.svelte"],"sourcesContent":["<script>\\n\\t// # # # # # # # # # # # # #\\n\\t//\\n\\t//  FAQ\\n\\t//\\n\\t// # # # # # # # # # # # # #\\n\\n\\t// __ IMPORTS\\n\\timport slugify from 'slugify';\\n\\n\\t// __ COMPONENTS\\n\\timport QA from '$lib/qa/qa.svelte';\\n\\n\\t// *** PROPS\\n\\texport let b = {};\\n<\/script>\\n\\n<div class=\\"faq\\">\\n\\t<h2\\n\\t\\tid={slugify(b.title, {\\n\\t\\t\\tlower: true\\n\\t\\t})}\\n\\t>\\n\\t\\t{b.title}\\n\\t</h2>\\n\\t<div class=\\"faq-inner\\">\\n\\t\\t{#each b.questionAnswer as item}\\n\\t\\t\\t<QA {item} />\\n\\t\\t{/each}\\n\\t</div>\\n</div>\\n\\n<style lang=\\"scss\\">.faq {\\n  display: inline-block;\\n  width: 100%;\\n  padding: 15px;\\n  margin-bottom: 40px; }\\n  .faq .faq-inner {\\n    margin-top: 1em; }\\n</style>\\n"],"names":[],"mappings":"AAgCmB,IAAI,8BAAC,CAAC,AACvB,OAAO,CAAE,YAAY,CACrB,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CACb,aAAa,CAAE,IAAI,AAAE,CAAC,AACtB,mBAAI,CAAC,UAAU,eAAC,CAAC,AACf,UAAU,CAAE,GAAG,AAAE,CAAC"}`
};
var Faq = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { b = {} } = $$props;
  if ($$props.b === void 0 && $$bindings.b && b !== void 0)
    $$bindings.b(b);
  $$result.css.add(css$I);
  return `<div class="${"faq svelte-1xam6mq"}"><h2${add_attribute("id", (0, import_slugify.default)(b.title, { lower: true }), 0)}>${escape(b.title)}</h2>
	<div class="${"faq-inner svelte-1xam6mq"}">${each(b.questionAnswer, (item) => `${validate_component(Qa, "QA").$$render($$result, { item }, {}, {})}`)}</div>
</div>`;
});
var css$H = {
  code: "svg.svelte-bl0yym path.svelte-bl0yym{fill:#221f20}",
  map: '{"version":3,"file":"play-arrow.svelte","sources":["play-arrow.svelte"],"sourcesContent":["<svg width=\\"21\\" height=\\"35\\" viewBox=\\"0 0 21 35\\" fill=\\"none\\" xmlns=\\"http://www.w3.org/2000/svg\\">\\n\\t<path d=\\"M0.123047 34.0552V0L20.5614 17.0276L0.123047 34.0552Z\\" />\\n</svg>\\n\\n<style type=\\"scss\\">svg path {\\n  fill: #221f20; }\\n</style>\\n"],"names":[],"mappings":"AAImB,iBAAG,CAAC,IAAI,cAAC,CAAC,AAC3B,IAAI,CAAE,OAAO,AAAE,CAAC"}'
};
var Play_arrow = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  $$result.css.add(css$H);
  return `<svg width="${"21"}" height="${"35"}" viewBox="${"0 0 21 35"}" fill="${"none"}" xmlns="${"http://www.w3.org/2000/svg"}" class="${"svelte-bl0yym"}"><path d="${"M0.123047 34.0552V0L20.5614 17.0276L0.123047 34.0552Z"}" class="${"svelte-bl0yym"}"></path></svg>`;
});
var css$G = {
  code: ".video-block.svelte-139dsg8.svelte-139dsg8{text-decoration:none;width:100%;position:relative;display:block;height:400px;margin-bottom:20px}.video-block.svelte-139dsg8 img.svelte-139dsg8{display:block;width:100%;height:100%;position:absolute;top:0;left:0}.video-block.svelte-139dsg8 .title.svelte-139dsg8{display:block;position:absolute;top:10px;left:80px;z-index:10;color:#f5f4ee;font-size:32px;line-height:1.2em}.video-block.svelte-139dsg8 .icon.svelte-139dsg8{position:absolute;top:10px;left:10px;z-index:100;width:70px;height:70px;border-radius:50%;background:#f5f4ee;color:#f5f4ee;line-height:1.2em;display:flex;justify-content:center;align-items:center}",
  map: `{"version":3,"file":"video.svelte","sources":["video.svelte"],"sourcesContent":["<script>\\n\\t// # # # # # # # # # # # # #\\n\\t//\\n\\t//  VIDEO\\n\\t//\\n\\t// # # # # # # # # # # # # #\\n\\n\\t// __ IMPORTS\\n\\timport { loadData, urlFor } from '$lib/sanity.js';\\n\\timport get from 'lodash/get.js';\\n\\n\\t// __ GRAPHICS\\n\\timport PlayArrow from '$lib/graphics/play-arrow.svelte';\\n\\n\\t// *** PROPS\\n\\texport let b = {};\\n\\n\\tconst videoPost = loadData('*[_id == $id][0]', { id: b.videoPost._ref });\\n\\t// videoPost.then((v) => {\\n\\t// \\tconsole.log('v', v);\\n\\t// });\\n<\/script>\\n\\n{#await videoPost then videoPost}\\n\\t<a href={'/videos/' + get(videoPost, 'slug.current')} class=\\"video-block\\">\\n\\t\\t<!-- MAIN IMAGE -->\\n\\t\\t{#if videoPost.mainImage}\\n\\t\\t\\t<img\\n\\t\\t\\t\\tclass=\\"main-image\\"\\n\\t\\t\\t\\talt={videoPost.title}\\n\\t\\t\\t\\tsrc={urlFor(videoPost.mainImage).quality(90).saturation(-100).width(400).url()}\\n\\t\\t\\t/>\\n\\t\\t{/if}\\n\\t\\t<div class=\\"icon\\">\\n\\t\\t\\t<PlayArrow />\\n\\t\\t</div>\\n\\t\\t<div class=\\"title\\">{videoPost.title}</div>\\n\\t</a>\\n{/await}\\n\\n<style lang=\\"scss\\">.video-block {\\n  text-decoration: none;\\n  width: 100%;\\n  position: relative;\\n  display: block;\\n  height: 400px;\\n  margin-bottom: 20px; }\\n  .video-block img {\\n    display: block;\\n    width: 100%;\\n    height: 100%;\\n    position: absolute;\\n    top: 0;\\n    left: 0; }\\n  .video-block .title {\\n    display: block;\\n    position: absolute;\\n    top: 10px;\\n    left: 80px;\\n    z-index: 10;\\n    color: #f5f4ee;\\n    font-size: 32px;\\n    line-height: 1.2em; }\\n  .video-block .icon {\\n    position: absolute;\\n    top: 10px;\\n    left: 10px;\\n    z-index: 100;\\n    width: 70px;\\n    height: 70px;\\n    border-radius: 50%;\\n    background: #f5f4ee;\\n    color: #f5f4ee;\\n    line-height: 1.2em;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center; }\\n</style>\\n"],"names":[],"mappings":"AAwCmB,YAAY,8BAAC,CAAC,AAC/B,eAAe,CAAE,IAAI,CACrB,KAAK,CAAE,IAAI,CACX,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,KAAK,CACd,MAAM,CAAE,KAAK,CACb,aAAa,CAAE,IAAI,AAAE,CAAC,AACtB,2BAAY,CAAC,GAAG,eAAC,CAAC,AAChB,OAAO,CAAE,KAAK,CACd,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,AAAE,CAAC,AACZ,2BAAY,CAAC,MAAM,eAAC,CAAC,AACnB,OAAO,CAAE,KAAK,CACd,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,IAAI,CACT,IAAI,CAAE,IAAI,CACV,OAAO,CAAE,EAAE,CACX,KAAK,CAAE,OAAO,CACd,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,KAAK,AAAE,CAAC,AACvB,2BAAY,CAAC,KAAK,eAAC,CAAC,AAClB,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,IAAI,CACT,IAAI,CAAE,IAAI,CACV,OAAO,CAAE,GAAG,CACZ,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,OAAO,CACd,WAAW,CAAE,KAAK,CAClB,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,AAAE,CAAC"}`
};
var Video = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { b = {} } = $$props;
  const videoPost = loadData("*[_id == $id][0]", { id: b.videoPost._ref });
  if ($$props.b === void 0 && $$bindings.b && b !== void 0)
    $$bindings.b(b);
  $$result.css.add(css$G);
  return `${function(__value) {
    if (is_promise(__value)) {
      __value.then(null, noop);
      return ``;
    }
    return function(videoPost2) {
      return `
	<a${add_attribute("href", "/videos/" + (0, import_get.default)(videoPost2, "slug.current"), 0)} class="${"video-block svelte-139dsg8"}">
		${videoPost2.mainImage ? `<img class="${"main-image svelte-139dsg8"}"${add_attribute("alt", videoPost2.title, 0)}${add_attribute("src", urlFor(videoPost2.mainImage).quality(90).saturation(-100).width(400).url(), 0)}>` : ``}
		<div class="${"icon svelte-139dsg8"}">${validate_component(Play_arrow, "PlayArrow").$$render($$result, {}, {}, {})}</div>
		<div class="${"title svelte-139dsg8"}">${escape(videoPost2.title)}</div></a>
`;
    }(__value);
  }(videoPost)}`;
});
var Blocks = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { blocks = [] } = $$props;
  if ($$props.blocks === void 0 && $$bindings.blocks && blocks !== void 0)
    $$bindings.blocks(blocks);
  return `${each(blocks, (b) => `${b._type == "block" ? `${b.style == "logoBlock" ? `${validate_component(LogoBlock, "LogoBlock").$$render($$result, { b }, {}, {})}` : `${b.style == "invertedBlock" ? `${validate_component(InvertedBlock, "InvertedBlock").$$render($$result, { b }, {}, {})}` : `${validate_component(Text, "Text").$$render($$result, { b }, {}, {})}`}`}` : ``}
	${b._type == "image" ? `${validate_component(Image, "Image").$$render($$result, { b }, {}, {})}` : ``}
	${b._type == "embedBlock" ? `${validate_component(Embed, "Embed").$$render($$result, { b }, {}, {})}` : ``}
	${b._type == "dividerBlock" ? `${validate_component(Divider, "Divider").$$render($$result, { b }, {}, {})}` : ``}
	${b._type == "columnsBlock" ? `${validate_component(Columns, "Columns").$$render($$result, { b }, {}, {})}` : ``}
	${b._type == "donationWidget" ? `${validate_component(DonationWidget, "DonationWidget").$$render($$result, { b }, {}, {})}` : ``}
	${b._type == "applicationButton" ? `${validate_component(ApplicationButton, "ApplicationButton").$$render($$result, { b }, {}, {})}` : ``}
	${b._type == "faq" ? `${validate_component(Faq, "Faq").$$render($$result, { b }, {}, {})}` : ``}
	${b._type == "videoBlock" ? `${validate_component(Video, "Video").$$render($$result, { b }, {}, {})}` : ``}`)}`;
});
var css$F = {
  code: "svg.svelte-1wdefg6.svelte-1wdefg6{width:100%}svg.svelte-1wdefg6 path.svelte-1wdefg6{fill:none;stroke:#f5f4ee;stroke-width:0.75;stroke-miterlimit:10}svg.black.svelte-1wdefg6 path.svelte-1wdefg6{stroke:#221f20}",
  map: '{"version":3,"file":"full-beam.svelte","sources":["full-beam.svelte"],"sourcesContent":["<script>\\n\\t// # # # # # # # # # # # # #\\n\\t//\\n\\t//  FULL BEAM\\n\\t//\\n\\t// # # # # # # # # # # # # #\\n\\n\\texport let black = false;\\n<\/script>\\n\\n<svg\\n\\tclass:black\\n\\tversion=\\"1.1\\"\\n\\tid=\\"Layer_1\\"\\n\\txmlns=\\"http://www.w3.org/2000/svg\\"\\n\\txmlns:xlink=\\"http://www.w3.org/1999/xlink\\"\\n\\tx=\\"0px\\"\\n\\ty=\\"0px\\"\\n\\tviewBox=\\"0 0 18 18\\"\\n\\tstyle=\\"enable-background:new 0 0 18 18;\\"\\n\\txml:space=\\"preserve\\"\\n>\\n\\t<path\\n\\t\\tclass=\\"st1\\"\\n\\t\\td=\\"M0,8.8h6.8 M16.8,4.4l-5.9,3.3L16.8,4.4z M13.6,1.2l-3.4,5.7L13.6,1.2z M11.1,8.8H18 M1.2,4.4l5.9,3.3L1.2,4.4z M4.4,1.2l3.4,5.7L4.4,1.2z M9,0v6.6V0z\\"\\n\\t/>\\n\\t<path\\n\\t\\tclass=\\"st1\\"\\n\\t\\td=\\"M1.2,13.1l5.9-3.3 M4.4,16.3l3.4-5.7 M16.8,13.1l-5.9-3.3 M13.6,16.3l-3.4-5.7 M9,17.4v-6.6\\"\\n\\t/>\\n</svg>\\n\\n<style type=\\"scss\\">svg {\\n  width: 100%; }\\n  svg path {\\n    fill: none;\\n    stroke: #f5f4ee;\\n    stroke-width: 0.75;\\n    stroke-miterlimit: 10; }\\n  svg.black path {\\n    stroke: #221f20; }\\n</style>\\n"],"names":[],"mappings":"AAgCmB,GAAG,8BAAC,CAAC,AACtB,KAAK,CAAE,IAAI,AAAE,CAAC,AACd,kBAAG,CAAC,IAAI,eAAC,CAAC,AACR,IAAI,CAAE,IAAI,CACV,MAAM,CAAE,OAAO,CACf,YAAY,CAAE,IAAI,CAClB,iBAAiB,CAAE,EAAE,AAAE,CAAC,AAC1B,GAAG,qBAAM,CAAC,IAAI,eAAC,CAAC,AACd,MAAM,CAAE,OAAO,AAAE,CAAC"}'
};
var Full_beam = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { black = false } = $$props;
  if ($$props.black === void 0 && $$bindings.black && black !== void 0)
    $$bindings.black(black);
  $$result.css.add(css$F);
  return `<svg version="${"1.1"}" id="${"Layer_1"}" xmlns="${"http://www.w3.org/2000/svg"}" xmlns:xlink="${"http://www.w3.org/1999/xlink"}" x="${"0px"}" y="${"0px"}" viewBox="${"0 0 18 18"}" style="${"enable-background:new 0 0 18 18;"}" xml:space="${"preserve"}" class="${["svelte-1wdefg6", black ? "black" : ""].join(" ").trim()}"><path class="${"st1 svelte-1wdefg6"}" d="${"M0,8.8h6.8 M16.8,4.4l-5.9,3.3L16.8,4.4z M13.6,1.2l-3.4,5.7L13.6,1.2z M11.1,8.8H18 M1.2,4.4l5.9,3.3L1.2,4.4z M4.4,1.2l3.4,5.7L4.4,1.2z M9,0v6.6V0z"}"></path><path class="${"st1 svelte-1wdefg6"}" d="${"M1.2,13.1l5.9-3.3 M4.4,16.3l3.4-5.7 M16.8,13.1l-5.9-3.3 M13.6,16.3l-3.4-5.7 M9,17.4v-6.6"}"></path></svg>`;
});
var css$E = {
  code: "svg.svelte-hhwbji path.svelte-hhwbji{fill:#f5f4ee}",
  map: '{"version":3,"file":"triangle-down.svelte","sources":["triangle-down.svelte"],"sourcesContent":["<svg width=\\"9\\" height=\\"8\\" viewBox=\\"0 0 9 8\\" fill=\\"none\\" xmlns=\\"http://www.w3.org/2000/svg\\">\\n\\t<path d=\\"M4.8474 7.78418L0.703963 0.607532L8.99084 0.607531L4.8474 7.78418Z\\" />\\n</svg>\\n\\n<style lang=\\"scss\\">svg path {\\n  fill: #f5f4ee; }\\n</style>\\n"],"names":[],"mappings":"AAImB,iBAAG,CAAC,IAAI,cAAC,CAAC,AAC3B,IAAI,CAAE,OAAO,AAAE,CAAC"}'
};
var Triangle_down = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  $$result.css.add(css$E);
  return `<svg width="${"9"}" height="${"8"}" viewBox="${"0 0 9 8"}" fill="${"none"}" xmlns="${"http://www.w3.org/2000/svg"}" class="${"svelte-hhwbji"}"><path d="${"M4.8474 7.78418L0.703963 0.607532L8.99084 0.607531L4.8474 7.78418Z"}" class="${"svelte-hhwbji"}"></path></svg>`;
});
var css$D = {
  code: "header.svelte-ejss4w.svelte-ejss4w{position:absolute;top:0;left:0;width:100%;z-index:100;height:340px;transition:transform 0.3s ease-out;transform:translateY(-240px);font-size:12px}@media(max-width: 900px){header.svelte-ejss4w.svelte-ejss4w{display:none}}header.open.svelte-ejss4w.svelte-ejss4w{transform:translateY(0)}header.svelte-ejss4w .menubar.svelte-ejss4w{width:100%;height:30px;background:#221f20;color:#f5f4ee;line-height:30px;padding-left:15px;padding-right:10px;overflow:hidden}header.svelte-ejss4w .menubar .inner-text.svelte-ejss4w{opacity:0}header.svelte-ejss4w .menubar .inner-text.loaded.svelte-ejss4w{opacity:1}header.svelte-ejss4w .menubar .breadcrumbs.svelte-ejss4w{float:left}header.svelte-ejss4w .menubar .arrow-down.svelte-ejss4w{margin-right:5px}header.svelte-ejss4w .menubar .divider.svelte-ejss4w{margin-right:5px;margin-left:5px}header.svelte-ejss4w .menubar a.svelte-ejss4w{color:#f5f4ee;text-decoration:none}header.svelte-ejss4w .menubar .clock.svelte-ejss4w{float:right}header.svelte-ejss4w .menubar .tray-toggle.svelte-ejss4w{float:right;width:18px;height:30px;display:flex;justify-content:center;align-items:center;margin-left:12px;cursor:pointer}header.svelte-ejss4w .settings.svelte-ejss4w{height:240px;background:#e0ded7}header.svelte-ejss4w .settings .settings-bar.svelte-ejss4w{height:30px;line-height:30px;padding-left:5px;padding-right:10px;cursor:pointer;border-bottom:1px solid #221f20;color:#221f20;width:100%}header.svelte-ejss4w .settings .settings-bar .tray-toggle.svelte-ejss4w{width:18px;height:30px;display:flex;margin-right:8px;justify-content:center;align-items:center;margin-left:8px;cursor:pointer;float:left}header.svelte-ejss4w .settings .settings-content.svelte-ejss4w{display:flex;padding-left:15px;padding-right:15px}header.svelte-ejss4w .settings .settings-content .section.svelte-ejss4w{padding-top:20px}header.svelte-ejss4w .settings .settings-content .section .section-header.svelte-ejss4w{margin-bottom:10px}header.svelte-ejss4w .settings .settings-content .section.theme.svelte-ejss4w{width:20%}header.svelte-ejss4w .settings .settings-content .section.text.svelte-ejss4w{width:30%}header.svelte-ejss4w .settings .settings-content .section.city.svelte-ejss4w{width:50%}.city-button.svelte-ejss4w.svelte-ejss4w{padding:8px 12px;display:inline-block;border-top:1px solid #221f20;border-right:1px solid #221f20;border-bottom:1px solid #221f20;user-select:none;cursor:pointer}.city-button.svelte-ejss4w.svelte-ejss4w:first-child{border-left:1px solid #221f20}.city-button.active.svelte-ejss4w.svelte-ejss4w{background:#221f20;color:#f5f4ee}.city-button.svelte-ejss4w.svelte-ejss4w:hover{background:#221f20;color:#f5f4ee}.theme-switches.svelte-ejss4w.svelte-ejss4w{margin-bottom:20px}.theme-button.svelte-ejss4w.svelte-ejss4w{padding:8px 12px;display:inline-block;border-top:1px solid #221f20;border-right:1px solid #221f20;border-bottom:1px solid #221f20;user-select:none;cursor:pointer}.theme-button.svelte-ejss4w.svelte-ejss4w:first-child{border-left:1px solid #221f20}.theme-button.active.svelte-ejss4w.svelte-ejss4w{background:#221f20;color:#f5f4ee}.theme-button.svelte-ejss4w.svelte-ejss4w:hover{background:#221f20;color:#f5f4ee}.inversion-button.svelte-ejss4w.svelte-ejss4w{width:35px;height:35px;border:1px solid #221f20;display:inline-block;border-radius:50%;user-select:none;cursor:pointer;background:transparent}.inversion-button.svelte-ejss4w.svelte-ejss4w:hover{background:#221f20}.inversion-button.active.svelte-ejss4w.svelte-ejss4w{background:#221f20}",
  map: `{"version":3,"file":"header.svelte","sources":["header.svelte"],"sourcesContent":["<script>\\n\\t// # # # # # # # # # # # # #\\n\\t//\\n\\t// Header\\n\\t//\\n\\t// # # # # # # # # # # # # #\\n\\n\\t// __ IMPORT\\n\\timport Clock from '$lib/clock/clock.svelte';\\n\\timport { loadData } from '$lib/sanity.js';\\n\\timport has from 'lodash/has.js';\\n\\n\\t// __ COMPONENTS\\n\\timport Blocks from '$lib/blocks/blocks.svelte';\\n\\n\\t// __ GRAPHICS\\n\\timport FullBeam from '$lib/graphics/full-beam.svelte';\\n\\timport TriangleDown from '$lib/graphics/triangle-down.svelte';\\n\\n\\t// __ STORES\\n\\timport {\\n\\t\\tcurrentCategory,\\n\\t\\tcurrentPage,\\n\\t\\tloaded,\\n\\t\\ttrayOpen,\\n\\t\\tactiveCity,\\n\\t\\ttheme,\\n\\t\\tinversion\\n\\t} from '$lib/stores.js';\\n\\n\\tconst cities = loadData('*[_id == \\"cities\\"][0]');\\n\\n\\tcities.then((c) => {\\n\\t\\tif (c.cities && c.cities[0]) {\\n\\t\\t\\tactiveCity.set(c.cities[0]);\\n\\t\\t}\\n\\t});\\n\\n\\tconst toggleTray = () => {\\n\\t\\ttrayOpen.set(!$trayOpen);\\n\\t};\\n<\/script>\\n\\n<header class:open={$trayOpen}>\\n\\t<div class=\\"settings\\">\\n\\t\\t<!-- SETTINGS BAR -->\\n\\t\\t<div class=\\"settings-bar\\" on:click={toggleTray}>\\n\\t\\t\\t<div class=\\"tray-toggle\\" on:click={toggleTray}>\\n\\t\\t\\t\\t<FullBeam black={true} />\\n\\t\\t\\t</div>\\n\\t\\t\\tSettings\\n\\t\\t</div>\\n\\t\\t<!-- SETTINGS CONTENT -->\\n\\t\\t<div class=\\"settings-content\\">\\n\\t\\t\\t<!-- THEME & INVERSION -->\\n\\t\\t\\t<div class=\\"section theme\\">\\n\\t\\t\\t\\t<div class=\\"inner-section column\\">\\n\\t\\t\\t\\t\\t<div class=\\"section-header\\">Theme</div>\\n\\t\\t\\t\\t\\t<div class=\\"theme-switches\\">\\n\\t\\t\\t\\t\\t\\t<div\\n\\t\\t\\t\\t\\t\\t\\tclass=\\"theme-button\\"\\n\\t\\t\\t\\t\\t\\t\\tclass:active={$theme === 'ink'}\\n\\t\\t\\t\\t\\t\\t\\ton:click={() => {\\n\\t\\t\\t\\t\\t\\t\\t\\ttheme.set('ink');\\n\\t\\t\\t\\t\\t\\t\\t}}\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\tE-ink\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div\\n\\t\\t\\t\\t\\t\\t\\tclass=\\"theme-button\\"\\n\\t\\t\\t\\t\\t\\t\\tclass:active={$theme === 'rgb'}\\n\\t\\t\\t\\t\\t\\t\\ton:click={() => {\\n\\t\\t\\t\\t\\t\\t\\t\\ttheme.set('rgb');\\n\\t\\t\\t\\t\\t\\t\\t}}\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\tRGB\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t{#if $theme === 'ink'}\\n\\t\\t\\t\\t\\t\\t<div class=\\"section-header\\">Inversion</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\"inversion-switches\\">\\n\\t\\t\\t\\t\\t\\t\\t<div\\n\\t\\t\\t\\t\\t\\t\\t\\tclass=\\"inversion-button\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tclass:active={$inversion}\\n\\t\\t\\t\\t\\t\\t\\t\\ton:click={() => {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tinversion.set(!$inversion);\\n\\t\\t\\t\\t\\t\\t\\t\\t}}\\n\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<!-- TEXT -->\\n\\t\\t\\t<div class=\\"section text\\">\\n\\t\\t\\t\\t<div class=\\"section-header\\">Text</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<!-- CITY -->\\n\\t\\t\\t<div class=\\"section city\\">\\n\\t\\t\\t\\t<div class=\\"section-header\\">City</div>\\n\\t\\t\\t\\t{#await cities then cities}\\n\\t\\t\\t\\t\\t<div class=\\"city-switches\\">\\n\\t\\t\\t\\t\\t\\t{#each cities.cities as city}\\n\\t\\t\\t\\t\\t\\t\\t<div\\n\\t\\t\\t\\t\\t\\t\\t\\tclass=\\"city-button\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tclass:active={$activeCity._key === city._key}\\n\\t\\t\\t\\t\\t\\t\\t\\ton:click={() => {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tactiveCity.set(city);\\n\\t\\t\\t\\t\\t\\t\\t\\t}}\\n\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t{city.name}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{/each}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\"city-text\\">\\n\\t\\t\\t\\t\\t\\t{#if has(cities, 'content.content', [])}\\n\\t\\t\\t\\t\\t\\t\\t<div><Blocks blocks={cities.content.content} /></div>\\n\\t\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t{/await}\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n\\t<nav class=\\"menubar\\">\\n\\t\\t<div class=\\"inner-text\\" class:loaded={$loaded}>\\n\\t\\t\\t<!-- BREADCRUMBS -->\\n\\t\\t\\t<div class=\\"breadcrumbs\\">\\n\\t\\t\\t\\t<span class=\\"arrow-down\\"><TriangleDown /></span>\\n\\t\\t\\t\\t<a href=\\"/\\">eyebeam.org</a>\\n\\t\\t\\t\\t<!-- CATEGORY -->\\n\\t\\t\\t\\t{#if $currentCategory}\\n\\t\\t\\t\\t\\t<span class=\\"divider\\">/</span>\\n\\t\\t\\t\\t\\t<a href={'/' + $currentCategory.slug}>{$currentCategory.name}</a>\\n\\t\\t\\t\\t\\t<!-- PAGE -->\\n\\t\\t\\t\\t\\t{#if $currentPage}\\n\\t\\t\\t\\t\\t\\t<span class=\\"divider\\">/</span>\\n\\t\\t\\t\\t\\t\\t<span>{$currentPage.title}</span>\\n\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t{/if}\\n\\t\\t\\t</div>\\n\\t\\t\\t<!-- TRAY TOGGLE-->\\n\\t\\t\\t<div class=\\"tray-toggle\\" on:click={toggleTray}>\\n\\t\\t\\t\\t<FullBeam />\\n\\t\\t\\t</div>\\n\\t\\t\\t<!-- CLOCK -->\\n\\t\\t\\t<div class=\\"clock\\">\\n\\t\\t\\t\\t<Clock />\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</nav>\\n</header>\\n\\n<style lang=\\"scss\\">header {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  z-index: 100;\\n  height: 340px;\\n  transition: transform 0.3s ease-out;\\n  transform: translateY(-240px);\\n  font-size: 12px; }\\n  @media (max-width: 900px) {\\n    header {\\n      display: none; } }\\n  header.open {\\n    transform: translateY(0); }\\n  header .menubar {\\n    width: 100%;\\n    height: 30px;\\n    background: #221f20;\\n    color: #f5f4ee;\\n    line-height: 30px;\\n    padding-left: 15px;\\n    padding-right: 10px;\\n    overflow: hidden; }\\n    header .menubar .inner-text {\\n      opacity: 0; }\\n      header .menubar .inner-text.loaded {\\n        opacity: 1; }\\n    header .menubar .breadcrumbs {\\n      float: left; }\\n    header .menubar .arrow-down {\\n      margin-right: 5px; }\\n    header .menubar .divider {\\n      margin-right: 5px;\\n      margin-left: 5px; }\\n    header .menubar a {\\n      color: #f5f4ee;\\n      text-decoration: none; }\\n    header .menubar .clock {\\n      float: right; }\\n    header .menubar .tray-toggle {\\n      float: right;\\n      width: 18px;\\n      height: 30px;\\n      display: flex;\\n      justify-content: center;\\n      align-items: center;\\n      margin-left: 12px;\\n      cursor: pointer; }\\n  header .settings {\\n    height: 240px;\\n    background: #e0ded7; }\\n    header .settings .settings-bar {\\n      height: 30px;\\n      line-height: 30px;\\n      padding-left: 5px;\\n      padding-right: 10px;\\n      cursor: pointer;\\n      border-bottom: 1px solid #221f20;\\n      color: #221f20;\\n      width: 100%; }\\n      header .settings .settings-bar .tray-toggle {\\n        width: 18px;\\n        height: 30px;\\n        display: flex;\\n        margin-right: 8px;\\n        justify-content: center;\\n        align-items: center;\\n        margin-left: 8px;\\n        cursor: pointer;\\n        float: left; }\\n    header .settings .settings-content {\\n      display: flex;\\n      padding-left: 15px;\\n      padding-right: 15px; }\\n      header .settings .settings-content .section {\\n        padding-top: 20px; }\\n        header .settings .settings-content .section .section-header {\\n          margin-bottom: 10px; }\\n        header .settings .settings-content .section.theme {\\n          width: 20%; }\\n        header .settings .settings-content .section.text {\\n          width: 30%; }\\n        header .settings .settings-content .section.city {\\n          width: 50%; }\\n\\n.city-button {\\n  padding: 8px 12px;\\n  display: inline-block;\\n  border-top: 1px solid #221f20;\\n  border-right: 1px solid #221f20;\\n  border-bottom: 1px solid #221f20;\\n  user-select: none;\\n  cursor: pointer; }\\n  .city-button:first-child {\\n    border-left: 1px solid #221f20; }\\n  .city-button.active {\\n    background: #221f20;\\n    color: #f5f4ee; }\\n  .city-button:hover {\\n    background: #221f20;\\n    color: #f5f4ee; }\\n\\n.theme-switches {\\n  margin-bottom: 20px; }\\n\\n.theme-button {\\n  padding: 8px 12px;\\n  display: inline-block;\\n  border-top: 1px solid #221f20;\\n  border-right: 1px solid #221f20;\\n  border-bottom: 1px solid #221f20;\\n  user-select: none;\\n  cursor: pointer; }\\n  .theme-button:first-child {\\n    border-left: 1px solid #221f20; }\\n  .theme-button.active {\\n    background: #221f20;\\n    color: #f5f4ee; }\\n  .theme-button:hover {\\n    background: #221f20;\\n    color: #f5f4ee; }\\n\\n.inversion-button {\\n  width: 35px;\\n  height: 35px;\\n  border: 1px solid #221f20;\\n  display: inline-block;\\n  border-radius: 50%;\\n  user-select: none;\\n  cursor: pointer;\\n  background: transparent; }\\n  .inversion-button:hover {\\n    background: #221f20; }\\n  .inversion-button.active {\\n    background: #221f20; }\\n</style>\\n"],"names":[],"mappings":"AAuJmB,MAAM,4BAAC,CAAC,AACzB,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,GAAG,CACZ,MAAM,CAAE,KAAK,CACb,UAAU,CAAE,SAAS,CAAC,IAAI,CAAC,QAAQ,CACnC,SAAS,CAAE,WAAW,MAAM,CAAC,CAC7B,SAAS,CAAE,IAAI,AAAE,CAAC,AAClB,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,MAAM,4BAAC,CAAC,AACN,OAAO,CAAE,IAAI,AAAE,CAAC,AAAC,CAAC,AACtB,MAAM,KAAK,4BAAC,CAAC,AACX,SAAS,CAAE,WAAW,CAAC,CAAC,AAAE,CAAC,AAC7B,oBAAM,CAAC,QAAQ,cAAC,CAAC,AACf,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,OAAO,CACd,WAAW,CAAE,IAAI,CACjB,YAAY,CAAE,IAAI,CAClB,aAAa,CAAE,IAAI,CACnB,QAAQ,CAAE,MAAM,AAAE,CAAC,AACnB,oBAAM,CAAC,QAAQ,CAAC,WAAW,cAAC,CAAC,AAC3B,OAAO,CAAE,CAAC,AAAE,CAAC,AACb,oBAAM,CAAC,QAAQ,CAAC,WAAW,OAAO,cAAC,CAAC,AAClC,OAAO,CAAE,CAAC,AAAE,CAAC,AACjB,oBAAM,CAAC,QAAQ,CAAC,YAAY,cAAC,CAAC,AAC5B,KAAK,CAAE,IAAI,AAAE,CAAC,AAChB,oBAAM,CAAC,QAAQ,CAAC,WAAW,cAAC,CAAC,AAC3B,YAAY,CAAE,GAAG,AAAE,CAAC,AACtB,oBAAM,CAAC,QAAQ,CAAC,QAAQ,cAAC,CAAC,AACxB,YAAY,CAAE,GAAG,CACjB,WAAW,CAAE,GAAG,AAAE,CAAC,AACrB,oBAAM,CAAC,QAAQ,CAAC,CAAC,cAAC,CAAC,AACjB,KAAK,CAAE,OAAO,CACd,eAAe,CAAE,IAAI,AAAE,CAAC,AAC1B,oBAAM,CAAC,QAAQ,CAAC,MAAM,cAAC,CAAC,AACtB,KAAK,CAAE,KAAK,AAAE,CAAC,AACjB,oBAAM,CAAC,QAAQ,CAAC,YAAY,cAAC,CAAC,AAC5B,KAAK,CAAE,KAAK,CACZ,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,CACnB,WAAW,CAAE,IAAI,CACjB,MAAM,CAAE,OAAO,AAAE,CAAC,AACtB,oBAAM,CAAC,SAAS,cAAC,CAAC,AAChB,MAAM,CAAE,KAAK,CACb,UAAU,CAAE,OAAO,AAAE,CAAC,AACtB,oBAAM,CAAC,SAAS,CAAC,aAAa,cAAC,CAAC,AAC9B,MAAM,CAAE,IAAI,CACZ,WAAW,CAAE,IAAI,CACjB,YAAY,CAAE,GAAG,CACjB,aAAa,CAAE,IAAI,CACnB,MAAM,CAAE,OAAO,CACf,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAChC,KAAK,CAAE,OAAO,CACd,KAAK,CAAE,IAAI,AAAE,CAAC,AACd,oBAAM,CAAC,SAAS,CAAC,aAAa,CAAC,YAAY,cAAC,CAAC,AAC3C,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,YAAY,CAAE,GAAG,CACjB,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,CACnB,WAAW,CAAE,GAAG,CAChB,MAAM,CAAE,OAAO,CACf,KAAK,CAAE,IAAI,AAAE,CAAC,AAClB,oBAAM,CAAC,SAAS,CAAC,iBAAiB,cAAC,CAAC,AAClC,OAAO,CAAE,IAAI,CACb,YAAY,CAAE,IAAI,CAClB,aAAa,CAAE,IAAI,AAAE,CAAC,AACtB,oBAAM,CAAC,SAAS,CAAC,iBAAiB,CAAC,QAAQ,cAAC,CAAC,AAC3C,WAAW,CAAE,IAAI,AAAE,CAAC,AACpB,oBAAM,CAAC,SAAS,CAAC,iBAAiB,CAAC,QAAQ,CAAC,eAAe,cAAC,CAAC,AAC3D,aAAa,CAAE,IAAI,AAAE,CAAC,AACxB,oBAAM,CAAC,SAAS,CAAC,iBAAiB,CAAC,QAAQ,MAAM,cAAC,CAAC,AACjD,KAAK,CAAE,GAAG,AAAE,CAAC,AACf,oBAAM,CAAC,SAAS,CAAC,iBAAiB,CAAC,QAAQ,KAAK,cAAC,CAAC,AAChD,KAAK,CAAE,GAAG,AAAE,CAAC,AACf,oBAAM,CAAC,SAAS,CAAC,iBAAiB,CAAC,QAAQ,KAAK,cAAC,CAAC,AAChD,KAAK,CAAE,GAAG,AAAE,CAAC,AAEvB,YAAY,4BAAC,CAAC,AACZ,OAAO,CAAE,GAAG,CAAC,IAAI,CACjB,OAAO,CAAE,YAAY,CACrB,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAC7B,YAAY,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAC/B,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAChC,WAAW,CAAE,IAAI,CACjB,MAAM,CAAE,OAAO,AAAE,CAAC,AAClB,wCAAY,YAAY,AAAC,CAAC,AACxB,WAAW,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,AAAE,CAAC,AACnC,YAAY,OAAO,4BAAC,CAAC,AACnB,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,OAAO,AAAE,CAAC,AACnB,wCAAY,MAAM,AAAC,CAAC,AAClB,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,OAAO,AAAE,CAAC,AAErB,eAAe,4BAAC,CAAC,AACf,aAAa,CAAE,IAAI,AAAE,CAAC,AAExB,aAAa,4BAAC,CAAC,AACb,OAAO,CAAE,GAAG,CAAC,IAAI,CACjB,OAAO,CAAE,YAAY,CACrB,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAC7B,YAAY,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAC/B,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAChC,WAAW,CAAE,IAAI,CACjB,MAAM,CAAE,OAAO,AAAE,CAAC,AAClB,yCAAa,YAAY,AAAC,CAAC,AACzB,WAAW,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,AAAE,CAAC,AACnC,aAAa,OAAO,4BAAC,CAAC,AACpB,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,OAAO,AAAE,CAAC,AACnB,yCAAa,MAAM,AAAC,CAAC,AACnB,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,OAAO,AAAE,CAAC,AAErB,iBAAiB,4BAAC,CAAC,AACjB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,OAAO,CAAE,YAAY,CACrB,aAAa,CAAE,GAAG,CAClB,WAAW,CAAE,IAAI,CACjB,MAAM,CAAE,OAAO,CACf,UAAU,CAAE,WAAW,AAAE,CAAC,AAC1B,6CAAiB,MAAM,AAAC,CAAC,AACvB,UAAU,CAAE,OAAO,AAAE,CAAC,AACxB,iBAAiB,OAAO,4BAAC,CAAC,AACxB,UAAU,CAAE,OAAO,AAAE,CAAC"}`
};
var Header$1 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $trayOpen, $$unsubscribe_trayOpen;
  let $theme, $$unsubscribe_theme;
  let $inversion, $$unsubscribe_inversion;
  let $activeCity, $$unsubscribe_activeCity;
  let $loaded, $$unsubscribe_loaded;
  let $currentCategory, $$unsubscribe_currentCategory;
  let $currentPage, $$unsubscribe_currentPage;
  $$unsubscribe_trayOpen = subscribe(trayOpen, (value) => $trayOpen = value);
  $$unsubscribe_theme = subscribe(theme, (value) => $theme = value);
  $$unsubscribe_inversion = subscribe(inversion, (value) => $inversion = value);
  $$unsubscribe_activeCity = subscribe(activeCity, (value) => $activeCity = value);
  $$unsubscribe_loaded = subscribe(loaded, (value) => $loaded = value);
  $$unsubscribe_currentCategory = subscribe(currentCategory, (value) => $currentCategory = value);
  $$unsubscribe_currentPage = subscribe(currentPage, (value) => $currentPage = value);
  const cities = loadData('*[_id == "cities"][0]');
  cities.then((c) => {
    if (c.cities && c.cities[0]) {
      activeCity.set(c.cities[0]);
    }
  });
  $$result.css.add(css$D);
  $$unsubscribe_trayOpen();
  $$unsubscribe_theme();
  $$unsubscribe_inversion();
  $$unsubscribe_activeCity();
  $$unsubscribe_loaded();
  $$unsubscribe_currentCategory();
  $$unsubscribe_currentPage();
  return `<header class="${["svelte-ejss4w", $trayOpen ? "open" : ""].join(" ").trim()}"><div class="${"settings svelte-ejss4w"}">
		<div class="${"settings-bar svelte-ejss4w"}"><div class="${"tray-toggle svelte-ejss4w"}">${validate_component(Full_beam, "FullBeam").$$render($$result, { black: true }, {}, {})}</div>
			Settings
		</div>
		
		<div class="${"settings-content svelte-ejss4w"}">
			<div class="${"section theme svelte-ejss4w"}"><div class="${"inner-section column"}"><div class="${"section-header svelte-ejss4w"}">Theme</div>
					<div class="${"theme-switches svelte-ejss4w"}"><div class="${["theme-button svelte-ejss4w", $theme === "ink" ? "active" : ""].join(" ").trim()}">E-ink
						</div>
						<div class="${["theme-button svelte-ejss4w", $theme === "rgb" ? "active" : ""].join(" ").trim()}">RGB
						</div></div>
					${$theme === "ink" ? `<div class="${"section-header svelte-ejss4w"}">Inversion</div>
						<div class="${"inversion-switches"}"><div class="${["inversion-button svelte-ejss4w", $inversion ? "active" : ""].join(" ").trim()}"></div></div>` : ``}</div></div>
			
			<div class="${"section text svelte-ejss4w"}"><div class="${"section-header svelte-ejss4w"}">Text</div></div>
			
			<div class="${"section city svelte-ejss4w"}"><div class="${"section-header svelte-ejss4w"}">City</div>
				${function(__value) {
    if (is_promise(__value)) {
      __value.then(null, noop);
      return ``;
    }
    return function(cities2) {
      return `
					<div class="${"city-switches"}">${each(cities2.cities, (city) => `<div class="${[
        "city-button svelte-ejss4w",
        $activeCity._key === city._key ? "active" : ""
      ].join(" ").trim()}">${escape(city.name)}
							</div>`)}</div>
					<div class="${"city-text"}">${(0, import_has.default)(cities2, "content.content", []) ? `<div>${validate_component(Blocks, "Blocks").$$render($$result, { blocks: cities2.content.content }, {}, {})}</div>` : ``}</div>
				`;
    }(__value);
  }(cities)}</div></div></div>
	<nav class="${"menubar svelte-ejss4w"}"><div class="${["inner-text svelte-ejss4w", $loaded ? "loaded" : ""].join(" ").trim()}">
			<div class="${"breadcrumbs svelte-ejss4w"}"><span class="${"arrow-down svelte-ejss4w"}">${validate_component(Triangle_down, "TriangleDown").$$render($$result, {}, {}, {})}</span>
				<a href="${"/"}" class="${"svelte-ejss4w"}">eyebeam.org</a>
				
				${$currentCategory ? `<span class="${"divider svelte-ejss4w"}">/</span>
					<a${add_attribute("href", "/" + $currentCategory.slug, 0)} class="${"svelte-ejss4w"}">${escape($currentCategory.name)}</a>
					
					${$currentPage ? `<span class="${"divider svelte-ejss4w"}">/</span>
						<span>${escape($currentPage.title)}</span>` : ``}` : ``}</div>
			
			<div class="${"tray-toggle svelte-ejss4w"}">${validate_component(Full_beam, "FullBeam").$$render($$result, {}, {}, {})}</div>
			
			<div class="${"clock svelte-ejss4w"}">${validate_component(Clock, "Clock").$$render($$result, {}, {}, {})}</div></div></nav>
</header>`;
});
var css$C = {
  code: "svg.svelte-bl0yym path.svelte-bl0yym{fill:#221f20}",
  map: '{"version":3,"file":"newsletter.svelte","sources":["newsletter.svelte"],"sourcesContent":["<svg width=\\"17\\" height=\\"12\\" viewBox=\\"0 0 17 12\\" fill=\\"none\\" xmlns=\\"http://www.w3.org/2000/svg\\">\\n\\t<path\\n\\t\\td=\\"M9.2275 8.38428L8.87816 8.73363L7.96986 9.64192L6.85196 8.38428L0.144531 1.67686V11.6681H16.1445V1.53712L9.2275 8.38428ZM0.284269 0L7.76025 7.47598L8.1096 7.82533L8.45894 7.47598L15.8651 0H0.284269Z\\"\\n\\t/>\\n</svg>\\n\\n<style lang=\\"scss\\">svg path {\\n  fill: #221f20; }\\n</style>\\n"],"names":[],"mappings":"AAMmB,iBAAG,CAAC,IAAI,cAAC,CAAC,AAC3B,IAAI,CAAE,OAAO,AAAE,CAAC"}'
};
var Newsletter$1 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  $$result.css.add(css$C);
  return `<svg width="${"17"}" height="${"12"}" viewBox="${"0 0 17 12"}" fill="${"none"}" xmlns="${"http://www.w3.org/2000/svg"}" class="${"svelte-bl0yym"}"><path d="${"M9.2275 8.38428L8.87816 8.73363L7.96986 9.64192L6.85196 8.38428L0.144531 1.67686V11.6681H16.1445V1.53712L9.2275 8.38428ZM0.284269 0L7.76025 7.47598L8.1096 7.82533L8.45894 7.47598L15.8651 0H0.284269Z"}" class="${"svelte-bl0yym"}"></path></svg>`;
});
var css$B = {
  code: "svg.svelte-bl0yym path.svelte-bl0yym{fill:#221f20}",
  map: '{"version":3,"file":"twitter.svelte","sources":["twitter.svelte"],"sourcesContent":["<svg width=\\"16\\" height=\\"14\\" viewBox=\\"0 0 16 14\\" fill=\\"none\\" xmlns=\\"http://www.w3.org/2000/svg\\">\\n\\t<path\\n\\t\\td=\\"M16 1.60291C15.4311 1.89435 14.7911 2.04007 14.1511 2.11293C14.8622 1.67577 15.36 1.02004 15.5733 0.218579C14.9333 0.655738 14.2222 0.874317 13.44 1.0929C12.8711 0.437158 12.0178 0 11.0222 0C9.24444 0 7.75111 1.53005 7.75111 3.35155C7.75111 3.64299 7.75111 3.86157 7.82222 4.15301C5.12 4.00729 2.70222 2.69581 1.06667 0.655738C0.853333 1.0929 0.64 1.67577 0.64 2.33151C0.64 3.49727 1.20889 4.5173 2.06222 5.10018C1.56444 5.10018 1.06667 4.95446 0.64 4.66302C0.64 4.66302 0.64 4.66302 0.64 4.73588C0.64 6.3388 1.77778 7.72313 3.27111 8.01457C2.98667 8.08743 2.70222 8.16029 2.41778 8.16029C2.20444 8.16029 1.99111 8.16029 1.77778 8.08743C2.20444 9.39891 3.41333 10.4189 4.83556 10.4189C3.69778 11.2933 2.27556 11.8761 0.782222 11.8761C0.497778 11.8761 0.284444 11.8761 0 11.8033C1.42222 12.7505 3.2 13.3333 5.04889 13.3333C11.0933 13.3333 14.3644 8.23315 14.3644 3.78871C14.3644 3.64299 14.3644 3.49727 14.3644 3.35155C15.0044 2.84153 15.5022 2.25865 16 1.60291Z\\"\\n\\t/>\\n</svg>\\n\\n<style lang=\\"scss\\">svg path {\\n  fill: #221f20; }\\n</style>\\n"],"names":[],"mappings":"AAMmB,iBAAG,CAAC,IAAI,cAAC,CAAC,AAC3B,IAAI,CAAE,OAAO,AAAE,CAAC"}'
};
var Twitter = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  $$result.css.add(css$B);
  return `<svg width="${"16"}" height="${"14"}" viewBox="${"0 0 16 14"}" fill="${"none"}" xmlns="${"http://www.w3.org/2000/svg"}" class="${"svelte-bl0yym"}"><path d="${"M16 1.60291C15.4311 1.89435 14.7911 2.04007 14.1511 2.11293C14.8622 1.67577 15.36 1.02004 15.5733 0.218579C14.9333 0.655738 14.2222 0.874317 13.44 1.0929C12.8711 0.437158 12.0178 0 11.0222 0C9.24444 0 7.75111 1.53005 7.75111 3.35155C7.75111 3.64299 7.75111 3.86157 7.82222 4.15301C5.12 4.00729 2.70222 2.69581 1.06667 0.655738C0.853333 1.0929 0.64 1.67577 0.64 2.33151C0.64 3.49727 1.20889 4.5173 2.06222 5.10018C1.56444 5.10018 1.06667 4.95446 0.64 4.66302C0.64 4.66302 0.64 4.66302 0.64 4.73588C0.64 6.3388 1.77778 7.72313 3.27111 8.01457C2.98667 8.08743 2.70222 8.16029 2.41778 8.16029C2.20444 8.16029 1.99111 8.16029 1.77778 8.08743C2.20444 9.39891 3.41333 10.4189 4.83556 10.4189C3.69778 11.2933 2.27556 11.8761 0.782222 11.8761C0.497778 11.8761 0.284444 11.8761 0 11.8033C1.42222 12.7505 3.2 13.3333 5.04889 13.3333C11.0933 13.3333 14.3644 8.23315 14.3644 3.78871C14.3644 3.64299 14.3644 3.49727 14.3644 3.35155C15.0044 2.84153 15.5022 2.25865 16 1.60291Z"}" class="${"svelte-bl0yym"}"></path></svg>`;
});
var css$A = {
  code: "svg.svelte-bl0yym path.svelte-bl0yym{fill:#221f20}",
  map: '{"version":3,"file":"instagram.svelte","sources":["instagram.svelte"],"sourcesContent":["<svg width=\\"16\\" height=\\"17\\" viewBox=\\"0 0 16 17\\" fill=\\"none\\" xmlns=\\"http://www.w3.org/2000/svg\\">\\n\\t<path\\n\\t\\td=\\"M14.1972 4.13146C14.1972 4.88263 13.446 4.88263 13.446 4.88263H11.8685C11.1174 4.88263 11.1174 4.13146 11.1174 4.13146V2.55399C11.1174 1.80282 11.8685 1.80282 11.8685 1.80282H13.446C14.1972 1.80282 14.1972 2.55399 14.1972 2.55399V4.13146ZM11.0423 8.03756C11.0423 9.69014 9.69014 11.0423 8.03756 11.0423C6.38498 11.0423 5.03286 9.69014 5.03286 8.03756C5.03286 6.38498 6.38498 5.03286 8.03756 5.03286C9.69014 5.03286 11.0423 6.38498 11.0423 8.03756ZM3.23005 8.03756C3.23005 10.6667 5.40845 12.8451 8.03756 12.8451C10.6667 12.8451 12.8451 10.6667 12.8451 8.03756C12.8451 7.58685 12.77 7.06103 12.6197 6.68545H14.1972V13.7465C14.1972 14.1972 13.8216 14.2723 13.6714 14.2723H2.32864C1.87793 14.2723 1.80282 13.8967 1.80282 13.7465V6.61033H3.38028C3.30516 7.06103 3.23005 7.51174 3.23005 8.03756ZM16 13.7465V2.32864C16 1.42723 15.3991 0 13.6714 0H2.32864C1.35211 0 0 0.600939 0 2.32864V13.7465C0 14.6479 0.600939 16.0751 2.32864 16.0751H13.7465C14.6479 16 16 15.3991 16 13.7465Z\\"\\n\\t/>\\n</svg>\\n\\n<style lang=\\"scss\\">svg path {\\n  fill: #221f20; }\\n</style>\\n"],"names":[],"mappings":"AAMmB,iBAAG,CAAC,IAAI,cAAC,CAAC,AAC3B,IAAI,CAAE,OAAO,AAAE,CAAC"}'
};
var Instagram = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  $$result.css.add(css$A);
  return `<svg width="${"16"}" height="${"17"}" viewBox="${"0 0 16 17"}" fill="${"none"}" xmlns="${"http://www.w3.org/2000/svg"}" class="${"svelte-bl0yym"}"><path d="${"M14.1972 4.13146C14.1972 4.88263 13.446 4.88263 13.446 4.88263H11.8685C11.1174 4.88263 11.1174 4.13146 11.1174 4.13146V2.55399C11.1174 1.80282 11.8685 1.80282 11.8685 1.80282H13.446C14.1972 1.80282 14.1972 2.55399 14.1972 2.55399V4.13146ZM11.0423 8.03756C11.0423 9.69014 9.69014 11.0423 8.03756 11.0423C6.38498 11.0423 5.03286 9.69014 5.03286 8.03756C5.03286 6.38498 6.38498 5.03286 8.03756 5.03286C9.69014 5.03286 11.0423 6.38498 11.0423 8.03756ZM3.23005 8.03756C3.23005 10.6667 5.40845 12.8451 8.03756 12.8451C10.6667 12.8451 12.8451 10.6667 12.8451 8.03756C12.8451 7.58685 12.77 7.06103 12.6197 6.68545H14.1972V13.7465C14.1972 14.1972 13.8216 14.2723 13.6714 14.2723H2.32864C1.87793 14.2723 1.80282 13.8967 1.80282 13.7465V6.61033H3.38028C3.30516 7.06103 3.23005 7.51174 3.23005 8.03756ZM16 13.7465V2.32864C16 1.42723 15.3991 0 13.6714 0H2.32864C1.35211 0 0 0.600939 0 2.32864V13.7465C0 14.6479 0.600939 16.0751 2.32864 16.0751H13.7465C14.6479 16 16 15.3991 16 13.7465Z"}" class="${"svelte-bl0yym"}"></path></svg>`;
});
var css$z = {
  code: "svg.svelte-bl0yym path.svelte-bl0yym{fill:#221f20}",
  map: '{"version":3,"file":"youtube.svelte","sources":["youtube.svelte"],"sourcesContent":["<svg width=\\"16\\" height=\\"12\\" viewBox=\\"0 0 16 12\\" fill=\\"none\\" xmlns=\\"http://www.w3.org/2000/svg\\">\\n\\t<path\\n\\t\\td=\\"M15.8609 3.33913C15.7913 2.92174 15.7913 2.43478 15.6522 2.01739C15.4435 0.973913 14.8174 0.347826 13.7043 0.278261C12.3826 0.13913 11.0609 0.13913 9.73913 0.0695652C9.6 0.0695652 9.46087 0.0695652 9.32174 0C8.41739 0 7.44348 0 6.53913 0C6.1913 0 5.84348 0 5.49565 0.0695652C4.31304 0.208696 3.13043 0.278261 1.94783 0.417391C1.11304 0.556522 0.556522 1.11304 0.347826 1.94783C0.0695652 3.06087 0 4.17391 0 5.28696C0 6.6087 0 7.93043 0.278261 9.18261C0.486957 10.2957 1.11304 10.9217 2.22609 10.9913C3.89565 11.1304 5.49565 11.2 7.16522 11.2C9.04348 11.2 10.9217 11.1304 12.8696 11.0609C13.287 11.0609 13.6348 10.9913 14.0522 10.9217C14.887 10.7826 15.513 10.2261 15.6522 9.3913C15.7913 8.62609 15.8609 7.86087 15.9304 7.09565C15.9304 6.95652 16 6.74783 16 6.6087C16 5.91304 16 5.28696 16 4.5913C15.9304 4.24348 15.8609 3.82609 15.8609 3.33913ZM6.33044 8.06956C6.33044 6.46956 6.33044 4.93913 6.33044 3.26956C7.72174 4.03478 9.11304 4.86957 10.5043 5.63478C9.11304 6.46956 7.72174 7.30435 6.33044 8.06956Z\\"\\n\\t/>\\n</svg>\\n\\n<style lang=\\"scss\\">svg path {\\n  fill: #221f20; }\\n</style>\\n"],"names":[],"mappings":"AAMmB,iBAAG,CAAC,IAAI,cAAC,CAAC,AAC3B,IAAI,CAAE,OAAO,AAAE,CAAC"}'
};
var Youtube = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  $$result.css.add(css$z);
  return `<svg width="${"16"}" height="${"12"}" viewBox="${"0 0 16 12"}" fill="${"none"}" xmlns="${"http://www.w3.org/2000/svg"}" class="${"svelte-bl0yym"}"><path d="${"M15.8609 3.33913C15.7913 2.92174 15.7913 2.43478 15.6522 2.01739C15.4435 0.973913 14.8174 0.347826 13.7043 0.278261C12.3826 0.13913 11.0609 0.13913 9.73913 0.0695652C9.6 0.0695652 9.46087 0.0695652 9.32174 0C8.41739 0 7.44348 0 6.53913 0C6.1913 0 5.84348 0 5.49565 0.0695652C4.31304 0.208696 3.13043 0.278261 1.94783 0.417391C1.11304 0.556522 0.556522 1.11304 0.347826 1.94783C0.0695652 3.06087 0 4.17391 0 5.28696C0 6.6087 0 7.93043 0.278261 9.18261C0.486957 10.2957 1.11304 10.9217 2.22609 10.9913C3.89565 11.1304 5.49565 11.2 7.16522 11.2C9.04348 11.2 10.9217 11.1304 12.8696 11.0609C13.287 11.0609 13.6348 10.9913 14.0522 10.9217C14.887 10.7826 15.513 10.2261 15.6522 9.3913C15.7913 8.62609 15.8609 7.86087 15.9304 7.09565C15.9304 6.95652 16 6.74783 16 6.6087C16 5.91304 16 5.28696 16 4.5913C15.9304 4.24348 15.8609 3.82609 15.8609 3.33913ZM6.33044 8.06956C6.33044 6.46956 6.33044 4.93913 6.33044 3.26956C7.72174 4.03478 9.11304 4.86957 10.5043 5.63478C9.11304 6.46956 7.72174 7.30435 6.33044 8.06956Z"}" class="${"svelte-bl0yym"}"></path></svg>`;
});
var css$y = {
  code: "svg.svelte-k2wd6d.svelte-k2wd6d{height:90%}svg.svelte-k2wd6d path.svelte-k2wd6d{fill:none;stroke:#221f20;stroke-width:1px;stroke-miterlimit:10}",
  map: '{"version":3,"file":"big-beam.svelte","sources":["big-beam.svelte"],"sourcesContent":["<svg\\n\\tversion=\\"1.1\\"\\n\\tid=\\"Layer_1\\"\\n\\txmlns=\\"http://www.w3.org/2000/svg\\"\\n\\txmlns:xlink=\\"http://www.w3.org/1999/xlink\\"\\n\\tx=\\"0px\\"\\n\\ty=\\"0px\\"\\n\\tviewBox=\\"0 0 326.4 167.6\\"\\n\\tstyle=\\"enable-background:new 0 0 326.4 167.6;\\"\\n\\txml:space=\\"preserve\\"\\n>\\n\\t<path\\n\\t\\tclass=\\"st0\\"\\n\\t\\td=\\"M323.1,136.7l-121.6,21.4 M316.2,109.3l-116,42.2 M304.3,83.3l-106.9,61.6 M287.8,60.7L193.2,140 M269.1,41\\n\\t\\tl-79.3,94.4 M245.5,24.3L183.8,131 M219.2,12L177,127.9 M192.5,4.4l-21.4,121.4 M325,165.7H201.5 M2.4,136.7l121.6,21.4 M9.3,109.3\\n\\t\\tl116,42.2 M21.2,83.3l106.9,61.6 M37.7,60.7l94.6,79.2 M56.4,41l79.3,94.4 M80,24.3L141.7,131 M106.3,12l42.2,115.8 M133,4.4\\n\\t\\tl21.4,121.4 M161.9,1.8l0,123.3 M0.5,165.7H124\\"\\n\\t/>\\n</svg>\\n\\n<style type=\\"scss\\">svg {\\n  height: 90%; }\\n  svg path {\\n    fill: none;\\n    stroke: #221f20;\\n    stroke-width: 1px;\\n    stroke-miterlimit: 10; }\\n</style>\\n"],"names":[],"mappings":"AAoBmB,GAAG,4BAAC,CAAC,AACtB,MAAM,CAAE,GAAG,AAAE,CAAC,AACd,iBAAG,CAAC,IAAI,cAAC,CAAC,AACR,IAAI,CAAE,IAAI,CACV,MAAM,CAAE,OAAO,CACf,YAAY,CAAE,GAAG,CACjB,iBAAiB,CAAE,EAAE,AAAE,CAAC"}'
};
var Big_beam = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  $$result.css.add(css$y);
  return `<svg version="${"1.1"}" id="${"Layer_1"}" xmlns="${"http://www.w3.org/2000/svg"}" xmlns:xlink="${"http://www.w3.org/1999/xlink"}" x="${"0px"}" y="${"0px"}" viewBox="${"0 0 326.4 167.6"}" style="${"enable-background:new 0 0 326.4 167.6;"}" xml:space="${"preserve"}" class="${"svelte-k2wd6d"}"><path class="${"st0 svelte-k2wd6d"}" d="${"M323.1,136.7l-121.6,21.4 M316.2,109.3l-116,42.2 M304.3,83.3l-106.9,61.6 M287.8,60.7L193.2,140 M269.1,41\n		l-79.3,94.4 M245.5,24.3L183.8,131 M219.2,12L177,127.9 M192.5,4.4l-21.4,121.4 M325,165.7H201.5 M2.4,136.7l121.6,21.4 M9.3,109.3\n		l116,42.2 M21.2,83.3l106.9,61.6 M37.7,60.7l94.6,79.2 M56.4,41l79.3,94.4 M80,24.3L141.7,131 M106.3,12l42.2,115.8 M133,4.4\n		l21.4,121.4 M161.9,1.8l0,123.3 M0.5,165.7H124"}"></path></svg>`;
});
var css$x = {
  code: "svg.svelte-1f3wxyp.svelte-1f3wxyp{width:100%}svg.svelte-1f3wxyp path.svelte-1f3wxyp{fill:#221f20}",
  map: '{"version":3,"file":"logo.svelte","sources":["logo.svelte"],"sourcesContent":["<svg viewBox=\\"0 0 220 29\\" fill=\\"none\\" xmlns=\\"http://www.w3.org/2000/svg\\">\\n\\t<path\\n\\t\\td=\\"M0 29V0H29.2792V5.8H5.85584V11.6H29.2792V17.4H5.85584V23.2H29.2792V29H0Z\\"\\n\\t\\tfill=\\"#221F20\\"\\n\\t/>\\n\\t<path\\n\\t\\td=\\"M61.2587 0H54.035L46.6191 11.0189L39.2021 0H31.9795L43.3881 16.9503V29H49.849V16.9503L61.2587 0Z\\"\\n\\t\\tfill=\\"#221F20\\"\\n\\t/>\\n\\t<path\\n\\t\\td=\\"M182.484 29H188.796L177.084 0H171.228L159.517 29H165.828L168.17 23.2H180.142L182.484 29ZM170.512 17.4L174.156 8.38281L177.799 17.4045L170.512 17.4Z\\"\\n\\t\\tfill=\\"#221F20\\"\\n\\t/>\\n\\t<path\\n\\t\\td=\\"M190.721 0V29H196.577V5.8H202.432V29H208.288V5.8H214.144V29H220V0H190.721Z\\"\\n\\t\\tfill=\\"#221F20\\"\\n\\t/>\\n\\t<path\\n\\t\\td=\\"M157.129 29V23.2H133.705V17.4H157.129V11.6H133.705V5.8H157.129V0H127.85V29H157.129Z\\"\\n\\t\\tfill=\\"#221F20\\"\\n\\t/>\\n\\t<path\\n\\t\\td=\\"M96.0176 29H116.513C118.298 29.0004 120.04 28.4622 121.509 27.4569C122.977 26.4516 124.101 25.0271 124.731 23.3732C125.361 21.7192 125.468 19.9143 125.036 18.1989C124.604 16.4836 123.655 14.9392 122.315 13.7716C123.245 12.4892 123.805 10.9802 123.935 9.40658C124.064 7.83291 123.759 6.25395 123.052 4.83912C122.344 3.42428 121.261 2.22697 119.918 1.37565C118.576 0.524319 117.025 0.051112 115.431 0.00679688V0H96.0176V29ZM115.181 5.8C115.957 5.8 116.702 6.10554 117.251 6.64939C117.8 7.19325 118.109 7.93087 118.109 8.7C118.109 9.46913 117.8 10.2068 117.251 10.7506C116.702 11.2945 115.957 11.6 115.181 11.6H101.873V5.8H115.181ZM116.513 17.4C117.29 17.4 118.034 17.7055 118.583 18.2494C119.132 18.7932 119.441 19.5309 119.441 20.3C119.441 21.0691 119.132 21.8068 118.583 22.3506C118.034 22.8945 117.29 23.2 116.513 23.2H101.873V17.4H116.513Z\\"\\n\\t\\tfill=\\"#221F20\\"\\n\\t/>\\n\\t<path\\n\\t\\td=\\"M92.7821 0V5.8H69.3588V11.6H92.7821V17.4H69.3588V23.2H92.7821V29H63.5029V0H92.7821Z\\"\\n\\t\\tfill=\\"#221F20\\"\\n\\t/>\\n</svg>\\n\\n<style lang=\\"scss\\">svg {\\n  width: 100%; }\\n  svg path {\\n    fill: #221f20; }\\n</style>\\n"],"names":[],"mappings":"AA+BmB,GAAG,8BAAC,CAAC,AACtB,KAAK,CAAE,IAAI,AAAE,CAAC,AACd,kBAAG,CAAC,IAAI,eAAC,CAAC,AACR,IAAI,CAAE,OAAO,AAAE,CAAC"}'
};
var Logo = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  $$result.css.add(css$x);
  return `<svg viewBox="${"0 0 220 29"}" fill="${"none"}" xmlns="${"http://www.w3.org/2000/svg"}" class="${"svelte-1f3wxyp"}"><path d="${"M0 29V0H29.2792V5.8H5.85584V11.6H29.2792V17.4H5.85584V23.2H29.2792V29H0Z"}" fill="${"#221F20"}" class="${"svelte-1f3wxyp"}"></path><path d="${"M61.2587 0H54.035L46.6191 11.0189L39.2021 0H31.9795L43.3881 16.9503V29H49.849V16.9503L61.2587 0Z"}" fill="${"#221F20"}" class="${"svelte-1f3wxyp"}"></path><path d="${"M182.484 29H188.796L177.084 0H171.228L159.517 29H165.828L168.17 23.2H180.142L182.484 29ZM170.512 17.4L174.156 8.38281L177.799 17.4045L170.512 17.4Z"}" fill="${"#221F20"}" class="${"svelte-1f3wxyp"}"></path><path d="${"M190.721 0V29H196.577V5.8H202.432V29H208.288V5.8H214.144V29H220V0H190.721Z"}" fill="${"#221F20"}" class="${"svelte-1f3wxyp"}"></path><path d="${"M157.129 29V23.2H133.705V17.4H157.129V11.6H133.705V5.8H157.129V0H127.85V29H157.129Z"}" fill="${"#221F20"}" class="${"svelte-1f3wxyp"}"></path><path d="${"M96.0176 29H116.513C118.298 29.0004 120.04 28.4622 121.509 27.4569C122.977 26.4516 124.101 25.0271 124.731 23.3732C125.361 21.7192 125.468 19.9143 125.036 18.1989C124.604 16.4836 123.655 14.9392 122.315 13.7716C123.245 12.4892 123.805 10.9802 123.935 9.40658C124.064 7.83291 123.759 6.25395 123.052 4.83912C122.344 3.42428 121.261 2.22697 119.918 1.37565C118.576 0.524319 117.025 0.051112 115.431 0.00679688V0H96.0176V29ZM115.181 5.8C115.957 5.8 116.702 6.10554 117.251 6.64939C117.8 7.19325 118.109 7.93087 118.109 8.7C118.109 9.46913 117.8 10.2068 117.251 10.7506C116.702 11.2945 115.957 11.6 115.181 11.6H101.873V5.8H115.181ZM116.513 17.4C117.29 17.4 118.034 17.7055 118.583 18.2494C119.132 18.7932 119.441 19.5309 119.441 20.3C119.441 21.0691 119.132 21.8068 118.583 22.3506C118.034 22.8945 117.29 23.2 116.513 23.2H101.873V17.4H116.513Z"}" fill="${"#221F20"}" class="${"svelte-1f3wxyp"}"></path><path d="${"M92.7821 0V5.8H69.3588V11.6H92.7821V17.4H69.3588V23.2H92.7821V29H63.5029V0H92.7821Z"}" fill="${"#221F20"}" class="${"svelte-1f3wxyp"}"></path></svg>`;
});
var css$w = {
  code: "footer.svelte-1aiiisg.svelte-1aiiisg{margin-top:152px;margin-bottom:40px;float:left;width:100%;display:flex;align-items:center;flex-direction:column}@media(max-width: 900px){footer.svelte-1aiiisg.svelte-1aiiisg{display:none}}footer.svelte-1aiiisg .line.svelte-1aiiisg{margin-bottom:10px}footer.svelte-1aiiisg .line a.svelte-1aiiisg{text-decoration:none}footer.svelte-1aiiisg .line .beams.svelte-1aiiisg{margin-bottom:10px;width:340px}footer.svelte-1aiiisg .line .wordmark.svelte-1aiiisg{margin-bottom:10px;width:340px}footer.svelte-1aiiisg .line.tagline.svelte-1aiiisg{margin-bottom:20px}footer.svelte-1aiiisg .line.address.svelte-1aiiisg{margin-bottom:10px}footer.svelte-1aiiisg .social-link.svelte-1aiiisg{float:left;margin-right:10px !important}",
  map: `{"version":3,"file":"footer.svelte","sources":["footer.svelte"],"sourcesContent":["<script>\\n\\t// # # # # # # # # # # # # #\\n\\t//\\n\\t// Footer\\n\\t//\\n\\t// # # # # # # # # # # # # #\\n\\n\\t// __ IMPORTS\\n\\timport { loadData } from '$lib/sanity.js';\\n\\n\\t// __ GRAPHICS\\n\\timport Newsletter from '$lib/graphics/newsletter.svelte';\\n\\timport Twitter from '$lib/graphics/twitter.svelte';\\n\\timport Instagram from '$lib/graphics/instagram.svelte';\\n\\timport Youtube from '$lib/graphics/youtube.svelte';\\n\\timport BigBeam from '$lib/graphics/big-beam.svelte';\\n\\timport Logo from '$lib/graphics/logo.svelte';\\n\\n\\t// __ CONSTANTS\\n\\tconst INSTAGRAM_URL = 'https://www.instagram.com/eyebeamnyc/';\\n\\tconst TWITTER_URL = 'https://twitter.com/eyebeamnyc';\\n\\tconst YOUTUBE_URL = 'https://www.youtube.com/channel/UCoTYylvEkyd5sv1ZIQJIVeg';\\n\\n\\t// __ VARIABLES\\n\\tconst contact = loadData(\\"*[_id == 'contact'][0]\\");\\n<\/script>\\n\\n{#await contact then contact}\\n\\t<footer>\\n\\t\\t<!-- LOGO -->\\n\\t\\t<div class=\\"line logo\\">\\n\\t\\t\\t<div class=\\"beams\\">\\n\\t\\t\\t\\t<BigBeam />\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\"wordmark\\">\\n\\t\\t\\t\\t<Logo />\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<!-- TAGLINE -->\\n\\t\\t<div class=\\"line tagline\\">{contact.tagline}</div>\\n\\t\\t<!-- PHONE -->\\n\\t\\t<div class=\\"line phone-number\\">\\n\\t\\t\\t<a href={'tel:' + contact.phoneNumber} target=\\"_blank\\">{contact.phoneNumber}</a>\\n\\t\\t</div>\\n\\t\\t<!-- EMAIL -->\\n\\t\\t<div class=\\"line email\\">\\n\\t\\t\\t<a href={'mailto:' + contact.email} target=\\"_blank\\">{contact.email}</a>\\n\\t\\t</div>\\n\\t\\t<!-- ADDRESS -->\\n\\t\\t<div class=\\"line address\\">{contact.address}</div>\\n\\t\\t<!-- SOCIAL -->\\n\\t\\t<div class=\\"line social\\">\\n\\t\\t\\t<span class=\\"social-link\\"><Newsletter /></span>\\n\\t\\t\\t<a href={INSTAGRAM_URL} target=\\"_blank\\" class=\\"social-link\\"><Instagram /></a>\\n\\t\\t\\t<a href={TWITTER_URL} target=\\"_blank\\" class=\\"social-link\\"><Twitter /></a>\\n\\t\\t\\t<a href={YOUTUBE_URL} target=\\"_blank\\" class=\\"social-link\\"><Youtube /></a>\\n\\t\\t</div>\\n\\t</footer>\\n{/await}\\n\\n<style lang=\\"scss\\">footer {\\n  margin-top: 152px;\\n  margin-bottom: 40px;\\n  float: left;\\n  width: 100%;\\n  display: flex;\\n  align-items: center;\\n  flex-direction: column; }\\n  @media (max-width: 900px) {\\n    footer {\\n      display: none; } }\\n  footer .line {\\n    margin-bottom: 10px; }\\n    footer .line a {\\n      text-decoration: none; }\\n    footer .line .beams {\\n      margin-bottom: 10px;\\n      width: 340px; }\\n    footer .line .wordmark {\\n      margin-bottom: 10px;\\n      width: 340px; }\\n      footer .line .wordmark svg {\\n        width: 100%; }\\n    footer .line.tagline {\\n      margin-bottom: 20px; }\\n    footer .line.address {\\n      margin-bottom: 10px; }\\n  footer .social-link {\\n    float: left;\\n    margin-right: 10px !important; }\\n</style>\\n"],"names":[],"mappings":"AA4DmB,MAAM,8BAAC,CAAC,AACzB,UAAU,CAAE,KAAK,CACjB,aAAa,CAAE,IAAI,CACnB,KAAK,CAAE,IAAI,CACX,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,cAAc,CAAE,MAAM,AAAE,CAAC,AACzB,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,MAAM,8BAAC,CAAC,AACN,OAAO,CAAE,IAAI,AAAE,CAAC,AAAC,CAAC,AACtB,qBAAM,CAAC,KAAK,eAAC,CAAC,AACZ,aAAa,CAAE,IAAI,AAAE,CAAC,AACtB,qBAAM,CAAC,KAAK,CAAC,CAAC,eAAC,CAAC,AACd,eAAe,CAAE,IAAI,AAAE,CAAC,AAC1B,qBAAM,CAAC,KAAK,CAAC,MAAM,eAAC,CAAC,AACnB,aAAa,CAAE,IAAI,CACnB,KAAK,CAAE,KAAK,AAAE,CAAC,AACjB,qBAAM,CAAC,KAAK,CAAC,SAAS,eAAC,CAAC,AACtB,aAAa,CAAE,IAAI,CACnB,KAAK,CAAE,KAAK,AAAE,CAAC,AAGjB,qBAAM,CAAC,KAAK,QAAQ,eAAC,CAAC,AACpB,aAAa,CAAE,IAAI,AAAE,CAAC,AACxB,qBAAM,CAAC,KAAK,QAAQ,eAAC,CAAC,AACpB,aAAa,CAAE,IAAI,AAAE,CAAC,AAC1B,qBAAM,CAAC,YAAY,eAAC,CAAC,AACnB,KAAK,CAAE,IAAI,CACX,YAAY,CAAE,IAAI,CAAC,UAAU,AAAE,CAAC"}`
};
var INSTAGRAM_URL$1 = "https://www.instagram.com/eyebeamnyc/";
var TWITTER_URL$1 = "https://twitter.com/eyebeamnyc";
var YOUTUBE_URL$1 = "https://www.youtube.com/channel/UCoTYylvEkyd5sv1ZIQJIVeg";
var Footer$1 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  const contact = loadData("*[_id == 'contact'][0]");
  $$result.css.add(css$w);
  return `${function(__value) {
    if (is_promise(__value)) {
      __value.then(null, noop);
      return ``;
    }
    return function(contact2) {
      return `
	<footer class="${"svelte-1aiiisg"}">
		<div class="${"line logo svelte-1aiiisg"}"><div class="${"beams svelte-1aiiisg"}">${validate_component(Big_beam, "BigBeam").$$render($$result, {}, {}, {})}</div>
			<div class="${"wordmark svelte-1aiiisg"}">${validate_component(Logo, "Logo").$$render($$result, {}, {}, {})}</div></div>
		
		<div class="${"line tagline svelte-1aiiisg"}">${escape(contact2.tagline)}</div>
		
		<div class="${"line phone-number svelte-1aiiisg"}"><a${add_attribute("href", "tel:" + contact2.phoneNumber, 0)} target="${"_blank"}" class="${"svelte-1aiiisg"}">${escape(contact2.phoneNumber)}</a></div>
		
		<div class="${"line email svelte-1aiiisg"}"><a${add_attribute("href", "mailto:" + contact2.email, 0)} target="${"_blank"}" class="${"svelte-1aiiisg"}">${escape(contact2.email)}</a></div>
		
		<div class="${"line address svelte-1aiiisg"}">${escape(contact2.address)}</div>
		
		<div class="${"line social svelte-1aiiisg"}"><span class="${"social-link svelte-1aiiisg"}">${validate_component(Newsletter$1, "Newsletter").$$render($$result, {}, {}, {})}</span>
			<a${add_attribute("href", INSTAGRAM_URL$1, 0)} target="${"_blank"}" class="${"social-link svelte-1aiiisg"}">${validate_component(Instagram, "Instagram").$$render($$result, {}, {}, {})}</a>
			<a${add_attribute("href", TWITTER_URL$1, 0)} target="${"_blank"}" class="${"social-link svelte-1aiiisg"}">${validate_component(Twitter, "Twitter").$$render($$result, {}, {}, {})}</a>
			<a${add_attribute("href", YOUTUBE_URL$1, 0)} target="${"_blank"}" class="${"social-link svelte-1aiiisg"}">${validate_component(Youtube, "Youtube").$$render($$result, {}, {}, {})}</a></div></footer>
`;
    }(__value);
  }(contact)}`;
});
var css$v = {
  code: "svg.svelte-33zck6 path.svelte-33zck6{stroke:#221f20}svg.white.svelte-33zck6 path.svelte-33zck6{stroke:#f5f4ee}",
  map: '{"version":3,"file":"search.svelte","sources":["search.svelte"],"sourcesContent":["<script>\\n\\t// # # # # # # # # # # # # #\\n\\t//\\n\\t//  SEARCH ICON\\n\\t//\\n\\t// # # # # # # # # # # # # #\\n\\n\\texport let white = false;\\n<\/script>\\n\\n<svg\\n\\tclass:white\\n\\twidth=\\"12\\"\\n\\theight=\\"13\\"\\n\\tviewBox=\\"0 0 12 13\\"\\n\\tfill=\\"none\\"\\n\\txmlns=\\"http://www.w3.org/2000/svg\\"\\n>\\n\\t<path d=\\"M11.2998 11.6992L7.2998 7.69922\\" stroke-width=\\"2\\" />\\n\\t<path\\n\\t\\td=\\"M5 9C7.20914 9 9 7.20914 9 5C9 2.79086 7.20914 1 5 1C2.79086 1 1 2.79086 1 5C1 7.20914 2.79086 9 5 9Z\\"\\n\\t\\tstroke-width=\\"2\\"\\n\\t/>\\n</svg>\\n\\n<style lang=\\"scss\\">svg path {\\n  stroke: #221f20; }\\n\\nsvg.white path {\\n  stroke: #f5f4ee; }\\n</style>\\n"],"names":[],"mappings":"AAyBmB,iBAAG,CAAC,IAAI,cAAC,CAAC,AAC3B,MAAM,CAAE,OAAO,AAAE,CAAC,AAEpB,GAAG,oBAAM,CAAC,IAAI,cAAC,CAAC,AACd,MAAM,CAAE,OAAO,AAAE,CAAC"}'
};
var Search = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { white = false } = $$props;
  if ($$props.white === void 0 && $$bindings.white && white !== void 0)
    $$bindings.white(white);
  $$result.css.add(css$v);
  return `<svg width="${"12"}" height="${"13"}" viewBox="${"0 0 12 13"}" fill="${"none"}" xmlns="${"http://www.w3.org/2000/svg"}" class="${["svelte-33zck6", white ? "white" : ""].join(" ").trim()}"><path d="${"M11.2998 11.6992L7.2998 7.69922"}" stroke-width="${"2"}" class="${"svelte-33zck6"}"></path><path d="${"M5 9C7.20914 9 9 7.20914 9 5C9 2.79086 7.20914 1 5 1C2.79086 1 1 2.79086 1 5C1 7.20914 2.79086 9 5 9Z"}" stroke-width="${"2"}" class="${"svelte-33zck6"}"></path></svg>`;
});
var css$u = {
  code: "header.svelte-wigr79.svelte-wigr79{cursor:pointer;display:none}header.svelte-wigr79 .search-bar.svelte-wigr79{background:#221f20;padding-top:8px;padding-bottom:8px;text-align:center;color:#f5f4ee}header.svelte-wigr79 .search-bar .icon.svelte-wigr79{margin-right:10px}header.svelte-wigr79 .logo.svelte-wigr79{margin:20px;display:block}header.svelte-wigr79 .wordmark.svelte-wigr79{margin:20px;display:block}@media(max-width: 900px){header.svelte-wigr79.svelte-wigr79{display:block}}",
  map: `{"version":3,"file":"header.svelte","sources":["header.svelte"],"sourcesContent":["<script>\\n\\t// # # # # # # # # # # # # #\\n\\t//\\n\\t// Phone Header\\n\\t//\\n\\t// # # # # # # # # # # # # #\\n\\n\\t// __ IMPORT\\n\\timport Clock from '$lib/clock/clock.svelte';\\n\\timport { loadData } from '$lib/sanity.js';\\n\\timport has from 'lodash/has.js';\\n\\n\\t// __ COMPONENTS\\n\\timport Search from '$lib/search/search.svelte';\\n\\n\\t// __ STORES\\n\\timport { page } from '$app/stores';\\n\\n\\t// __ GRAPHICS\\n\\timport BigBeam from '$lib/graphics/big-beam.svelte';\\n\\timport SearchIcon from '$lib/graphics/search.svelte';\\n\\timport Logo from '$lib/graphics/logo.svelte';\\n\\n\\tlet searchActive = false;\\n\\tconst toggleSearch = () => {\\n\\t\\tsearchActive = !searchActive;\\n\\t};\\n<\/script>\\n\\n<header>\\n\\t<div class=\\"search-bar\\" on:click={toggleSearch}>\\n\\t\\t<span class=\\"icon\\"><SearchIcon white={true} /></span>Search this site\\n\\t</div>\\n\\t{#if $page.path !== '/'}\\n\\t\\t<a href=\\"/\\" class=\\"logo\\"><BigBeam /></a>\\n\\t{/if}\\n\\t<a href=\\"/\\" class=\\"wordmark\\"><Logo /></a>\\n\\t<div class=\\"menu\\">MENU</div>\\n</header>\\n\\n{#if searchActive}\\n\\t<Search on:close={toggleSearch} />\\n{/if}\\n\\n<style lang=\\"scss\\">header {\\n  cursor: pointer;\\n  display: none; }\\n  header .search-bar {\\n    background: #221f20;\\n    padding-top: 8px;\\n    padding-bottom: 8px;\\n    text-align: center;\\n    color: #f5f4ee; }\\n    header .search-bar .icon {\\n      margin-right: 10px; }\\n  header .logo {\\n    margin: 20px;\\n    display: block; }\\n  header .wordmark {\\n    margin: 20px;\\n    display: block; }\\n  @media (max-width: 900px) {\\n    header {\\n      display: block; } }\\n</style>\\n"],"names":[],"mappings":"AA4CmB,MAAM,4BAAC,CAAC,AACzB,MAAM,CAAE,OAAO,CACf,OAAO,CAAE,IAAI,AAAE,CAAC,AAChB,oBAAM,CAAC,WAAW,cAAC,CAAC,AAClB,UAAU,CAAE,OAAO,CACnB,WAAW,CAAE,GAAG,CAChB,cAAc,CAAE,GAAG,CACnB,UAAU,CAAE,MAAM,CAClB,KAAK,CAAE,OAAO,AAAE,CAAC,AACjB,oBAAM,CAAC,WAAW,CAAC,KAAK,cAAC,CAAC,AACxB,YAAY,CAAE,IAAI,AAAE,CAAC,AACzB,oBAAM,CAAC,KAAK,cAAC,CAAC,AACZ,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,KAAK,AAAE,CAAC,AACnB,oBAAM,CAAC,SAAS,cAAC,CAAC,AAChB,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,KAAK,AAAE,CAAC,AACnB,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,MAAM,4BAAC,CAAC,AACN,OAAO,CAAE,KAAK,AAAE,CAAC,AAAC,CAAC"}`
};
var Header = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $page, $$unsubscribe_page;
  $$unsubscribe_page = subscribe(page, (value) => $page = value);
  $$result.css.add(css$u);
  $$unsubscribe_page();
  return `<header class="${"svelte-wigr79"}"><div class="${"search-bar svelte-wigr79"}"><span class="${"icon svelte-wigr79"}">${validate_component(Search, "SearchIcon").$$render($$result, { white: true }, {}, {})}</span>Search this site
	</div>
	${$page.path !== "/" ? `<a href="${"/"}" class="${"logo svelte-wigr79"}">${validate_component(Big_beam, "BigBeam").$$render($$result, {}, {}, {})}</a>` : ``}
	<a href="${"/"}" class="${"wordmark svelte-wigr79"}">${validate_component(Logo, "Logo").$$render($$result, {}, {}, {})}</a>
	<div class="${"menu"}">MENU</div></header>

${``}`;
});
var css$t = {
  code: "footer.svelte-1axnfnp.svelte-1axnfnp{margin-top:120px;margin-bottom:40px;width:100%;margin-right:20px;margin-left:20px;overflow:hidden;width:calc(100vw - 40px);display:none}footer.svelte-1axnfnp .wordmark.svelte-1axnfnp{width:180px}footer.svelte-1axnfnp .tagline.svelte-1axnfnp{font-size:32px;font-style:italic;line-height:1.1em;width:100%}@media(max-width: 900px){footer.svelte-1axnfnp.svelte-1axnfnp{display:block}}",
  map: `{"version":3,"file":"footer.svelte","sources":["footer.svelte"],"sourcesContent":["<script>\\n\\t// # # # # # # # # # # # # #\\n\\t//\\n\\t// Phone Footer\\n\\t//\\n\\t// # # # # # # # # # # # # #\\n\\n\\t// __ IMPORTS\\n\\timport { loadData } from '$lib/sanity.js';\\n\\n\\t// __ GRAPHICS\\n\\timport Newsletter from '$lib/graphics/newsletter.svelte';\\n\\timport Twitter from '$lib/graphics/twitter.svelte';\\n\\timport Instagram from '$lib/graphics/instagram.svelte';\\n\\timport Youtube from '$lib/graphics/youtube.svelte';\\n\\timport BigBeam from '$lib/graphics/big-beam.svelte';\\n\\timport Logo from '$lib/graphics/logo.svelte';\\n\\n\\t// __ CONSTANTS\\n\\tconst INSTAGRAM_URL = 'https://www.instagram.com/eyebeamnyc/';\\n\\tconst TWITTER_URL = 'https://twitter.com/eyebeamnyc';\\n\\tconst YOUTUBE_URL = 'https://www.youtube.com/channel/UCoTYylvEkyd5sv1ZIQJIVeg';\\n\\n\\t// __ VARIABLES\\n\\tconst contact = loadData(\\"*[_id == 'contact'][0]\\");\\n<\/script>\\n\\n{#await contact then contact}\\n\\t<footer>\\n\\t\\t<!-- LOGO -->\\n\\t\\t<div class=\\"wordmark\\">\\n\\t\\t\\t<Logo />\\n\\t\\t</div>\\n\\t\\t<!-- TAGLINE -->\\n\\t\\t<div class=\\"line tagline\\">{contact.tagline}</div>\\n\\t</footer>\\n{/await}\\n\\n<style lang=\\"scss\\">footer {\\n  margin-top: 120px;\\n  margin-bottom: 40px;\\n  width: 100%;\\n  margin-right: 20px;\\n  margin-left: 20px;\\n  overflow: hidden;\\n  width: calc(100vw - 40px);\\n  display: none; }\\n  footer .wordmark {\\n    width: 180px; }\\n  footer .tagline {\\n    font-size: 32px;\\n    font-style: italic;\\n    line-height: 1.1em;\\n    width: 100%; }\\n  @media (max-width: 900px) {\\n    footer {\\n      display: block; } }\\n</style>\\n"],"names":[],"mappings":"AAsCmB,MAAM,8BAAC,CAAC,AACzB,UAAU,CAAE,KAAK,CACjB,aAAa,CAAE,IAAI,CACnB,KAAK,CAAE,IAAI,CACX,YAAY,CAAE,IAAI,CAClB,WAAW,CAAE,IAAI,CACjB,QAAQ,CAAE,MAAM,CAChB,KAAK,CAAE,KAAK,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CACzB,OAAO,CAAE,IAAI,AAAE,CAAC,AAChB,qBAAM,CAAC,SAAS,eAAC,CAAC,AAChB,KAAK,CAAE,KAAK,AAAE,CAAC,AACjB,qBAAM,CAAC,QAAQ,eAAC,CAAC,AACf,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,MAAM,CAClB,WAAW,CAAE,KAAK,CAClB,KAAK,CAAE,IAAI,AAAE,CAAC,AAChB,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,MAAM,8BAAC,CAAC,AACN,OAAO,CAAE,KAAK,AAAE,CAAC,AAAC,CAAC"}`
};
var Footer = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  const contact = loadData("*[_id == 'contact'][0]");
  $$result.css.add(css$t);
  return `${function(__value) {
    if (is_promise(__value)) {
      __value.then(null, noop);
      return ``;
    }
    return function(contact2) {
      return `
	<footer class="${"svelte-1axnfnp"}">
		<div class="${"wordmark svelte-1axnfnp"}">${validate_component(Logo, "Logo").$$render($$result, {}, {}, {})}</div>
		
		<div class="${"line tagline svelte-1axnfnp"}">${escape(contact2.tagline)}</div></footer>
`;
    }(__value);
  }(contact)}`;
});
var css$s = {
  code: `@charset "UTF-8";body,html{background:#f5f4ee;color:#221f20;font-family:"Literata", serif;font-size:14px;margin:0;padding:0}a{color:#221f20}*{box-sizing:border-box}main{padding-top:80px;margin-left:60px;margin-right:60px;transition:transform 0.3s ease-out}main.open{transform:translateY(240px)}main.hidden{opacity:0}@media(max-width: 900px){main{margin-left:15px;margin-right:15px;padding-top:0}}h1{font-size:54px;font-weight:normal;margin:0;line-height:1.2em}h2{font-size:32px;font-weight:normal;margin:0;line-height:1.2em}h3{font-size:16px;font-weight:bold;margin:0;line-height:1.2em}figure{margin-right:0;margin-left:0;margin-top:1em}figure img{max-width:100%}.introduction .description p{font-size:22px}.block-text p,.block-text h2,.block-text h3{margin-bottom:20px;padding-right:20px;padding-left:20px}.block-text p{font-size:16px}figcaption{font-style:italic;font-size:14px}figcaption p{padding-left:0 !important;padding-right:0 !important;padding-top:0 !important;margin-top:0 !important}ul{list-style:none;margin-left:10px;padding-left:0}ul li{padding-left:1em;text-indent:-1em}ul li:before{content:'\u2022';padding-right:5px}`,
  map: `{"version":3,"file":"__layout.svelte","sources":["__layout.svelte"],"sourcesContent":["<script>\\n\\t// # # # # # # # # # # # # #\\n\\t//\\n\\t//  Main layout\\n\\t//\\n\\t// # # # # # # # # # # # # #\\n\\n\\t// __ IMPORT\\n\\timport Header from '$lib/header/header.svelte';\\n\\timport Footer from '$lib/footer/footer.svelte';\\n\\timport PhoneHeader from '$lib/phone/header/header.svelte';\\n\\timport PhoneFooter from '$lib/phone/footer/footer.svelte';\\n\\timport Loading from '$lib/loading/loading.svelte';\\n\\n\\t// __ STORES\\n\\timport { page } from '$app/stores';\\n\\timport { loaded, trayOpen } from '$lib/stores.js';\\n\\n\\t// setTimeout(() => {\\n\\tloaded.set(true);\\n\\t// document.getElementById('main').classList.remove('hidden');\\n\\t// }, 1000);\\n<\/script>\\n\\n<!-- LOADING\\n{#if !$loaded}\\n\\t<Loading />\\n{/if} -->\\n\\n<!-- HEADER -->\\n<Header />\\n<!-- PHONE HEADER -->\\n<PhoneHeader />\\n\\n<!-- MAIN -->\\n<main id=\\"main\\" class:open={$trayOpen}>\\n\\t<slot />\\n</main>\\n\\n<!-- FOOTER -->\\n{#if $page.path !== '/'}\\n\\t<Footer />\\n{/if}\\n<!-- PHONE FOOTER -->\\n<PhoneFooter />\\n\\n<style lang=\\"scss\\" global>@charset \\"UTF-8\\";\\n:global(body),\\n:global(html) {\\n  background: #f5f4ee;\\n  color: #221f20;\\n  font-family: \\"Literata\\", serif;\\n  font-size: 14px;\\n  margin: 0;\\n  padding: 0; }\\n\\n:global(a) {\\n  color: #221f20; }\\n\\n:global(*) {\\n  box-sizing: border-box; }\\n\\n:global(main) {\\n  padding-top: 80px;\\n  margin-left: 60px;\\n  margin-right: 60px;\\n  transition: transform 0.3s ease-out; }\\n  :global(main.open) {\\n    transform: translateY(240px); }\\n  :global(main.hidden) {\\n    opacity: 0; }\\n  @media (max-width: 900px) {\\n    :global(main) {\\n      margin-left: 15px;\\n      margin-right: 15px;\\n      padding-top: 0; } }\\n\\n:global(h1) {\\n  font-size: 54px;\\n  font-weight: normal;\\n  margin: 0;\\n  line-height: 1.2em; }\\n\\n:global(h2) {\\n  font-size: 32px;\\n  font-weight: normal;\\n  margin: 0;\\n  line-height: 1.2em; }\\n\\n:global(h3) {\\n  font-size: 16px;\\n  font-weight: bold;\\n  margin: 0;\\n  line-height: 1.2em; }\\n\\n:global(figure) {\\n  margin-right: 0;\\n  margin-left: 0;\\n  margin-top: 1em; }\\n  :global(figure) :global(img) {\\n    max-width: 100%; }\\n\\n:global(.introduction) :global(.description) :global(p) {\\n  font-size: 22px; }\\n\\n:global(.block-text) :global(p),\\n:global(.block-text) :global(h2),\\n:global(.block-text) :global(h3) {\\n  margin-bottom: 20px;\\n  padding-right: 20px;\\n  padding-left: 20px; }\\n\\n:global(.block-text) :global(p) {\\n  font-size: 16px; }\\n\\n:global(figcaption) {\\n  font-style: italic;\\n  font-size: 14px; }\\n  :global(figcaption) :global(p) {\\n    padding-left: 0 !important;\\n    padding-right: 0 !important;\\n    padding-top: 0 !important;\\n    margin-top: 0 !important; }\\n\\n:global(ul) {\\n  list-style: none;\\n  margin-left: 10px;\\n  padding-left: 0; }\\n  :global(ul) :global(li) {\\n    padding-left: 1em;\\n    text-indent: -1em; }\\n    :global(ul) :global(li:before) {\\n      content: '\u2022';\\n      padding-right: 5px; }\\n</style>\\n"],"names":[],"mappings":"AA8C0B,SAAS,OAAO,CAAC,AACnC,IAAI,AAAC,CACL,IAAI,AAAE,CAAC,AACb,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,OAAO,CACd,WAAW,CAAE,UAAU,CAAC,CAAC,KAAK,CAC9B,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,CAAC,AAAE,CAAC,AAEP,CAAC,AAAE,CAAC,AACV,KAAK,CAAE,OAAO,AAAE,CAAC,AAEX,CAAC,AAAE,CAAC,AACV,UAAU,CAAE,UAAU,AAAE,CAAC,AAEnB,IAAI,AAAE,CAAC,AACb,WAAW,CAAE,IAAI,CACjB,WAAW,CAAE,IAAI,CACjB,YAAY,CAAE,IAAI,CAClB,UAAU,CAAE,SAAS,CAAC,IAAI,CAAC,QAAQ,AAAE,CAAC,AAC9B,SAAS,AAAE,CAAC,AAClB,SAAS,CAAE,WAAW,KAAK,CAAC,AAAE,CAAC,AACzB,WAAW,AAAE,CAAC,AACpB,OAAO,CAAE,CAAC,AAAE,CAAC,AACf,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACjB,IAAI,AAAE,CAAC,AACb,WAAW,CAAE,IAAI,CACjB,YAAY,CAAE,IAAI,CAClB,WAAW,CAAE,CAAC,AAAE,CAAC,AAAC,CAAC,AAEjB,EAAE,AAAE,CAAC,AACX,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,MAAM,CACnB,MAAM,CAAE,CAAC,CACT,WAAW,CAAE,KAAK,AAAE,CAAC,AAEf,EAAE,AAAE,CAAC,AACX,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,MAAM,CACnB,MAAM,CAAE,CAAC,CACT,WAAW,CAAE,KAAK,AAAE,CAAC,AAEf,EAAE,AAAE,CAAC,AACX,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,IAAI,CACjB,MAAM,CAAE,CAAC,CACT,WAAW,CAAE,KAAK,AAAE,CAAC,AAEf,MAAM,AAAE,CAAC,AACf,YAAY,CAAE,CAAC,CACf,WAAW,CAAE,CAAC,CACd,UAAU,CAAE,GAAG,AAAE,CAAC,AACV,MAAM,AAAC,CAAC,AAAQ,GAAG,AAAE,CAAC,AAC5B,SAAS,CAAE,IAAI,AAAE,CAAC,AAEd,aAAa,AAAC,CAAC,AAAQ,YAAY,AAAC,CAAC,AAAQ,CAAC,AAAE,CAAC,AACvD,SAAS,CAAE,IAAI,AAAE,CAAC,AAEZ,WAAW,AAAC,CAAC,AAAQ,CAAC,AAAC,CACvB,WAAW,AAAC,CAAC,AAAQ,EAAE,AAAC,CACxB,WAAW,AAAC,CAAC,AAAQ,EAAE,AAAE,CAAC,AAChC,aAAa,CAAE,IAAI,CACnB,aAAa,CAAE,IAAI,CACnB,YAAY,CAAE,IAAI,AAAE,CAAC,AAEf,WAAW,AAAC,CAAC,AAAQ,CAAC,AAAE,CAAC,AAC/B,SAAS,CAAE,IAAI,AAAE,CAAC,AAEZ,UAAU,AAAE,CAAC,AACnB,UAAU,CAAE,MAAM,CAClB,SAAS,CAAE,IAAI,AAAE,CAAC,AACV,UAAU,AAAC,CAAC,AAAQ,CAAC,AAAE,CAAC,AAC9B,YAAY,CAAE,CAAC,CAAC,UAAU,CAC1B,aAAa,CAAE,CAAC,CAAC,UAAU,CAC3B,WAAW,CAAE,CAAC,CAAC,UAAU,CACzB,UAAU,CAAE,CAAC,CAAC,UAAU,AAAE,CAAC,AAEvB,EAAE,AAAE,CAAC,AACX,UAAU,CAAE,IAAI,CAChB,WAAW,CAAE,IAAI,CACjB,YAAY,CAAE,CAAC,AAAE,CAAC,AACV,EAAE,AAAC,CAAC,AAAQ,EAAE,AAAE,CAAC,AACvB,YAAY,CAAE,GAAG,CACjB,WAAW,CAAE,IAAI,AAAE,CAAC,AACZ,EAAE,AAAC,CAAC,AAAQ,SAAS,AAAE,CAAC,AAC9B,OAAO,CAAE,GAAG,CACZ,aAAa,CAAE,GAAG,AAAE,CAAC"}`
};
var _layout = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $trayOpen, $$unsubscribe_trayOpen;
  let $page, $$unsubscribe_page;
  $$unsubscribe_trayOpen = subscribe(trayOpen, (value) => $trayOpen = value);
  $$unsubscribe_page = subscribe(page, (value) => $page = value);
  loaded.set(true);
  $$result.css.add(css$s);
  $$unsubscribe_trayOpen();
  $$unsubscribe_page();
  return `


${validate_component(Header$1, "Header").$$render($$result, {}, {}, {})}

${validate_component(Header, "PhoneHeader").$$render($$result, {}, {}, {})}


<main id="${"main"}"${add_classes([$trayOpen ? "open" : ""].join(" ").trim())}>${slots.default ? slots.default({}) : ``}</main>


${$page.path !== "/" ? `${validate_component(Footer$1, "Footer").$$render($$result, {}, {}, {})}` : ``}

${validate_component(Footer, "PhoneFooter").$$render($$result, {}, {}, {})}`;
});
var __layout = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _layout
});
function load$o({ error: error2, status }) {
  return { props: { error: error2, status } };
}
var Error$1 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { status } = $$props;
  let { error: error2 } = $$props;
  if ($$props.status === void 0 && $$bindings.status && status !== void 0)
    $$bindings.status(status);
  if ($$props.error === void 0 && $$bindings.error && error2 !== void 0)
    $$bindings.error(error2);
  return `<h1>${escape(status)}</h1>

<pre>${escape(error2.message)}</pre>



${error2.frame ? `<pre>${escape(error2.frame)}</pre>` : ``}
${error2.stack ? `<pre>${escape(error2.stack)}</pre>` : ``}`;
});
var error = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Error$1,
  load: load$o
});
var css$r = {
  code: "svg.svelte-9h28m5.svelte-9h28m5{width:24px}svg.svelte-9h28m5 path.svelte-9h28m5{fill:none;stroke:#221f20;stroke-width:0.75;stroke-miterlimit:10}",
  map: `{"version":3,"file":"half-beam.svelte","sources":["half-beam.svelte"],"sourcesContent":["<svg\\n\\tversion=\\"1.1\\"\\n\\tid=\\"Layer_1\\"\\n\\txmlns=\\"http://www.w3.org/2000/svg\\"\\n\\txmlns:xlink=\\"http://www.w3.org/1999/xlink\\"\\n\\tx=\\"0px\\"\\n\\ty=\\"0px\\"\\n\\tviewBox=\\"0 0 18 9\\"\\n\\tstyle=\\"enable-background:new 0 0 18 9;\\"\\n\\txml:space=\\"preserve\\"\\n>\\n\\t<path\\n\\t\\tclass=\\"st1\\"\\n\\t\\tstroke='#000000'\\n\\t\\td=\\"M0,8.8h6.8 M16.8,4.4l-5.9,3.3L16.8,4.4z M13.6,1.2l-3.4,5.7L13.6,1.2z M18,8.8h-6.9H18z M1.2,4.4l5.9,3.3L1.2,4.4z M4.4,1.2l3.4,5.7L4.4,1.2z M9,0v6.6V0z\\"\\n\\t/>\\n</svg>\\n\\n<style type=\\"scss\\">svg {\\n  width: 24px; }\\n  svg path {\\n    fill: none;\\n    stroke: #221f20;\\n    stroke-width: 0.75;\\n    stroke-miterlimit: 10; }\\n</style>\\n"],"names":[],"mappings":"AAkBmB,GAAG,4BAAC,CAAC,AACtB,KAAK,CAAE,IAAI,AAAE,CAAC,AACd,iBAAG,CAAC,IAAI,cAAC,CAAC,AACR,IAAI,CAAE,IAAI,CACV,MAAM,CAAE,OAAO,CACf,YAAY,CAAE,IAAI,CAClB,iBAAiB,CAAE,EAAE,AAAE,CAAC"}`
};
var Half_beam = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  $$result.css.add(css$r);
  return `<svg version="${"1.1"}" id="${"Layer_1"}" xmlns="${"http://www.w3.org/2000/svg"}" xmlns:xlink="${"http://www.w3.org/1999/xlink"}" x="${"0px"}" y="${"0px"}" viewBox="${"0 0 18 9"}" style="${"enable-background:new 0 0 18 9;"}" xml:space="${"preserve"}" class="${"svelte-9h28m5"}"><path class="${"st1 svelte-9h28m5"}" stroke="${"#000000"}" d="${"M0,8.8h6.8 M16.8,4.4l-5.9,3.3L16.8,4.4z M13.6,1.2l-3.4,5.7L13.6,1.2z M18,8.8h-6.9H18z M1.2,4.4l5.9,3.3L1.2,4.4z M4.4,1.2l3.4,5.7L4.4,1.2z M9,0v6.6V0z"}"></path></svg>`;
});
var css$q = {
  code: ".statement.svelte-bh3jma.svelte-bh3jma{font-size:14px}.statement.svelte-bh3jma .text.svelte-bh3jma{font-style:italic}.statement.svelte-bh3jma .button-container.svelte-bh3jma{margin-top:15px}.statement.svelte-bh3jma .more.svelte-bh3jma{width:18px;height:18px;background:#e0ded7;cursor:pointer;float:left}.statement.svelte-bh3jma .more.svelte-bh3jma:hover{background:#221f20}.statement.svelte-bh3jma .see-all.svelte-bh3jma{float:left;margin-left:10px}.text p{margin:0}",
  map: `{"version":3,"file":"statements.svelte","sources":["statements.svelte"],"sourcesContent":["<script>\\n\\t// # # # # # # # # # # # # #\\n\\t//\\n\\t//  STATEMENTS\\n\\n\\t//\\n\\t// # # # # # # # # # # # # #\\n\\t// __ IMPORTS\\n\\timport { onMount } from 'svelte';\\n\\timport { loadData, renderBlockText } from '$lib/sanity.js';\\n\\timport sample from 'lodash/sample.js';\\n\\n\\t// __ COMPONENTS\\n\\timport PersonLink from '$lib/person-link/person-link.svelte';\\n\\n\\t// __ VARIABLES\\n\\tlet activeStatement = false;\\n\\tlet statements = [];\\n\\tlet clickCounter = 0;\\n\\n\\tconst newStatement = () => {\\n\\t\\tclickCounter++;\\n\\t\\twhile (true) {\\n\\t\\t\\tlet tempStatement = sample(statements);\\n\\t\\t\\tif (tempStatement._id !== activeStatement._id) {\\n\\t\\t\\t\\tactiveStatement = tempStatement;\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n\\n\\tonMount(async () => {\\n\\t\\tstatements = await loadData(\\"*[_type == 'statement']{..., person->{...}}\\");\\n\\t\\tnewStatement();\\n\\t});\\n<\/script>\\n\\n<div class=\\"statement\\">\\n\\t{#if activeStatement}\\n\\t\\t<div class=\\"text\\">{@html renderBlockText(activeStatement.content.content)}</div>\\n\\t\\t{#if activeStatement.person}\\n\\t\\t\\t<div class=\\"person\\"><PersonLink person={activeStatement.person} /></div>\\n\\t\\t{/if}\\n\\t{/if}\\n\\t<div class=\\"button-container\\">\\n\\t\\t<div class=\\"more\\" on:click={newStatement} />\\n\\t\\t{#if clickCounter > 3}\\n\\t\\t\\t<a class=\\"see-all\\" href=\\"/statements\\">See all</a>\\n\\t\\t{/if}\\n\\t</div>\\n</div>\\n\\n<style lang=\\"scss\\">.statement {\\n  font-size: 14px; }\\n  .statement .text {\\n    font-style: italic; }\\n  .statement .button-container {\\n    margin-top: 15px; }\\n  .statement .more {\\n    width: 18px;\\n    height: 18px;\\n    background: #e0ded7;\\n    cursor: pointer;\\n    float: left; }\\n    .statement .more:hover {\\n      background: #221f20; }\\n  .statement .see-all {\\n    float: left;\\n    margin-left: 10px; }\\n\\n:global(.text p) {\\n  margin: 0; }\\n</style>\\n"],"names":[],"mappings":"AAoDmB,UAAU,4BAAC,CAAC,AAC7B,SAAS,CAAE,IAAI,AAAE,CAAC,AAClB,wBAAU,CAAC,KAAK,cAAC,CAAC,AAChB,UAAU,CAAE,MAAM,AAAE,CAAC,AACvB,wBAAU,CAAC,iBAAiB,cAAC,CAAC,AAC5B,UAAU,CAAE,IAAI,AAAE,CAAC,AACrB,wBAAU,CAAC,KAAK,cAAC,CAAC,AAChB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,OAAO,CACnB,MAAM,CAAE,OAAO,CACf,KAAK,CAAE,IAAI,AAAE,CAAC,AACd,wBAAU,CAAC,mBAAK,MAAM,AAAC,CAAC,AACtB,UAAU,CAAE,OAAO,AAAE,CAAC,AAC1B,wBAAU,CAAC,QAAQ,cAAC,CAAC,AACnB,KAAK,CAAE,IAAI,CACX,WAAW,CAAE,IAAI,AAAE,CAAC,AAEhB,OAAO,AAAE,CAAC,AAChB,MAAM,CAAE,CAAC,AAAE,CAAC"}`
};
var Statements$1 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  $$result.css.add(css$q);
  return `<div class="${"statement svelte-bh3jma"}">${``}
	<div class="${"button-container svelte-bh3jma"}"><div class="${"more svelte-bh3jma"}"></div>
		${``}</div>
</div>`;
});
var css$p = {
  code: "svg.svelte-bl0yym path.svelte-bl0yym{fill:#221f20}",
  map: '{"version":3,"file":"triangle-right.svelte","sources":["triangle-right.svelte"],"sourcesContent":["<svg width=\\"9\\" height=\\"11\\" viewBox=\\"0 0 9 11\\" xmlns=\\"http://www.w3.org/2000/svg\\">\\n\\t<path d=\\"M9 5.5L0.750001 10.2631L0.750001 0.73686L9 5.5Z\\" />\\n</svg>\\n\\n<style lang=\\"scss\\">svg path {\\n  fill: #221f20; }\\n</style>\\n"],"names":[],"mappings":"AAImB,iBAAG,CAAC,IAAI,cAAC,CAAC,AAC3B,IAAI,CAAE,OAAO,AAAE,CAAC"}'
};
var Triangle_right = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  $$result.css.add(css$p);
  return `<svg width="${"9"}" height="${"11"}" viewBox="${"0 0 9 11"}" xmlns="${"http://www.w3.org/2000/svg"}" class="${"svelte-bl0yym"}"><path d="${"M9 5.5L0.750001 10.2631L0.750001 0.73686L9 5.5Z"}" class="${"svelte-bl0yym"}"></path></svg>`;
});
var css$o = {
  code: ".open-eyebeam.svelte-142osur.svelte-142osur{padding:15px;width:100%;height:100%;text-decoration:none;display:block}.open-eyebeam.svelte-142osur .link.svelte-142osur{position:absolute;bottom:20px;left:15px;font-size:12px}.open-eyebeam.svelte-142osur .link .arrow.svelte-142osur{margin-right:6px;position:relative;top:2px}",
  map: `{"version":3,"file":"open-eyebeam.svelte","sources":["open-eyebeam.svelte"],"sourcesContent":["<script>\\n\\t// # # # # # # # # # # # # #\\n\\t//\\n\\t// OPEN EYEBEAM\\n\\t//\\n\\t// # # # # # # # # # # # # #\\n\\n\\t// __ GRAPHICS\\n\\timport TriangleRight from '$lib/graphics/triangle-right.svelte';\\n<\/script>\\n\\n<a href=\\"https://open-eyebeam.netlify.app\\" class=\\"open-eyebeam\\">\\n\\t<div class=\\"link\\"><span class=\\"arrow\\"><TriangleRight /></span> open.eyebeam.org</div>\\n</a>\\n\\n<style lang=\\"scss\\">.open-eyebeam {\\n  padding: 15px;\\n  width: 100%;\\n  height: 100%;\\n  text-decoration: none;\\n  display: block; }\\n  .open-eyebeam .link {\\n    position: absolute;\\n    bottom: 20px;\\n    left: 15px;\\n    font-size: 12px; }\\n    .open-eyebeam .link .arrow {\\n      margin-right: 6px;\\n      position: relative;\\n      top: 2px; }\\n</style>\\n"],"names":[],"mappings":"AAemB,aAAa,8BAAC,CAAC,AAChC,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,eAAe,CAAE,IAAI,CACrB,OAAO,CAAE,KAAK,AAAE,CAAC,AACjB,4BAAa,CAAC,KAAK,eAAC,CAAC,AACnB,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,IAAI,CACZ,IAAI,CAAE,IAAI,CACV,SAAS,CAAE,IAAI,AAAE,CAAC,AAClB,4BAAa,CAAC,KAAK,CAAC,MAAM,eAAC,CAAC,AAC1B,YAAY,CAAE,GAAG,CACjB,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,GAAG,AAAE,CAAC"}`
};
var Open_eyebeam = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  $$result.css.add(css$o);
  return `<a href="${"https://open-eyebeam.netlify.app"}" class="${"open-eyebeam svelte-142osur"}"><div class="${"link svelte-142osur"}"><span class="${"arrow svelte-142osur"}">${validate_component(Triangle_right, "TriangleRight").$$render($$result, {}, {}, {})}</span> open.eyebeam.org</div>
</a>`;
});
var css$n = {
  code: ".big-sticker.svelte-12qelf8.svelte-12qelf8{width:100%;height:100%;text-decoration:none;display:block}.big-sticker.svelte-12qelf8 img.svelte-12qelf8{width:100%;height:100%;object-fit:cover}.big-sticker.svelte-12qelf8 .text.svelte-12qelf8{padding:15px;font-size:54px;color:#221f20;line-height:1.1em}.big-sticker.inverted.svelte-12qelf8.svelte-12qelf8{background:#221f20}.big-sticker.inverted.svelte-12qelf8 .text.svelte-12qelf8{color:#f5f4ee}.big-sticker.small.svelte-12qelf8 .text.svelte-12qelf8{font-size:32px}",
  map: `{"version":3,"file":"sticker.svelte","sources":["sticker.svelte"],"sourcesContent":["<script>\\n\\t// # # # # # # # # # # # # #\\n\\t//\\n\\t// Big sticker\\n\\t//\\n\\t// # # # # # # # # # # # # #\\n\\n\\t// __ IMPORTS\\n\\timport get from 'lodash/get.js';\\n\\timport has from 'lodash/has.js';\\n\\timport { urlFor } from '$lib/sanity.js';\\n\\n\\t// __ COMPONENTS\\n\\timport Blocks from '$lib/blocks/blocks.svelte';\\n\\n\\t// *** PROPS\\n\\texport let sticker = {};\\n\\texport let small = false;\\n\\tconsole.log('sticker', sticker);\\n\\n\\tlet url = '';\\n\\n\\tif (sticker.externalLink) {\\n\\t\\turl = sticker.externalLink;\\n\\t} else if (has(sticker, 'internalLink.slug.current')) {\\n\\t\\turl = 'ccccc';\\n\\t}\\n<\/script>\\n\\n<a href={url} class=\\"big-sticker\\" class:small class:inverted={sticker.inverted}>\\n\\t{#if has(sticker, 'image.asset')}\\n\\t\\t<img alt=\\"Eyebeam\\" src={urlFor(sticker.image).quality(90).width(800).url()} />\\n\\t{:else}\\n\\t\\t<div class=\\"text\\">\\n\\t\\t\\t{#if has(sticker, 'text.content')}\\n\\t\\t\\t\\t<Blocks blocks={sticker.text.content} />\\n\\t\\t\\t{/if}\\n\\t\\t</div>\\n\\t{/if}\\n</a>\\n\\n<style lang=\\"scss\\">.big-sticker {\\n  width: 100%;\\n  height: 100%;\\n  text-decoration: none;\\n  display: block; }\\n  .big-sticker img {\\n    width: 100%;\\n    height: 100%;\\n    object-fit: cover; }\\n  .big-sticker .text {\\n    padding: 15px;\\n    font-size: 54px;\\n    color: #221f20;\\n    line-height: 1.1em; }\\n  .big-sticker.inverted {\\n    background: #221f20; }\\n    .big-sticker.inverted .text {\\n      color: #f5f4ee; }\\n  .big-sticker.small .text {\\n    font-size: 32px; }\\n</style>\\n"],"names":[],"mappings":"AAyCmB,YAAY,8BAAC,CAAC,AAC/B,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,eAAe,CAAE,IAAI,CACrB,OAAO,CAAE,KAAK,AAAE,CAAC,AACjB,2BAAY,CAAC,GAAG,eAAC,CAAC,AAChB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,KAAK,AAAE,CAAC,AACtB,2BAAY,CAAC,KAAK,eAAC,CAAC,AAClB,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,OAAO,CACd,WAAW,CAAE,KAAK,AAAE,CAAC,AACvB,YAAY,SAAS,8BAAC,CAAC,AACrB,UAAU,CAAE,OAAO,AAAE,CAAC,AACtB,YAAY,wBAAS,CAAC,KAAK,eAAC,CAAC,AAC3B,KAAK,CAAE,OAAO,AAAE,CAAC,AACrB,YAAY,qBAAM,CAAC,KAAK,eAAC,CAAC,AACxB,SAAS,CAAE,IAAI,AAAE,CAAC"}`
};
var Sticker = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { sticker = {} } = $$props;
  let { small = false } = $$props;
  console.log("sticker", sticker);
  let url = "";
  if (sticker.externalLink) {
    url = sticker.externalLink;
  } else if ((0, import_has.default)(sticker, "internalLink.slug.current")) {
    url = "ccccc";
  }
  if ($$props.sticker === void 0 && $$bindings.sticker && sticker !== void 0)
    $$bindings.sticker(sticker);
  if ($$props.small === void 0 && $$bindings.small && small !== void 0)
    $$bindings.small(small);
  $$result.css.add(css$n);
  return `<a${add_attribute("href", url, 0)} class="${[
    "big-sticker svelte-12qelf8",
    (small ? "small" : "") + " " + (sticker.inverted ? "inverted" : "")
  ].join(" ").trim()}">${(0, import_has.default)(sticker, "image.asset") ? `<img alt="${"Eyebeam"}"${add_attribute("src", urlFor(sticker.image).quality(90).width(800).url(), 0)} class="${"svelte-12qelf8"}">` : `<div class="${"text svelte-12qelf8"}">${(0, import_has.default)(sticker, "text.content") ? `${validate_component(Blocks, "Blocks").$$render($$result, { blocks: sticker.text.content }, {}, {})}` : ``}</div>`}
</a>`;
});
var css$m = {
  code: ".homepage-menu.svelte-1gjqble.svelte-1gjqble{border:1px solid #221f20;width:100%;height:calc(100vh - 130px);margin-bottom:50px}@media(max-width: 900px){.homepage-menu.svelte-1gjqble.svelte-1gjqble{height:auto;display:inline-block;margin-bottom:unset}}.section.svelte-1gjqble.svelte-1gjqble{float:left;height:100%;width:calc((100% / 3) * 2)}@media(max-width: 900px){.section.svelte-1gjqble.svelte-1gjqble{width:100%;height:auto}}.column.svelte-1gjqble.svelte-1gjqble{float:left}.column.one.svelte-1gjqble.svelte-1gjqble{width:50%;height:calc(100% - 100px)}@media(max-width: 900px){.column.one.svelte-1gjqble.svelte-1gjqble{display:none}}.column.two.svelte-1gjqble.svelte-1gjqble{width:50%;height:calc(100% - 100px)}@media(max-width: 900px){.column.two.svelte-1gjqble.svelte-1gjqble{width:100%;height:auto}}.column.three.svelte-1gjqble.svelte-1gjqble{width:calc(100% / 3);height:100%}@media(max-width: 900px){.column.three.svelte-1gjqble.svelte-1gjqble{width:100%;height:auto}}.search.svelte-1gjqble.svelte-1gjqble{height:100px;width:100%;float:left;border-top:1px solid #221f20;border-right:1px solid #221f20}.search.svelte-1gjqble.svelte-1gjqble:hover{background:#e0ded7;cursor:pointer}.search.svelte-1gjqble.svelte-1gjqble:active{background:#221f20}@media(max-width: 900px){.search.svelte-1gjqble.svelte-1gjqble{display:none}}.logo-and-statement.svelte-1gjqble.svelte-1gjqble{height:calc(100% / 3);width:100%;border-right:1px solid #221f20;float:left}.logo-and-statement.svelte-1gjqble .logo.svelte-1gjqble{width:220px;margin-bottom:15px}.programs.svelte-1gjqble.svelte-1gjqble{height:calc((100% / 3) * 2);width:100%;border-right:1px solid #221f20;border-bottom:1px solid #221f20;float:left;padding:0 !important}@media(max-width: 900px){.programs.svelte-1gjqble.svelte-1gjqble{border-right:unset;padding-top:20px}}.about.svelte-1gjqble.svelte-1gjqble{height:calc(100% / 3);width:50%;float:left;border-right:1px solid #221f20}@media(max-width: 900px){.about.svelte-1gjqble.svelte-1gjqble{height:170px}}.people.svelte-1gjqble.svelte-1gjqble{height:calc(100% / 3);width:50%;float:left;border-right:1px solid #221f20}@media(max-width: 900px){.people.svelte-1gjqble.svelte-1gjqble{height:170px;border-right:unset}}.social.svelte-1gjqble.svelte-1gjqble{width:25%;height:100px;float:left;border-right:1px solid #221f20;border-bottom:1px solid #221f20}@media(max-width: 900px){.social.svelte-1gjqble.svelte-1gjqble{width:50%;height:85px}}.social.youtube.svelte-1gjqble.svelte-1gjqble{border-right:none}@media(max-width: 900px){.social.instagram.svelte-1gjqble.svelte-1gjqble{border-right:none}}.social.svelte-1gjqble .icon.svelte-1gjqble{margin-top:5px;margin-left:1px}.change.svelte-1gjqble.svelte-1gjqble{height:calc(40% - 100px);width:50%;float:left;border-right:1px solid #221f20;border-bottom:1px solid #221f20}.change.svelte-1gjqble .half-beam.svelte-1gjqble{margin-top:10px}@media(max-width: 900px){.change.svelte-1gjqble.svelte-1gjqble{border-top:1px solid #221f20;height:170px}}.support.svelte-1gjqble.svelte-1gjqble{height:calc(40% - 100px);width:50%;float:left;border-bottom:1px solid #221f20}@media(max-width: 900px){.support.svelte-1gjqble.svelte-1gjqble{border-top:1px solid #221f20;height:170px}}.events.svelte-1gjqble.svelte-1gjqble{height:60%;width:100%;float:left;padding:0 !important}.tile.svelte-1gjqble.svelte-1gjqble{padding:15px;overflow:hidden;user-select:none}@media(max-width: 900px){.tile.svelte-1gjqble.svelte-1gjqble{font-size:16px}}.open-eyebeam.svelte-1gjqble.svelte-1gjqble{height:calc((100% / 3) * 2);background:#e0ded7;width:100%;border-right:1px solid #221f20;border-bottom:1px solid #221f20;float:left;position:relative;padding:0}.half-sticker.svelte-1gjqble.svelte-1gjqble{padding:0;height:calc(40% - 100px);width:50%;float:left;border-bottom:1px solid #221f20;border-right:1px solid #221f20}@media(max-width: 900px){.half-sticker.svelte-1gjqble.svelte-1gjqble{height:170px}}.full-sticker.svelte-1gjqble.svelte-1gjqble{padding:0;height:calc(40% - 100px);width:100%;float:left;border-bottom:1px solid #221f20}@media(max-width: 900px){.full-sticker.svelte-1gjqble.svelte-1gjqble{height:170px}}a.svelte-1gjqble.svelte-1gjqble{text-decoration:none}a.svelte-1gjqble.svelte-1gjqble:hover{background:#e0ded7}a.svelte-1gjqble.svelte-1gjqble:active{background:#221f20;color:#f5f4ee}.sub-tile.svelte-1gjqble.svelte-1gjqble{float:left;width:50%;height:calc(100% / 3);padding:15px;overflow:hidden}@media(max-width: 900px){.sub-tile.svelte-1gjqble.svelte-1gjqble{width:100%;padding-top:8px;padding-bottom:8px;font-size:14px}}@media(max-width: 900px){.sub-tile.svelte-1gjqble.svelte-1gjqble:last-child{padding-bottom:20px}}.sub-tile.header.svelte-1gjqble.svelte-1gjqble{font-size:12px;letter-spacing:0.5px}@media(max-width: 900px){.sub-tile.header.svelte-1gjqble.svelte-1gjqble{padding-top:20px}}.sub-tile.svelte-1gjqble .time.svelte-1gjqble{margin-bottom:5px;font-size:12px}.sub-tile.svelte-1gjqble .title.svelte-1gjqble{margin-bottom:5px}.sub-tile.svelte-1gjqble .application-container.svelte-1gjqble{display:flex;align-items:center}@media(max-width: 900px){.sub-tile.svelte-1gjqble .application-container.svelte-1gjqble{display:none}}.sub-tile.svelte-1gjqble .application-container .circle.svelte-1gjqble{width:20px;height:20px;border-radius:50%;background:#e0ded7;margin-top:10px}.sub-tile.svelte-1gjqble .application-container .applications-open.svelte-1gjqble{margin-left:10px;font-size:12px;opacity:0;position:relative;top:4px}.sub-tile.svelte-1gjqble:hover .circle.svelte-1gjqble{background:#221f20}.sub-tile.svelte-1gjqble:hover .applications-open.svelte-1gjqble{opacity:1}",
  map: `{"version":3,"file":"index.svelte","sources":["index.svelte"],"sourcesContent":["<script context=\\"module\\">\\n\\texport const load = async ({ fetch }) => {\\n\\t\\tconst res = await fetch('/index.json');\\n\\t\\tif (res.ok) {\\n\\t\\t\\tconst posts = await res.json();\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tprops: { posts }\\n\\t\\t\\t};\\n\\t\\t}\\n\\t\\tconst { message } = await res.json();\\n\\t\\treturn {\\n\\t\\t\\terror: new Error(message)\\n\\t\\t};\\n\\t};\\n<\/script>\\n\\n<script>\\n\\t// # # # # # # # # # # # # #\\n\\t//\\n\\t//  EYEBEAM.ORG\\n\\t//\\n\\t// # # # # # # # # # # # # #\\n\\n\\t// __ IMPORTS\\n\\timport truncate from 'lodash/truncate.js';\\n\\timport get from 'lodash/get.js';\\n\\timport { distanceToDate } from '$lib/global.js';\\n\\n\\t// __ GRAPHICS\\n\\timport Logo from '$lib/graphics/logo.svelte';\\n\\timport Newsletter from '$lib/graphics/newsletter.svelte';\\n\\timport Twitter from '$lib/graphics/twitter.svelte';\\n\\timport Instagram from '$lib/graphics/instagram.svelte';\\n\\timport Youtube from '$lib/graphics/youtube.svelte';\\n\\timport SearchIcon from '$lib/graphics/search.svelte';\\n\\timport HalfBeam from '$lib/graphics/half-beam.svelte';\\n\\n\\t// __ COMPONENTS\\n\\timport Statements from '$lib/statements/statements.svelte';\\n\\timport OpenEyebeam from '$lib/open-eyebeam/open-eyebeam.svelte';\\n\\timport Search from '$lib/search/search.svelte';\\n\\timport PersonLink from '$lib/person-link/person-link.svelte';\\n\\timport Sticker from '$lib/sticker/sticker.svelte';\\n\\n\\tconst INSTAGRAM_URL = 'https://www.instagram.com/eyebeamnyc/';\\n\\tconst TWITTER_URL = 'https://twitter.com/eyebeamnyc';\\n\\tconst YOUTUBE_URL = 'https://www.youtube.com/channel/UCoTYylvEkyd5sv1ZIQJIVeg';\\n\\n\\t// __ PROPS\\n\\texport let posts = {};\\n\\n\\tlet searchActive = false;\\n\\tconst toggleSearch = () => {\\n\\t\\tsearchActive = !searchActive;\\n\\t};\\n<\/script>\\n\\n<svelte:head>\\n\\t<title>eyebeam.org</title>\\n</svelte:head>\\n\\n<div class=\\"homepage-menu\\">\\n\\t<div class=\\"section one\\">\\n\\t\\t<div class=\\"column one\\">\\n\\t\\t\\t<div class=\\"tile open-eyebeam\\">\\n\\t\\t\\t\\t{#if get(posts, 'stickers.stickerLeft.enabled', false)}\\n\\t\\t\\t\\t\\t<Sticker sticker={posts.stickers.stickerLeft} />\\n\\t\\t\\t\\t{:else}\\n\\t\\t\\t\\t\\t<OpenEyebeam />\\n\\t\\t\\t\\t{/if}\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\"tile logo-and-statement\\">\\n\\t\\t\\t\\t<div class=\\"logo\\"><Logo /></div>\\n\\t\\t\\t\\t<Statements />\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\"column two\\">\\n\\t\\t\\t<div class=\\"tile programs\\">\\n\\t\\t\\t\\t<a href=\\"/programs\\" class=\\"sub-tile header\\" sveltekit:prefetch>PROGRAMS</a>\\n\\t\\t\\t\\t{#each posts.programs as program}\\n\\t\\t\\t\\t\\t<a\\n\\t\\t\\t\\t\\t\\thref={'/programs/' + get(program, 'slug.current', '')}\\n\\t\\t\\t\\t\\t\\tclass=\\"sub-tile\\"\\n\\t\\t\\t\\t\\t\\tsveltekit:prefetch\\n\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t<div class=\\"title\\">{program.title}</div>\\n\\t\\t\\t\\t\\t\\t{#if program.applicationsOpen}\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\"application-container\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\"circle\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\"applications-open\\">Applications open</span>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t{/each}\\n\\t\\t\\t</div>\\n\\t\\t\\t<a href=\\"/about\\" class=\\"tile about\\" sveltekit:prefetch>What is eyebeam?</a>\\n\\t\\t\\t<a href=\\"/people\\" class=\\"tile people\\" sveltekit:prefetch>People</a>\\n\\t\\t</div>\\n\\t\\t<div class=\\"tile search\\" on:click={toggleSearch}><SearchIcon /> Search this website</div>\\n\\t</div>\\n\\t<div class=\\"column three\\">\\n\\t\\t{#if get(posts, 'stickers.stickerRight.enabled', false)}\\n\\t\\t\\t{#if get(posts, 'stickers.stickerRight.fullWidth', false) == false}\\n\\t\\t\\t\\t<div class=\\"tile half-sticker\\">\\n\\t\\t\\t\\t\\t<Sticker sticker={posts.stickers.stickerRight} small={true} />\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<a href=\\"/about/support-eyebeam\\" class=\\"tile support\\" sveltekit:prefetch>Support Eyebeam</a>\\n\\t\\t\\t{:else}\\n\\t\\t\\t\\t<div class=\\"tile full-sticker\\">\\n\\t\\t\\t\\t\\t<Sticker sticker={posts.stickers.stickerRight} small={true} />\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t{/if}\\n\\t\\t{:else}\\n\\t\\t\\t<a href=\\"/eyebeam-is-changing\\" class=\\"tile change\\" sveltekit:prefetch>\\n\\t\\t\\t\\tEyebeam is changing...\\n\\t\\t\\t\\t<div class=\\"half-beam\\"><HalfBeam /></div>\\n\\t\\t\\t</a>\\n\\t\\t\\t<a href=\\"/about/support-eyebeam\\" class=\\"tile support\\" sveltekit:prefetch>Support Eyebeam</a>\\n\\t\\t{/if}\\n\\t\\t<a href=\\"/newsletter\\" class=\\"tile social newsletter\\" sveltekit:prefetch>\\n\\t\\t\\tNewsletter\\n\\t\\t\\t<div class=\\"icon\\"><Newsletter /></div>\\n\\t\\t</a>\\n\\t\\t<a href={INSTAGRAM_URL} target=\\"_blank\\" class=\\"tile social instagram\\"\\n\\t\\t\\t>Instagram\\n\\t\\t\\t<div class=\\"icon\\"><Instagram /></div></a\\n\\t\\t>\\n\\t\\t<a href={TWITTER_URL} target=\\"_blank\\" class=\\"tile social twitter\\"\\n\\t\\t\\t>Twitter\\n\\t\\t\\t<div class=\\"icon\\"><Twitter /></div></a\\n\\t\\t>\\n\\t\\t<a href={YOUTUBE_URL} target=\\"_blank\\" class=\\"tile social youtube\\"\\n\\t\\t\\t>Youtube\\n\\t\\t\\t<div class=\\"icon\\"><Youtube /></div></a\\n\\t\\t>\\n\\t\\t<div class=\\"tile events\\">\\n\\t\\t\\t<div class=\\"sub-tile header\\">UPCOMING & RECENT</div>\\n\\t\\t\\t{#each posts.events as event}\\n\\t\\t\\t\\t<a href={'/events/' + get(event, 'slug.current', '')} class=\\"sub-tile\\" sveltekit:prefetch>\\n\\t\\t\\t\\t\\t{#if event.startDate}\\n\\t\\t\\t\\t\\t\\t<div class=\\"time\\">{distanceToDate(event.startDate)}</div>\\n\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t\\t<div class=\\"title\\">{truncate(event.title, { length: 48 })}</div>\\n\\t\\t\\t\\t\\t{#if event.people && event.people.length > 0}\\n\\t\\t\\t\\t\\t\\t<div class=\\"event-people\\">\\n\\t\\t\\t\\t\\t\\t\\t{#each event.people as person}\\n\\t\\t\\t\\t\\t\\t\\t\\t<PersonLink {person} />\\n\\t\\t\\t\\t\\t\\t\\t{/each}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t</a>\\n\\t\\t\\t{/each}\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n{#if searchActive}\\n\\t<Search on:close={toggleSearch} />\\n{/if}\\n\\n<style lang=\\"scss\\">.homepage-menu {\\n  border: 1px solid #221f20;\\n  width: 100%;\\n  height: calc(100vh - 130px);\\n  margin-bottom: 50px; }\\n  @media (max-width: 900px) {\\n    .homepage-menu {\\n      height: auto;\\n      display: inline-block;\\n      margin-bottom: unset; } }\\n\\n.section {\\n  float: left;\\n  height: 100%;\\n  width: calc((100% / 3) * 2); }\\n  @media (max-width: 900px) {\\n    .section {\\n      width: 100%;\\n      height: auto; } }\\n\\n.column {\\n  float: left; }\\n  .column.one {\\n    width: 50%;\\n    height: calc(100% - 100px); }\\n    @media (max-width: 900px) {\\n      .column.one {\\n        display: none; } }\\n  .column.two {\\n    width: 50%;\\n    height: calc(100% - 100px); }\\n    @media (max-width: 900px) {\\n      .column.two {\\n        width: 100%;\\n        height: auto; } }\\n  .column.three {\\n    width: calc(100% / 3);\\n    height: 100%; }\\n    @media (max-width: 900px) {\\n      .column.three {\\n        width: 100%;\\n        height: auto; } }\\n\\n.search {\\n  height: 100px;\\n  width: 100%;\\n  float: left;\\n  border-top: 1px solid #221f20;\\n  border-right: 1px solid #221f20; }\\n  .search:hover {\\n    background: #e0ded7;\\n    cursor: pointer; }\\n  .search:active {\\n    background: #221f20; }\\n  @media (max-width: 900px) {\\n    .search {\\n      display: none; } }\\n\\n.logo-and-statement {\\n  height: calc(100% / 3);\\n  width: 100%;\\n  border-right: 1px solid #221f20;\\n  float: left; }\\n  .logo-and-statement .logo {\\n    width: 220px;\\n    margin-bottom: 15px; }\\n\\n.programs {\\n  height: calc((100% / 3) * 2);\\n  width: 100%;\\n  border-right: 1px solid #221f20;\\n  border-bottom: 1px solid #221f20;\\n  float: left;\\n  padding: 0 !important; }\\n  @media (max-width: 900px) {\\n    .programs {\\n      border-right: unset;\\n      padding-top: 20px; } }\\n\\n.about {\\n  height: calc(100% / 3);\\n  width: 50%;\\n  float: left;\\n  border-right: 1px solid #221f20; }\\n  @media (max-width: 900px) {\\n    .about {\\n      height: 170px; } }\\n\\n.people {\\n  height: calc(100% / 3);\\n  width: 50%;\\n  float: left;\\n  border-right: 1px solid #221f20; }\\n  @media (max-width: 900px) {\\n    .people {\\n      height: 170px;\\n      border-right: unset; } }\\n\\n.social {\\n  width: 25%;\\n  height: 100px;\\n  float: left;\\n  border-right: 1px solid #221f20;\\n  border-bottom: 1px solid #221f20; }\\n  @media (max-width: 900px) {\\n    .social {\\n      width: 50%;\\n      height: 85px; } }\\n  .social.youtube {\\n    border-right: none; }\\n  @media (max-width: 900px) {\\n    .social.instagram {\\n      border-right: none; } }\\n  .social .icon {\\n    margin-top: 5px;\\n    margin-left: 1px; }\\n\\n.change {\\n  height: calc(40% - 100px);\\n  width: 50%;\\n  float: left;\\n  border-right: 1px solid #221f20;\\n  border-bottom: 1px solid #221f20; }\\n  .change .half-beam {\\n    margin-top: 10px; }\\n  @media (max-width: 900px) {\\n    .change {\\n      border-top: 1px solid #221f20;\\n      height: 170px; } }\\n\\n.support {\\n  height: calc(40% - 100px);\\n  width: 50%;\\n  float: left;\\n  border-bottom: 1px solid #221f20; }\\n  @media (max-width: 900px) {\\n    .support {\\n      border-top: 1px solid #221f20;\\n      height: 170px; } }\\n\\n.events {\\n  height: 60%;\\n  width: 100%;\\n  float: left;\\n  padding: 0 !important; }\\n\\n.tile {\\n  padding: 15px;\\n  overflow: hidden;\\n  user-select: none; }\\n  @media (max-width: 900px) {\\n    .tile {\\n      font-size: 16px; } }\\n\\n.open-eyebeam {\\n  height: calc((100% / 3) * 2);\\n  background: #e0ded7;\\n  width: 100%;\\n  border-right: 1px solid #221f20;\\n  border-bottom: 1px solid #221f20;\\n  float: left;\\n  position: relative;\\n  padding: 0; }\\n\\n.half-sticker {\\n  padding: 0;\\n  height: calc(40% - 100px);\\n  width: 50%;\\n  float: left;\\n  border-bottom: 1px solid #221f20;\\n  border-right: 1px solid #221f20; }\\n  @media (max-width: 900px) {\\n    .half-sticker {\\n      height: 170px; } }\\n\\n.full-sticker {\\n  padding: 0;\\n  height: calc(40% - 100px);\\n  width: 100%;\\n  float: left;\\n  border-bottom: 1px solid #221f20; }\\n  @media (max-width: 900px) {\\n    .full-sticker {\\n      height: 170px; } }\\n\\na {\\n  text-decoration: none; }\\n  a:hover {\\n    background: #e0ded7; }\\n  a:active {\\n    background: #221f20;\\n    color: #f5f4ee; }\\n\\n.sub-tile {\\n  float: left;\\n  width: 50%;\\n  height: calc(100% / 3);\\n  padding: 15px;\\n  overflow: hidden; }\\n  @media (max-width: 900px) {\\n    .sub-tile {\\n      width: 100%;\\n      padding-top: 8px;\\n      padding-bottom: 8px;\\n      font-size: 14px; } }\\n  @media (max-width: 900px) {\\n    .sub-tile:last-child {\\n      padding-bottom: 20px; } }\\n  .sub-tile.header {\\n    font-size: 12px;\\n    letter-spacing: 0.5px; }\\n    @media (max-width: 900px) {\\n      .sub-tile.header {\\n        padding-top: 20px; } }\\n  .sub-tile .time {\\n    margin-bottom: 5px;\\n    font-size: 12px; }\\n  .sub-tile .title {\\n    margin-bottom: 5px; }\\n  .sub-tile .application-container {\\n    display: flex;\\n    align-items: center; }\\n    @media (max-width: 900px) {\\n      .sub-tile .application-container {\\n        display: none; } }\\n    .sub-tile .application-container .circle {\\n      width: 20px;\\n      height: 20px;\\n      border-radius: 50%;\\n      background: #e0ded7;\\n      margin-top: 10px; }\\n    .sub-tile .application-container .applications-open {\\n      margin-left: 10px;\\n      font-size: 12px;\\n      opacity: 0;\\n      position: relative;\\n      top: 4px; }\\n  .sub-tile:hover .circle {\\n    background: #221f20; }\\n  .sub-tile:hover .applications-open {\\n    opacity: 1; }\\n</style>\\n"],"names":[],"mappings":"AAgKmB,cAAc,8BAAC,CAAC,AACjC,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,KAAK,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAC3B,aAAa,CAAE,IAAI,AAAE,CAAC,AACtB,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,cAAc,8BAAC,CAAC,AACd,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,YAAY,CACrB,aAAa,CAAE,KAAK,AAAE,CAAC,AAAC,CAAC,AAE/B,QAAQ,8BAAC,CAAC,AACR,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,AAAE,CAAC,AAC9B,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,QAAQ,8BAAC,CAAC,AACR,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,AAAE,CAAC,AAAC,CAAC,AAEvB,OAAO,8BAAC,CAAC,AACP,KAAK,CAAE,IAAI,AAAE,CAAC,AACd,OAAO,IAAI,8BAAC,CAAC,AACX,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,KAAK,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,AAAE,CAAC,AAC7B,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,OAAO,IAAI,8BAAC,CAAC,AACX,OAAO,CAAE,IAAI,AAAE,CAAC,AAAC,CAAC,AACxB,OAAO,IAAI,8BAAC,CAAC,AACX,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,KAAK,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,AAAE,CAAC,AAC7B,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,OAAO,IAAI,8BAAC,CAAC,AACX,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,AAAE,CAAC,AAAC,CAAC,AACvB,OAAO,MAAM,8BAAC,CAAC,AACb,KAAK,CAAE,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CACrB,MAAM,CAAE,IAAI,AAAE,CAAC,AACf,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,OAAO,MAAM,8BAAC,CAAC,AACb,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,AAAE,CAAC,AAAC,CAAC,AAEzB,OAAO,8BAAC,CAAC,AACP,MAAM,CAAE,KAAK,CACb,KAAK,CAAE,IAAI,CACX,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAC7B,YAAY,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,AAAE,CAAC,AAClC,qCAAO,MAAM,AAAC,CAAC,AACb,UAAU,CAAE,OAAO,CACnB,MAAM,CAAE,OAAO,AAAE,CAAC,AACpB,qCAAO,OAAO,AAAC,CAAC,AACd,UAAU,CAAE,OAAO,AAAE,CAAC,AACxB,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,OAAO,8BAAC,CAAC,AACP,OAAO,CAAE,IAAI,AAAE,CAAC,AAAC,CAAC,AAExB,mBAAmB,8BAAC,CAAC,AACnB,MAAM,CAAE,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CACtB,KAAK,CAAE,IAAI,CACX,YAAY,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAC/B,KAAK,CAAE,IAAI,AAAE,CAAC,AACd,kCAAmB,CAAC,KAAK,eAAC,CAAC,AACzB,KAAK,CAAE,KAAK,CACZ,aAAa,CAAE,IAAI,AAAE,CAAC,AAE1B,SAAS,8BAAC,CAAC,AACT,MAAM,CAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAC5B,KAAK,CAAE,IAAI,CACX,YAAY,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAC/B,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAChC,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,CAAC,CAAC,UAAU,AAAE,CAAC,AACxB,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,SAAS,8BAAC,CAAC,AACT,YAAY,CAAE,KAAK,CACnB,WAAW,CAAE,IAAI,AAAE,CAAC,AAAC,CAAC,AAE5B,MAAM,8BAAC,CAAC,AACN,MAAM,CAAE,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CACtB,KAAK,CAAE,GAAG,CACV,KAAK,CAAE,IAAI,CACX,YAAY,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,AAAE,CAAC,AAClC,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,MAAM,8BAAC,CAAC,AACN,MAAM,CAAE,KAAK,AAAE,CAAC,AAAC,CAAC,AAExB,OAAO,8BAAC,CAAC,AACP,MAAM,CAAE,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CACtB,KAAK,CAAE,GAAG,CACV,KAAK,CAAE,IAAI,CACX,YAAY,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,AAAE,CAAC,AAClC,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,OAAO,8BAAC,CAAC,AACP,MAAM,CAAE,KAAK,CACb,YAAY,CAAE,KAAK,AAAE,CAAC,AAAC,CAAC,AAE9B,OAAO,8BAAC,CAAC,AACP,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,KAAK,CACb,KAAK,CAAE,IAAI,CACX,YAAY,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAC/B,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,AAAE,CAAC,AACnC,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,OAAO,8BAAC,CAAC,AACP,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,IAAI,AAAE,CAAC,AAAC,CAAC,AACrB,OAAO,QAAQ,8BAAC,CAAC,AACf,YAAY,CAAE,IAAI,AAAE,CAAC,AACvB,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,OAAO,UAAU,8BAAC,CAAC,AACjB,YAAY,CAAE,IAAI,AAAE,CAAC,AAAC,CAAC,AAC3B,sBAAO,CAAC,KAAK,eAAC,CAAC,AACb,UAAU,CAAE,GAAG,CACf,WAAW,CAAE,GAAG,AAAE,CAAC,AAEvB,OAAO,8BAAC,CAAC,AACP,MAAM,CAAE,KAAK,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CACzB,KAAK,CAAE,GAAG,CACV,KAAK,CAAE,IAAI,CACX,YAAY,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAC/B,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,AAAE,CAAC,AACnC,sBAAO,CAAC,UAAU,eAAC,CAAC,AAClB,UAAU,CAAE,IAAI,AAAE,CAAC,AACrB,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,OAAO,8BAAC,CAAC,AACP,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAC7B,MAAM,CAAE,KAAK,AAAE,CAAC,AAAC,CAAC,AAExB,QAAQ,8BAAC,CAAC,AACR,MAAM,CAAE,KAAK,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CACzB,KAAK,CAAE,GAAG,CACV,KAAK,CAAE,IAAI,CACX,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,AAAE,CAAC,AACnC,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,QAAQ,8BAAC,CAAC,AACR,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAC7B,MAAM,CAAE,KAAK,AAAE,CAAC,AAAC,CAAC,AAExB,OAAO,8BAAC,CAAC,AACP,MAAM,CAAE,GAAG,CACX,KAAK,CAAE,IAAI,CACX,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,CAAC,CAAC,UAAU,AAAE,CAAC,AAE1B,KAAK,8BAAC,CAAC,AACL,OAAO,CAAE,IAAI,CACb,QAAQ,CAAE,MAAM,CAChB,WAAW,CAAE,IAAI,AAAE,CAAC,AACpB,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,KAAK,8BAAC,CAAC,AACL,SAAS,CAAE,IAAI,AAAE,CAAC,AAAC,CAAC,AAE1B,aAAa,8BAAC,CAAC,AACb,MAAM,CAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAC5B,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,IAAI,CACX,YAAY,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAC/B,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAChC,KAAK,CAAE,IAAI,CACX,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,CAAC,AAAE,CAAC,AAEf,aAAa,8BAAC,CAAC,AACb,OAAO,CAAE,CAAC,CACV,MAAM,CAAE,KAAK,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CACzB,KAAK,CAAE,GAAG,CACV,KAAK,CAAE,IAAI,CACX,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAChC,YAAY,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,AAAE,CAAC,AAClC,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,aAAa,8BAAC,CAAC,AACb,MAAM,CAAE,KAAK,AAAE,CAAC,AAAC,CAAC,AAExB,aAAa,8BAAC,CAAC,AACb,OAAO,CAAE,CAAC,CACV,MAAM,CAAE,KAAK,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CACzB,KAAK,CAAE,IAAI,CACX,KAAK,CAAE,IAAI,CACX,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,AAAE,CAAC,AACnC,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,aAAa,8BAAC,CAAC,AACb,MAAM,CAAE,KAAK,AAAE,CAAC,AAAC,CAAC,AAExB,CAAC,8BAAC,CAAC,AACD,eAAe,CAAE,IAAI,AAAE,CAAC,AACxB,+BAAC,MAAM,AAAC,CAAC,AACP,UAAU,CAAE,OAAO,AAAE,CAAC,AACxB,+BAAC,OAAO,AAAC,CAAC,AACR,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,OAAO,AAAE,CAAC,AAErB,SAAS,8BAAC,CAAC,AACT,KAAK,CAAE,IAAI,CACX,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CACtB,OAAO,CAAE,IAAI,CACb,QAAQ,CAAE,MAAM,AAAE,CAAC,AACnB,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,SAAS,8BAAC,CAAC,AACT,KAAK,CAAE,IAAI,CACX,WAAW,CAAE,GAAG,CAChB,cAAc,CAAE,GAAG,CACnB,SAAS,CAAE,IAAI,AAAE,CAAC,AAAC,CAAC,AACxB,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,uCAAS,WAAW,AAAC,CAAC,AACpB,cAAc,CAAE,IAAI,AAAE,CAAC,AAAC,CAAC,AAC7B,SAAS,OAAO,8BAAC,CAAC,AAChB,SAAS,CAAE,IAAI,CACf,cAAc,CAAE,KAAK,AAAE,CAAC,AACxB,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,SAAS,OAAO,8BAAC,CAAC,AAChB,WAAW,CAAE,IAAI,AAAE,CAAC,AAAC,CAAC,AAC5B,wBAAS,CAAC,KAAK,eAAC,CAAC,AACf,aAAa,CAAE,GAAG,CAClB,SAAS,CAAE,IAAI,AAAE,CAAC,AACpB,wBAAS,CAAC,MAAM,eAAC,CAAC,AAChB,aAAa,CAAE,GAAG,AAAE,CAAC,AACvB,wBAAS,CAAC,sBAAsB,eAAC,CAAC,AAChC,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,AAAE,CAAC,AACtB,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,wBAAS,CAAC,sBAAsB,eAAC,CAAC,AAChC,OAAO,CAAE,IAAI,AAAE,CAAC,AAAC,CAAC,AACtB,wBAAS,CAAC,sBAAsB,CAAC,OAAO,eAAC,CAAC,AACxC,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,OAAO,CACnB,UAAU,CAAE,IAAI,AAAE,CAAC,AACrB,wBAAS,CAAC,sBAAsB,CAAC,kBAAkB,eAAC,CAAC,AACnD,WAAW,CAAE,IAAI,CACjB,SAAS,CAAE,IAAI,CACf,OAAO,CAAE,CAAC,CACV,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,GAAG,AAAE,CAAC,AACf,wBAAS,MAAM,CAAC,OAAO,eAAC,CAAC,AACvB,UAAU,CAAE,OAAO,AAAE,CAAC,AACxB,wBAAS,MAAM,CAAC,kBAAkB,eAAC,CAAC,AAClC,OAAO,CAAE,CAAC,AAAE,CAAC"}`
};
var load$n = async ({ fetch: fetch2 }) => {
  const res = await fetch2("/index.json");
  if (res.ok) {
    const posts = await res.json();
    return { props: { posts } };
  }
  const { message } = await res.json();
  return { error: new Error(message) };
};
var INSTAGRAM_URL = "https://www.instagram.com/eyebeamnyc/";
var TWITTER_URL = "https://twitter.com/eyebeamnyc";
var YOUTUBE_URL = "https://www.youtube.com/channel/UCoTYylvEkyd5sv1ZIQJIVeg";
var Routes = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { posts = {} } = $$props;
  if ($$props.posts === void 0 && $$bindings.posts && posts !== void 0)
    $$bindings.posts(posts);
  $$result.css.add(css$m);
  return `${$$result.head += `${$$result.title = `<title>eyebeam.org</title>`, ""}`, ""}

<div class="${"homepage-menu svelte-1gjqble"}"><div class="${"section one svelte-1gjqble"}"><div class="${"column one svelte-1gjqble"}"><div class="${"tile open-eyebeam svelte-1gjqble"}">${(0, import_get.default)(posts, "stickers.stickerLeft.enabled", false) ? `${validate_component(Sticker, "Sticker").$$render($$result, { sticker: posts.stickers.stickerLeft }, {}, {})}` : `${validate_component(Open_eyebeam, "OpenEyebeam").$$render($$result, {}, {}, {})}`}</div>
			<div class="${"tile logo-and-statement svelte-1gjqble"}"><div class="${"logo svelte-1gjqble"}">${validate_component(Logo, "Logo").$$render($$result, {}, {}, {})}</div>
				${validate_component(Statements$1, "Statements").$$render($$result, {}, {}, {})}</div></div>
		<div class="${"column two svelte-1gjqble"}"><div class="${"tile programs svelte-1gjqble"}"><a href="${"/programs"}" class="${"sub-tile header svelte-1gjqble"}" sveltekit:prefetch>PROGRAMS</a>
				${each(posts.programs, (program) => `<a${add_attribute("href", "/programs/" + (0, import_get.default)(program, "slug.current", ""), 0)} class="${"sub-tile svelte-1gjqble"}" sveltekit:prefetch><div class="${"title svelte-1gjqble"}">${escape(program.title)}</div>
						${program.applicationsOpen ? `<div class="${"application-container svelte-1gjqble"}"><div class="${"circle svelte-1gjqble"}"></div>
								<span class="${"applications-open svelte-1gjqble"}">Applications open</span>
							</div>` : ``}
					</a>`)}</div>
			<a href="${"/about"}" class="${"tile about svelte-1gjqble"}" sveltekit:prefetch>What is eyebeam?</a>
			<a href="${"/people"}" class="${"tile people svelte-1gjqble"}" sveltekit:prefetch>People</a></div>
		<div class="${"tile search svelte-1gjqble"}">${validate_component(Search, "SearchIcon").$$render($$result, {}, {}, {})} Search this website</div></div>
	<div class="${"column three svelte-1gjqble"}">${(0, import_get.default)(posts, "stickers.stickerRight.enabled", false) ? `${(0, import_get.default)(posts, "stickers.stickerRight.fullWidth", false) == false ? `<div class="${"tile half-sticker svelte-1gjqble"}">${validate_component(Sticker, "Sticker").$$render($$result, {
    sticker: posts.stickers.stickerRight,
    small: true
  }, {}, {})}</div>
				<a href="${"/about/support-eyebeam"}" class="${"tile support svelte-1gjqble"}" sveltekit:prefetch>Support Eyebeam</a>` : `<div class="${"tile full-sticker svelte-1gjqble"}">${validate_component(Sticker, "Sticker").$$render($$result, {
    sticker: posts.stickers.stickerRight,
    small: true
  }, {}, {})}</div>`}` : `<a href="${"/eyebeam-is-changing"}" class="${"tile change svelte-1gjqble"}" sveltekit:prefetch>Eyebeam is changing...
				<div class="${"half-beam svelte-1gjqble"}">${validate_component(Half_beam, "HalfBeam").$$render($$result, {}, {}, {})}</div></a>
			<a href="${"/about/support-eyebeam"}" class="${"tile support svelte-1gjqble"}" sveltekit:prefetch>Support Eyebeam</a>`}
		<a href="${"/newsletter"}" class="${"tile social newsletter svelte-1gjqble"}" sveltekit:prefetch>Newsletter
			<div class="${"icon svelte-1gjqble"}">${validate_component(Newsletter$1, "Newsletter").$$render($$result, {}, {}, {})}</div></a>
		<a${add_attribute("href", INSTAGRAM_URL, 0)} target="${"_blank"}" class="${"tile social instagram svelte-1gjqble"}">Instagram
			<div class="${"icon svelte-1gjqble"}">${validate_component(Instagram, "Instagram").$$render($$result, {}, {}, {})}</div></a>
		<a${add_attribute("href", TWITTER_URL, 0)} target="${"_blank"}" class="${"tile social twitter svelte-1gjqble"}">Twitter
			<div class="${"icon svelte-1gjqble"}">${validate_component(Twitter, "Twitter").$$render($$result, {}, {}, {})}</div></a>
		<a${add_attribute("href", YOUTUBE_URL, 0)} target="${"_blank"}" class="${"tile social youtube svelte-1gjqble"}">Youtube
			<div class="${"icon svelte-1gjqble"}">${validate_component(Youtube, "Youtube").$$render($$result, {}, {}, {})}</div></a>
		<div class="${"tile events svelte-1gjqble"}"><div class="${"sub-tile header svelte-1gjqble"}">UPCOMING &amp; RECENT</div>
			${each(posts.events, (event) => `<a${add_attribute("href", "/events/" + (0, import_get.default)(event, "slug.current", ""), 0)} class="${"sub-tile svelte-1gjqble"}" sveltekit:prefetch>${event.startDate ? `<div class="${"time svelte-1gjqble"}">${escape(distanceToDate(event.startDate))}</div>` : ``}
					<div class="${"title svelte-1gjqble"}">${escape((0, import_truncate.default)(event.title, { length: 48 }))}</div>
					${event.people && event.people.length > 0 ? `<div class="${"event-people"}">${each(event.people, (person) => `${validate_component(Person_link, "PersonLink").$$render($$result, { person }, {}, {})}`)}
						</div>` : ``}
				</a>`)}</div></div></div>

${``}`;
});
var index$e = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Routes,
  load: load$n
});
var css$l = {
  code: ".tile.svelte-1uhonwd.svelte-1uhonwd{padding:15px;overflow:hidden}.sidebar.svelte-1uhonwd.svelte-1uhonwd{float:left;width:50%;width:calc(100% / 3);border:1px solid #221f20;border-right:none;font-size:14px}@media(max-width: 900px){.sidebar.svelte-1uhonwd.svelte-1uhonwd{display:none}}.sidebar.svelte-1uhonwd .open-eyebeam.svelte-1uhonwd{height:440px;background:#e0ded7;width:100%;border-bottom:1px solid #221f20;float:left;position:relative}.sidebar.svelte-1uhonwd .logo.svelte-1uhonwd{height:220px;width:100%;float:left}.sidebar.svelte-1uhonwd .logo a.svelte-1uhonwd{display:block}.sidebar.svelte-1uhonwd .logo.bordered.svelte-1uhonwd{border-bottom:1px solid #221f20}.sidebar.svelte-1uhonwd .logo .wordmark.svelte-1uhonwd{width:220px;margin-bottom:15px}.sidebar.svelte-1uhonwd .toc.svelte-1uhonwd{padding-top:0}.sidebar.svelte-1uhonwd .toc a.svelte-1uhonwd{text-decoration:none}",
  map: `{"version":3,"file":"sidebar.svelte","sources":["sidebar.svelte"],"sourcesContent":["<script>\\n\\t// # # # # # # # # # # # # #\\n\\t//\\n\\t//  Sidebar\\n\\t//\\n\\t// # # # # # # # # # # # # #\\n\\n\\t// __ IMPORTS\\n\\timport { renderBlockText } from '$lib/sanity.js';\\n\\n\\t// __ GRAPHICS\\n\\timport Logo from '$lib/graphics/logo.svelte';\\n\\n\\t// __ COMPONENTS\\n\\timport Statements from '$lib/statements/statements.svelte';\\n\\timport OpenEyebeam from '$lib/open-eyebeam/open-eyebeam.svelte';\\n\\n\\t// __ STORES\\n\\timport { page } from '$app/stores';\\n\\n\\t// __ PROPS\\n\\texport let toc = [];\\n\\texport let title = '';\\n\\texport let location = '';\\n\\texport let date = false;\\n<\/script>\\n\\n<!-- SIDEBAR -->\\n<div class=\\"sidebar\\">\\n\\t<!-- OPEN EYEBEAM -->\\n\\t<a href=\\"https://open-eyebeam.netlify.app\\" class=\\"tile open-eyebeam\\">\\n\\t\\t<OpenEyebeam />\\n\\t</a>\\n\\t<!-- LOGO -->\\n\\t<div class=\\"tile logo\\" class:bordered={title || toc.length > 0 || location || date}>\\n\\t\\t<a href=\\"/\\" class=\\"wordmark\\"><Logo /></a>\\n\\t\\t{#if $page.path !== '/statements'}\\n\\t\\t\\t<Statements />\\n\\t\\t{/if}\\n\\t</div>\\n\\t<!-- TOC -->\\n\\t{#if title || toc.length > 0}\\n\\t\\t<div class=\\"tile toc\\">\\n\\t\\t\\t<p>{title}</p>\\n\\t\\t\\t{#if toc.length > 0}\\n\\t\\t\\t\\t<ul>\\n\\t\\t\\t\\t\\t{#each toc as item}\\n\\t\\t\\t\\t\\t\\t<li>\\n\\t\\t\\t\\t\\t\\t\\t<a href={item.link} sveltekit:prefetch>{item.title}</a>\\n\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t{/each}\\n\\t\\t\\t\\t</ul>\\n\\t\\t\\t{/if}\\n\\t\\t</div>\\n\\t{/if}\\n</div>\\n\\n<style lang=\\"scss\\">.tile {\\n  padding: 15px;\\n  overflow: hidden; }\\n\\n.sidebar {\\n  float: left;\\n  width: 50%;\\n  width: calc(100% / 3);\\n  border: 1px solid #221f20;\\n  border-right: none;\\n  font-size: 14px; }\\n  @media (max-width: 900px) {\\n    .sidebar {\\n      display: none; } }\\n  .sidebar .open-eyebeam {\\n    height: 440px;\\n    background: #e0ded7;\\n    width: 100%;\\n    border-bottom: 1px solid #221f20;\\n    float: left;\\n    position: relative; }\\n  .sidebar .logo {\\n    height: 220px;\\n    width: 100%;\\n    float: left; }\\n    .sidebar .logo a {\\n      display: block; }\\n    .sidebar .logo.bordered {\\n      border-bottom: 1px solid #221f20; }\\n    .sidebar .logo .wordmark {\\n      width: 220px;\\n      margin-bottom: 15px; }\\n  .sidebar .toc {\\n    padding-top: 0; }\\n    .sidebar .toc a {\\n      text-decoration: none; }\\n</style>\\n"],"names":[],"mappings":"AAyDmB,KAAK,8BAAC,CAAC,AACxB,OAAO,CAAE,IAAI,CACb,QAAQ,CAAE,MAAM,AAAE,CAAC,AAErB,QAAQ,8BAAC,CAAC,AACR,KAAK,CAAE,IAAI,CACX,KAAK,CAAE,GAAG,CACV,KAAK,CAAE,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CACrB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,YAAY,CAAE,IAAI,CAClB,SAAS,CAAE,IAAI,AAAE,CAAC,AAClB,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,QAAQ,8BAAC,CAAC,AACR,OAAO,CAAE,IAAI,AAAE,CAAC,AAAC,CAAC,AACtB,uBAAQ,CAAC,aAAa,eAAC,CAAC,AACtB,MAAM,CAAE,KAAK,CACb,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,IAAI,CACX,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAChC,KAAK,CAAE,IAAI,CACX,QAAQ,CAAE,QAAQ,AAAE,CAAC,AACvB,uBAAQ,CAAC,KAAK,eAAC,CAAC,AACd,MAAM,CAAE,KAAK,CACb,KAAK,CAAE,IAAI,CACX,KAAK,CAAE,IAAI,AAAE,CAAC,AACd,uBAAQ,CAAC,KAAK,CAAC,CAAC,eAAC,CAAC,AAChB,OAAO,CAAE,KAAK,AAAE,CAAC,AACnB,uBAAQ,CAAC,KAAK,SAAS,eAAC,CAAC,AACvB,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,AAAE,CAAC,AACrC,uBAAQ,CAAC,KAAK,CAAC,SAAS,eAAC,CAAC,AACxB,KAAK,CAAE,KAAK,CACZ,aAAa,CAAE,IAAI,AAAE,CAAC,AAC1B,uBAAQ,CAAC,IAAI,eAAC,CAAC,AACb,WAAW,CAAE,CAAC,AAAE,CAAC,AACjB,uBAAQ,CAAC,IAAI,CAAC,CAAC,eAAC,CAAC,AACf,eAAe,CAAE,IAAI,AAAE,CAAC"}`
};
var Sidebar = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $page, $$unsubscribe_page;
  $$unsubscribe_page = subscribe(page, (value) => $page = value);
  let { toc = [] } = $$props;
  let { title = "" } = $$props;
  let { location = "" } = $$props;
  let { date = false } = $$props;
  if ($$props.toc === void 0 && $$bindings.toc && toc !== void 0)
    $$bindings.toc(toc);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.location === void 0 && $$bindings.location && location !== void 0)
    $$bindings.location(location);
  if ($$props.date === void 0 && $$bindings.date && date !== void 0)
    $$bindings.date(date);
  $$result.css.add(css$l);
  $$unsubscribe_page();
  return `
<div class="${"sidebar svelte-1uhonwd"}">
	<a href="${"https://open-eyebeam.netlify.app"}" class="${"tile open-eyebeam svelte-1uhonwd"}">${validate_component(Open_eyebeam, "OpenEyebeam").$$render($$result, {}, {}, {})}</a>
	
	<div class="${[
    "tile logo svelte-1uhonwd",
    title || toc.length > 0 || location || date ? "bordered" : ""
  ].join(" ").trim()}"><a href="${"/"}" class="${"wordmark svelte-1uhonwd"}">${validate_component(Logo, "Logo").$$render($$result, {}, {}, {})}</a>
		${$page.path !== "/statements" ? `${validate_component(Statements$1, "Statements").$$render($$result, {}, {}, {})}` : ``}</div>
	
	${title || toc.length > 0 ? `<div class="${"tile toc svelte-1uhonwd"}"><p>${escape(title)}</p>
			${toc.length > 0 ? `<ul>${each(toc, (item) => `<li><a${add_attribute("href", item.link, 0)} sveltekit:prefetch class="${"svelte-1uhonwd"}">${escape(item.title)}</a>
						</li>`)}</ul>` : ``}</div>` : ``}
</div>`;
});
var css$k = {
  code: "svg.svelte-12pvb9t.svelte-12pvb9t{height:12px}svg.svelte-12pvb9t path.svelte-12pvb9t,svg.svelte-12pvb9t line.svelte-12pvb9t{fill:none;stroke:#221f20;stroke-width:0.75;stroke-miterlimit:10}",
  map: '{"version":3,"file":"arrow-up.svelte","sources":["arrow-up.svelte"],"sourcesContent":["<svg\\n\\tversion=\\"1.1\\"\\n\\tid=\\"Layer_1\\"\\n\\txmlns=\\"http://www.w3.org/2000/svg\\"\\n\\txmlns:xlink=\\"http://www.w3.org/1999/xlink\\"\\n\\tx=\\"0px\\"\\n\\ty=\\"0px\\"\\n\\tviewBox=\\"0 0 13.1 12.5\\"\\n\\tstyle=\\"enable-background:new 0 0 13.1 12.5;\\"\\n\\txml:space=\\"preserve\\"\\n>\\n\\t<line class=\\"st0\\" x1=\\"6.6\\" y1=\\"12.5\\" x2=\\"6.6\\" y2=\\"0.6\\" />\\n\\t<path class=\\"st0\\" d=\\"M0.3,6.8l6.3-6.3l6.3,6.3\\" />\\n</svg>\\n\\n<style type=\\"scss\\">svg {\\n  height: 12px; }\\n  svg path,\\n  svg line {\\n    fill: none;\\n    stroke: #221f20;\\n    stroke-width: 0.75;\\n    stroke-miterlimit: 10; }\\n</style>\\n"],"names":[],"mappings":"AAemB,GAAG,8BAAC,CAAC,AACtB,MAAM,CAAE,IAAI,AAAE,CAAC,AACf,kBAAG,CAAC,mBAAI,CACR,kBAAG,CAAC,IAAI,eAAC,CAAC,AACR,IAAI,CAAE,IAAI,CACV,MAAM,CAAE,OAAO,CACf,YAAY,CAAE,IAAI,CAClB,iBAAiB,CAAE,EAAE,AAAE,CAAC"}'
};
var Arrow_up = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  $$result.css.add(css$k);
  return `<svg version="${"1.1"}" id="${"Layer_1"}" xmlns="${"http://www.w3.org/2000/svg"}" xmlns:xlink="${"http://www.w3.org/1999/xlink"}" x="${"0px"}" y="${"0px"}" viewBox="${"0 0 13.1 12.5"}" style="${"enable-background:new 0 0 13.1 12.5;"}" xml:space="${"preserve"}" class="${"svelte-12pvb9t"}"><line class="${"st0 svelte-12pvb9t"}" x1="${"6.6"}" y1="${"12.5"}" x2="${"6.6"}" y2="${"0.6"}"></line><path class="${"st0 svelte-12pvb9t"}" d="${"M0.3,6.8l6.3-6.3l6.3,6.3"}"></path></svg>`;
});
var css$j = {
  code: ".bottom-bar.svelte-c8xq4c.svelte-c8xq4c{border-left:1px solid #221f20;border-right:1px solid #221f20;border-bottom:1px solid #221f20;width:100%;display:inline-block;padding:15px;height:50px}.bottom-bar.svelte-c8xq4c .last-updated.svelte-c8xq4c{float:left}.bottom-bar.svelte-c8xq4c .last-updated .icon.svelte-c8xq4c{margin-right:10px}.bottom-bar.svelte-c8xq4c .back-to-top.svelte-c8xq4c{float:right;cursor:pointer}.bottom-bar.svelte-c8xq4c .back-to-top .icon.svelte-c8xq4c{margin-left:5px}",
  map: `{"version":3,"file":"bottom-bar.svelte","sources":["bottom-bar.svelte"],"sourcesContent":["<script>\\n\\t// # # # # # # # # # # # # #\\n\\t//\\n\\t//  Bottom bar\\n\\t//\\n\\t// # # # # # # # # # # # # #\\n\\n\\t// __ IMPORTS\\n\\timport { dotFormatDate } from '$lib/global.js';\\n\\n\\t// __ GRAPHICS\\n\\timport HalfBeam from '$lib/graphics/half-beam.svelte';\\n\\timport ArrowUp from '$lib/graphics/arrow-up.svelte';\\n\\n\\t// __ PROPS\\n\\texport let updatedAt = false;\\n\\n\\tconst backToTop = () => {\\n\\t\\twindow.scrollTo({ top: 0, behavior: 'smooth' });\\n\\t};\\n<\/script>\\n\\n<div class=\\"bottom-bar\\">\\n\\t{#if updatedAt}\\n\\t\\t<div class=\\"last-updated\\">\\n\\t\\t\\t<span class=\\"icon\\"><HalfBeam /></span> Last updated: {dotFormatDate(updatedAt)}\\n\\t\\t</div>\\n\\t{/if}\\n\\t<div class=\\"back-to-top\\" on:click={backToTop}>\\n\\t\\tBack to top <span class=\\"icon\\"><ArrowUp /></span>\\n\\t</div>\\n</div>\\n\\n<style lang=\\"scss\\">.bottom-bar {\\n  border-left: 1px solid #221f20;\\n  border-right: 1px solid #221f20;\\n  border-bottom: 1px solid #221f20;\\n  width: 100%;\\n  display: inline-block;\\n  padding: 15px;\\n  height: 50px; }\\n  .bottom-bar .last-updated {\\n    float: left; }\\n    .bottom-bar .last-updated .icon {\\n      margin-right: 10px; }\\n  .bottom-bar .back-to-top {\\n    float: right;\\n    cursor: pointer; }\\n    .bottom-bar .back-to-top .icon {\\n      margin-left: 5px; }\\n</style>\\n"],"names":[],"mappings":"AAiCmB,WAAW,4BAAC,CAAC,AAC9B,WAAW,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAC9B,YAAY,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAC/B,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAChC,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,YAAY,CACrB,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,IAAI,AAAE,CAAC,AACf,yBAAW,CAAC,aAAa,cAAC,CAAC,AACzB,KAAK,CAAE,IAAI,AAAE,CAAC,AACd,yBAAW,CAAC,aAAa,CAAC,KAAK,cAAC,CAAC,AAC/B,YAAY,CAAE,IAAI,AAAE,CAAC,AACzB,yBAAW,CAAC,YAAY,cAAC,CAAC,AACxB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,OAAO,AAAE,CAAC,AAClB,yBAAW,CAAC,YAAY,CAAC,KAAK,cAAC,CAAC,AAC9B,WAAW,CAAE,GAAG,AAAE,CAAC"}`
};
var Bottom_bar = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { updatedAt = false } = $$props;
  if ($$props.updatedAt === void 0 && $$bindings.updatedAt && updatedAt !== void 0)
    $$bindings.updatedAt(updatedAt);
  $$result.css.add(css$j);
  return `<div class="${"bottom-bar svelte-c8xq4c"}">${updatedAt ? `<div class="${"last-updated svelte-c8xq4c"}"><span class="${"icon svelte-c8xq4c"}">${validate_component(Half_beam, "HalfBeam").$$render($$result, {}, {}, {})}</span> Last updated: ${escape(dotFormatDate(updatedAt))}</div>` : ``}
	<div class="${"back-to-top svelte-c8xq4c"}">Back to top <span class="${"icon svelte-c8xq4c"}">${validate_component(Arrow_up, "ArrowUp").$$render($$result, {}, {}, {})}</span></div>
</div>`;
});
var css$i = {
  code: ".main-content.svelte-ycy1yj.svelte-ycy1yj{float:left;width:50%;width:calc((100% / 3) * 2)}.main-content.svelte-ycy1yj .inner.svelte-ycy1yj{border:1px solid #221f20;min-height:100vh}.main-content.svelte-ycy1yj .inner h1.svelte-ycy1yj{padding:20px}",
  map: `{"version":3,"file":"index.svelte","sources":["index.svelte"],"sourcesContent":["<script context=\\"module\\">\\n\\texport const load = async ({ fetch }) => {\\n\\t\\tconst res = await fetch('/eyebeam-is-changing.json');\\n\\t\\tif (res.ok) {\\n\\t\\t\\tconst eyebeamIsChanging = await res.json();\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tprops: { eyebeamIsChanging }\\n\\t\\t\\t};\\n\\t\\t}\\n\\t\\tconst { message } = await res.json();\\n\\t\\treturn {\\n\\t\\t\\terror: new Error(message)\\n\\t\\t};\\n\\t};\\n<\/script>\\n\\n<script>\\n\\t// # # # # # # # # # # # # #\\n\\t//\\n\\t//  Eyebeam is changing\\n\\t//\\n\\t// # # # # # # # # # # # # #\\n\\n\\t// __ IMPORTS\\n\\timport { renderBlockText, urlFor } from '$lib/sanity.js';\\n\\timport has from 'lodash/has.js';\\n\\n\\t// __ COMPONENTS\\n\\timport Sidebar from '$lib/sidebar/sidebar.svelte';\\n\\timport BottomBar from '$lib/bottom-bar/bottom-bar.svelte';\\n\\timport Blocks from '$lib/blocks/blocks.svelte';\\n\\n\\t// __ PROPS\\n\\texport let eyebeamIsChanging;\\n<\/script>\\n\\n<svelte:head>\\n\\t<title>{eyebeamIsChanging.title}</title>\\n</svelte:head>\\n\\n<!-- SIDEBAR -->\\n<Sidebar title={eyebeamIsChanging.title} />\\n\\n<!-- MAIN CONTENT -->\\n<div class=\\"main-content\\">\\n\\t<div class=\\"inner\\">\\n\\t\\t<div class=\\"block-text\\">\\n\\t\\t\\t<!-- TITLE -->\\n\\t\\t\\t<h1>{eyebeamIsChanging.title}</h1>\\n\\t\\t\\t<!-- MAIN TEXT -->\\n\\t\\t\\t{#if has(eyebeamIsChanging, 'content.content')}\\n\\t\\t\\t\\t<div class=\\"body-content\\">\\n\\t\\t\\t\\t\\t<Blocks blocks={eyebeamIsChanging.content.content} />\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t{/if}\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<!-- BOTTOM BAR -->\\n\\t<BottomBar updatedAt={eyebeamIsChanging._updatedAt} />\\n</div>\\n\\n<style lang=\\"scss\\">.main-content {\\n  float: left;\\n  width: 50%;\\n  width: calc((100% / 3) * 2); }\\n  .main-content .inner {\\n    border: 1px solid #221f20;\\n    min-height: 100vh; }\\n    .main-content .inner h1 {\\n      padding: 20px; }\\n\\nul {\\n  padding: 0; }\\n  ul li {\\n    list-style: none; }\\n</style>\\n"],"names":[],"mappings":"AA8DmB,aAAa,4BAAC,CAAC,AAChC,KAAK,CAAE,IAAI,CACX,KAAK,CAAE,GAAG,CACV,KAAK,CAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,AAAE,CAAC,AAC9B,2BAAa,CAAC,MAAM,cAAC,CAAC,AACpB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,UAAU,CAAE,KAAK,AAAE,CAAC,AACpB,2BAAa,CAAC,MAAM,CAAC,EAAE,cAAC,CAAC,AACvB,OAAO,CAAE,IAAI,AAAE,CAAC"}`
};
var load$m = async ({ fetch: fetch2 }) => {
  const res = await fetch2("/eyebeam-is-changing.json");
  if (res.ok) {
    const eyebeamIsChanging = await res.json();
    return { props: { eyebeamIsChanging } };
  }
  const { message } = await res.json();
  return { error: new Error(message) };
};
var Eyebeam_is_changing = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { eyebeamIsChanging } = $$props;
  if ($$props.eyebeamIsChanging === void 0 && $$bindings.eyebeamIsChanging && eyebeamIsChanging !== void 0)
    $$bindings.eyebeamIsChanging(eyebeamIsChanging);
  $$result.css.add(css$i);
  return `${$$result.head += `${$$result.title = `<title>${escape(eyebeamIsChanging.title)}</title>`, ""}`, ""}


${validate_component(Sidebar, "Sidebar").$$render($$result, { title: eyebeamIsChanging.title }, {}, {})}


<div class="${"main-content svelte-ycy1yj"}"><div class="${"inner svelte-ycy1yj"}"><div class="${"block-text"}">
			<h1 class="${"svelte-ycy1yj"}">${escape(eyebeamIsChanging.title)}</h1>
			
			${(0, import_has.default)(eyebeamIsChanging, "content.content") ? `<div class="${"body-content"}">${validate_component(Blocks, "Blocks").$$render($$result, {
    blocks: eyebeamIsChanging.content.content
  }, {}, {})}</div>` : ``}</div></div>

	
	${validate_component(Bottom_bar, "BottomBar").$$render($$result, { updatedAt: eyebeamIsChanging._updatedAt }, {}, {})}
</div>`;
});
var index$d = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Eyebeam_is_changing,
  load: load$m
});
var css$h = {
  code: ".press-and-news-item.svelte-1ksmaoi.svelte-1ksmaoi{width:25%;text-decoration:none;padding:20px}.press-and-news-item.svelte-1ksmaoi .date.svelte-1ksmaoi{font-size:12px;letter-spacing:1px}.press-and-news-item.svelte-1ksmaoi .title.svelte-1ksmaoi{font-size:14px}.press-and-news-item.svelte-1ksmaoi .source.svelte-1ksmaoi{font-size:12px;letter-spacing:1px;margin-top:20px}.press-and-news-item.svelte-1ksmaoi.svelte-1ksmaoi:hover{background:#e0ded7}",
  map: `{"version":3,"file":"press-and-news-item.svelte","sources":["press-and-news-item.svelte"],"sourcesContent":["<script>\\n\\t// # # # # # # # # # # # # #\\n\\t//\\n\\t//  PRESS & NEWS ITEM\\n\\t//\\n\\t// # # # # # # # # # # # # #\\n\\n\\t// __ IMPORTS\\n\\timport { shortFormatDate } from '$lib/global';\\n\\n\\t// ___ PROPS\\n\\texport let post = {};\\n<\/script>\\n\\n<a\\n\\thref={'/press-and-news/' + post.slug.current}\\n\\tclass=\\"press-and-news-item {post._type}\\"\\n\\tsveltekit:prefetch\\n>\\n\\t<div class=\\"date\\">{shortFormatDate(post._createdAt)}</div>\\n\\t<div class=\\"title\\">{post.title}</div>\\n\\t{#if post.source}\\n\\t\\t<div class=\\"source\\">{post.source}</div>\\n\\t{/if}\\n</a>\\n\\n<style lang=\\"scss\\">.press-and-news-item {\\n  width: 25%;\\n  text-decoration: none;\\n  padding: 20px; }\\n  .press-and-news-item .date {\\n    font-size: 12px;\\n    letter-spacing: 1px; }\\n  .press-and-news-item .title {\\n    font-size: 14px; }\\n  .press-and-news-item .source {\\n    font-size: 12px;\\n    letter-spacing: 1px;\\n    margin-top: 20px; }\\n  .press-and-news-item:hover {\\n    background: #e0ded7; }\\n</style>\\n"],"names":[],"mappings":"AA0BmB,oBAAoB,8BAAC,CAAC,AACvC,KAAK,CAAE,GAAG,CACV,eAAe,CAAE,IAAI,CACrB,OAAO,CAAE,IAAI,AAAE,CAAC,AAChB,mCAAoB,CAAC,KAAK,eAAC,CAAC,AAC1B,SAAS,CAAE,IAAI,CACf,cAAc,CAAE,GAAG,AAAE,CAAC,AACxB,mCAAoB,CAAC,MAAM,eAAC,CAAC,AAC3B,SAAS,CAAE,IAAI,AAAE,CAAC,AACpB,mCAAoB,CAAC,OAAO,eAAC,CAAC,AAC5B,SAAS,CAAE,IAAI,CACf,cAAc,CAAE,GAAG,CACnB,UAAU,CAAE,IAAI,AAAE,CAAC,AACrB,kDAAoB,MAAM,AAAC,CAAC,AAC1B,UAAU,CAAE,OAAO,AAAE,CAAC"}`
};
var Press_and_news_item = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { post = {} } = $$props;
  if ($$props.post === void 0 && $$bindings.post && post !== void 0)
    $$bindings.post(post);
  $$result.css.add(css$h);
  return `<a${add_attribute("href", "/press-and-news/" + post.slug.current, 0)} class="${"press-and-news-item " + escape(post._type) + " svelte-1ksmaoi"}" sveltekit:prefetch><div class="${"date svelte-1ksmaoi"}">${escape(shortFormatDate(post._createdAt))}</div>
	<div class="${"title svelte-1ksmaoi"}">${escape(post.title)}</div>
	${post.source ? `<div class="${"source svelte-1ksmaoi"}">${escape(post.source)}</div>` : ``}
</a>`;
});
var css$g = {
  code: ".see-also.svelte-wfylks.svelte-wfylks{width:100%;background:#e0ded7;padding:20px;font-size:16px;border-top:1px solid #221f20}ul.svelte-wfylks li a.svelte-wfylks{text-decoration:none}",
  map: `{"version":3,"file":"see-also.svelte","sources":["see-also.svelte"],"sourcesContent":["<script>\\n\\t// # # # # # # # # # # # # #\\n\\t//\\n\\t//  SEE ALSO\\n\\t//\\n\\t// # # # # # # # # # # # # #\\n\\n\\t// __ IMPORTS\\n\\timport { postTypeToName, postTypeToCategory } from '$lib/global.js';\\n\\timport get from 'lodash/get.js';\\n\\n\\t// __ GRAPHICS\\n\\timport ExternalLink from '$lib/graphics/external-link.svelte';\\n\\n\\t// *** PROPS\\n\\texport let externalLinks = [];\\n\\texport let internalLinks = [];\\n\\n\\tconsole.log('externallinks', externalLinks);\\n\\tconsole.log('internlalinks', internalLinks);\\n<\/script>\\n\\n<div class=\\"see-also\\">\\n\\t<div class=\\"header\\">See also:</div>\\n\\t<ul>\\n\\t\\t<!-- INTERNAL LINKS -->\\n\\t\\t{#if internalLinks}\\n\\t\\t\\t{#each internalLinks as link}\\n\\t\\t\\t\\t<li>\\n\\t\\t\\t\\t\\t<a\\n\\t\\t\\t\\t\\t\\thref={'/' + postTypeToCategory[link._type] + '/' + get(link, 'slug.current', '')}\\n\\t\\t\\t\\t\\t\\tsveltekit:prefetch>{link.title}</a\\n\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t{/each}\\n\\t\\t{/if}\\n\\t\\t<!-- EXTERNAL LINKS -->\\n\\t\\t{#if externalLinks}\\n\\t\\t\\t{#each externalLinks as link}\\n\\t\\t\\t\\t<li>\\n\\t\\t\\t\\t\\t<a href={link.linkUrl} target=\\"_blank\\">{link.linkText} <ExternalLink /></a>\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t{/each}\\n\\t\\t{/if}\\n\\t</ul>\\n</div>\\n\\n<style lang=\\"scss\\">.see-also {\\n  width: 100%;\\n  background: #e0ded7;\\n  padding: 20px;\\n  font-size: 16px;\\n  border-top: 1px solid #221f20; }\\n\\nul li a {\\n  text-decoration: none; }\\n</style>\\n"],"names":[],"mappings":"AA+CmB,SAAS,4BAAC,CAAC,AAC5B,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,OAAO,CACnB,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,AAAE,CAAC,AAElC,gBAAE,CAAC,EAAE,CAAC,CAAC,cAAC,CAAC,AACP,eAAe,CAAE,IAAI,AAAE,CAAC"}`
};
var See_also = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { externalLinks = [] } = $$props;
  let { internalLinks = [] } = $$props;
  console.log("externallinks", externalLinks);
  console.log("internlalinks", internalLinks);
  if ($$props.externalLinks === void 0 && $$bindings.externalLinks && externalLinks !== void 0)
    $$bindings.externalLinks(externalLinks);
  if ($$props.internalLinks === void 0 && $$bindings.internalLinks && internalLinks !== void 0)
    $$bindings.internalLinks(internalLinks);
  $$result.css.add(css$g);
  return `<div class="${"see-also svelte-wfylks"}"><div class="${"header"}">See also:</div>
	<ul class="${"svelte-wfylks"}">
		${internalLinks ? `${each(internalLinks, (link) => `<li><a${add_attribute("href", "/" + postTypeToCategory[link._type] + "/" + (0, import_get.default)(link, "slug.current", ""), 0)} sveltekit:prefetch class="${"svelte-wfylks"}">${escape(link.title)}</a>
				</li>`)}` : ``}
		
		${externalLinks ? `${each(externalLinks, (link) => `<li><a${add_attribute("href", link.linkUrl, 0)} target="${"_blank"}" class="${"svelte-wfylks"}">${escape(link.linkText)} ${validate_component(External_link, "ExternalLink").$$render($$result, {}, {}, {})}</a>
				</li>`)}` : ``}</ul>
</div>`;
});
var css$f = {
  code: ".main-content.svelte-x3vxmw.svelte-x3vxmw{float:left;width:calc((100% / 3) * 2)}@media(max-width: 900px){.main-content.svelte-x3vxmw.svelte-x3vxmw{width:100%}}.main-content.svelte-x3vxmw .inner.svelte-x3vxmw{width:100%;border:1px solid #221f20;min-height:100vh;display:inline-block;padding:20px}.press-and-news-listing.svelte-x3vxmw.svelte-x3vxmw{width:100%;display:flex;margin-top:45px}.load-more.svelte-x3vxmw.svelte-x3vxmw{height:50px;width:100%;border-top:1px solid #221f20;border-bottom:1px solid #221f20;text-align:center;line-height:50px;text-decoration:none;margin-top:40px;user-select:one;cursor:pointer}.load-more.svelte-x3vxmw.svelte-x3vxmw:hover{background:#e0ded7}.section.svelte-x3vxmw.svelte-x3vxmw{margin-top:40px}",
  map: `{"version":3,"file":"index.svelte","sources":["index.svelte"],"sourcesContent":["<script context=\\"module\\">\\n\\texport const load = async ({ fetch }) => {\\n\\t\\tconst res = await fetch('/press-and-news.json');\\n\\t\\tif (res.ok) {\\n\\t\\t\\tconst posts = await res.json();\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tprops: { posts }\\n\\t\\t\\t};\\n\\t\\t}\\n\\t\\tconst { message } = await res.json();\\n\\t\\treturn {\\n\\t\\t\\terror: new Error(message)\\n\\t\\t};\\n\\t};\\n<\/script>\\n\\n<script>\\n\\t// # # # # # # # # # # # # #\\n\\t//\\n\\t//  Press & News\\n\\t//\\n\\t// # # # # # # # # # # # # #\\n\\n\\t// __ IMPORTS\\n\\timport has from 'lodash/has.js';\\n\\timport get from 'lodash/get.js';\\n\\n\\t// __ COMPONENTS\\n\\timport Sidebar from '$lib/sidebar/sidebar.svelte';\\n\\timport BottomBar from '$lib/bottom-bar/bottom-bar.svelte';\\n\\timport PressAndNewsItem from '$lib/press-and-news-item/press-and-news-item.svelte';\\n\\timport Blocks from '$lib/blocks/blocks.svelte';\\n\\timport SeeAlso from '$lib/see-also/see-also.svelte';\\n\\n\\t// __ PROPS\\n\\texport let posts;\\n<\/script>\\n\\n<svelte:head>\\n\\t<title>Press & News</title>\\n</svelte:head>\\n\\n<!-- SIDEBAR -->\\n<Sidebar title=\\"Press & News\\" />\\n\\n<div class=\\"main-content\\">\\n\\t<div class=\\"inner\\">\\n\\t\\t<h1>Press & News</h1>\\n\\n\\t\\t{#if has(posts, 'page.content.content')}\\n\\t\\t\\t<Blocks blocks={posts.page.content.content} />\\n\\t\\t{/if}\\n\\n\\t\\t<div class=\\"section\\">\\n\\t\\t\\t<h2>News</h2>\\n\\t\\t\\t<div class=\\"press-and-news-listing\\">\\n\\t\\t\\t\\t{#each posts.news as post}\\n\\t\\t\\t\\t\\t<PressAndNewsItem {post} />\\n\\t\\t\\t\\t{/each}\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\"load-more\\">Load more</div>\\n\\t\\t</div>\\n\\n\\t\\t<div class=\\"section\\">\\n\\t\\t\\t<h2>Press releases</h2>\\n\\t\\t\\t<div class=\\"press-and-news-listing\\">\\n\\t\\t\\t\\t{#each posts.press as post}\\n\\t\\t\\t\\t\\t<PressAndNewsItem {post} />\\n\\t\\t\\t\\t{/each}\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\"load-more\\">Load more</div>\\n\\t\\t</div>\\n\\n\\t\\t<div class=\\"section\\">\\n\\t\\t\\t<h2>Press contact</h2>\\n\\t\\t\\t{#if has(posts, 'page.pressContact.content')}\\n\\t\\t\\t\\t<Blocks blocks={posts.page.pressContact.content} />\\n\\t\\t\\t{/if}\\n\\t\\t</div>\\n\\n\\t\\t<!-- SEE ALSO -->\\n\\t\\t{#if posts.page.internalLinks || posts.page.externalLinks}\\n\\t\\t\\t<SeeAlso externalLinks={posts.page.externalLinks} internalLinks={posts.page.internalLinks} />\\n\\t\\t{/if}\\n\\t</div>\\n\\n\\t<!-- BOTTOM BAR -->\\n\\t<BottomBar />\\n</div>\\n\\n<style lang=\\"scss\\">.main-content {\\n  float: left;\\n  width: calc((100% / 3) * 2); }\\n  @media (max-width: 900px) {\\n    .main-content {\\n      width: 100%; } }\\n  .main-content .inner {\\n    width: 100%;\\n    border: 1px solid #221f20;\\n    min-height: 100vh;\\n    display: inline-block;\\n    padding: 20px; }\\n\\n.press-and-news-listing {\\n  width: 100%;\\n  display: flex;\\n  margin-top: 45px; }\\n\\n.load-more {\\n  height: 50px;\\n  width: 100%;\\n  border-top: 1px solid #221f20;\\n  border-bottom: 1px solid #221f20;\\n  text-align: center;\\n  line-height: 50px;\\n  text-decoration: none;\\n  margin-top: 40px;\\n  user-select: one;\\n  cursor: pointer; }\\n  .load-more:hover {\\n    background: #e0ded7; }\\n\\n.section {\\n  margin-top: 40px; }\\n</style>\\n"],"names":[],"mappings":"AA0FmB,aAAa,4BAAC,CAAC,AAChC,KAAK,CAAE,IAAI,CACX,KAAK,CAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,AAAE,CAAC,AAC9B,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,aAAa,4BAAC,CAAC,AACb,KAAK,CAAE,IAAI,AAAE,CAAC,AAAC,CAAC,AACpB,2BAAa,CAAC,MAAM,cAAC,CAAC,AACpB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,UAAU,CAAE,KAAK,CACjB,OAAO,CAAE,YAAY,CACrB,OAAO,CAAE,IAAI,AAAE,CAAC,AAEpB,uBAAuB,4BAAC,CAAC,AACvB,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,IAAI,AAAE,CAAC,AAErB,UAAU,4BAAC,CAAC,AACV,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAC7B,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAChC,UAAU,CAAE,MAAM,CAClB,WAAW,CAAE,IAAI,CACjB,eAAe,CAAE,IAAI,CACrB,UAAU,CAAE,IAAI,CAChB,WAAW,CAAE,GAAG,CAChB,MAAM,CAAE,OAAO,AAAE,CAAC,AAClB,sCAAU,MAAM,AAAC,CAAC,AAChB,UAAU,CAAE,OAAO,AAAE,CAAC,AAE1B,QAAQ,4BAAC,CAAC,AACR,UAAU,CAAE,IAAI,AAAE,CAAC"}`
};
var load$l = async ({ fetch: fetch2 }) => {
  const res = await fetch2("/press-and-news.json");
  if (res.ok) {
    const posts = await res.json();
    return { props: { posts } };
  }
  const { message } = await res.json();
  return { error: new Error(message) };
};
var Press_and_news = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { posts } = $$props;
  if ($$props.posts === void 0 && $$bindings.posts && posts !== void 0)
    $$bindings.posts(posts);
  $$result.css.add(css$f);
  return `${$$result.head += `${$$result.title = `<title>Press &amp; News</title>`, ""}`, ""}


${validate_component(Sidebar, "Sidebar").$$render($$result, { title: "Press & News" }, {}, {})}

<div class="${"main-content svelte-x3vxmw"}"><div class="${"inner svelte-x3vxmw"}"><h1>Press &amp; News</h1>

		${(0, import_has.default)(posts, "page.content.content") ? `${validate_component(Blocks, "Blocks").$$render($$result, { blocks: posts.page.content.content }, {}, {})}` : ``}

		<div class="${"section svelte-x3vxmw"}"><h2>News</h2>
			<div class="${"press-and-news-listing svelte-x3vxmw"}">${each(posts.news, (post) => `${validate_component(Press_and_news_item, "PressAndNewsItem").$$render($$result, { post }, {}, {})}`)}</div>
			<div class="${"load-more svelte-x3vxmw"}">Load more</div></div>

		<div class="${"section svelte-x3vxmw"}"><h2>Press releases</h2>
			<div class="${"press-and-news-listing svelte-x3vxmw"}">${each(posts.press, (post) => `${validate_component(Press_and_news_item, "PressAndNewsItem").$$render($$result, { post }, {}, {})}`)}</div>
			<div class="${"load-more svelte-x3vxmw"}">Load more</div></div>

		<div class="${"section svelte-x3vxmw"}"><h2>Press contact</h2>
			${(0, import_has.default)(posts, "page.pressContact.content") ? `${validate_component(Blocks, "Blocks").$$render($$result, { blocks: posts.page.pressContact.content }, {}, {})}` : ``}</div>

		
		${posts.page.internalLinks || posts.page.externalLinks ? `${validate_component(See_also, "SeeAlso").$$render($$result, {
    externalLinks: posts.page.externalLinks,
    internalLinks: posts.page.internalLinks
  }, {}, {})}` : ``}</div>

	
	${validate_component(Bottom_bar, "BottomBar").$$render($$result, {}, {}, {})}
</div>`;
});
var index$c = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Press_and_news,
  load: load$l
});
var css$e = {
  code: ".main-content.svelte-4lp4qm.svelte-4lp4qm{float:left;width:calc((100% / 3) * 2)}@media(max-width: 900px){.main-content.svelte-4lp4qm.svelte-4lp4qm{width:100%}}.main-content.svelte-4lp4qm .block-text.svelte-4lp4qm{border:1px solid #221f20;min-height:100vh;display:inline-block;padding-bottom:20px;width:100%}.main-content.svelte-4lp4qm .block-text h1.svelte-4lp4qm{padding:20px}.published-by.svelte-4lp4qm.svelte-4lp4qm,.date.svelte-4lp4qm.svelte-4lp4qm,.author.svelte-4lp4qm.svelte-4lp4qm,.including.svelte-4lp4qm.svelte-4lp4qm{font-style:italic;margin-left:20px;font-size:16px}.including.svelte-4lp4qm.svelte-4lp4qm{margin-top:20px;margin-bottom:20px}.button.svelte-4lp4qm.svelte-4lp4qm{padding:20px;background:#e0ded7;display:inline-block;font-size:14px;margin-left:20px;text-decoration:none}.button.svelte-4lp4qm.svelte-4lp4qm:hover{background:#221f20;color:#f5f4ee}",
  map: `{"version":3,"file":"[slug].svelte","sources":["[slug].svelte"],"sourcesContent":["<script context=\\"module\\">\\n\\texport const load = async ({ page, fetch, session, stuff }) => {\\n\\t\\tconst res = await fetch(\`/press-and-news/\${page.params.slug}.json\`);\\n\\t\\tif (res.ok) {\\n\\t\\t\\tconst page = await res.json();\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tprops: { page }\\n\\t\\t\\t};\\n\\t\\t}\\n\\t\\tconst { message } = await res.json();\\n\\t\\treturn {\\n\\t\\t\\terror: new Error(message)\\n\\t\\t};\\n\\t};\\n<\/script>\\n\\n<script>\\n\\t// # # # # # # # # # # # # #\\n\\t//\\n\\t//  Single Press & News page\\n\\t//\\n\\t// # # # # # # # # # # # # #\\n\\n\\t// __ IMPORTS\\n\\timport { onDestroy } from 'svelte';\\n\\timport get from 'lodash/get.js';\\n\\timport has from 'lodash/has.js';\\n\\timport { longFormatDate } from '$lib/global';\\n\\n\\t// __ STORES\\n\\timport { currentPage } from '$lib/stores.js';\\n\\n\\t// __ COMPONENTS\\n\\timport Sidebar from '$lib/sidebar/sidebar.svelte';\\n\\timport BottomBar from '$lib/bottom-bar/bottom-bar.svelte';\\n\\timport Blocks from '$lib/blocks/blocks.svelte';\\n\\timport PersonLink from '$lib/person-link/person-link.svelte';\\n\\timport SeeAlso from '$lib/see-also/see-also.svelte';\\n\\n\\t// __ GRAPHICS\\n\\timport ExternalLink from '$lib/graphics/external-link.svelte';\\n\\n\\t// *** PROPS\\n\\texport let page;\\n\\n\\t// __ Set currentPage\\n\\tcurrentPage.set({ slug: get(page, 'slug.current', ''), title: page.title });\\n\\n\\tonDestroy(() => {\\n\\t\\tcurrentPage.set(null);\\n\\t});\\n<\/script>\\n\\n<svelte:head>\\n\\t<title>{page.title}</title>\\n</svelte:head>\\n\\n<!-- SIDEBAR -->\\n\\n<Sidebar title={page.title} />\\n\\n<!-- SIDEBAR -->\\n\\n<!-- MAIN CONTENT -->\\n<div class=\\"main-content\\">\\n\\t<div class=\\"block-text\\">\\n\\t\\t<!-- <div class=\\"header\\"> -->\\n\\t\\t<!-- TITLE -->\\n\\t\\t<h1>{page.title}</h1>\\n\\t\\t<!-- SOURCE -->\\n\\t\\t{#if page.source}\\n\\t\\t\\t<div class=\\"published-by\\">Published by {page.source}</div>\\n\\t\\t{/if}\\n\\t\\t<!-- DATE -->\\n\\t\\t<div class=\\"date\\">{longFormatDate(page._createdAt)}</div>\\n\\t\\t<!-- AUTHOR -->\\n\\t\\t{#if page.author}\\n\\t\\t\\t<div class=\\"author\\">Author</div>\\n\\t\\t{/if}\\n\\t\\t<!-- PEOPLE -->\\n\\t\\t{#if page.people && page.people.length > 0}\\n\\t\\t\\t<div class=\\"including\\">\\n\\t\\t\\t\\tIncluding:\\n\\t\\t\\t\\t{#each page.people as person}\\n\\t\\t\\t\\t\\t<PersonLink {person} />\\n\\t\\t\\t\\t{/each}\\n\\t\\t\\t</div>\\n\\t\\t{/if}\\n\\t\\t<!-- PDF DOWNLOAD -->\\n\\t\\t{#if page.pdfFile}\\n\\t\\t\\t<a href=\\"\\" class=\\"button download-pdf\\">Download as PDF</a>\\n\\t\\t{/if}\\n\\t\\t<!-- ORIGINAL LINK -->\\n\\t\\t{#if page.externalLink}\\n\\t\\t\\t<a href={page.externalLink} class=\\"button read-original\\" target=\\"_blank\\"\\n\\t\\t\\t\\t>Read original article on {page.source} <ExternalLink /></a\\n\\t\\t\\t>\\n\\t\\t{/if}\\n\\t\\t<!-- MAIN TEXT -->\\n\\t\\t{#if has(page, 'content.content')}\\n\\t\\t\\t<Blocks blocks={page.content.content} />\\n\\t\\t{/if}\\n\\n\\t\\t<!-- SEE ALSO -->\\n\\t\\t{#if page.internalLinks || page.externalLinks}\\n\\t\\t\\t<SeeAlso externalLinks={page.externalLinks} internalLinks={page.internalLinks} />\\n\\t\\t{/if}\\n\\t</div>\\n\\n\\t<!-- BOTTOM BAR -->\\n\\t<BottomBar updatedAt={page._updatedAt} />\\n</div>\\n\\n<style lang=\\"scss\\">.main-content {\\n  float: left;\\n  width: calc((100% / 3) * 2); }\\n  @media (max-width: 900px) {\\n    .main-content {\\n      width: 100%; } }\\n  .main-content .block-text {\\n    border: 1px solid #221f20;\\n    min-height: 100vh;\\n    display: inline-block;\\n    padding-bottom: 20px;\\n    width: 100%; }\\n    .main-content .block-text h1 {\\n      padding: 20px; }\\n\\n.published-by,\\n.date,\\n.author,\\n.including {\\n  font-style: italic;\\n  margin-left: 20px;\\n  font-size: 16px; }\\n\\n.including {\\n  margin-top: 20px;\\n  margin-bottom: 20px; }\\n\\n.button {\\n  padding: 20px;\\n  background: #e0ded7;\\n  display: inline-block;\\n  font-size: 14px;\\n  margin-left: 20px;\\n  text-decoration: none; }\\n  .button:hover {\\n    background: #221f20;\\n    color: #f5f4ee; }\\n</style>\\n"],"names":[],"mappings":"AAiHmB,aAAa,4BAAC,CAAC,AAChC,KAAK,CAAE,IAAI,CACX,KAAK,CAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,AAAE,CAAC,AAC9B,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,aAAa,4BAAC,CAAC,AACb,KAAK,CAAE,IAAI,AAAE,CAAC,AAAC,CAAC,AACpB,2BAAa,CAAC,WAAW,cAAC,CAAC,AACzB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,UAAU,CAAE,KAAK,CACjB,OAAO,CAAE,YAAY,CACrB,cAAc,CAAE,IAAI,CACpB,KAAK,CAAE,IAAI,AAAE,CAAC,AACd,2BAAa,CAAC,WAAW,CAAC,EAAE,cAAC,CAAC,AAC5B,OAAO,CAAE,IAAI,AAAE,CAAC,AAEtB,yCAAa,CACb,iCAAK,CACL,mCAAO,CACP,UAAU,4BAAC,CAAC,AACV,UAAU,CAAE,MAAM,CAClB,WAAW,CAAE,IAAI,CACjB,SAAS,CAAE,IAAI,AAAE,CAAC,AAEpB,UAAU,4BAAC,CAAC,AACV,UAAU,CAAE,IAAI,CAChB,aAAa,CAAE,IAAI,AAAE,CAAC,AAExB,OAAO,4BAAC,CAAC,AACP,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,OAAO,CACnB,OAAO,CAAE,YAAY,CACrB,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,IAAI,CACjB,eAAe,CAAE,IAAI,AAAE,CAAC,AACxB,mCAAO,MAAM,AAAC,CAAC,AACb,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,OAAO,AAAE,CAAC"}`
};
var load$k = async ({ page: page2, fetch: fetch2, session, stuff }) => {
  const res = await fetch2(`/press-and-news/${page2.params.slug}.json`);
  if (res.ok) {
    const page3 = await res.json();
    return { props: { page: page3 } };
  }
  const { message } = await res.json();
  return { error: new Error(message) };
};
var U5Bslugu5D$8 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { page: page2 } = $$props;
  currentPage.set({
    slug: (0, import_get.default)(page2, "slug.current", ""),
    title: page2.title
  });
  onDestroy(() => {
    currentPage.set(null);
  });
  if ($$props.page === void 0 && $$bindings.page && page2 !== void 0)
    $$bindings.page(page2);
  $$result.css.add(css$e);
  return `${$$result.head += `${$$result.title = `<title>${escape(page2.title)}</title>`, ""}`, ""}



${validate_component(Sidebar, "Sidebar").$$render($$result, { title: page2.title }, {}, {})}




<div class="${"main-content svelte-4lp4qm"}"><div class="${"block-text svelte-4lp4qm"}">
		
		<h1 class="${"svelte-4lp4qm"}">${escape(page2.title)}</h1>
		
		${page2.source ? `<div class="${"published-by svelte-4lp4qm"}">Published by ${escape(page2.source)}</div>` : ``}
		
		<div class="${"date svelte-4lp4qm"}">${escape(longFormatDate(page2._createdAt))}</div>
		
		${page2.author ? `<div class="${"author svelte-4lp4qm"}">Author</div>` : ``}
		
		${page2.people && page2.people.length > 0 ? `<div class="${"including svelte-4lp4qm"}">Including:
				${each(page2.people, (person) => `${validate_component(Person_link, "PersonLink").$$render($$result, { person }, {}, {})}`)}</div>` : ``}
		
		${page2.pdfFile ? `<a href="${""}" class="${"button download-pdf svelte-4lp4qm"}">Download as PDF</a>` : ``}
		
		${page2.externalLink ? `<a${add_attribute("href", page2.externalLink, 0)} class="${"button read-original svelte-4lp4qm"}" target="${"_blank"}">Read original article on ${escape(page2.source)} ${validate_component(External_link, "ExternalLink").$$render($$result, {}, {}, {})}</a>` : ``}
		
		${(0, import_has.default)(page2, "content.content") ? `${validate_component(Blocks, "Blocks").$$render($$result, { blocks: page2.content.content }, {}, {})}` : ``}

		
		${page2.internalLinks || page2.externalLinks ? `${validate_component(See_also, "SeeAlso").$$render($$result, {
    externalLinks: page2.externalLinks,
    internalLinks: page2.internalLinks
  }, {}, {})}` : ``}</div>

	
	${validate_component(Bottom_bar, "BottomBar").$$render($$result, { updatedAt: page2._updatedAt }, {}, {})}
</div>`;
});
var _slug_$8 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": U5Bslugu5D$8,
  load: load$k
});
var css$d = {
  code: ".main-content.svelte-c0wu3o.svelte-c0wu3o{float:left;width:100%}.main-content.svelte-c0wu3o .inner.svelte-c0wu3o{border:1px solid #221f20;min-height:100vh}.main-content.svelte-c0wu3o .inner .header.svelte-c0wu3o{width:100%;display:inline-block;border-bottom:1px solid #221f20;padding:15px}.main-content.svelte-c0wu3o .inner .header .description.svelte-c0wu3o{width:800px;max-width:90%;margin-left:auto;margin-right:auto;margin-top:40px;margin-bottom:20px}.main-content.svelte-c0wu3o .inner .header .filters.svelte-c0wu3o{margin-top:80px;display:inline-block;margin-bottom:10px}.main-content.svelte-c0wu3o .inner .header .filters .filter.svelte-c0wu3o{padding:8px 12px;border:1px solid #221f20;margin-right:5px;float:left;user-select:none;cursor:pointer;font-size:12px}.main-content.svelte-c0wu3o .inner .header .filters .filter.svelte-c0wu3o:hover{background:#221f20;color:#f5f4ee}.main-content.svelte-c0wu3o .inner .header .filters .filter.active.svelte-c0wu3o{background:#221f20;color:#f5f4ee}.main-content.svelte-c0wu3o .inner .single-post.svelte-c0wu3o{padding:15px;border-bottom:1px solid #221f20;text-decoration:none;display:block;font-size:14px}.main-content.svelte-c0wu3o .inner .single-post.svelte-c0wu3o:last-child{border-bottom:unset}.main-content.svelte-c0wu3o .inner .single-post.svelte-c0wu3o:hover{background:#e0ded7;cursor:pointer}.main-content.svelte-c0wu3o .inner .single-post .top.svelte-c0wu3o{width:100%;display:flex;justify-content:space-between}.main-content.svelte-c0wu3o .inner .single-post .top .type.svelte-c0wu3o{font-size:12px;text-transform:uppercase;letter-spacing:0.5px}.main-content.svelte-c0wu3o .inner .single-post .top .date.svelte-c0wu3o{float:right;margin-top:5px}.main-content.svelte-c0wu3o .inner .single-post .title.svelte-c0wu3o{margin-bottom:5px}.main-content.svelte-c0wu3o .inner .single-post .people.svelte-c0wu3o{font-style:italic}",
  map: `{"version":3,"file":"index.svelte","sources":["index.svelte"],"sourcesContent":["<script context=\\"module\\">\\n\\texport const load = async ({ fetch }) => {\\n\\t\\tconst res = await fetch('/everything.json');\\n\\t\\tif (res.ok) {\\n\\t\\t\\tconst everything = await res.json();\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tprops: { everything }\\n\\t\\t\\t};\\n\\t\\t}\\n\\t\\tconst { message } = await res.json();\\n\\t\\treturn {\\n\\t\\t\\terror: new Error(message)\\n\\t\\t};\\n\\t};\\n<\/script>\\n\\n<script>\\n\\t// # # # # # # # # # # # # #\\n\\t//\\n\\t//  Everything\\n\\t//\\n\\t// # # # # # # # # # # # # #\\n\\n\\t// __ IMPORTS\\n\\timport { longFormatDate } from '$lib/global.js';\\n\\timport { postTypeToName, postTypeToCategory } from '$lib/global.js';\\n\\timport has from 'lodash/has.js';\\n\\timport get from 'lodash/get.js';\\n\\n\\t// __ COMPONENTS\\n\\timport PersonLink from '$lib/person-link/person-link.svelte';\\n\\timport Blocks from '$lib/blocks/blocks.svelte';\\n\\n\\t// __ PROPS\\n\\texport let everything;\\n\\n\\tconst FILTERS = [\\n\\t\\t{\\n\\t\\t\\tlabel: 'Everything',\\n\\t\\t\\tvalue: 'everything'\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\tlabel: 'Programs',\\n\\t\\t\\tvalue: 'program'\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\tlabel: 'Events',\\n\\t\\t\\tvalue: 'event'\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\tlabel: 'Notes',\\n\\t\\t\\tvalue: 'note'\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\tlabel: 'Projects',\\n\\t\\t\\tvalue: 'project'\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\tlabel: 'Videos',\\n\\t\\t\\tvalue: 'videoPost'\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\tlabel: 'Press',\\n\\t\\t\\tvalue: 'press'\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\tlabel: 'News',\\n\\t\\t\\tvalue: 'news'\\n\\t\\t}\\n\\t];\\n\\tlet activeFilter = 'everything';\\n\\tlet filteredPosts = [];\\n\\n\\t$: {\\n\\t\\tif (activeFilter === 'everything') {\\n\\t\\t\\tfilteredPosts = everything.posts;\\n\\t\\t} else {\\n\\t\\t\\tfilteredPosts = everything.posts.filter((p) => p._type === activeFilter);\\n\\t\\t}\\n\\t}\\n<\/script>\\n\\n<svelte:head>\\n\\t<title>{everything.page.title}</title>\\n</svelte:head>\\n\\n<!-- MAIN CONTENT -->\\n<div class=\\"main-content\\">\\n\\t<div class=\\"inner\\">\\n\\t\\t<div class=\\"header\\">\\n\\t\\t\\t<h1>{everything.page.title}</h1>\\n\\t\\t\\t<!-- BIO -->\\n\\t\\t\\t{#if has(everything, 'page.content.content')}\\n\\t\\t\\t\\t<div class=\\"body-content description\\">\\n\\t\\t\\t\\t\\t<Blocks blocks={everything.page.content.content} />\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t{/if}\\n\\t\\t\\t<div class=\\"filters\\">\\n\\t\\t\\t\\t{#each FILTERS as filter}\\n\\t\\t\\t\\t\\t<div\\n\\t\\t\\t\\t\\t\\tclass=\\"filter\\"\\n\\t\\t\\t\\t\\t\\tclass:active={activeFilter == filter.value}\\n\\t\\t\\t\\t\\t\\ton:click={() => {\\n\\t\\t\\t\\t\\t\\t\\tactiveFilter = filter.value;\\n\\t\\t\\t\\t\\t\\t}}\\n\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t{filter.label}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t{/each}\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t{#each filteredPosts as post}\\n\\t\\t\\t<a\\n\\t\\t\\t\\thref={'/' + postTypeToCategory[post._type] + '/' + get(post, 'slug.current')}\\n\\t\\t\\t\\tclass=\\"single-post\\"\\n\\t\\t\\t>\\n\\t\\t\\t\\t<div class=\\"top\\">\\n\\t\\t\\t\\t\\t<!-- TYPE -->\\n\\t\\t\\t\\t\\t<div class=\\"type\\">{postTypeToName[post._type]}</div>\\n\\t\\t\\t\\t\\t<!-- DATE -->\\n\\t\\t\\t\\t\\t<div class=\\"date\\">{longFormatDate(post._createdAt)}</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<!-- TITLE -->\\n\\t\\t\\t\\t<div class=\\"title\\">{post.title}</div>\\n\\t\\t\\t\\t<!-- PEOPLE -->\\n\\t\\t\\t\\t{#if post.people && post.people.length > 0}\\n\\t\\t\\t\\t\\t<div class=\\"people\\">\\n\\t\\t\\t\\t\\t\\tIncluding\\n\\t\\t\\t\\t\\t\\t{#each post.people as person}\\n\\t\\t\\t\\t\\t\\t\\t<PersonLink {person} />\\n\\t\\t\\t\\t\\t\\t{/each}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t<!-- {#if post.person}\\n\\t\\t\\t\\t\\t<div class='person'><PersonLink person={post.person}/></div>\\n\\t\\t\\t\\t{/if} -->\\n\\t\\t\\t</a>\\n\\t\\t{/each}\\n\\t</div>\\n</div>\\n\\n<style lang=\\"scss\\">.main-content {\\n  float: left;\\n  width: 100%; }\\n  .main-content .inner {\\n    border: 1px solid #221f20;\\n    min-height: 100vh; }\\n    .main-content .inner .header {\\n      width: 100%;\\n      display: inline-block;\\n      border-bottom: 1px solid #221f20;\\n      padding: 15px; }\\n      .main-content .inner .header .description {\\n        width: 800px;\\n        max-width: 90%;\\n        margin-left: auto;\\n        margin-right: auto;\\n        margin-top: 40px;\\n        margin-bottom: 20px; }\\n      .main-content .inner .header .filters {\\n        margin-top: 80px;\\n        display: inline-block;\\n        margin-bottom: 10px; }\\n        .main-content .inner .header .filters .filter {\\n          padding: 8px 12px;\\n          border: 1px solid #221f20;\\n          margin-right: 5px;\\n          float: left;\\n          user-select: none;\\n          cursor: pointer;\\n          font-size: 12px; }\\n          .main-content .inner .header .filters .filter:hover {\\n            background: #221f20;\\n            color: #f5f4ee; }\\n          .main-content .inner .header .filters .filter.active {\\n            background: #221f20;\\n            color: #f5f4ee; }\\n    .main-content .inner .single-post {\\n      padding: 15px;\\n      border-bottom: 1px solid #221f20;\\n      text-decoration: none;\\n      display: block;\\n      font-size: 14px; }\\n      .main-content .inner .single-post:last-child {\\n        border-bottom: unset; }\\n      .main-content .inner .single-post:hover {\\n        background: #e0ded7;\\n        cursor: pointer; }\\n      .main-content .inner .single-post .top {\\n        width: 100%;\\n        display: flex;\\n        justify-content: space-between; }\\n        .main-content .inner .single-post .top .type {\\n          font-size: 12px;\\n          text-transform: uppercase;\\n          letter-spacing: 0.5px; }\\n        .main-content .inner .single-post .top .date {\\n          float: right;\\n          margin-top: 5px; }\\n      .main-content .inner .single-post .title {\\n        margin-bottom: 5px; }\\n      .main-content .inner .single-post .people {\\n        font-style: italic; }\\n</style>\\n"],"names":[],"mappings":"AA6ImB,aAAa,4BAAC,CAAC,AAChC,KAAK,CAAE,IAAI,CACX,KAAK,CAAE,IAAI,AAAE,CAAC,AACd,2BAAa,CAAC,MAAM,cAAC,CAAC,AACpB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,UAAU,CAAE,KAAK,AAAE,CAAC,AACpB,2BAAa,CAAC,MAAM,CAAC,OAAO,cAAC,CAAC,AAC5B,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,YAAY,CACrB,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAChC,OAAO,CAAE,IAAI,AAAE,CAAC,AAChB,2BAAa,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,cAAC,CAAC,AACzC,KAAK,CAAE,KAAK,CACZ,SAAS,CAAE,GAAG,CACd,WAAW,CAAE,IAAI,CACjB,YAAY,CAAE,IAAI,CAClB,UAAU,CAAE,IAAI,CAChB,aAAa,CAAE,IAAI,AAAE,CAAC,AACxB,2BAAa,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,cAAC,CAAC,AACrC,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,YAAY,CACrB,aAAa,CAAE,IAAI,AAAE,CAAC,AACtB,2BAAa,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,cAAC,CAAC,AAC7C,OAAO,CAAE,GAAG,CAAC,IAAI,CACjB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,YAAY,CAAE,GAAG,CACjB,KAAK,CAAE,IAAI,CACX,WAAW,CAAE,IAAI,CACjB,MAAM,CAAE,OAAO,CACf,SAAS,CAAE,IAAI,AAAE,CAAC,AAClB,2BAAa,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,qBAAO,MAAM,AAAC,CAAC,AACnD,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,OAAO,AAAE,CAAC,AACnB,2BAAa,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,OAAO,cAAC,CAAC,AACpD,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,OAAO,AAAE,CAAC,AACzB,2BAAa,CAAC,MAAM,CAAC,YAAY,cAAC,CAAC,AACjC,OAAO,CAAE,IAAI,CACb,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAChC,eAAe,CAAE,IAAI,CACrB,OAAO,CAAE,KAAK,CACd,SAAS,CAAE,IAAI,AAAE,CAAC,AAClB,2BAAa,CAAC,MAAM,CAAC,0BAAY,WAAW,AAAC,CAAC,AAC5C,aAAa,CAAE,KAAK,AAAE,CAAC,AACzB,2BAAa,CAAC,MAAM,CAAC,0BAAY,MAAM,AAAC,CAAC,AACvC,UAAU,CAAE,OAAO,CACnB,MAAM,CAAE,OAAO,AAAE,CAAC,AACpB,2BAAa,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,cAAC,CAAC,AACtC,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,AAAE,CAAC,AACjC,2BAAa,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,cAAC,CAAC,AAC5C,SAAS,CAAE,IAAI,CACf,cAAc,CAAE,SAAS,CACzB,cAAc,CAAE,KAAK,AAAE,CAAC,AAC1B,2BAAa,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,cAAC,CAAC,AAC5C,KAAK,CAAE,KAAK,CACZ,UAAU,CAAE,GAAG,AAAE,CAAC,AACtB,2BAAa,CAAC,MAAM,CAAC,YAAY,CAAC,MAAM,cAAC,CAAC,AACxC,aAAa,CAAE,GAAG,AAAE,CAAC,AACvB,2BAAa,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,cAAC,CAAC,AACzC,UAAU,CAAE,MAAM,AAAE,CAAC"}`
};
var load$j = async ({ fetch: fetch2 }) => {
  const res = await fetch2("/everything.json");
  if (res.ok) {
    const everything = await res.json();
    return { props: { everything } };
  }
  const { message } = await res.json();
  return { error: new Error(message) };
};
var Everything = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { everything } = $$props;
  const FILTERS = [
    { label: "Everything", value: "everything" },
    { label: "Programs", value: "program" },
    { label: "Events", value: "event" },
    { label: "Notes", value: "note" },
    { label: "Projects", value: "project" },
    { label: "Videos", value: "videoPost" },
    { label: "Press", value: "press" },
    { label: "News", value: "news" }
  ];
  let activeFilter = "everything";
  let filteredPosts = [];
  if ($$props.everything === void 0 && $$bindings.everything && everything !== void 0)
    $$bindings.everything(everything);
  $$result.css.add(css$d);
  {
    {
      {
        filteredPosts = everything.posts;
      }
    }
  }
  return `${$$result.head += `${$$result.title = `<title>${escape(everything.page.title)}</title>`, ""}`, ""}


<div class="${"main-content svelte-c0wu3o"}"><div class="${"inner svelte-c0wu3o"}"><div class="${"header svelte-c0wu3o"}"><h1>${escape(everything.page.title)}</h1>
			
			${(0, import_has.default)(everything, "page.content.content") ? `<div class="${"body-content description svelte-c0wu3o"}">${validate_component(Blocks, "Blocks").$$render($$result, { blocks: everything.page.content.content }, {}, {})}</div>` : ``}
			<div class="${"filters svelte-c0wu3o"}">${each(FILTERS, (filter) => `<div class="${["filter svelte-c0wu3o", activeFilter == filter.value ? "active" : ""].join(" ").trim()}">${escape(filter.label)}
					</div>`)}</div></div>
		${each(filteredPosts, (post) => `<a${add_attribute("href", "/" + postTypeToCategory[post._type] + "/" + (0, import_get.default)(post, "slug.current"), 0)} class="${"single-post svelte-c0wu3o"}"><div class="${"top svelte-c0wu3o"}">
					<div class="${"type svelte-c0wu3o"}">${escape(postTypeToName[post._type])}</div>
					
					<div class="${"date svelte-c0wu3o"}">${escape(longFormatDate(post._createdAt))}</div></div>
				
				<div class="${"title svelte-c0wu3o"}">${escape(post.title)}</div>
				
				${post.people && post.people.length > 0 ? `<div class="${"people svelte-c0wu3o"}">Including
						${each(post.people, (person) => `${validate_component(Person_link, "PersonLink").$$render($$result, { person }, {}, {})}`)}
					</div>` : ``}
				
			</a>`)}</div>
</div>`;
});
var index$b = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Everything,
  load: load$j
});
var css$c = {
  code: ".main-content.svelte-1wg2gsr.svelte-1wg2gsr{float:left;width:50%;width:calc((100% / 3) * 2)}.main-content.svelte-1wg2gsr .inner.svelte-1wg2gsr{padding:15px;border:1px solid #221f20;min-height:660px;padding-top:0}.main-content.svelte-1wg2gsr .inner h1.svelte-1wg2gsr{margin-bottom:120px}.body-content.svelte-1wg2gsr.svelte-1wg2gsr{margin-bottom:80px}form.svelte-1wg2gsr.svelte-1wg2gsr{width:calc(100% - 120px);margin-right:60px;margin-left:60px}form.svelte-1wg2gsr label.svelte-1wg2gsr{width:100%;margin-bottom:10px;display:block;font-size:12px}form.svelte-1wg2gsr input.svelte-1wg2gsr{margin-bottom:20px;width:100%;height:70px;font-family:inherit}form.svelte-1wg2gsr input.email.svelte-1wg2gsr{border:1px solid #221f20;border-radius:0;background:#f5f4ee;padding-left:20px}form.svelte-1wg2gsr input.subscribe.svelte-1wg2gsr{border:0;background:#221f20;color:#f5f4ee;cursor:pointer;font-size:12px;letter-spacing:1px}",
  map: `{"version":3,"file":"index.svelte","sources":["index.svelte"],"sourcesContent":["<script context=\\"module\\">\\n\\texport const load = async ({ fetch }) => {\\n\\t\\tconst res = await fetch('/newsletter.json');\\n\\t\\tif (res.ok) {\\n\\t\\t\\tconst newsletterPage = await res.json();\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tprops: { newsletterPage }\\n\\t\\t\\t};\\n\\t\\t}\\n\\t\\tconst { message } = await res.json();\\n\\t\\treturn {\\n\\t\\t\\terror: new Error(message)\\n\\t\\t};\\n\\t};\\n<\/script>\\n\\n<script>\\n\\t// # # # # # # # # # # # # #\\n\\t//\\n\\t//  Newsletter\\n\\t//\\n\\t// # # # # # # # # # # # # #\\n\\n\\t// __ IMPORTS\\n\\timport { renderBlockText } from '$lib/sanity.js';\\n\\timport has from 'lodash/has.js';\\n\\n\\t// __ COMPONENTS\\n\\timport Sidebar from '$lib/sidebar/sidebar.svelte';\\n\\timport BottomBar from '$lib/bottom-bar/bottom-bar.svelte';\\n\\n\\t// __ PROPS\\n\\texport let newsletterPage;\\n\\tconsole.log(newsletterPage);\\n\\n\\tlet emailAddress = '';\\n\\tconst subscribe = () => {\\n\\t\\tconsole.log(emailAddress);\\n\\t\\t// window.alert('todo: subscribe');\\n\\t};\\n<\/script>\\n\\n<svelte:head>\\n\\t<title>{newsletterPage.title}</title>\\n</svelte:head>\\n\\n<!-- SIDEBAR -->\\n<Sidebar />\\n\\n<!-- MAIN CONTENT -->\\n<div class=\\"main-content\\">\\n\\t<div class=\\"inner\\">\\n\\t\\t<!-- TITLE -->\\n\\t\\t<h1>{newsletterPage.title}</h1>\\n\\n\\t\\t<!-- MAIN TEXT -->\\n\\t\\t{#if has(newsletterPage, 'content.content')}\\n\\t\\t\\t<div class=\\"body-content\\">\\n\\t\\t\\t\\t{@html renderBlockText(newsletterPage.content.content)}\\n\\t\\t\\t</div>\\n\\t\\t{/if}\\n\\n\\t\\t<!-- <form\\n\\t\\t\\taction=\\"https://eyebeam.us4.list-manage.com/subscribe?u=c72c271895f3f76b36105229c\\"\\n\\t\\t\\tmethod=\\"get\\"\\n\\t\\t\\tid=\\"subscribe\\"\\n\\t\\t\\tclass=\\"\\"\\n\\t\\t>\\n\\t\\t\\t<p>Enter your e-mail to stay up to date on all of our programs</p>\\n\\t\\t\\t<div class=\\"response-loading\\">Please wait...</div>\\n\\t\\t\\t<div class=\\"response-success\\">Thanks for subscribing!</div>\\n\\t\\t\\t<div class=\\"response-error\\">That didn\u2019t work for some reason.</div>\\n\\t\\t\\t<input type=\\"hidden\\" name=\\"u\\" value=\\"c72c271895f3f76b36105229c\\" />\\n\\t\\t\\t<input type=\\"hidden\\" name=\\"id\\" value=\\"bb4e74c232\\" />\\n\\t\\t\\t<label for=\\"MERGE1\\"><input type=\\"text\\" name=\\"MERGE1\\" placeholder=\\"First Name\\" /></label>\\n\\t\\t\\t<label for=\\"MERGE2\\"><input type=\\"text\\" name=\\"MERGE2\\" placeholder=\\"Last Name\\" /></label>\\n\\t\\t\\t<label for=\\"MERGE0\\"><input type=\\"email\\" name=\\"MERGE0\\" placeholder=\\"Email\\" /></label>\\n\\t\\t\\t<input type=\\"submit\\" value=\\"Subscribe\\" />\\n\\t\\t</form> -->\\n\\n\\t\\t<!-- FORM -->\\n\\t\\t<form\\n\\t\\t\\taction=\\"https://eyebeam.us4.list-manage.com/subscribe?u=c72c271895f3f76b36105229c\\"\\n\\t\\t\\tmethod=\\"get\\"\\n\\t\\t\\tid=\\"subscribe\\"\\n\\t\\t\\tclass=\\"\\"\\n\\t\\t>\\n\\t\\t\\t<input type=\\"hidden\\" name=\\"u\\" value=\\"c72c271895f3f76b36105229c\\" />\\n\\t\\t\\t<input type=\\"hidden\\" name=\\"id\\" value=\\"bb4e74c232\\" />\\n\\t\\t\\t<label for=\\"email\\">Your email</label>\\n\\t\\t\\t<input type=\\"email\\" name=\\"MERGE0\\" class=\\"email\\" bind:value={emailAddress} />\\n\\t\\t\\t<input type=\\"submit\\" class=\\"subscribe\\" value=\\"SUBSCRIBE\\" on:click={subscribe} />\\n\\t\\t</form>\\n\\t</div>\\n\\n\\t<!-- BOTTOM BAR -->\\n\\t<BottomBar updatedAt={newsletterPage._updatedAt} />\\n</div>\\n\\n<style lang=\\"scss\\">.main-content {\\n  float: left;\\n  width: 50%;\\n  width: calc((100% / 3) * 2); }\\n  .main-content .inner {\\n    padding: 15px;\\n    border: 1px solid #221f20;\\n    min-height: 660px;\\n    padding-top: 0; }\\n    .main-content .inner h1 {\\n      margin-bottom: 120px; }\\n\\nul {\\n  padding: 0; }\\n  ul li {\\n    list-style: none; }\\n\\n.body-content {\\n  margin-bottom: 80px; }\\n\\nform {\\n  width: calc(100% - 120px);\\n  margin-right: 60px;\\n  margin-left: 60px; }\\n  form label {\\n    width: 100%;\\n    margin-bottom: 10px;\\n    display: block;\\n    font-size: 12px; }\\n  form input {\\n    margin-bottom: 20px;\\n    width: 100%;\\n    height: 70px;\\n    font-family: inherit; }\\n    form input.email {\\n      border: 1px solid #221f20;\\n      border-radius: 0;\\n      background: #f5f4ee;\\n      padding-left: 20px; }\\n    form input.subscribe {\\n      border: 0;\\n      background: #221f20;\\n      color: #f5f4ee;\\n      cursor: pointer;\\n      font-size: 12px;\\n      letter-spacing: 1px; }\\n</style>\\n"],"names":[],"mappings":"AAmGmB,aAAa,8BAAC,CAAC,AAChC,KAAK,CAAE,IAAI,CACX,KAAK,CAAE,GAAG,CACV,KAAK,CAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,AAAE,CAAC,AAC9B,4BAAa,CAAC,MAAM,eAAC,CAAC,AACpB,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,UAAU,CAAE,KAAK,CACjB,WAAW,CAAE,CAAC,AAAE,CAAC,AACjB,4BAAa,CAAC,MAAM,CAAC,EAAE,eAAC,CAAC,AACvB,aAAa,CAAE,KAAK,AAAE,CAAC,AAO7B,aAAa,8BAAC,CAAC,AACb,aAAa,CAAE,IAAI,AAAE,CAAC,AAExB,IAAI,8BAAC,CAAC,AACJ,KAAK,CAAE,KAAK,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CACzB,YAAY,CAAE,IAAI,CAClB,WAAW,CAAE,IAAI,AAAE,CAAC,AACpB,mBAAI,CAAC,KAAK,eAAC,CAAC,AACV,KAAK,CAAE,IAAI,CACX,aAAa,CAAE,IAAI,CACnB,OAAO,CAAE,KAAK,CACd,SAAS,CAAE,IAAI,AAAE,CAAC,AACpB,mBAAI,CAAC,KAAK,eAAC,CAAC,AACV,aAAa,CAAE,IAAI,CACnB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,WAAW,CAAE,OAAO,AAAE,CAAC,AACvB,mBAAI,CAAC,KAAK,MAAM,eAAC,CAAC,AAChB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,aAAa,CAAE,CAAC,CAChB,UAAU,CAAE,OAAO,CACnB,YAAY,CAAE,IAAI,AAAE,CAAC,AACvB,mBAAI,CAAC,KAAK,UAAU,eAAC,CAAC,AACpB,MAAM,CAAE,CAAC,CACT,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,OAAO,CACd,MAAM,CAAE,OAAO,CACf,SAAS,CAAE,IAAI,CACf,cAAc,CAAE,GAAG,AAAE,CAAC"}`
};
var load$i = async ({ fetch: fetch2 }) => {
  const res = await fetch2("/newsletter.json");
  if (res.ok) {
    const newsletterPage = await res.json();
    return { props: { newsletterPage } };
  }
  const { message } = await res.json();
  return { error: new Error(message) };
};
var Newsletter = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { newsletterPage } = $$props;
  console.log(newsletterPage);
  let emailAddress = "";
  if ($$props.newsletterPage === void 0 && $$bindings.newsletterPage && newsletterPage !== void 0)
    $$bindings.newsletterPage(newsletterPage);
  $$result.css.add(css$c);
  return `${$$result.head += `${$$result.title = `<title>${escape(newsletterPage.title)}</title>`, ""}`, ""}


${validate_component(Sidebar, "Sidebar").$$render($$result, {}, {}, {})}


<div class="${"main-content svelte-1wg2gsr"}"><div class="${"inner svelte-1wg2gsr"}">
		<h1 class="${"svelte-1wg2gsr"}">${escape(newsletterPage.title)}</h1>

		
		${(0, import_has.default)(newsletterPage, "content.content") ? `<div class="${"body-content svelte-1wg2gsr"}"><!-- HTML_TAG_START -->${renderBlockText(newsletterPage.content.content)}<!-- HTML_TAG_END --></div>` : ``}

		

		
		<form action="${"https://eyebeam.us4.list-manage.com/subscribe?u=c72c271895f3f76b36105229c"}" method="${"get"}" id="${"subscribe"}" class="${" svelte-1wg2gsr"}"><input type="${"hidden"}" name="${"u"}" value="${"c72c271895f3f76b36105229c"}" class="${"svelte-1wg2gsr"}">
			<input type="${"hidden"}" name="${"id"}" value="${"bb4e74c232"}" class="${"svelte-1wg2gsr"}">
			<label for="${"email"}" class="${"svelte-1wg2gsr"}">Your email</label>
			<input type="${"email"}" name="${"MERGE0"}" class="${"email svelte-1wg2gsr"}"${add_attribute("value", emailAddress, 0)}>
			<input type="${"submit"}" class="${"subscribe svelte-1wg2gsr"}" value="${"SUBSCRIBE"}"></form></div>

	
	${validate_component(Bottom_bar, "BottomBar").$$render($$result, { updatedAt: newsletterPage._updatedAt }, {}, {})}
</div>`;
});
var index$a = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Newsletter,
  load: load$i
});
var css$b = {
  code: ".main-content.svelte-bkkwqq.svelte-bkkwqq{float:left;width:50%;width:calc((100% / 3) * 2)}.main-content.svelte-bkkwqq .inner.svelte-bkkwqq{border:1px solid #221f20;min-height:100vh}.main-content.svelte-bkkwqq .inner .header.svelte-bkkwqq{height:440px;border-bottom:1px solid #221f20;display:flex;justify-content:center;align-items:center}.main-content.svelte-bkkwqq .inner .single-statement.svelte-bkkwqq{padding:15px;margin-bottom:20px}.main-content.svelte-bkkwqq .inner .single-statement .text.svelte-bkkwqq{font-size:32px;line-height:1.2em}.main-content.svelte-bkkwqq .inner .single-statement .person.svelte-bkkwqq{font-size:16px;margin-top:10px}.main-content.svelte-bkkwqq .inner .single-statement .date.svelte-bkkwqq{font-size:16px;margin-top:10px}.single-statement .text p{font-size:32px}",
  map: `{"version":3,"file":"index.svelte","sources":["index.svelte"],"sourcesContent":["<script context=\\"module\\">\\n\\texport const load = async ({ fetch }) => {\\n\\t\\tconst res = await fetch('/statements.json');\\n\\t\\tif (res.ok) {\\n\\t\\t\\tconst statements = await res.json();\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tprops: { statements }\\n\\t\\t\\t};\\n\\t\\t}\\n\\t\\tconst { message } = await res.json();\\n\\t\\treturn {\\n\\t\\t\\terror: new Error(message)\\n\\t\\t};\\n\\t};\\n<\/script>\\n\\n<script>\\n\\t// # # # # # # # # # # # # #\\n\\t//\\n\\t//  All statements\\n\\t//\\n\\t// # # # # # # # # # # # # #\\n\\n\\t// __ IMPORTS\\n\\timport { renderBlockText } from '$lib/sanity.js';\\n\\timport { longFormatDate } from '$lib/global.js';\\n\\n\\t// __ COMPONENTS\\n\\timport Sidebar from '$lib/sidebar/sidebar.svelte';\\n\\timport BottomBar from '$lib/bottom-bar/bottom-bar.svelte';\\n\\timport PersonLink from '$lib/person-link/person-link.svelte';\\n\\n\\t// __ GRAPHICS\\n\\timport BigBeam from '$lib/graphics/big-beam.svelte';\\n\\n\\t// __ PROPS\\n\\texport let statements;\\n<\/script>\\n\\n<svelte:head>\\n\\t<title>Statements</title>\\n</svelte:head>\\n\\n<!-- SIDEBAR -->\\n<Sidebar />\\n\\n<!-- MAIN CONTENT -->\\n<div class=\\"main-content\\">\\n\\t<div class=\\"inner\\">\\n\\t\\t<div class=\\"header\\">\\n\\t\\t\\t<BigBeam />\\n\\t\\t</div>\\n\\t\\t{#each statements as statement}\\n\\t\\t\\t<div class=\\"single-statement\\">\\n\\t\\t\\t\\t<!-- TEXT -->\\n\\t\\t\\t\\t<div class=\\"text\\">{@html renderBlockText(statement.content.content)}</div>\\n\\t\\t\\t\\t<!-- PERSON -->\\n\\t\\t\\t\\t{#if statement.person}\\n\\t\\t\\t\\t\\t<div class=\\"person\\"><PersonLink person={statement.person} /></div>\\n\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t<!-- DATE -->\\n\\t\\t\\t\\t{#if statement.date}\\n\\t\\t\\t\\t\\t<div class=\\"date\\">{longFormatDate(statement.date)}</div>\\n\\t\\t\\t\\t{/if}\\n\\t\\t\\t</div>\\n\\t\\t{/each}\\n\\t</div>\\n\\n\\t<!-- BOTTOM BAR -->\\n\\t<BottomBar />\\n</div>\\n\\n<style lang=\\"scss\\">.main-content {\\n  float: left;\\n  width: 50%;\\n  width: calc((100% / 3) * 2); }\\n  .main-content .inner {\\n    border: 1px solid #221f20;\\n    min-height: 100vh; }\\n    .main-content .inner .header {\\n      height: 440px;\\n      border-bottom: 1px solid #221f20;\\n      display: flex;\\n      justify-content: center;\\n      align-items: center; }\\n    .main-content .inner .single-statement {\\n      padding: 15px;\\n      margin-bottom: 20px; }\\n      .main-content .inner .single-statement .text {\\n        font-size: 32px;\\n        line-height: 1.2em; }\\n      .main-content .inner .single-statement .person {\\n        font-size: 16px;\\n        margin-top: 10px; }\\n      .main-content .inner .single-statement .date {\\n        font-size: 16px;\\n        margin-top: 10px; }\\n\\n:global(.single-statement .text p) {\\n  font-size: 32px; }\\n</style>\\n"],"names":[],"mappings":"AAwEmB,aAAa,4BAAC,CAAC,AAChC,KAAK,CAAE,IAAI,CACX,KAAK,CAAE,GAAG,CACV,KAAK,CAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,AAAE,CAAC,AAC9B,2BAAa,CAAC,MAAM,cAAC,CAAC,AACpB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,UAAU,CAAE,KAAK,AAAE,CAAC,AACpB,2BAAa,CAAC,MAAM,CAAC,OAAO,cAAC,CAAC,AAC5B,MAAM,CAAE,KAAK,CACb,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAChC,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,AAAE,CAAC,AACxB,2BAAa,CAAC,MAAM,CAAC,iBAAiB,cAAC,CAAC,AACtC,OAAO,CAAE,IAAI,CACb,aAAa,CAAE,IAAI,AAAE,CAAC,AACtB,2BAAa,CAAC,MAAM,CAAC,iBAAiB,CAAC,KAAK,cAAC,CAAC,AAC5C,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,KAAK,AAAE,CAAC,AACvB,2BAAa,CAAC,MAAM,CAAC,iBAAiB,CAAC,OAAO,cAAC,CAAC,AAC9C,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,IAAI,AAAE,CAAC,AACrB,2BAAa,CAAC,MAAM,CAAC,iBAAiB,CAAC,KAAK,cAAC,CAAC,AAC5C,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,IAAI,AAAE,CAAC,AAEnB,yBAAyB,AAAE,CAAC,AAClC,SAAS,CAAE,IAAI,AAAE,CAAC"}`
};
var load$h = async ({ fetch: fetch2 }) => {
  const res = await fetch2("/statements.json");
  if (res.ok) {
    const statements = await res.json();
    return { props: { statements } };
  }
  const { message } = await res.json();
  return { error: new Error(message) };
};
var Statements = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { statements } = $$props;
  if ($$props.statements === void 0 && $$bindings.statements && statements !== void 0)
    $$bindings.statements(statements);
  $$result.css.add(css$b);
  return `${$$result.head += `${$$result.title = `<title>Statements</title>`, ""}`, ""}


${validate_component(Sidebar, "Sidebar").$$render($$result, {}, {}, {})}


<div class="${"main-content svelte-bkkwqq"}"><div class="${"inner svelte-bkkwqq"}"><div class="${"header svelte-bkkwqq"}">${validate_component(Big_beam, "BigBeam").$$render($$result, {}, {}, {})}</div>
		${each(statements, (statement) => `<div class="${"single-statement svelte-bkkwqq"}">
				<div class="${"text svelte-bkkwqq"}"><!-- HTML_TAG_START -->${renderBlockText(statement.content.content)}<!-- HTML_TAG_END --></div>
				
				${statement.person ? `<div class="${"person svelte-bkkwqq"}">${validate_component(Person_link, "PersonLink").$$render($$result, { person: statement.person }, {}, {})}</div>` : ``}
				
				${statement.date ? `<div class="${"date svelte-bkkwqq"}">${escape(longFormatDate(statement.date))}</div>` : ``}
			</div>`)}</div>

	
	${validate_component(Bottom_bar, "BottomBar").$$render($$result, {}, {}, {})}
</div>`;
});
var index$9 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Statements,
  load: load$h
});
var css$a = {
  code: ".tile.svelte-bca0hq.svelte-bca0hq{padding:15px;overflow:hidden}.main-content.svelte-bca0hq.svelte-bca0hq{float:left;width:50%;width:calc((100% / 3) * 2)}.main-content.svelte-bca0hq .inner.svelte-bca0hq{width:100%;min-height:100vh;border:1px solid #221f20;display:inline-block}.introduction.svelte-bca0hq.svelte-bca0hq{border-bottom:1px solid #221f20;min-height:440px;padding-top:0;padding-right:30px}.introduction.svelte-bca0hq p.svelte-bca0hq{font-style:italic;font-size:22px}.nav-tile.svelte-bca0hq.svelte-bca0hq{width:50%;min-height:440px;border-bottom:1px solid #221f20;border-right:1px solid #221f20;display:block;float:left;text-decoration:none;cursor:pointer;padding-right:40px}.nav-tile.svelte-bca0hq.svelte-bca0hq:nth-child(odd){border-right:none}.nav-tile.svelte-bca0hq.svelte-bca0hq:nth-last-child(1){border-bottom:none}.nav-tile.svelte-bca0hq.svelte-bca0hq:hover{background:#e0ded7}.nav-tile.svelte-bca0hq.svelte-bca0hq:active{background:#221f20;color:#f5f4ee}.application-container.svelte-bca0hq.svelte-bca0hq{display:flex;align-items:center;background:#e0ded7;padding:15px}.application-container.svelte-bca0hq .circle.svelte-bca0hq{width:20px;height:20px;border-radius:50%;background:#221f20;margin-top:10px}.application-container.svelte-bca0hq .applications-open.svelte-bca0hq{margin-left:10px;font-size:12px}",
  map: `{"version":3,"file":"index.svelte","sources":["index.svelte"],"sourcesContent":["<script context=\\"module\\">\\n\\texport const load = async ({ fetch }) => {\\n\\t\\tconst res = await fetch('/programs.json');\\n\\t\\tif (res.ok) {\\n\\t\\t\\tconst programs = await res.json();\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tprops: { programs }\\n\\t\\t\\t};\\n\\t\\t}\\n\\t\\tconst { message } = await res.json();\\n\\t\\treturn {\\n\\t\\t\\terror: new Error(message)\\n\\t\\t};\\n\\t};\\n<\/script>\\n\\n<script>\\n\\t// # # # # # # # # # # # # #\\n\\t//\\n\\t//  Programs\\n\\t//\\n\\t// # # # # # # # # # # # # #\\n\\n\\t// __ IMPORTS\\n\\timport { renderBlockText } from '$lib/sanity.js';\\n\\timport has from 'lodash/has.js';\\n\\timport { longFormatDate } from '$lib/global';\\n\\timport get from 'lodash/get.js';\\n\\n\\t// __ COMPONENTS\\n\\timport Sidebar from '$lib/sidebar/sidebar.svelte';\\n\\timport BottomBar from '$lib/bottom-bar/bottom-bar.svelte';\\n\\n\\t// __ PROPS\\n\\texport let programs;\\n\\n\\tconst toc = programs.map((p) => {\\n\\t\\treturn { title: p.title, link: '/programs/' + get(p, 'slug.current', '') };\\n\\t});\\n<\/script>\\n\\n<svelte:head>\\n\\t<title>Programs</title>\\n</svelte:head>\\n\\n<!-- SIDEBAR -->\\n<Sidebar {toc} title=\\"Programs\\" />\\n\\n<!-- MAIN CONTENT -->\\n<div class=\\"main-content\\">\\n\\t<div class=\\"inner\\">\\n\\t\\t<div class=\\"tile introduction\\">\\n\\t\\t\\t<!-- TITLE -->\\n\\t\\t\\t<h1>Programs</h1>\\n\\t\\t\\t<!-- INTRODUCTION -->\\n\\t\\t\\t<div class=\\"description\\">\\n\\t\\t\\t\\t<p>\\n\\t\\t\\t\\t\\tPrograms are the primary way Eyebeam enacts it\u2019s mission. Lorem ipsum dolor sit amet,\\n\\t\\t\\t\\t\\tconsectetur adipiscing elit. Curabitur tempor nulla nulla, sit amet efficitur justo\\n\\t\\t\\t\\t\\tvestibulum nec. Donec eget condimentum tortor\\n\\t\\t\\t\\t</p>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<!-- LIST PROGRAMS -->\\n\\t\\t{#each programs as program}\\n\\t\\t\\t<a class=\\"tile nav-tile\\" href={'/programs/' + program.slug.current} sveltekit:prefetch>\\n\\t\\t\\t\\t<!-- TITLE -->\\n\\t\\t\\t\\t<h2>{program.title}</h2>\\n\\t\\t\\t\\t<!-- DESCRIPTION -->\\n\\t\\t\\t\\t{#if has(program, 'introduction.content')}\\n\\t\\t\\t\\t\\t<div class=\\"introduction-text\\">{@html renderBlockText(program.introduction.content)}</div>\\n\\t\\t\\t\\t{/if}\\n\\n\\t\\t\\t\\t{#if program.applicationsOpen}\\n\\t\\t\\t\\t\\t<div class=\\"application-container\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\"circle\\" />\\n\\t\\t\\t\\t\\t\\t<span class=\\"applications-open\\">Applications open</span>\\n\\t\\t\\t\\t\\t\\t<div class=\\"date\\">\\n\\t\\t\\t\\t\\t\\t\\tDue by {longFormatDate(program.applicationEndDate)}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t{/if}\\n\\t\\t\\t</a>\\n\\t\\t{/each}\\n\\t</div>\\n\\n\\t<!-- BOTTOM BAR -->\\n\\t<BottomBar />\\n</div>\\n\\n<style lang=\\"scss\\">.tile {\\n  padding: 15px;\\n  overflow: hidden; }\\n\\n.main-content {\\n  float: left;\\n  width: 50%;\\n  width: calc((100% / 3) * 2); }\\n  .main-content .inner {\\n    width: 100%;\\n    min-height: 100vh;\\n    border: 1px solid #221f20;\\n    display: inline-block; }\\n\\n.introduction {\\n  border-bottom: 1px solid #221f20;\\n  min-height: 440px;\\n  padding-top: 0;\\n  padding-right: 30px; }\\n  .introduction p {\\n    font-style: italic;\\n    font-size: 22px; }\\n\\n.nav-tile {\\n  width: 50%;\\n  min-height: 440px;\\n  border-bottom: 1px solid #221f20;\\n  border-right: 1px solid #221f20;\\n  display: block;\\n  float: left;\\n  text-decoration: none;\\n  cursor: pointer;\\n  padding-right: 40px; }\\n  .nav-tile:nth-child(odd) {\\n    border-right: none; }\\n  .nav-tile:nth-last-child(1) {\\n    border-bottom: none; }\\n  .nav-tile:hover {\\n    background: #e0ded7; }\\n  .nav-tile:active {\\n    background: #221f20;\\n    color: #f5f4ee; }\\n\\n.application-container {\\n  display: flex;\\n  align-items: center;\\n  background: #e0ded7;\\n  padding: 15px; }\\n  .application-container .circle {\\n    width: 20px;\\n    height: 20px;\\n    border-radius: 50%;\\n    background: #221f20;\\n    margin-top: 10px; }\\n  .application-container .applications-open {\\n    margin-left: 10px;\\n    font-size: 12px; }\\n</style>\\n"],"names":[],"mappings":"AA0FmB,KAAK,4BAAC,CAAC,AACxB,OAAO,CAAE,IAAI,CACb,QAAQ,CAAE,MAAM,AAAE,CAAC,AAErB,aAAa,4BAAC,CAAC,AACb,KAAK,CAAE,IAAI,CACX,KAAK,CAAE,GAAG,CACV,KAAK,CAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,AAAE,CAAC,AAC9B,2BAAa,CAAC,MAAM,cAAC,CAAC,AACpB,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,KAAK,CACjB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,OAAO,CAAE,YAAY,AAAE,CAAC,AAE5B,aAAa,4BAAC,CAAC,AACb,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAChC,UAAU,CAAE,KAAK,CACjB,WAAW,CAAE,CAAC,CACd,aAAa,CAAE,IAAI,AAAE,CAAC,AACtB,2BAAa,CAAC,CAAC,cAAC,CAAC,AACf,UAAU,CAAE,MAAM,CAClB,SAAS,CAAE,IAAI,AAAE,CAAC,AAEtB,SAAS,4BAAC,CAAC,AACT,KAAK,CAAE,GAAG,CACV,UAAU,CAAE,KAAK,CACjB,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAChC,YAAY,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAC/B,OAAO,CAAE,KAAK,CACd,KAAK,CAAE,IAAI,CACX,eAAe,CAAE,IAAI,CACrB,MAAM,CAAE,OAAO,CACf,aAAa,CAAE,IAAI,AAAE,CAAC,AACtB,qCAAS,WAAW,GAAG,CAAC,AAAC,CAAC,AACxB,YAAY,CAAE,IAAI,AAAE,CAAC,AACvB,qCAAS,gBAAgB,CAAC,CAAC,AAAC,CAAC,AAC3B,aAAa,CAAE,IAAI,AAAE,CAAC,AACxB,qCAAS,MAAM,AAAC,CAAC,AACf,UAAU,CAAE,OAAO,AAAE,CAAC,AACxB,qCAAS,OAAO,AAAC,CAAC,AAChB,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,OAAO,AAAE,CAAC,AAErB,sBAAsB,4BAAC,CAAC,AACtB,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,UAAU,CAAE,OAAO,CACnB,OAAO,CAAE,IAAI,AAAE,CAAC,AAChB,oCAAsB,CAAC,OAAO,cAAC,CAAC,AAC9B,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,OAAO,CACnB,UAAU,CAAE,IAAI,AAAE,CAAC,AACrB,oCAAsB,CAAC,kBAAkB,cAAC,CAAC,AACzC,WAAW,CAAE,IAAI,CACjB,SAAS,CAAE,IAAI,AAAE,CAAC"}`
};
var load$g = async ({ fetch: fetch2 }) => {
  const res = await fetch2("/programs.json");
  if (res.ok) {
    const programs = await res.json();
    return { props: { programs } };
  }
  const { message } = await res.json();
  return { error: new Error(message) };
};
var Programs = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { programs } = $$props;
  const toc = programs.map((p) => {
    return {
      title: p.title,
      link: "/programs/" + (0, import_get.default)(p, "slug.current", "")
    };
  });
  if ($$props.programs === void 0 && $$bindings.programs && programs !== void 0)
    $$bindings.programs(programs);
  $$result.css.add(css$a);
  return `${$$result.head += `${$$result.title = `<title>Programs</title>`, ""}`, ""}


${validate_component(Sidebar, "Sidebar").$$render($$result, { toc, title: "Programs" }, {}, {})}


<div class="${"main-content svelte-bca0hq"}"><div class="${"inner svelte-bca0hq"}"><div class="${"tile introduction svelte-bca0hq"}">
			<h1>Programs</h1>
			
			<div class="${"description"}"><p class="${"svelte-bca0hq"}">Programs are the primary way Eyebeam enacts it\u2019s mission. Lorem ipsum dolor sit amet,
					consectetur adipiscing elit. Curabitur tempor nulla nulla, sit amet efficitur justo
					vestibulum nec. Donec eget condimentum tortor
				</p></div></div>
		
		${each(programs, (program) => `<a class="${"tile nav-tile svelte-bca0hq"}"${add_attribute("href", "/programs/" + program.slug.current, 0)} sveltekit:prefetch>
				<h2>${escape(program.title)}</h2>
				
				${(0, import_has.default)(program, "introduction.content") ? `<div class="${"introduction-text"}"><!-- HTML_TAG_START -->${renderBlockText(program.introduction.content)}<!-- HTML_TAG_END --></div>` : ``}

				${program.applicationsOpen ? `<div class="${"application-container svelte-bca0hq"}"><div class="${"circle svelte-bca0hq"}"></div>
						<span class="${"applications-open svelte-bca0hq"}">Applications open</span>
						<div class="${"date"}">Due by ${escape(longFormatDate(program.applicationEndDate))}</div>
					</div>` : ``}
			</a>`)}</div>

	
	${validate_component(Bottom_bar, "BottomBar").$$render($$result, {}, {}, {})}
</div>`;
});
var index$8 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Programs,
  load: load$g
});
var css$9 = {
  code: ".main-content.svelte-1sdmjgf.svelte-1sdmjgf{float:left;width:calc((100% / 3) * 2)}@media(max-width: 900px){.main-content.svelte-1sdmjgf.svelte-1sdmjgf{width:100%}}.main-content.svelte-1sdmjgf .inner.svelte-1sdmjgf{border:1px solid #221f20;min-height:100vh}.header.svelte-1sdmjgf.svelte-1sdmjgf{border-bottom:1px solid #221f20;display:inline-block;width:100%;padding:15px;min-height:440px}",
  map: `{"version":3,"file":"[slug].svelte","sources":["[slug].svelte"],"sourcesContent":["<script context=\\"module\\">\\n\\texport const load = async ({ page, fetch, session, stuff }) => {\\n\\t\\tconst res = await fetch(\`/programs/\${page.params.slug}.json\`);\\n\\t\\tif (res.ok) {\\n\\t\\t\\tconst program = await res.json();\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tprops: { program }\\n\\t\\t\\t};\\n\\t\\t}\\n\\t\\tconst { message } = await res.json();\\n\\t\\treturn {\\n\\t\\t\\terror: new Error(message)\\n\\t\\t};\\n\\t};\\n<\/script>\\n\\n<script>\\n\\t// # # # # # # # # # # # # #\\n\\t//\\n\\t//  Single program\\n\\t//\\n\\t// # # # # # # # # # # # # #\\n\\n\\t// __ IMPORTS\\n\\timport { onDestroy } from 'svelte';\\n\\timport get from 'lodash/get.js';\\n\\timport has from 'lodash/has.js';\\n\\timport { parseToc } from '$lib/global.js';\\n\\n\\t// __ STORES\\n\\timport { currentPage } from '$lib/stores.js';\\n\\n\\t// __ COMPONENTS\\n\\timport Sidebar from '$lib/sidebar/sidebar.svelte';\\n\\timport BottomBar from '$lib/bottom-bar/bottom-bar.svelte';\\n\\timport Blocks from '$lib/blocks/blocks.svelte';\\n\\timport SeeAlso from '$lib/see-also/see-also.svelte';\\n\\n\\t// __ PROPS\\n\\texport let program;\\n\\n\\tconst toc = parseToc(get(program, 'content.content'));\\n\\n\\t// __ Set currentPage\\n\\tcurrentPage.set({ slug: get(program, 'slug.current', ''), title: program.title });\\n\\n\\tonDestroy(() => {\\n\\t\\tcurrentPage.set(null);\\n\\t});\\n<\/script>\\n\\n<svelte:head>\\n\\t<title>{program.title}</title>\\n</svelte:head>\\n\\n<!-- SIDEBAR -->\\n<Sidebar title={program.title} {toc} />\\n\\n<!-- MAIN CONTENT -->\\n<div class=\\"main-content\\">\\n\\t<div class=\\"inner\\">\\n\\t\\t<!-- HEADER -->\\n\\t\\t<div class=\\"header\\">\\n\\t\\t\\t<!-- TITLE -->\\n\\t\\t\\t<h1>{program.title}</h1>\\n\\t\\t\\t<!-- INTRODUCTION -->\\n\\t\\t\\t{#if has(program, 'introduction.content', [])}\\n\\t\\t\\t\\t<div><Blocks blocks={program.introduction.content} /></div>\\n\\t\\t\\t{/if}\\n\\t\\t</div>\\n\\n\\t\\t<!-- MAIN TEXT -->\\n\\t\\t{#if has(program, 'content.content', [])}\\n\\t\\t\\t<div class=\\"block-text\\">\\n\\t\\t\\t\\t<Blocks blocks={program.content.content} />\\n\\t\\t\\t</div>\\n\\t\\t{/if}\\n\\n\\t\\t<!-- SEE ALSO -->\\n\\t\\t{#if program.internalLinks || program.externalLinks}\\n\\t\\t\\t<SeeAlso externalLinks={program.externalLinks} internalLinks={program.internalLinks} />\\n\\t\\t{/if}\\n\\t</div>\\n\\n\\t<!-- BOTTOM BAR -->\\n\\t<BottomBar updatedAt={program._updatedAt} />\\n</div>\\n\\n<style lang=\\"scss\\">.main-content {\\n  float: left;\\n  width: calc((100% / 3) * 2); }\\n  @media (max-width: 900px) {\\n    .main-content {\\n      width: 100%; } }\\n  .main-content .inner {\\n    border: 1px solid #221f20;\\n    min-height: 100vh; }\\n  .main-content .main-image {\\n    width: 300px; }\\n\\n.header {\\n  border-bottom: 1px solid #221f20;\\n  display: inline-block;\\n  width: 100%;\\n  padding: 15px;\\n  min-height: 440px; }\\n\\nul {\\n  padding: 0; }\\n  ul li {\\n    list-style: none;\\n    margin-bottom: 5px; }\\n</style>\\n"],"names":[],"mappings":"AAwFmB,aAAa,8BAAC,CAAC,AAChC,KAAK,CAAE,IAAI,CACX,KAAK,CAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,AAAE,CAAC,AAC9B,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,aAAa,8BAAC,CAAC,AACb,KAAK,CAAE,IAAI,AAAE,CAAC,AAAC,CAAC,AACpB,4BAAa,CAAC,MAAM,eAAC,CAAC,AACpB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,UAAU,CAAE,KAAK,AAAE,CAAC,AAIxB,OAAO,8BAAC,CAAC,AACP,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAChC,OAAO,CAAE,YAAY,CACrB,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,KAAK,AAAE,CAAC"}`
};
var load$f = async ({ page: page2, fetch: fetch2, session, stuff }) => {
  const res = await fetch2(`/programs/${page2.params.slug}.json`);
  if (res.ok) {
    const program = await res.json();
    return { props: { program } };
  }
  const { message } = await res.json();
  return { error: new Error(message) };
};
var U5Bslugu5D$7 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { program } = $$props;
  const toc = parseToc((0, import_get.default)(program, "content.content"));
  currentPage.set({
    slug: (0, import_get.default)(program, "slug.current", ""),
    title: program.title
  });
  onDestroy(() => {
    currentPage.set(null);
  });
  if ($$props.program === void 0 && $$bindings.program && program !== void 0)
    $$bindings.program(program);
  $$result.css.add(css$9);
  return `${$$result.head += `${$$result.title = `<title>${escape(program.title)}</title>`, ""}`, ""}


${validate_component(Sidebar, "Sidebar").$$render($$result, { title: program.title, toc }, {}, {})}


<div class="${"main-content svelte-1sdmjgf"}"><div class="${"inner svelte-1sdmjgf"}">
		<div class="${"header svelte-1sdmjgf"}">
			<h1>${escape(program.title)}</h1>
			
			${(0, import_has.default)(program, "introduction.content", []) ? `<div>${validate_component(Blocks, "Blocks").$$render($$result, { blocks: program.introduction.content }, {}, {})}</div>` : ``}</div>

		
		${(0, import_has.default)(program, "content.content", []) ? `<div class="${"block-text"}">${validate_component(Blocks, "Blocks").$$render($$result, { blocks: program.content.content }, {}, {})}</div>` : ``}

		
		${program.internalLinks || program.externalLinks ? `${validate_component(See_also, "SeeAlso").$$render($$result, {
    externalLinks: program.externalLinks,
    internalLinks: program.internalLinks
  }, {}, {})}` : ``}</div>

	
	${validate_component(Bottom_bar, "BottomBar").$$render($$result, { updatedAt: program._updatedAt }, {}, {})}
</div>`;
});
var _slug_$7 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": U5Bslugu5D$7,
  load: load$f
});
async function load$e() {
  return {
    status: 302,
    redirect: "/everything#project"
  };
}
var Projects = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return ``;
});
var index$7 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Projects,
  load: load$e
});
var css$8 = {
  code: ".main-content.svelte-18i7um3.svelte-18i7um3{float:left;width:calc((100% / 3) * 2)}.main-content.svelte-18i7um3 .main-image.svelte-18i7um3{width:300px}.main-content.svelte-18i7um3 .inner.svelte-18i7um3{border:1px solid #221f20;min-height:100vh;display:inline-block;min-width:100%}.main-content.svelte-18i7um3 .inner h1.svelte-18i7um3{padding:20px}.people.svelte-18i7um3.svelte-18i7um3{width:100%;padding:20px}.people.svelte-18i7um3 h2.svelte-18i7um3{margin-bottom:20px}.people.svelte-18i7um3 .people-inner.svelte-18i7um3{display:inline-block;width:100%}.people.svelte-18i7um3 .people-inner .people-link.svelte-18i7um3{margin-bottom:20px;display:block;text-decoration:none;width:calc(50% - 8px);overflow:hidden;float:left}.people.svelte-18i7um3 .people-inner .people-link.svelte-18i7um3:nth-child(odd){margin-right:15px}.people.svelte-18i7um3 .people-inner .people-link .title.svelte-18i7um3{font-size:16px;background:#e0ded7;margin-top:10px;display:inline-block}.people.svelte-18i7um3 .people-inner .people-link .image.svelte-18i7um3{border:1px solid #221f20;min-height:200px;width:100%;line-height:0}.people.svelte-18i7um3 .people-inner .people-link .image img.svelte-18i7um3{width:100%}.image-container.svelte-18i7um3.svelte-18i7um3{max-width:50%;max-height:100%;float:right;margin-right:20px}.image-container.svelte-18i7um3 img.svelte-18i7um3{border:1px solid #221f20;max-height:100%;max-width:100%}",
  map: `{"version":3,"file":"[slug].svelte","sources":["[slug].svelte"],"sourcesContent":["<script context=\\"module\\">\\n\\texport const load = async ({ page, fetch, session, stuff }) => {\\n\\t\\tconst res = await fetch(\`/projects/\${page.params.slug}.json\`);\\n\\t\\tconsole.log('ASFASDF', res);\\n\\t\\tif (res.ok) {\\n\\t\\t\\tconst project = await res.json();\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tprops: { project }\\n\\t\\t\\t};\\n\\t\\t}\\n\\t\\tconst { message } = await res.json();\\n\\t\\treturn {\\n\\t\\t\\terror: new Error(message)\\n\\t\\t};\\n\\t};\\n<\/script>\\n\\n<script>\\n\\t// # # # # # # # # # # # # #\\n\\t//\\n\\t//  Single project\\n\\t//\\n\\t// # # # # # # # # # # # # #\\n\\n\\t// __ IMPORTS\\n\\timport { onDestroy } from 'svelte';\\n\\timport { urlFor } from '$lib/sanity.js';\\n\\timport has from 'lodash/has.js';\\n\\timport get from 'lodash/get.js';\\n\\timport { parseToc } from '$lib/global.js';\\n\\n\\t// __ STORES\\n\\timport { currentPage } from '$lib/stores.js';\\n\\n\\t// __ COMPONENTS\\n\\timport Sidebar from '$lib/sidebar/sidebar.svelte';\\n\\timport BottomBar from '$lib/bottom-bar/bottom-bar.svelte';\\n\\timport Blocks from '$lib/blocks/blocks.svelte';\\n\\timport SeeAlso from '$lib/see-also/see-also.svelte';\\n\\n\\t// __ PROPS\\n\\texport let project;\\n\\n\\tlet toc = parseToc(get(project, 'content.content'));\\n\\ttoc.push({ title: 'People', link: '#people' });\\n\\n\\t// __ Set currentPage\\n\\tcurrentPage.set({ slug: get(project, 'slug.current', ''), title: project.title });\\n\\n\\tonDestroy(() => {\\n\\t\\tcurrentPage.set(null);\\n\\t});\\n<\/script>\\n\\n<svelte:head>\\n\\t<title>{project.title}</title>\\n</svelte:head>\\n\\n<!-- SIDEBAR -->\\n<Sidebar {toc} title={project.title} />\\n\\n<div class=\\"main-content\\">\\n\\t<div class=\\"inner\\">\\n\\t\\t<div>\\n\\t\\t\\t<!-- TITLE -->\\n\\t\\t\\t<h1>{project.title}</h1>\\n\\n\\t\\t\\t<!-- MAIN IMAGE -->\\n\\t\\t\\t{#if project.mainImage}\\n\\t\\t\\t\\t<figure class=\\"image-container\\">\\n\\t\\t\\t\\t\\t<img\\n\\t\\t\\t\\t\\t\\tclass=\\"main-image\\"\\n\\t\\t\\t\\t\\t\\talt={project.title}\\n\\t\\t\\t\\t\\t\\tsrc={urlFor(project.mainImage).quality(90).saturation(-100).width(400).url()}\\n\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t{#if has(project, 'mainImage.caption.content')}\\n\\t\\t\\t\\t\\t\\t<figcaption>\\n\\t\\t\\t\\t\\t\\t\\t<Blocks blocks={project.mainImage.caption.content} />\\n\\t\\t\\t\\t\\t\\t</figcaption>\\n\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t</figure>\\n\\t\\t\\t{/if}\\n\\n\\t\\t\\t<!-- MAIN TEXT -->\\n\\t\\t\\t{#if has(project, 'content.content')}\\n\\t\\t\\t\\t<div class=\\"block-text\\">\\n\\t\\t\\t\\t\\t<Blocks blocks={project.content.content} />\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t{/if}\\n\\t\\t</div>\\n\\n\\t\\t<!-- PEOPLE -->\\n\\t\\t{#if project.people && project.people.length > 0}\\n\\t\\t\\t<div class=\\"people\\" id=\\"people\\">\\n\\t\\t\\t\\t<h2>People</h2>\\n\\t\\t\\t\\t<div class=\\"people-inner\\">\\n\\t\\t\\t\\t\\t{#each project.people as person}\\n\\t\\t\\t\\t\\t\\t<a class=\\"people-link\\" href={'/people/' + person.slug.current} sveltekit:prefetch>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\"image\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{#if person.mainImage}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<img\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\talt={person.title}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tsrc={urlFor(person.mainImage).quality(90).saturation(-100).width(400).url()}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\"text\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\"title\\">{person.title}</span>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t{/each}\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t{/if}\\n\\n\\t\\t<!-- SEE ALSO -->\\n\\t\\t{#if project.internalLinks || project.externalLinks}\\n\\t\\t\\t<SeeAlso externalLinks={project.externalLinks} internalLinks={project.internalLinks} />\\n\\t\\t{/if}\\n\\t</div>\\n\\n\\t<!-- BOTTOM BAR -->\\n\\t<BottomBar updatedAt={project._updatedAt} />\\n</div>\\n\\n<style lang=\\"scss\\">.main-content {\\n  float: left;\\n  width: calc((100% / 3) * 2); }\\n  .main-content .main-image {\\n    width: 300px; }\\n  .main-content .inner {\\n    border: 1px solid #221f20;\\n    min-height: 100vh;\\n    display: inline-block;\\n    min-width: 100%; }\\n    .main-content .inner h1 {\\n      padding: 20px; }\\n    .main-content .inner .body-content {\\n      padding: 20px; }\\n\\n.people {\\n  width: 100%;\\n  padding: 20px; }\\n  .people h2 {\\n    margin-bottom: 20px; }\\n  .people .people-inner {\\n    display: inline-block;\\n    width: 100%; }\\n    .people .people-inner .people-link {\\n      margin-bottom: 20px;\\n      display: block;\\n      text-decoration: none;\\n      width: calc(50% - 8px);\\n      overflow: hidden;\\n      float: left; }\\n      .people .people-inner .people-link:nth-child(odd) {\\n        margin-right: 15px; }\\n      .people .people-inner .people-link .title {\\n        font-size: 16px;\\n        background: #e0ded7;\\n        margin-top: 10px;\\n        display: inline-block; }\\n      .people .people-inner .people-link .image {\\n        border: 1px solid #221f20;\\n        min-height: 200px;\\n        width: 100%;\\n        line-height: 0; }\\n        .people .people-inner .people-link .image img {\\n          width: 100%; }\\n\\n.image-container {\\n  max-width: 50%;\\n  max-height: 100%;\\n  float: right;\\n  margin-right: 20px; }\\n  .image-container img {\\n    border: 1px solid #221f20;\\n    max-height: 100%;\\n    max-width: 100%; }\\n</style>\\n"],"names":[],"mappings":"AA6HmB,aAAa,8BAAC,CAAC,AAChC,KAAK,CAAE,IAAI,CACX,KAAK,CAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,AAAE,CAAC,AAC9B,4BAAa,CAAC,WAAW,eAAC,CAAC,AACzB,KAAK,CAAE,KAAK,AAAE,CAAC,AACjB,4BAAa,CAAC,MAAM,eAAC,CAAC,AACpB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,UAAU,CAAE,KAAK,CACjB,OAAO,CAAE,YAAY,CACrB,SAAS,CAAE,IAAI,AAAE,CAAC,AAClB,4BAAa,CAAC,MAAM,CAAC,EAAE,eAAC,CAAC,AACvB,OAAO,CAAE,IAAI,AAAE,CAAC,AAItB,OAAO,8BAAC,CAAC,AACP,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,AAAE,CAAC,AAChB,sBAAO,CAAC,EAAE,eAAC,CAAC,AACV,aAAa,CAAE,IAAI,AAAE,CAAC,AACxB,sBAAO,CAAC,aAAa,eAAC,CAAC,AACrB,OAAO,CAAE,YAAY,CACrB,KAAK,CAAE,IAAI,AAAE,CAAC,AACd,sBAAO,CAAC,aAAa,CAAC,YAAY,eAAC,CAAC,AAClC,aAAa,CAAE,IAAI,CACnB,OAAO,CAAE,KAAK,CACd,eAAe,CAAE,IAAI,CACrB,KAAK,CAAE,KAAK,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CACtB,QAAQ,CAAE,MAAM,CAChB,KAAK,CAAE,IAAI,AAAE,CAAC,AACd,sBAAO,CAAC,aAAa,CAAC,2BAAY,WAAW,GAAG,CAAC,AAAC,CAAC,AACjD,YAAY,CAAE,IAAI,AAAE,CAAC,AACvB,sBAAO,CAAC,aAAa,CAAC,YAAY,CAAC,MAAM,eAAC,CAAC,AACzC,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,OAAO,CACnB,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,YAAY,AAAE,CAAC,AAC1B,sBAAO,CAAC,aAAa,CAAC,YAAY,CAAC,MAAM,eAAC,CAAC,AACzC,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,UAAU,CAAE,KAAK,CACjB,KAAK,CAAE,IAAI,CACX,WAAW,CAAE,CAAC,AAAE,CAAC,AACjB,sBAAO,CAAC,aAAa,CAAC,YAAY,CAAC,MAAM,CAAC,GAAG,eAAC,CAAC,AAC7C,KAAK,CAAE,IAAI,AAAE,CAAC,AAExB,gBAAgB,8BAAC,CAAC,AAChB,SAAS,CAAE,GAAG,CACd,UAAU,CAAE,IAAI,CAChB,KAAK,CAAE,KAAK,CACZ,YAAY,CAAE,IAAI,AAAE,CAAC,AACrB,+BAAgB,CAAC,GAAG,eAAC,CAAC,AACpB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,UAAU,CAAE,IAAI,CAChB,SAAS,CAAE,IAAI,AAAE,CAAC"}`
};
var load$d = async ({ page: page2, fetch: fetch2, session, stuff }) => {
  const res = await fetch2(`/projects/${page2.params.slug}.json`);
  console.log("ASFASDF", res);
  if (res.ok) {
    const project = await res.json();
    return { props: { project } };
  }
  const { message } = await res.json();
  return { error: new Error(message) };
};
var U5Bslugu5D$6 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { project } = $$props;
  let toc = parseToc((0, import_get.default)(project, "content.content"));
  toc.push({ title: "People", link: "#people" });
  currentPage.set({
    slug: (0, import_get.default)(project, "slug.current", ""),
    title: project.title
  });
  onDestroy(() => {
    currentPage.set(null);
  });
  if ($$props.project === void 0 && $$bindings.project && project !== void 0)
    $$bindings.project(project);
  $$result.css.add(css$8);
  return `${$$result.head += `${$$result.title = `<title>${escape(project.title)}</title>`, ""}`, ""}


${validate_component(Sidebar, "Sidebar").$$render($$result, { toc, title: project.title }, {}, {})}

<div class="${"main-content svelte-18i7um3"}"><div class="${"inner svelte-18i7um3"}"><div>
			<h1 class="${"svelte-18i7um3"}">${escape(project.title)}</h1>

			
			${project.mainImage ? `<figure class="${"image-container svelte-18i7um3"}"><img class="${"main-image svelte-18i7um3"}"${add_attribute("alt", project.title, 0)}${add_attribute("src", urlFor(project.mainImage).quality(90).saturation(-100).width(400).url(), 0)}>
					${(0, import_has.default)(project, "mainImage.caption.content") ? `<figcaption>${validate_component(Blocks, "Blocks").$$render($$result, {
    blocks: project.mainImage.caption.content
  }, {}, {})}</figcaption>` : ``}</figure>` : ``}

			
			${(0, import_has.default)(project, "content.content") ? `<div class="${"block-text"}">${validate_component(Blocks, "Blocks").$$render($$result, { blocks: project.content.content }, {}, {})}</div>` : ``}</div>

		
		${project.people && project.people.length > 0 ? `<div class="${"people svelte-18i7um3"}" id="${"people"}"><h2 class="${"svelte-18i7um3"}">People</h2>
				<div class="${"people-inner svelte-18i7um3"}">${each(project.people, (person) => `<a class="${"people-link svelte-18i7um3"}"${add_attribute("href", "/people/" + person.slug.current, 0)} sveltekit:prefetch><div class="${"image svelte-18i7um3"}">${person.mainImage ? `<img${add_attribute("alt", person.title, 0)}${add_attribute("src", urlFor(person.mainImage).quality(90).saturation(-100).width(400).url(), 0)} class="${"svelte-18i7um3"}">` : ``}</div>
							<div class="${"text"}"><span class="${"title svelte-18i7um3"}">${escape(person.title)}</span></div>
						</a>`)}</div></div>` : ``}

		
		${project.internalLinks || project.externalLinks ? `${validate_component(See_also, "SeeAlso").$$render($$result, {
    externalLinks: project.externalLinks,
    internalLinks: project.internalLinks
  }, {}, {})}` : ``}</div>

	
	${validate_component(Bottom_bar, "BottomBar").$$render($$result, { updatedAt: project._updatedAt }, {}, {})}
</div>`;
});
var _slug_$6 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": U5Bslugu5D$6,
  load: load$d
});
var load$c = async ({ fetch: fetch2 }) => {
  const res = await fetch2("/blog.json");
  if (res.ok) {
    const blog = await res.json();
    return { props: { blog } };
  }
  const { message } = await res.json();
  return { error: new Error(message) };
};
var Journal = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { blog } = $$props;
  if ($$props.blog === void 0 && $$bindings.blog && blog !== void 0)
    $$bindings.blog(blog);
  return `${$$result.head += `${$$result.title = `<title>BLOG</title>`, ""}`, ""}

<h1>BLOG</h1>

<ul>${each(blog, (post) => `<li><a${add_attribute("href", "/blog/" + post.slug.current, 0)} sveltekit:prefetch>${escape(post.title)}</a></li>`)}</ul>`;
});
var index$6 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Journal,
  load: load$c
});
var load$b = async ({ page: page2, fetch: fetch2, session, stuff }) => {
  const res = await fetch2(`/blog/${page2.params.slug}.json`);
  if (res.ok) {
    const post = await res.json();
    return { props: { post } };
  }
  const { message } = await res.json();
  return { error: new Error(message) };
};
var U5Bslugu5D$5 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { post } = $$props;
  if ($$props.post === void 0 && $$bindings.post && post !== void 0)
    $$bindings.post(post);
  return `${$$result.head += `${$$result.title = `<title>${escape(post.title)}</title>`, ""}`, ""}


<h1>${escape(post.title)}</h1>


<img${add_attribute("alt", post.title, 0)}${add_attribute("src", urlFor(post.mainImage).quality(90).saturation(-100).width(400).url(), 0)}>


<div><!-- HTML_TAG_START -->${renderBlockText(post.content.content)}<!-- HTML_TAG_END --></div>


<h2>People</h2>
<ul>${each(post.people, (person) => `<li><a${add_attribute("href", "/people/" + person.slug.current, 0)} sveltekit:prefetch>${escape(person.title)}</a></li>`)}</ul>


<div>Last Updated: ${escape(post._updatedAt)}</div>`;
});
var _slug_$5 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": U5Bslugu5D$5,
  load: load$b
});
var css$7 = {
  code: ".main-content.svelte-1muql63.svelte-1muql63{float:left;width:50%;width:calc((100% / 3) * 2)}.main-content.svelte-1muql63 .inner.svelte-1muql63{padding:15px;border:1px solid #221f20;min-height:100vh}",
  map: `{"version":3,"file":"index.svelte","sources":["index.svelte"],"sourcesContent":["<script context=\\"module\\">\\n\\texport const load = async ({ fetch }) => {\\n\\t\\tconst res = await fetch('/support.json');\\n\\t\\tif (res.ok) {\\n\\t\\t\\tconst supportPage = await res.json();\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tprops: { supportPage }\\n\\t\\t\\t};\\n\\t\\t}\\n\\t\\tconst { message } = await res.json();\\n\\t\\treturn {\\n\\t\\t\\terror: new Error(message)\\n\\t\\t};\\n\\t};\\n<\/script>\\n\\n<script>\\n\\t// # # # # # # # # # # # # #\\n\\t//\\n\\t//  Support\\n\\t//\\n\\t// # # # # # # # # # # # # #\\n\\n\\t// __ IMPORTS\\n\\timport { renderBlockText, urlFor } from '$lib/sanity.js';\\n\\timport has from 'lodash/has.js';\\n\\n\\t// __ COMPONENTS\\n\\timport Sidebar from '$lib/sidebar/sidebar.svelte';\\n\\timport BottomBar from '$lib/bottom-bar/bottom-bar.svelte';\\n\\timport SeeAlso from '$lib/see-also/see-also.svelte';\\n\\n\\t// __ PROPS\\n\\texport let supportPage;\\n<\/script>\\n\\n<svelte:head>\\n\\t<title>{supportPage.title}</title>\\n</svelte:head>\\n\\n<!-- SIDEBAR -->\\n<Sidebar title={supportPage.title} />\\n\\n<!-- MAIN CONTENT -->\\n<div class=\\"main-content\\">\\n\\t<div class=\\"inner\\">\\n\\t\\t<!-- TITLE -->\\n\\t\\t<h1>{supportPage.title}</h1>\\n\\n\\t\\t<!-- MAIN TEXT -->\\n\\t\\t{#if has(supportPage, 'content.content')}\\n\\t\\t\\t<div class=\\"body-content\\">\\n\\t\\t\\t\\t{@html renderBlockText(supportPage.content.content)}\\n\\t\\t\\t</div>\\n\\t\\t{/if}\\n\\n\\t\\t<!-- SEE ALSO -->\\n\\t\\t{#if supportPage.internalLinks || supportPage.externalLinks}\\n\\t\\t\\t<SeeAlso\\n\\t\\t\\t\\texternalLinks={supportPage.externalLinks}\\n\\t\\t\\t\\tinternalLinks={supportPage.internalLinks}\\n\\t\\t\\t/>\\n\\t\\t{/if}\\n\\t</div>\\n\\n\\t<!-- BOTTOM BAR -->\\n\\t<BottomBar updatedAt={supportPage._updatedAt} />\\n</div>\\n\\n<style lang=\\"scss\\">.main-content {\\n  float: left;\\n  width: 50%;\\n  width: calc((100% / 3) * 2); }\\n  .main-content .inner {\\n    padding: 15px;\\n    border: 1px solid #221f20;\\n    min-height: 100vh; }\\n\\nul {\\n  padding: 0; }\\n  ul li {\\n    list-style: none; }\\n</style>\\n"],"names":[],"mappings":"AAqEmB,aAAa,8BAAC,CAAC,AAChC,KAAK,CAAE,IAAI,CACX,KAAK,CAAE,GAAG,CACV,KAAK,CAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,AAAE,CAAC,AAC9B,4BAAa,CAAC,MAAM,eAAC,CAAC,AACpB,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,UAAU,CAAE,KAAK,AAAE,CAAC"}`
};
var load$a = async ({ fetch: fetch2 }) => {
  const res = await fetch2("/support.json");
  if (res.ok) {
    const supportPage = await res.json();
    return { props: { supportPage } };
  }
  const { message } = await res.json();
  return { error: new Error(message) };
};
var Support = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { supportPage } = $$props;
  if ($$props.supportPage === void 0 && $$bindings.supportPage && supportPage !== void 0)
    $$bindings.supportPage(supportPage);
  $$result.css.add(css$7);
  return `${$$result.head += `${$$result.title = `<title>${escape(supportPage.title)}</title>`, ""}`, ""}


${validate_component(Sidebar, "Sidebar").$$render($$result, { title: supportPage.title }, {}, {})}


<div class="${"main-content svelte-1muql63"}"><div class="${"inner svelte-1muql63"}">
		<h1>${escape(supportPage.title)}</h1>

		
		${(0, import_has.default)(supportPage, "content.content") ? `<div class="${"body-content"}"><!-- HTML_TAG_START -->${renderBlockText(supportPage.content.content)}<!-- HTML_TAG_END --></div>` : ``}

		
		${supportPage.internalLinks || supportPage.externalLinks ? `${validate_component(See_also, "SeeAlso").$$render($$result, {
    externalLinks: supportPage.externalLinks,
    internalLinks: supportPage.internalLinks
  }, {}, {})}` : ``}</div>

	
	${validate_component(Bottom_bar, "BottomBar").$$render($$result, { updatedAt: supportPage._updatedAt }, {}, {})}
</div>`;
});
var index$5 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Support,
  load: load$a
});
async function load$9() {
  return {
    status: 302,
    redirect: "/everything#event"
  };
}
var Events = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return ``;
});
var index$4 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Events,
  load: load$9
});
var css$6 = {
  code: ".main-content.svelte-18i7um3.svelte-18i7um3{float:left;width:calc((100% / 3) * 2)}.main-content.svelte-18i7um3 .main-image.svelte-18i7um3{width:300px}.main-content.svelte-18i7um3 .inner.svelte-18i7um3{border:1px solid #221f20;min-height:100vh;display:inline-block;min-width:100%}.main-content.svelte-18i7um3 .inner h1.svelte-18i7um3{padding:20px}.people.svelte-18i7um3.svelte-18i7um3{width:100%;padding:20px}.people.svelte-18i7um3 h2.svelte-18i7um3{margin-bottom:20px}.people.svelte-18i7um3 .people-inner.svelte-18i7um3{display:inline-block;width:100%}.people.svelte-18i7um3 .people-inner .people-link.svelte-18i7um3{margin-bottom:20px;display:block;text-decoration:none;width:calc(50% - 8px);overflow:hidden;float:left}.people.svelte-18i7um3 .people-inner .people-link.svelte-18i7um3:nth-child(odd){margin-right:15px}.people.svelte-18i7um3 .people-inner .people-link .title.svelte-18i7um3{font-size:16px;background:#e0ded7;margin-top:10px;display:inline-block}.people.svelte-18i7um3 .people-inner .people-link .image.svelte-18i7um3{border:1px solid #221f20;min-height:200px;width:100%;line-height:0}.people.svelte-18i7um3 .people-inner .people-link .image img.svelte-18i7um3{width:100%}.image-container.svelte-18i7um3.svelte-18i7um3{max-width:50%;max-height:100%;float:right;margin-right:20px}.image-container.svelte-18i7um3 img.svelte-18i7um3{border:1px solid #221f20;max-height:100%;max-width:100%}",
  map: `{"version":3,"file":"[slug].svelte","sources":["[slug].svelte"],"sourcesContent":["<script context=\\"module\\">\\n\\texport const load = async ({ page, fetch, session, stuff }) => {\\n\\t\\tconst res = await fetch(\`/events/\${page.params.slug}.json\`);\\n\\t\\tif (res.ok) {\\n\\t\\t\\tconst event = await res.json();\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tprops: { event }\\n\\t\\t\\t};\\n\\t\\t}\\n\\t\\tconst { message } = await res.json();\\n\\t\\treturn {\\n\\t\\t\\terror: new Error(message)\\n\\t\\t};\\n\\t};\\n<\/script>\\n\\n<script>\\n\\t// # # # # # # # # # # # # #\\n\\t//\\n\\t//  Single event\\n\\t//\\n\\t// # # # # # # # # # # # # #\\n\\n\\t// __ IMPORTS\\n\\timport { onDestroy } from 'svelte';\\n\\timport { urlFor } from '$lib/sanity.js';\\n\\timport has from 'lodash/has.js';\\n\\timport get from 'lodash/get.js';\\n\\timport { parseToc } from '$lib/global.js';\\n\\n\\t// __ STORES\\n\\timport { currentPage } from '$lib/stores.js';\\n\\n\\t// __ COMPONENTS\\n\\timport Sidebar from '$lib/sidebar/sidebar.svelte';\\n\\timport BottomBar from '$lib/bottom-bar/bottom-bar.svelte';\\n\\timport Blocks from '$lib/blocks/blocks.svelte';\\n\\timport SeeAlso from '$lib/see-also/see-also.svelte';\\n\\n\\t// __ PROPS\\n\\texport let event;\\n\\n\\tlet toc = parseToc(get(event, 'content.content'));\\n\\ttoc.push({ title: 'People', link: '#people' });\\n\\n\\t// __ Set currentPage\\n\\tcurrentPage.set({ slug: get(event, 'slug.current', ''), title: event.title });\\n\\n\\tonDestroy(() => {\\n\\t\\tcurrentPage.set(null);\\n\\t});\\n<\/script>\\n\\n<svelte:head>\\n\\t<title>{event.title}</title>\\n</svelte:head>\\n\\n<!-- SIDEBAR -->\\n<Sidebar title={event.title} {toc} />\\n\\n<div class=\\"main-content\\">\\n\\t<div class=\\"inner\\">\\n\\t\\t<div>\\n\\t\\t\\t<!-- TITLE -->\\n\\t\\t\\t<h1>{event.title}</h1>\\n\\n\\t\\t\\t<!-- MAIN IMAGE -->\\n\\t\\t\\t{#if event.mainImage}\\n\\t\\t\\t\\t<figure class=\\"image-container\\">\\n\\t\\t\\t\\t\\t<img\\n\\t\\t\\t\\t\\t\\tclass=\\"main-image\\"\\n\\t\\t\\t\\t\\t\\talt={event.title}\\n\\t\\t\\t\\t\\t\\tsrc={urlFor(event.mainImage).quality(90).saturation(-100).width(400).url()}\\n\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t{#if has(event, 'mainImage.caption.content')}\\n\\t\\t\\t\\t\\t\\t<figcaption>\\n\\t\\t\\t\\t\\t\\t\\t<Blocks blocks={event.mainImage.caption.content} />\\n\\t\\t\\t\\t\\t\\t</figcaption>\\n\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t</figure>\\n\\t\\t\\t{/if}\\n\\n\\t\\t\\t<!-- MAIN TEXT -->\\n\\t\\t\\t{#if has(event, 'content.content')}\\n\\t\\t\\t\\t<div class=\\"block-text\\">\\n\\t\\t\\t\\t\\t<Blocks blocks={event.content.content} />\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t{/if}\\n\\t\\t</div>\\n\\n\\t\\t<!-- PEOPLE -->\\n\\t\\t<div class=\\"people\\" id=\\"people\\">\\n\\t\\t\\t<h2>People</h2>\\n\\t\\t\\t<div class=\\"people-inner\\">\\n\\t\\t\\t\\t{#each event.people as person}\\n\\t\\t\\t\\t\\t<a class=\\"people-link\\" href={'/people/' + person.slug.current} sveltekit:prefetch>\\n\\t\\t\\t\\t\\t\\t<div class=\\"image\\">\\n\\t\\t\\t\\t\\t\\t\\t{#if person.mainImage}\\n\\t\\t\\t\\t\\t\\t\\t\\t<img\\n\\t\\t\\t\\t\\t\\t\\t\\t\\talt={person.title}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tsrc={urlFor(person.mainImage).quality(90).saturation(-100).width(400).url()}\\n\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\"text\\">\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\"title\\">{person.title}</span>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t{/each}\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\n\\t\\t<!-- SEE ALSO -->\\n\\t\\t{#if event.internalLinks || event.externalLinks}\\n\\t\\t\\t<SeeAlso externalLinks={event.externalLinks} internalLinks={event.internalLinks} />\\n\\t\\t{/if}\\n\\t</div>\\n\\n\\t<!-- BOTTOM BAR -->\\n\\t<BottomBar updatedAt={event._updatedAt} />\\n</div>\\n\\n<style lang=\\"scss\\">.main-content {\\n  float: left;\\n  width: calc((100% / 3) * 2); }\\n  .main-content .main-image {\\n    width: 300px; }\\n  .main-content .inner {\\n    border: 1px solid #221f20;\\n    min-height: 100vh;\\n    display: inline-block;\\n    min-width: 100%; }\\n    .main-content .inner h1 {\\n      padding: 20px; }\\n    .main-content .inner .body-content {\\n      padding: 20px; }\\n\\n.people {\\n  width: 100%;\\n  padding: 20px; }\\n  .people h2 {\\n    margin-bottom: 20px; }\\n  .people .people-inner {\\n    display: inline-block;\\n    width: 100%; }\\n    .people .people-inner .people-link {\\n      margin-bottom: 20px;\\n      display: block;\\n      text-decoration: none;\\n      width: calc(50% - 8px);\\n      overflow: hidden;\\n      float: left; }\\n      .people .people-inner .people-link:nth-child(odd) {\\n        margin-right: 15px; }\\n      .people .people-inner .people-link .title {\\n        font-size: 16px;\\n        background: #e0ded7;\\n        margin-top: 10px;\\n        display: inline-block; }\\n      .people .people-inner .people-link .image {\\n        border: 1px solid #221f20;\\n        min-height: 200px;\\n        width: 100%;\\n        line-height: 0; }\\n        .people .people-inner .people-link .image img {\\n          width: 100%; }\\n\\n.image-container {\\n  max-width: 50%;\\n  max-height: 100%;\\n  float: right;\\n  margin-right: 20px; }\\n  .image-container img {\\n    border: 1px solid #221f20;\\n    max-height: 100%;\\n    max-width: 100%; }\\n</style>\\n"],"names":[],"mappings":"AA0HmB,aAAa,8BAAC,CAAC,AAChC,KAAK,CAAE,IAAI,CACX,KAAK,CAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,AAAE,CAAC,AAC9B,4BAAa,CAAC,WAAW,eAAC,CAAC,AACzB,KAAK,CAAE,KAAK,AAAE,CAAC,AACjB,4BAAa,CAAC,MAAM,eAAC,CAAC,AACpB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,UAAU,CAAE,KAAK,CACjB,OAAO,CAAE,YAAY,CACrB,SAAS,CAAE,IAAI,AAAE,CAAC,AAClB,4BAAa,CAAC,MAAM,CAAC,EAAE,eAAC,CAAC,AACvB,OAAO,CAAE,IAAI,AAAE,CAAC,AAItB,OAAO,8BAAC,CAAC,AACP,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,AAAE,CAAC,AAChB,sBAAO,CAAC,EAAE,eAAC,CAAC,AACV,aAAa,CAAE,IAAI,AAAE,CAAC,AACxB,sBAAO,CAAC,aAAa,eAAC,CAAC,AACrB,OAAO,CAAE,YAAY,CACrB,KAAK,CAAE,IAAI,AAAE,CAAC,AACd,sBAAO,CAAC,aAAa,CAAC,YAAY,eAAC,CAAC,AAClC,aAAa,CAAE,IAAI,CACnB,OAAO,CAAE,KAAK,CACd,eAAe,CAAE,IAAI,CACrB,KAAK,CAAE,KAAK,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CACtB,QAAQ,CAAE,MAAM,CAChB,KAAK,CAAE,IAAI,AAAE,CAAC,AACd,sBAAO,CAAC,aAAa,CAAC,2BAAY,WAAW,GAAG,CAAC,AAAC,CAAC,AACjD,YAAY,CAAE,IAAI,AAAE,CAAC,AACvB,sBAAO,CAAC,aAAa,CAAC,YAAY,CAAC,MAAM,eAAC,CAAC,AACzC,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,OAAO,CACnB,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,YAAY,AAAE,CAAC,AAC1B,sBAAO,CAAC,aAAa,CAAC,YAAY,CAAC,MAAM,eAAC,CAAC,AACzC,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,UAAU,CAAE,KAAK,CACjB,KAAK,CAAE,IAAI,CACX,WAAW,CAAE,CAAC,AAAE,CAAC,AACjB,sBAAO,CAAC,aAAa,CAAC,YAAY,CAAC,MAAM,CAAC,GAAG,eAAC,CAAC,AAC7C,KAAK,CAAE,IAAI,AAAE,CAAC,AAExB,gBAAgB,8BAAC,CAAC,AAChB,SAAS,CAAE,GAAG,CACd,UAAU,CAAE,IAAI,CAChB,KAAK,CAAE,KAAK,CACZ,YAAY,CAAE,IAAI,AAAE,CAAC,AACrB,+BAAgB,CAAC,GAAG,eAAC,CAAC,AACpB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,UAAU,CAAE,IAAI,CAChB,SAAS,CAAE,IAAI,AAAE,CAAC"}`
};
var load$8 = async ({ page: page2, fetch: fetch2, session, stuff }) => {
  const res = await fetch2(`/events/${page2.params.slug}.json`);
  if (res.ok) {
    const event = await res.json();
    return { props: { event } };
  }
  const { message } = await res.json();
  return { error: new Error(message) };
};
var U5Bslugu5D$4 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { event } = $$props;
  let toc = parseToc((0, import_get.default)(event, "content.content"));
  toc.push({ title: "People", link: "#people" });
  currentPage.set({
    slug: (0, import_get.default)(event, "slug.current", ""),
    title: event.title
  });
  onDestroy(() => {
    currentPage.set(null);
  });
  if ($$props.event === void 0 && $$bindings.event && event !== void 0)
    $$bindings.event(event);
  $$result.css.add(css$6);
  return `${$$result.head += `${$$result.title = `<title>${escape(event.title)}</title>`, ""}`, ""}


${validate_component(Sidebar, "Sidebar").$$render($$result, { title: event.title, toc }, {}, {})}

<div class="${"main-content svelte-18i7um3"}"><div class="${"inner svelte-18i7um3"}"><div>
			<h1 class="${"svelte-18i7um3"}">${escape(event.title)}</h1>

			
			${event.mainImage ? `<figure class="${"image-container svelte-18i7um3"}"><img class="${"main-image svelte-18i7um3"}"${add_attribute("alt", event.title, 0)}${add_attribute("src", urlFor(event.mainImage).quality(90).saturation(-100).width(400).url(), 0)}>
					${(0, import_has.default)(event, "mainImage.caption.content") ? `<figcaption>${validate_component(Blocks, "Blocks").$$render($$result, { blocks: event.mainImage.caption.content }, {}, {})}</figcaption>` : ``}</figure>` : ``}

			
			${(0, import_has.default)(event, "content.content") ? `<div class="${"block-text"}">${validate_component(Blocks, "Blocks").$$render($$result, { blocks: event.content.content }, {}, {})}</div>` : ``}</div>

		
		<div class="${"people svelte-18i7um3"}" id="${"people"}"><h2 class="${"svelte-18i7um3"}">People</h2>
			<div class="${"people-inner svelte-18i7um3"}">${each(event.people, (person) => `<a class="${"people-link svelte-18i7um3"}"${add_attribute("href", "/people/" + person.slug.current, 0)} sveltekit:prefetch><div class="${"image svelte-18i7um3"}">${person.mainImage ? `<img${add_attribute("alt", person.title, 0)}${add_attribute("src", urlFor(person.mainImage).quality(90).saturation(-100).width(400).url(), 0)} class="${"svelte-18i7um3"}">` : ``}</div>
						<div class="${"text"}"><span class="${"title svelte-18i7um3"}">${escape(person.title)}</span></div>
					</a>`)}</div></div>

		
		${event.internalLinks || event.externalLinks ? `${validate_component(See_also, "SeeAlso").$$render($$result, {
    externalLinks: event.externalLinks,
    internalLinks: event.internalLinks
  }, {}, {})}` : ``}</div>

	
	${validate_component(Bottom_bar, "BottomBar").$$render($$result, { updatedAt: event._updatedAt }, {}, {})}
</div>`;
});
var _slug_$4 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": U5Bslugu5D$4,
  load: load$8
});
var css$5 = {
  code: ".main-content.svelte-1eogtlq.svelte-1eogtlq{float:left;width:50%;width:calc((100% / 3) * 2)}.main-content.svelte-1eogtlq .alphabetical-navigation.svelte-1eogtlq{background:#f5f4ee;display:flex;flex-direction:column;position:absolute;top:80px;right:60px;width:40px;user-select:none}.main-content.svelte-1eogtlq .alphabetical-navigation .item.svelte-1eogtlq{height:40px;line-height:40px;text-align:center;display:block;width:40px;border-bottom:1px solid #221f20;border-right:1px solid #221f20;border-left:1px solid #221f20;text-decoration:none;cursor:pointer}.main-content.svelte-1eogtlq .alphabetical-navigation .item.svelte-1eogtlq:first-child{border-top:1px solid #221f20}.main-content.svelte-1eogtlq .alphabetical-navigation .item.svelte-1eogtlq:hover{background:#e0ded7}.main-content.svelte-1eogtlq .inner.svelte-1eogtlq{border:1px solid #221f20;min-height:100vh}.main-content.svelte-1eogtlq .inner .header.svelte-1eogtlq{border-bottom:1px solid #221f20;padding-left:15px;padding-right:15px;padding-bottom:40px}.main-content.svelte-1eogtlq .inner .header .order.svelte-1eogtlq{margin-top:15px;width:100%}.main-content.svelte-1eogtlq .inner .header .order .order-header.svelte-1eogtlq{font-style:italic;font-size:12px;margin-bottom:5px}.main-content.svelte-1eogtlq .inner .header .order .order-options.svelte-1eogtlq{display:flex}.main-content.svelte-1eogtlq .inner .header .order .order-options .order-option.svelte-1eogtlq{padding:8px 12px;margin-right:8px;border:1px solid #221f20;user-select:none;cursor:pointer;font-size:12px;background:#e0ded7}.main-content.svelte-1eogtlq .inner .header .order .order-options .order-option .icon.svelte-1eogtlq{margin-left:8px}.main-content.svelte-1eogtlq .inner .header .order .order-options .order-option.active.svelte-1eogtlq{background:#f5f4ee}.main-content.svelte-1eogtlq .inner .header .order .order-options .order-option.svelte-1eogtlq:hover{background:#f5f4ee}.main-content.svelte-1eogtlq .inner .header .filter.svelte-1eogtlq{margin-top:15px;width:100%}.main-content.svelte-1eogtlq .inner .header .filter .filter-header.svelte-1eogtlq{font-style:italic;font-size:12px;margin-bottom:5px}.main-content.svelte-1eogtlq .inner .header .filter .filter-options.svelte-1eogtlq{display:flex}.main-content.svelte-1eogtlq .inner .header .filter .filter-options .filter-option.svelte-1eogtlq{padding:8px 12px;margin-right:8px;border:1px solid #221f20;user-select:none;cursor:pointer;font-size:12px;background:#e0ded7}.main-content.svelte-1eogtlq .inner .header .filter .filter-options .filter-option.active.svelte-1eogtlq{background:#f5f4ee}.main-content.svelte-1eogtlq .inner .header .filter .filter-options .filter-option.svelte-1eogtlq:hover{background:#f5f4ee}.main-content.svelte-1eogtlq .inner .sub-section.svelte-1eogtlq{border-bottom:1px solid #221f20;padding:15px}.main-content.svelte-1eogtlq .inner .sub-section.svelte-1eogtlq:last-child{border-bottom:none}ul.svelte-1eogtlq.svelte-1eogtlq{padding:0}ul.svelte-1eogtlq li.svelte-1eogtlq{list-style:none;margin-bottom:5px;font-size:16px}.supersized.svelte-1eogtlq.svelte-1eogtlq{font-size:54px}",
  map: `{"version":3,"file":"index.svelte","sources":["index.svelte"],"sourcesContent":["<script context=\\"module\\">\\n\\texport const load = async ({ fetch }) => {\\n\\t\\tconst res = await fetch('/people.json');\\n\\t\\tif (res.ok) {\\n\\t\\t\\tconst people = await res.json();\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tprops: { people }\\n\\t\\t\\t};\\n\\t\\t}\\n\\t\\tconst { message } = await res.json();\\n\\t\\treturn {\\n\\t\\t\\terror: new Error(message)\\n\\t\\t};\\n\\t};\\n<\/script>\\n\\n<script>\\n\\t// # # # # # # # # # # # # #\\n\\t//\\n\\t//  People\\n\\t//\\n\\t// # # # # # # # # # # # # #\\n\\n\\t// __ IMPORTS\\n\\timport groupBy from 'lodash/groupBy.js';\\n\\n\\timport { getCurrentYear } from '$lib/global.js';\\n\\n\\t// __ COMPONENTS\\n\\timport Sidebar from '$lib/sidebar/sidebar.svelte';\\n\\timport BottomBar from '$lib/bottom-bar/bottom-bar.svelte';\\n\\timport PersonLink from '$lib/person-link/person-link.svelte';\\n\\n\\t// __ GRAPHICS\\n\\timport ArrowDown from '$lib/graphics/arrow-down.svelte';\\n\\n\\t// __ PROPS\\n\\texport let people;\\n\\tconsole.log('people', people);\\n\\n\\t// __ VARIABLES\\n\\tconst START_YEAR = 1997;\\n\\tconst CURRENT_YEAR = getCurrentYear();\\n\\tconst ALPHABET = [\\n\\t\\t'A',\\n\\t\\t'B',\\n\\t\\t'C',\\n\\t\\t'D',\\n\\t\\t'E',\\n\\t\\t'F',\\n\\t\\t'G',\\n\\t\\t'H',\\n\\t\\t'I',\\n\\t\\t'J',\\n\\t\\t'K',\\n\\t\\t'L',\\n\\t\\t'M',\\n\\t\\t'N',\\n\\t\\t'O',\\n\\t\\t'P',\\n\\t\\t'Q',\\n\\t\\t'R',\\n\\t\\t'S',\\n\\t\\t'T',\\n\\t\\t'U',\\n\\t\\t'V',\\n\\t\\t'W',\\n\\t\\t'X',\\n\\t\\t'Y',\\n\\t\\t'Z'\\n\\t];\\n\\tconst FILTER_OPTIONS = [\\n\\t\\t{\\n\\t\\t\\tlabel: 'Everyone',\\n\\t\\t\\tvalue: 'everyone'\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\tlabel: 'Artists',\\n\\t\\t\\tvalue: 'artist'\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\tlabel: 'Staff',\\n\\t\\t\\tvalue: 'staff'\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\tlabel: 'Board',\\n\\t\\t\\tvalue: 'board'\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\tlabel: 'Advisory Committee',\\n\\t\\t\\tvalue: 'advisoryCommittee'\\n\\t\\t}\\n\\t];\\n\\tlet YEAR_LIST = [];\\n\\n\\tfor (let i = START_YEAR; i <= CURRENT_YEAR; i++) {\\n\\t\\tYEAR_LIST.push(i);\\n\\t}\\n\\tconsole.log(YEAR_LIST);\\n\\n\\tlet filteredPeople = [];\\n\\tlet groupedPeopleAlpha = {};\\n\\tlet groupedPeopleChrono = {};\\n\\n\\tconsole.log(getCurrentYear());\\n\\n\\tlet activeFilter = 'everyone';\\n\\tlet order = 'alphabetical';\\n\\n\\tconst scrollToSection = (alpha) => {\\n\\t\\tconst el = document.querySelector('#' + alpha);\\n\\t\\tel.scrollIntoView({ behavior: 'smooth' });\\n\\t\\thistory.replaceState(null, null, '#' + alpha);\\n\\t};\\n\\n\\t$: {\\n\\t\\tif (activeFilter === 'everyone') {\\n\\t\\t\\tfilteredPeople = people;\\n\\t\\t} else {\\n\\t\\t\\tfilteredPeople = people.filter((p) => p.role === activeFilter);\\n\\t\\t}\\n\\t\\tgroupedPeopleAlpha = groupBy(filteredPeople, (p) => p.lastName.charAt(0));\\n\\t\\tgroupedPeopleChrono = groupBy(filteredPeople, (p) => p.firstEngagement);\\n\\t}\\n<\/script>\\n\\n<svelte:head>\\n\\t<title>People</title>\\n</svelte:head>\\n\\n<!-- SIDEBAR -->\\n<Sidebar />\\n\\n<!-- MAIN CONTENT -->\\n<div class=\\"main-content\\">\\n\\t<div class=\\"inner\\">\\n\\t\\t{#if order == 'alphabetical'}\\n\\t\\t\\t<!-- ALPHABETICAL NAVIGATION -->\\n\\t\\t\\t<div class=\\"alphabetical-navigation\\">\\n\\t\\t\\t\\t{#each ALPHABET as alpha}\\n\\t\\t\\t\\t\\t<div\\n\\t\\t\\t\\t\\t\\tclass=\\"item\\"\\n\\t\\t\\t\\t\\t\\ton:click={() => {\\n\\t\\t\\t\\t\\t\\t\\tscrollToSection(alpha);\\n\\t\\t\\t\\t\\t\\t}}\\n\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t{alpha}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t{/each}\\n\\t\\t\\t</div>\\n\\t\\t{/if}\\n\\t\\t{#if order == 'chronological'}\\n\\t\\t\\t<!-- CHRONOLOGICAL NAVIGATION -->\\n\\t\\t\\t<div class=\\"alphabetical-navigation\\">\\n\\t\\t\\t\\t{#each YEAR_LIST as year}\\n\\t\\t\\t\\t\\t<div\\n\\t\\t\\t\\t\\t\\tclass=\\"item\\"\\n\\t\\t\\t\\t\\t\\ton:click={() => {\\n\\t\\t\\t\\t\\t\\t\\tscrollToSection('year' + year);\\n\\t\\t\\t\\t\\t\\t}}\\n\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t{year}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t{/each}\\n\\t\\t\\t</div>\\n\\t\\t{/if}\\n\\n\\t\\t<!-- HEADER -->\\n\\t\\t<div class=\\"header\\">\\n\\t\\t\\t<h1>People</h1>\\n\\t\\t\\t<!-- ORDER -->\\n\\t\\t\\t<div class=\\"order\\">\\n\\t\\t\\t\\t<div class=\\"order-header\\">Order by</div>\\n\\t\\t\\t\\t<div class=\\"order-options\\">\\n\\t\\t\\t\\t\\t<div\\n\\t\\t\\t\\t\\t\\tclass=\\"order-option alphabetical\\"\\n\\t\\t\\t\\t\\t\\tclass:active={order === 'alphabetical'}\\n\\t\\t\\t\\t\\t\\ton:click={() => {\\n\\t\\t\\t\\t\\t\\t\\torder = 'alphabetical';\\n\\t\\t\\t\\t\\t\\t}}\\n\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\tA-Z <span class=\\"icon\\"><ArrowDown /></span>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div\\n\\t\\t\\t\\t\\t\\tclass=\\"order-option chronological\\"\\n\\t\\t\\t\\t\\t\\tclass:active={order === 'chronological'}\\n\\t\\t\\t\\t\\t\\ton:click={() => {\\n\\t\\t\\t\\t\\t\\t\\torder = 'chronological';\\n\\t\\t\\t\\t\\t\\t}}\\n\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\tYear <span class=\\"icon\\"><ArrowDown /></span>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<!-- FILTER -->\\n\\t\\t\\t<div class=\\"filter\\">\\n\\t\\t\\t\\t<div class=\\"filter-header\\">Show</div>\\n\\t\\t\\t\\t<div class=\\"filter-options\\">\\n\\t\\t\\t\\t\\t{#each FILTER_OPTIONS as option}\\n\\t\\t\\t\\t\\t\\t<div\\n\\t\\t\\t\\t\\t\\t\\tclass=\\"filter-option\\"\\n\\t\\t\\t\\t\\t\\t\\tclass:active={activeFilter === option.value}\\n\\t\\t\\t\\t\\t\\t\\ton:click={() => {\\n\\t\\t\\t\\t\\t\\t\\t\\tactiveFilter = option.value;\\n\\t\\t\\t\\t\\t\\t\\t}}\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t{option.label}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t{/each}\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\n\\t\\t<!-- LIST -->\\n\\t\\t{#if order == 'alphabetical'}\\n\\t\\t\\t{#each ALPHABET as alpha}\\n\\t\\t\\t\\t<div class=\\"sub-section\\" id={alpha}>\\n\\t\\t\\t\\t\\t<h2 class=\\"supersized\\">{alpha}</h2>\\n\\t\\t\\t\\t\\t{#if groupedPeopleAlpha[alpha]}\\n\\t\\t\\t\\t\\t\\t<ul>\\n\\t\\t\\t\\t\\t\\t\\t{#each groupedPeopleAlpha[alpha] as person}\\n\\t\\t\\t\\t\\t\\t\\t\\t<li><PersonLink {person} /></li>\\n\\t\\t\\t\\t\\t\\t\\t{/each}\\n\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t{/each}\\n\\t\\t{/if}\\n\\t\\t{#if order == 'chronological'}\\n\\t\\t\\t{#each YEAR_LIST as year}\\n\\t\\t\\t\\t<div class=\\"sub-section\\" id={'year' + year}>\\n\\t\\t\\t\\t\\t<h2 class=\\"supersized\\">{year}</h2>\\n\\t\\t\\t\\t\\t{#if groupedPeopleChrono[year]}\\n\\t\\t\\t\\t\\t\\t<ul>\\n\\t\\t\\t\\t\\t\\t\\t{#each groupedPeopleChrono[year] as person}\\n\\t\\t\\t\\t\\t\\t\\t\\t<li><PersonLink {person} /></li>\\n\\t\\t\\t\\t\\t\\t\\t{/each}\\n\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t{/each}\\n\\t\\t{/if}\\n\\t</div>\\n\\n\\t<!-- BOTTOM BAR -->\\n\\t<BottomBar />\\n</div>\\n\\n<style lang=\\"scss\\">.main-content {\\n  float: left;\\n  width: 50%;\\n  width: calc((100% / 3) * 2); }\\n  .main-content .alphabetical-navigation {\\n    background: #f5f4ee;\\n    display: flex;\\n    flex-direction: column;\\n    position: absolute;\\n    top: 80px;\\n    right: 60px;\\n    width: 40px;\\n    user-select: none; }\\n    .main-content .alphabetical-navigation .item {\\n      height: 40px;\\n      line-height: 40px;\\n      text-align: center;\\n      display: block;\\n      width: 40px;\\n      border-bottom: 1px solid #221f20;\\n      border-right: 1px solid #221f20;\\n      border-left: 1px solid #221f20;\\n      text-decoration: none;\\n      cursor: pointer; }\\n      .main-content .alphabetical-navigation .item:first-child {\\n        border-top: 1px solid #221f20; }\\n      .main-content .alphabetical-navigation .item:hover {\\n        background: #e0ded7; }\\n  .main-content .inner {\\n    border: 1px solid #221f20;\\n    min-height: 100vh; }\\n    .main-content .inner .header {\\n      border-bottom: 1px solid #221f20;\\n      padding-left: 15px;\\n      padding-right: 15px;\\n      padding-bottom: 40px; }\\n      .main-content .inner .header .order {\\n        margin-top: 15px;\\n        width: 100%; }\\n        .main-content .inner .header .order .order-header {\\n          font-style: italic;\\n          font-size: 12px;\\n          margin-bottom: 5px; }\\n        .main-content .inner .header .order .order-options {\\n          display: flex; }\\n          .main-content .inner .header .order .order-options .order-option {\\n            padding: 8px 12px;\\n            margin-right: 8px;\\n            border: 1px solid #221f20;\\n            user-select: none;\\n            cursor: pointer;\\n            font-size: 12px;\\n            background: #e0ded7; }\\n            .main-content .inner .header .order .order-options .order-option .icon {\\n              margin-left: 8px; }\\n            .main-content .inner .header .order .order-options .order-option.active {\\n              background: #f5f4ee; }\\n            .main-content .inner .header .order .order-options .order-option:hover {\\n              background: #f5f4ee; }\\n      .main-content .inner .header .filter {\\n        margin-top: 15px;\\n        width: 100%; }\\n        .main-content .inner .header .filter .filter-header {\\n          font-style: italic;\\n          font-size: 12px;\\n          margin-bottom: 5px; }\\n        .main-content .inner .header .filter .filter-options {\\n          display: flex; }\\n          .main-content .inner .header .filter .filter-options .filter-option {\\n            padding: 8px 12px;\\n            margin-right: 8px;\\n            border: 1px solid #221f20;\\n            user-select: none;\\n            cursor: pointer;\\n            font-size: 12px;\\n            background: #e0ded7; }\\n            .main-content .inner .header .filter .filter-options .filter-option.active {\\n              background: #f5f4ee; }\\n            .main-content .inner .header .filter .filter-options .filter-option:hover {\\n              background: #f5f4ee; }\\n    .main-content .inner .sub-section {\\n      border-bottom: 1px solid #221f20;\\n      padding: 15px; }\\n      .main-content .inner .sub-section:last-child {\\n        border-bottom: none; }\\n\\nul {\\n  padding: 0; }\\n  ul li {\\n    list-style: none;\\n    margin-bottom: 5px;\\n    font-size: 16px; }\\n\\n.supersized {\\n  font-size: 54px; }\\n</style>\\n"],"names":[],"mappings":"AAwPmB,aAAa,8BAAC,CAAC,AAChC,KAAK,CAAE,IAAI,CACX,KAAK,CAAE,GAAG,CACV,KAAK,CAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,AAAE,CAAC,AAC9B,4BAAa,CAAC,wBAAwB,eAAC,CAAC,AACtC,UAAU,CAAE,OAAO,CACnB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,IAAI,CACT,KAAK,CAAE,IAAI,CACX,KAAK,CAAE,IAAI,CACX,WAAW,CAAE,IAAI,AAAE,CAAC,AACpB,4BAAa,CAAC,wBAAwB,CAAC,KAAK,eAAC,CAAC,AAC5C,MAAM,CAAE,IAAI,CACZ,WAAW,CAAE,IAAI,CACjB,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,KAAK,CACd,KAAK,CAAE,IAAI,CACX,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAChC,YAAY,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAC/B,WAAW,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAC9B,eAAe,CAAE,IAAI,CACrB,MAAM,CAAE,OAAO,AAAE,CAAC,AAClB,4BAAa,CAAC,wBAAwB,CAAC,oBAAK,YAAY,AAAC,CAAC,AACxD,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,AAAE,CAAC,AAClC,4BAAa,CAAC,wBAAwB,CAAC,oBAAK,MAAM,AAAC,CAAC,AAClD,UAAU,CAAE,OAAO,AAAE,CAAC,AAC5B,4BAAa,CAAC,MAAM,eAAC,CAAC,AACpB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,UAAU,CAAE,KAAK,AAAE,CAAC,AACpB,4BAAa,CAAC,MAAM,CAAC,OAAO,eAAC,CAAC,AAC5B,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAChC,YAAY,CAAE,IAAI,CAClB,aAAa,CAAE,IAAI,CACnB,cAAc,CAAE,IAAI,AAAE,CAAC,AACvB,4BAAa,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,eAAC,CAAC,AACnC,UAAU,CAAE,IAAI,CAChB,KAAK,CAAE,IAAI,AAAE,CAAC,AACd,4BAAa,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,aAAa,eAAC,CAAC,AACjD,UAAU,CAAE,MAAM,CAClB,SAAS,CAAE,IAAI,CACf,aAAa,CAAE,GAAG,AAAE,CAAC,AACvB,4BAAa,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,cAAc,eAAC,CAAC,AAClD,OAAO,CAAE,IAAI,AAAE,CAAC,AAChB,4BAAa,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,cAAc,CAAC,aAAa,eAAC,CAAC,AAChE,OAAO,CAAE,GAAG,CAAC,IAAI,CACjB,YAAY,CAAE,GAAG,CACjB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,WAAW,CAAE,IAAI,CACjB,MAAM,CAAE,OAAO,CACf,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,OAAO,AAAE,CAAC,AACtB,4BAAa,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,cAAc,CAAC,aAAa,CAAC,KAAK,eAAC,CAAC,AACtE,WAAW,CAAE,GAAG,AAAE,CAAC,AACrB,4BAAa,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,cAAc,CAAC,aAAa,OAAO,eAAC,CAAC,AACvE,UAAU,CAAE,OAAO,AAAE,CAAC,AACxB,4BAAa,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,cAAc,CAAC,4BAAa,MAAM,AAAC,CAAC,AACtE,UAAU,CAAE,OAAO,AAAE,CAAC,AAC9B,4BAAa,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,eAAC,CAAC,AACpC,UAAU,CAAE,IAAI,CAChB,KAAK,CAAE,IAAI,AAAE,CAAC,AACd,4BAAa,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,cAAc,eAAC,CAAC,AACnD,UAAU,CAAE,MAAM,CAClB,SAAS,CAAE,IAAI,CACf,aAAa,CAAE,GAAG,AAAE,CAAC,AACvB,4BAAa,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,eAAe,eAAC,CAAC,AACpD,OAAO,CAAE,IAAI,AAAE,CAAC,AAChB,4BAAa,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,eAAe,CAAC,cAAc,eAAC,CAAC,AACnE,OAAO,CAAE,GAAG,CAAC,IAAI,CACjB,YAAY,CAAE,GAAG,CACjB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,WAAW,CAAE,IAAI,CACjB,MAAM,CAAE,OAAO,CACf,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,OAAO,AAAE,CAAC,AACtB,4BAAa,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,eAAe,CAAC,cAAc,OAAO,eAAC,CAAC,AAC1E,UAAU,CAAE,OAAO,AAAE,CAAC,AACxB,4BAAa,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,eAAe,CAAC,6BAAc,MAAM,AAAC,CAAC,AACzE,UAAU,CAAE,OAAO,AAAE,CAAC,AAChC,4BAAa,CAAC,MAAM,CAAC,YAAY,eAAC,CAAC,AACjC,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAChC,OAAO,CAAE,IAAI,AAAE,CAAC,AAChB,4BAAa,CAAC,MAAM,CAAC,2BAAY,WAAW,AAAC,CAAC,AAC5C,aAAa,CAAE,IAAI,AAAE,CAAC,AAE9B,EAAE,8BAAC,CAAC,AACF,OAAO,CAAE,CAAC,AAAE,CAAC,AACb,iBAAE,CAAC,EAAE,eAAC,CAAC,AACL,UAAU,CAAE,IAAI,CAChB,aAAa,CAAE,GAAG,CAClB,SAAS,CAAE,IAAI,AAAE,CAAC,AAEtB,WAAW,8BAAC,CAAC,AACX,SAAS,CAAE,IAAI,AAAE,CAAC"}`
};
var load$7 = async ({ fetch: fetch2 }) => {
  const res = await fetch2("/people.json");
  if (res.ok) {
    const people = await res.json();
    return { props: { people } };
  }
  const { message } = await res.json();
  return { error: new Error(message) };
};
var START_YEAR = 1997;
var People = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { people } = $$props;
  console.log("people", people);
  const CURRENT_YEAR = getCurrentYear();
  const ALPHABET = [
    "A",
    "B",
    "C",
    "D",
    "E",
    "F",
    "G",
    "H",
    "I",
    "J",
    "K",
    "L",
    "M",
    "N",
    "O",
    "P",
    "Q",
    "R",
    "S",
    "T",
    "U",
    "V",
    "W",
    "X",
    "Y",
    "Z"
  ];
  const FILTER_OPTIONS = [
    { label: "Everyone", value: "everyone" },
    { label: "Artists", value: "artist" },
    { label: "Staff", value: "staff" },
    { label: "Board", value: "board" },
    {
      label: "Advisory Committee",
      value: "advisoryCommittee"
    }
  ];
  let YEAR_LIST = [];
  for (let i = START_YEAR; i <= CURRENT_YEAR; i++) {
    YEAR_LIST.push(i);
  }
  console.log(YEAR_LIST);
  let filteredPeople = [];
  let groupedPeopleAlpha = {};
  console.log(getCurrentYear());
  let activeFilter = "everyone";
  if ($$props.people === void 0 && $$bindings.people && people !== void 0)
    $$bindings.people(people);
  $$result.css.add(css$5);
  {
    {
      {
        filteredPeople = people;
      }
      groupedPeopleAlpha = (0, import_groupBy.default)(filteredPeople, (p) => p.lastName.charAt(0));
      (0, import_groupBy.default)(filteredPeople, (p) => p.firstEngagement);
    }
  }
  return `${$$result.head += `${$$result.title = `<title>People</title>`, ""}`, ""}


${validate_component(Sidebar, "Sidebar").$$render($$result, {}, {}, {})}


<div class="${"main-content svelte-1eogtlq"}"><div class="${"inner svelte-1eogtlq"}">${`
			<div class="${"alphabetical-navigation svelte-1eogtlq"}">${each(ALPHABET, (alpha) => `<div class="${"item svelte-1eogtlq"}">${escape(alpha)}
					</div>`)}</div>`}
		${``}

		
		<div class="${"header svelte-1eogtlq"}"><h1>People</h1>
			
			<div class="${"order svelte-1eogtlq"}"><div class="${"order-header svelte-1eogtlq"}">Order by</div>
				<div class="${"order-options svelte-1eogtlq"}"><div class="${[
    "order-option alphabetical svelte-1eogtlq",
    "active"
  ].join(" ").trim()}">A-Z <span class="${"icon svelte-1eogtlq"}">${validate_component(Arrow_down, "ArrowDown").$$render($$result, {}, {}, {})}</span></div>
					<div class="${[
    "order-option chronological svelte-1eogtlq",
    ""
  ].join(" ").trim()}">Year <span class="${"icon svelte-1eogtlq"}">${validate_component(Arrow_down, "ArrowDown").$$render($$result, {}, {}, {})}</span></div></div></div>
			
			<div class="${"filter svelte-1eogtlq"}"><div class="${"filter-header svelte-1eogtlq"}">Show</div>
				<div class="${"filter-options svelte-1eogtlq"}">${each(FILTER_OPTIONS, (option) => `<div class="${["filter-option svelte-1eogtlq", activeFilter === option.value ? "active" : ""].join(" ").trim()}">${escape(option.label)}
						</div>`)}</div></div></div>

		
		${`${each(ALPHABET, (alpha) => `<div class="${"sub-section svelte-1eogtlq"}"${add_attribute("id", alpha, 0)}><h2 class="${"supersized svelte-1eogtlq"}">${escape(alpha)}</h2>
					${groupedPeopleAlpha[alpha] ? `<ul class="${"svelte-1eogtlq"}">${each(groupedPeopleAlpha[alpha], (person) => `<li class="${"svelte-1eogtlq"}">${validate_component(Person_link, "PersonLink").$$render($$result, { person }, {}, {})}</li>`)}
						</ul>` : ``}
				</div>`)}`}
		${``}</div>

	
	${validate_component(Bottom_bar, "BottomBar").$$render($$result, {}, {}, {})}
</div>`;
});
var index$3 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": People,
  load: load$7
});
var css$4 = {
  code: ".main-content.svelte-dr4z3.svelte-dr4z3{float:left;width:50%;width:calc((100% / 3) * 2)}.main-content.svelte-dr4z3 .inner.svelte-dr4z3{border:1px solid #221f20;min-height:100vh;display:inline-block;min-width:100%}.main-content.svelte-dr4z3 .inner .header.svelte-dr4z3{border-bottom:1px solid #221f20;padding-left:15px;padding-right:15px;width:100%;height:440px;display:flex;justify-content:space-between}.main-content.svelte-dr4z3 .inner .header .column.svelte-dr4z3{max-width:50%}.main-content.svelte-dr4z3 .inner .header .column.left.svelte-dr4z3{padding-right:15px;float:left}.main-content.svelte-dr4z3 .inner .header .column.right.svelte-dr4z3{float:right}.main-content.svelte-dr4z3 .main-image.svelte-dr4z3{width:300px}.quote.svelte-dr4z3.svelte-dr4z3{font-style:italic;font-size:16px}.connected-post.svelte-dr4z3.svelte-dr4z3{margin-bottom:20px;display:block;text-decoration:none;width:calc(50% - 10px);float:left;overflow:hidden;font-size:14px}.connected-post.svelte-dr4z3.svelte-dr4z3:nth-child(even){margin-right:20px}.connected-post.svelte-dr4z3 .text.svelte-dr4z3{margin-top:5px}.connected-post.svelte-dr4z3 .text .type.svelte-dr4z3{font-size:12px;letter-spacing:0.5px;text-transform:uppercase;margin-right:20px}.connected-post.svelte-dr4z3 .image.svelte-dr4z3{border:1px solid #221f20;min-height:200px;max-height:300px;width:100%;line-height:0;overflow:hidden}.connected-post.svelte-dr4z3 .image img.svelte-dr4z3{width:100%;height:100%;object-fit:cover}.connected-post.svelte-dr4z3 .image .big-title.svelte-dr4z3{font-size:32px;width:100%;padding:20px;min-height:200px;line-height:1.2em}.connected-post.svelte-dr4z3 .image.svelte-dr4z3:hover{background:#e0ded7}.at-eyebeam.svelte-dr4z3.svelte-dr4z3{padding:20px;border-top:1px solid #221f20}.at-eyebeam.svelte-dr4z3 h2.svelte-dr4z3{margin-bottom:20px}.image-container.svelte-dr4z3 img.svelte-dr4z3{display:block;border:1px solid #221f20}.image-container.svelte-dr4z3 figcaption.svelte-dr4z3{display:block;margin-top:10px}.badges.svelte-dr4z3.svelte-dr4z3{margin-top:20px;margin-bottom:20px}.badges.svelte-dr4z3 .badge.svelte-dr4z3{text-decoration:none;padding:8px 12px;background:#221f20;color:#f5f4ee;text-transform:capitalize;font-size:12px;display:inline-block}.info.svelte-dr4z3.svelte-dr4z3{padding-top:20px}.info.svelte-dr4z3 .website.svelte-dr4z3{margin-bottom:20px}",
  map: `{"version":3,"file":"[slug].svelte","sources":["[slug].svelte"],"sourcesContent":["<script context=\\"module\\">\\n\\texport const load = async ({ page, fetch, session, stuff }) => {\\n\\t\\tconst res = await fetch(\`/people/\${page.params.slug}.json\`);\\n\\t\\tif (res.ok) {\\n\\t\\t\\tconst person = await res.json();\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tprops: { person }\\n\\t\\t\\t};\\n\\t\\t}\\n\\t\\tconst { message } = await res.json();\\n\\t\\treturn {\\n\\t\\t\\terror: new Error(message)\\n\\t\\t};\\n\\t};\\n<\/script>\\n\\n<script>\\n\\t// # # # # # # # # # # # # #\\n\\t//\\n\\t//  Person\\n\\t//\\n\\t// # # # # # # # # # # # # #\\n\\n\\t// __ IMPORTS\\n\\timport { onDestroy } from 'svelte';\\n\\timport { loadData, urlFor } from '$lib/sanity.js';\\n\\timport has from 'lodash/has.js';\\n\\timport get from 'lodash/get.js';\\n\\timport { postTypeToName, postTypeToCategory, roleToRoleName } from '$lib/global.js';\\n\\n\\t// __ GRAPHICS\\n\\timport ExternalLink from '$lib/graphics/external-link.svelte';\\n\\n\\t// __ STORES\\n\\timport { currentPage } from '$lib/stores.js';\\n\\n\\t// __ COMPONENTS\\n\\timport Sidebar from '$lib/sidebar/sidebar.svelte';\\n\\timport BottomBar from '$lib/bottom-bar/bottom-bar.svelte';\\n\\timport Blocks from '$lib/blocks/blocks.svelte';\\n\\timport SeeAlso from '$lib/see-also/see-also.svelte';\\n\\n\\t// __ PROPS\\n\\texport let person;\\n\\n\\t// *[$id in people[]._ref]\\n\\tconst connectedPosts = loadData(\\n\\t\\t'*[$personId in people[]._ref || $personId in advisors[]._ref || $personId in fellows[]._ref]',\\n\\t\\t{ personId: person._id }\\n\\t);\\n\\n\\t// __ Set currentPage\\n\\tcurrentPage.set({ slug: get(person, 'slug.current', ''), title: person.title });\\n\\n\\tonDestroy(() => {\\n\\t\\tcurrentPage.set(null);\\n\\t});\\n<\/script>\\n\\n<svelte:head>\\n\\t<title>{person.title}</title>\\n</svelte:head>\\n\\n<!-- SIDEBAR -->\\n<Sidebar title={person.title} />\\n\\n<div class=\\"main-content\\">\\n\\t<div class=\\"inner\\">\\n\\t\\t<div class=\\"header\\">\\n\\t\\t\\t<div class=\\"column left\\">\\n\\t\\t\\t\\t<!-- NAME -->\\n\\t\\t\\t\\t<h1>{person.title}</h1>\\n\\t\\t\\t\\t<!-- BADGES -->\\n\\t\\t\\t\\t<div class=\\"badges\\">\\n\\t\\t\\t\\t\\t{#if person.role}\\n\\t\\t\\t\\t\\t\\t<a href=\\"/people\\" class=\\"badge\\">{roleToRoleName[person.role]}</a>\\n\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t\\t{#if person.groupTags}\\n\\t\\t\\t\\t\\t\\t{#each person.groupTags as tag}\\n\\t\\t\\t\\t\\t\\t\\t<a href=\\"/people\\" class=\\"badge\\">{tag.label}</a>\\n\\t\\t\\t\\t\\t\\t{/each}\\n\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<!-- QUOTE -->\\n\\t\\t\\t\\t{#if person.quote}\\n\\t\\t\\t\\t\\t<div class=\\"quote\\">{person.quote}</div>\\n\\t\\t\\t\\t{/if}\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<!-- MAIN IMAGE -->\\n\\t\\t\\t{#if person.mainImage}\\n\\t\\t\\t\\t<div class=\\"column right\\">\\n\\t\\t\\t\\t\\t<figure class=\\"image-container\\">\\n\\t\\t\\t\\t\\t\\t<img\\n\\t\\t\\t\\t\\t\\t\\tclass=\\"main-image\\"\\n\\t\\t\\t\\t\\t\\t\\talt={person.title}\\n\\t\\t\\t\\t\\t\\t\\tsrc={urlFor(person.mainImage).quality(90).saturation(-100).width(400).url()}\\n\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t{#if has(person, 'mainImage.caption.content')}\\n\\t\\t\\t\\t\\t\\t\\t<figcaption>\\n\\t\\t\\t\\t\\t\\t\\t\\t<Blocks blocks={person.mainImage.caption.content} />\\n\\t\\t\\t\\t\\t\\t\\t</figcaption>\\n\\t\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t\\t</figure>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t{/if}\\n\\t\\t</div>\\n\\n\\t\\t<div class=\\"block-text info\\">\\n\\t\\t\\t<!-- WEBSITE -->\\n\\t\\t\\t{#if person.website}\\n\\t\\t\\t\\t<div class=\\"website\\" id=\\"website\\">\\n\\t\\t\\t\\t\\t<h3>Website</h3>\\n\\t\\t\\t\\t\\t<p><a href={person.website} target=\\"_blank\\">{person.website} <ExternalLink /></a></p>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t{/if}\\n\\n\\t\\t\\t<!-- BIO -->\\n\\t\\t\\t{#if has(person, 'bio.content')}\\n\\t\\t\\t\\t<div class=\\"bio\\" id=\\"bio\\">\\n\\t\\t\\t\\t\\t<h3>Bio</h3>\\n\\t\\t\\t\\t\\t<Blocks blocks={person.bio.content} />\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t{/if}\\n\\t\\t</div>\\n\\n\\t\\t<!-- AT EYEBEAM -->\\n\\t\\t{#await connectedPosts then connectedPosts}\\n\\t\\t\\t{#if connectedPosts.length > 0}\\n\\t\\t\\t\\t<div class=\\"at-eyebeam\\" id=\\"at-eyebeam\\">\\n\\t\\t\\t\\t\\t<h2>At Eyebeam</h2>\\n\\t\\t\\t\\t\\t{#each connectedPosts as post}\\n\\t\\t\\t\\t\\t\\t<a\\n\\t\\t\\t\\t\\t\\t\\tclass=\\"connected-post\\"\\n\\t\\t\\t\\t\\t\\t\\thref={'/' + postTypeToCategory[post._type] + '/' + post.slug.current}\\n\\t\\t\\t\\t\\t\\t\\tsveltekit:prefetch\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\"image\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{#if post.mainImage}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<img\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\talt={post.title}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tsrc={urlFor(post.mainImage).quality(90).saturation(-100).width(400).url()}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t{:else}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\"big-title\\">{post.title}</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\"text\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\"type\\">{postTypeToName[post._type]}</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\"title\\">{post.title}</span>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t{/each}\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t{/if}\\n\\t\\t{/await}\\n\\n\\t\\t<!-- SEE ALSO -->\\n\\t\\t{#if person.internalLinks || person.externalLinks}\\n\\t\\t\\t<SeeAlso externalLinks={person.externalLinks} internalLinks={person.internalLinks} />\\n\\t\\t{/if}\\n\\t</div>\\n\\n\\t<!-- BOTTOM BAR -->\\n\\t<BottomBar updatedAt={person._updatedAt} />\\n</div>\\n\\n<style lang=\\"scss\\">.main-content {\\n  float: left;\\n  width: 50%;\\n  width: calc((100% / 3) * 2); }\\n  .main-content .inner {\\n    border: 1px solid #221f20;\\n    min-height: 100vh;\\n    display: inline-block;\\n    min-width: 100%; }\\n    .main-content .inner .header {\\n      border-bottom: 1px solid #221f20;\\n      padding-left: 15px;\\n      padding-right: 15px;\\n      width: 100%;\\n      height: 440px;\\n      display: flex;\\n      justify-content: space-between; }\\n      .main-content .inner .header .column {\\n        max-width: 50%; }\\n        .main-content .inner .header .column.left {\\n          padding-right: 15px;\\n          float: left; }\\n        .main-content .inner .header .column.right {\\n          float: right; }\\n    .main-content .inner .body-content {\\n      padding: 15px; }\\n  .main-content .main-image {\\n    width: 300px; }\\n\\n.quote {\\n  font-style: italic;\\n  font-size: 16px; }\\n\\n.connected-post {\\n  margin-bottom: 20px;\\n  display: block;\\n  text-decoration: none;\\n  width: calc(50% - 10px);\\n  float: left;\\n  overflow: hidden;\\n  font-size: 14px; }\\n  .connected-post:nth-child(even) {\\n    margin-right: 20px; }\\n  .connected-post .text {\\n    margin-top: 5px; }\\n    .connected-post .text .type {\\n      font-size: 12px;\\n      letter-spacing: 0.5px;\\n      text-transform: uppercase;\\n      margin-right: 20px; }\\n  .connected-post .image {\\n    border: 1px solid #221f20;\\n    min-height: 200px;\\n    max-height: 300px;\\n    width: 100%;\\n    line-height: 0;\\n    overflow: hidden; }\\n    .connected-post .image img {\\n      width: 100%;\\n      height: 100%;\\n      object-fit: cover; }\\n    .connected-post .image .big-title {\\n      font-size: 32px;\\n      width: 100%;\\n      padding: 20px;\\n      min-height: 200px;\\n      line-height: 1.2em; }\\n    .connected-post .image:hover {\\n      background: #e0ded7; }\\n\\n.at-eyebeam {\\n  padding: 20px;\\n  border-top: 1px solid #221f20; }\\n  .at-eyebeam h2 {\\n    margin-bottom: 20px; }\\n\\n.image-container img {\\n  display: block;\\n  border: 1px solid #221f20; }\\n\\n.image-container figcaption {\\n  display: block;\\n  margin-top: 10px; }\\n\\n.badges {\\n  margin-top: 20px;\\n  margin-bottom: 20px; }\\n  .badges .badge {\\n    text-decoration: none;\\n    padding: 8px 12px;\\n    background: #221f20;\\n    color: #f5f4ee;\\n    text-transform: capitalize;\\n    font-size: 12px;\\n    display: inline-block; }\\n\\n.info {\\n  padding-top: 20px; }\\n  .info .website {\\n    margin-bottom: 20px; }\\n</style>\\n"],"names":[],"mappings":"AAwKmB,aAAa,0BAAC,CAAC,AAChC,KAAK,CAAE,IAAI,CACX,KAAK,CAAE,GAAG,CACV,KAAK,CAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,AAAE,CAAC,AAC9B,0BAAa,CAAC,MAAM,aAAC,CAAC,AACpB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,UAAU,CAAE,KAAK,CACjB,OAAO,CAAE,YAAY,CACrB,SAAS,CAAE,IAAI,AAAE,CAAC,AAClB,0BAAa,CAAC,MAAM,CAAC,OAAO,aAAC,CAAC,AAC5B,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAChC,YAAY,CAAE,IAAI,CAClB,aAAa,CAAE,IAAI,CACnB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,KAAK,CACb,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,AAAE,CAAC,AACjC,0BAAa,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,aAAC,CAAC,AACpC,SAAS,CAAE,GAAG,AAAE,CAAC,AACjB,0BAAa,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,KAAK,aAAC,CAAC,AACzC,aAAa,CAAE,IAAI,CACnB,KAAK,CAAE,IAAI,AAAE,CAAC,AAChB,0BAAa,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,MAAM,aAAC,CAAC,AAC1C,KAAK,CAAE,KAAK,AAAE,CAAC,AAGvB,0BAAa,CAAC,WAAW,aAAC,CAAC,AACzB,KAAK,CAAE,KAAK,AAAE,CAAC,AAEnB,MAAM,0BAAC,CAAC,AACN,UAAU,CAAE,MAAM,CAClB,SAAS,CAAE,IAAI,AAAE,CAAC,AAEpB,eAAe,0BAAC,CAAC,AACf,aAAa,CAAE,IAAI,CACnB,OAAO,CAAE,KAAK,CACd,eAAe,CAAE,IAAI,CACrB,KAAK,CAAE,KAAK,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CACvB,KAAK,CAAE,IAAI,CACX,QAAQ,CAAE,MAAM,CAChB,SAAS,CAAE,IAAI,AAAE,CAAC,AAClB,yCAAe,WAAW,IAAI,CAAC,AAAC,CAAC,AAC/B,YAAY,CAAE,IAAI,AAAE,CAAC,AACvB,4BAAe,CAAC,KAAK,aAAC,CAAC,AACrB,UAAU,CAAE,GAAG,AAAE,CAAC,AAClB,4BAAe,CAAC,KAAK,CAAC,KAAK,aAAC,CAAC,AAC3B,SAAS,CAAE,IAAI,CACf,cAAc,CAAE,KAAK,CACrB,cAAc,CAAE,SAAS,CACzB,YAAY,CAAE,IAAI,AAAE,CAAC,AACzB,4BAAe,CAAC,MAAM,aAAC,CAAC,AACtB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,UAAU,CAAE,KAAK,CACjB,UAAU,CAAE,KAAK,CACjB,KAAK,CAAE,IAAI,CACX,WAAW,CAAE,CAAC,CACd,QAAQ,CAAE,MAAM,AAAE,CAAC,AACnB,4BAAe,CAAC,MAAM,CAAC,GAAG,aAAC,CAAC,AAC1B,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,KAAK,AAAE,CAAC,AACtB,4BAAe,CAAC,MAAM,CAAC,UAAU,aAAC,CAAC,AACjC,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,KAAK,CACjB,WAAW,CAAE,KAAK,AAAE,CAAC,AACvB,4BAAe,CAAC,mBAAM,MAAM,AAAC,CAAC,AAC5B,UAAU,CAAE,OAAO,AAAE,CAAC,AAE5B,WAAW,0BAAC,CAAC,AACX,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,AAAE,CAAC,AAChC,wBAAW,CAAC,EAAE,aAAC,CAAC,AACd,aAAa,CAAE,IAAI,AAAE,CAAC,AAE1B,6BAAgB,CAAC,GAAG,aAAC,CAAC,AACpB,OAAO,CAAE,KAAK,CACd,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,AAAE,CAAC,AAE9B,6BAAgB,CAAC,UAAU,aAAC,CAAC,AAC3B,OAAO,CAAE,KAAK,CACd,UAAU,CAAE,IAAI,AAAE,CAAC,AAErB,OAAO,0BAAC,CAAC,AACP,UAAU,CAAE,IAAI,CAChB,aAAa,CAAE,IAAI,AAAE,CAAC,AACtB,oBAAO,CAAC,MAAM,aAAC,CAAC,AACd,eAAe,CAAE,IAAI,CACrB,OAAO,CAAE,GAAG,CAAC,IAAI,CACjB,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,OAAO,CACd,cAAc,CAAE,UAAU,CAC1B,SAAS,CAAE,IAAI,CACf,OAAO,CAAE,YAAY,AAAE,CAAC,AAE5B,KAAK,0BAAC,CAAC,AACL,WAAW,CAAE,IAAI,AAAE,CAAC,AACpB,kBAAK,CAAC,QAAQ,aAAC,CAAC,AACd,aAAa,CAAE,IAAI,AAAE,CAAC"}`
};
var load$6 = async ({ page: page2, fetch: fetch2, session, stuff }) => {
  const res = await fetch2(`/people/${page2.params.slug}.json`);
  if (res.ok) {
    const person = await res.json();
    return { props: { person } };
  }
  const { message } = await res.json();
  return { error: new Error(message) };
};
var U5Bslugu5D$3 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { person } = $$props;
  const connectedPosts = loadData("*[$personId in people[]._ref || $personId in advisors[]._ref || $personId in fellows[]._ref]", { personId: person._id });
  currentPage.set({
    slug: (0, import_get.default)(person, "slug.current", ""),
    title: person.title
  });
  onDestroy(() => {
    currentPage.set(null);
  });
  if ($$props.person === void 0 && $$bindings.person && person !== void 0)
    $$bindings.person(person);
  $$result.css.add(css$4);
  return `${$$result.head += `${$$result.title = `<title>${escape(person.title)}</title>`, ""}`, ""}


${validate_component(Sidebar, "Sidebar").$$render($$result, { title: person.title }, {}, {})}

<div class="${"main-content svelte-dr4z3"}"><div class="${"inner svelte-dr4z3"}"><div class="${"header svelte-dr4z3"}"><div class="${"column left svelte-dr4z3"}">
				<h1>${escape(person.title)}</h1>
				
				<div class="${"badges svelte-dr4z3"}">${person.role ? `<a href="${"/people"}" class="${"badge svelte-dr4z3"}">${escape(roleToRoleName[person.role])}</a>` : ``}
					${person.groupTags ? `${each(person.groupTags, (tag) => `<a href="${"/people"}" class="${"badge svelte-dr4z3"}">${escape(tag.label)}</a>`)}` : ``}</div>

				
				${person.quote ? `<div class="${"quote svelte-dr4z3"}">${escape(person.quote)}</div>` : ``}</div>

			
			${person.mainImage ? `<div class="${"column right svelte-dr4z3"}"><figure class="${"image-container svelte-dr4z3"}"><img class="${"main-image svelte-dr4z3"}"${add_attribute("alt", person.title, 0)}${add_attribute("src", urlFor(person.mainImage).quality(90).saturation(-100).width(400).url(), 0)}>
						${(0, import_has.default)(person, "mainImage.caption.content") ? `<figcaption class="${"svelte-dr4z3"}">${validate_component(Blocks, "Blocks").$$render($$result, { blocks: person.mainImage.caption.content }, {}, {})}</figcaption>` : ``}</figure></div>` : ``}</div>

		<div class="${"block-text info svelte-dr4z3"}">
			${person.website ? `<div class="${"website svelte-dr4z3"}" id="${"website"}"><h3>Website</h3>
					<p><a${add_attribute("href", person.website, 0)} target="${"_blank"}">${escape(person.website)} ${validate_component(External_link, "ExternalLink").$$render($$result, {}, {}, {})}</a></p></div>` : ``}

			
			${(0, import_has.default)(person, "bio.content") ? `<div class="${"bio"}" id="${"bio"}"><h3>Bio</h3>
					${validate_component(Blocks, "Blocks").$$render($$result, { blocks: person.bio.content }, {}, {})}</div>` : ``}</div>

		
		${function(__value) {
    if (is_promise(__value)) {
      __value.then(null, noop);
      return ``;
    }
    return function(connectedPosts2) {
      return `
			${connectedPosts2.length > 0 ? `<div class="${"at-eyebeam svelte-dr4z3"}" id="${"at-eyebeam"}"><h2 class="${"svelte-dr4z3"}">At Eyebeam</h2>
					${each(connectedPosts2, (post) => `<a class="${"connected-post svelte-dr4z3"}"${add_attribute("href", "/" + postTypeToCategory[post._type] + "/" + post.slug.current, 0)} sveltekit:prefetch><div class="${"image svelte-dr4z3"}">${post.mainImage ? `<img${add_attribute("alt", post.title, 0)}${add_attribute("src", urlFor(post.mainImage).quality(90).saturation(-100).width(400).url(), 0)} class="${"svelte-dr4z3"}">` : `<div class="${"big-title svelte-dr4z3"}">${escape(post.title)}</div>`}</div>
							<div class="${"text svelte-dr4z3"}"><span class="${"type svelte-dr4z3"}">${escape(postTypeToName[post._type])}</span>
								<span class="${"title"}">${escape(post.title)}</span></div>
						</a>`)}</div>` : ``}
		`;
    }(__value);
  }(connectedPosts)}

		
		${person.internalLinks || person.externalLinks ? `${validate_component(See_also, "SeeAlso").$$render($$result, {
    externalLinks: person.externalLinks,
    internalLinks: person.internalLinks
  }, {}, {})}` : ``}</div>

	
	${validate_component(Bottom_bar, "BottomBar").$$render($$result, { updatedAt: person._updatedAt }, {}, {})}
</div>`;
});
var _slug_$3 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": U5Bslugu5D$3,
  load: load$6
});
async function load$5() {
  return {
    status: 302,
    redirect: "/everything#video"
  };
}
var Videos = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return ``;
});
var index$2 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Videos,
  load: load$5
});
var css$3 = {
  code: ".main-content.svelte-oxg8en.svelte-oxg8en{float:left;width:50%;width:calc((100% / 3) * 2)}.main-content.svelte-oxg8en .header.svelte-oxg8en{height:440px;border-bottom:1px solid #221f20;padding:15px;font-size:16px}.main-content.svelte-oxg8en .header h1.svelte-oxg8en{margin-bottom:20px}.main-content.svelte-oxg8en .header .date.svelte-oxg8en{margin-bottom:20px}.main-content.svelte-oxg8en .header .authors.svelte-oxg8en{margin-bottom:20px}.main-content.svelte-oxg8en .inner.svelte-oxg8en{border:1px solid #221f20;min-height:100vh}",
  map: `{"version":3,"file":"[slug].svelte","sources":["[slug].svelte"],"sourcesContent":["<script context=\\"module\\">\\n\\texport const load = async ({ page, fetch, session, stuff }) => {\\n\\t\\tconst res = await fetch(\`/videos/\${page.params.slug}.json\`);\\n\\t\\tif (res.ok) {\\n\\t\\t\\tconst video = await res.json();\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tprops: { video }\\n\\t\\t\\t};\\n\\t\\t}\\n\\t\\tconst { message } = await res.json();\\n\\t\\treturn {\\n\\t\\t\\terror: new Error(message)\\n\\t\\t};\\n\\t};\\n<\/script>\\n\\n<script>\\n\\t// # # # # # # # # # # # # #\\n\\t//\\n\\t//  Single video\\n\\t//\\n\\t// # # # # # # # # # # # # #\\n\\n\\t// __ IMPORTS\\n\\timport { onDestroy } from 'svelte';\\n\\timport get from 'lodash/get.js';\\n\\timport has from 'lodash/has.js';\\n\\timport { longFormatDate } from '$lib/global';\\n\\n\\t// __ STORES\\n\\timport { currentPage } from '$lib/stores.js';\\n\\n\\t// __ COMPONENTS\\n\\timport Sidebar from '$lib/sidebar/sidebar.svelte';\\n\\timport BottomBar from '$lib/bottom-bar/bottom-bar.svelte';\\n\\timport Blocks from '$lib/blocks/blocks.svelte';\\n\\timport PersonLink from '$lib/person-link/person-link.svelte';\\n\\timport SeeAlso from '$lib/see-also/see-also.svelte';\\n\\n\\t// __ PROPS\\n\\texport let video;\\n\\n\\t// __ Set currentPage\\n\\tcurrentPage.set({ slug: get(video, 'slug.current', ''), title: video.title });\\n\\n\\tonDestroy(() => {\\n\\t\\tcurrentPage.set(null);\\n\\t});\\n<\/script>\\n\\n<svelte:head>\\n\\t<title>{video.title}</title>\\n</svelte:head>\\n\\n<!-- SIDEBAR -->\\n<Sidebar title={video.title} />\\n\\n<div class=\\"main-content\\">\\n\\t<div class=\\"inner\\">\\n\\t\\t<div class=\\"header\\">\\n\\t\\t\\t<!-- TITLE -->\\n\\t\\t\\t<h1>{video.title}</h1>\\n\\t\\t\\t<!-- DATE -->\\n\\t\\t\\t<div class=\\"date\\">\\n\\t\\t\\t\\t{longFormatDate(video._createdAt)}\\n\\t\\t\\t</div>\\n\\t\\t\\t<!-- AUTHOR(S) -->\\n\\t\\t\\t{#if video.people && video.people.length > 0}\\n\\t\\t\\t\\t<div class=\\"authors\\">\\n\\t\\t\\t\\t\\tby {#each video.people as person}\\n\\t\\t\\t\\t\\t\\t<PersonLink {person} />\\n\\t\\t\\t\\t\\t{/each}\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t{/if}\\n\\t\\t</div>\\n\\n\\t\\t<!-- MAIN TEXT -->\\n\\t\\t{#if has(video, 'content.content')}\\n\\t\\t\\t<div class=\\"block-text\\">\\n\\t\\t\\t\\t<Blocks blocks={video.content.content} />\\n\\t\\t\\t</div>\\n\\t\\t{/if}\\n\\n\\t\\t<!-- SEE ALSO -->\\n\\t\\t{#if video.internalLinks || video.externalLinks}\\n\\t\\t\\t<SeeAlso externalLinks={video.externalLinks} internalLinks={video.internalLinks} />\\n\\t\\t{/if}\\n\\t</div>\\n\\n\\t<!-- BOTTOM BAR -->\\n\\t<BottomBar updatedAt={video._updatedAt} />\\n</div>\\n\\n<style lang=\\"scss\\">.main-content {\\n  float: left;\\n  width: 50%;\\n  width: calc((100% / 3) * 2); }\\n  .main-content .header {\\n    height: 440px;\\n    border-bottom: 1px solid #221f20;\\n    padding: 15px;\\n    font-size: 16px; }\\n    .main-content .header h1 {\\n      margin-bottom: 20px; }\\n    .main-content .header .date {\\n      margin-bottom: 20px; }\\n    .main-content .header .authors {\\n      margin-bottom: 20px; }\\n  .main-content .inner {\\n    border: 1px solid #221f20;\\n    min-height: 100vh; }\\n  .main-content .main-image {\\n    width: 300px; }\\n\\nimg {\\n  float: right; }\\n</style>\\n"],"names":[],"mappings":"AA6FmB,aAAa,4BAAC,CAAC,AAChC,KAAK,CAAE,IAAI,CACX,KAAK,CAAE,GAAG,CACV,KAAK,CAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,AAAE,CAAC,AAC9B,2BAAa,CAAC,OAAO,cAAC,CAAC,AACrB,MAAM,CAAE,KAAK,CACb,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAChC,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,IAAI,AAAE,CAAC,AAClB,2BAAa,CAAC,OAAO,CAAC,EAAE,cAAC,CAAC,AACxB,aAAa,CAAE,IAAI,AAAE,CAAC,AACxB,2BAAa,CAAC,OAAO,CAAC,KAAK,cAAC,CAAC,AAC3B,aAAa,CAAE,IAAI,AAAE,CAAC,AACxB,2BAAa,CAAC,OAAO,CAAC,QAAQ,cAAC,CAAC,AAC9B,aAAa,CAAE,IAAI,AAAE,CAAC,AAC1B,2BAAa,CAAC,MAAM,cAAC,CAAC,AACpB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,UAAU,CAAE,KAAK,AAAE,CAAC"}`
};
var load$4 = async ({ page: page2, fetch: fetch2, session, stuff }) => {
  const res = await fetch2(`/videos/${page2.params.slug}.json`);
  if (res.ok) {
    const video = await res.json();
    return { props: { video } };
  }
  const { message } = await res.json();
  return { error: new Error(message) };
};
var U5Bslugu5D$2 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { video } = $$props;
  currentPage.set({
    slug: (0, import_get.default)(video, "slug.current", ""),
    title: video.title
  });
  onDestroy(() => {
    currentPage.set(null);
  });
  if ($$props.video === void 0 && $$bindings.video && video !== void 0)
    $$bindings.video(video);
  $$result.css.add(css$3);
  return `${$$result.head += `${$$result.title = `<title>${escape(video.title)}</title>`, ""}`, ""}


${validate_component(Sidebar, "Sidebar").$$render($$result, { title: video.title }, {}, {})}

<div class="${"main-content svelte-oxg8en"}"><div class="${"inner svelte-oxg8en"}"><div class="${"header svelte-oxg8en"}">
			<h1 class="${"svelte-oxg8en"}">${escape(video.title)}</h1>
			
			<div class="${"date svelte-oxg8en"}">${escape(longFormatDate(video._createdAt))}</div>
			
			${video.people && video.people.length > 0 ? `<div class="${"authors svelte-oxg8en"}">by ${each(video.people, (person) => `${validate_component(Person_link, "PersonLink").$$render($$result, { person }, {}, {})}`)}</div>` : ``}</div>

		
		${(0, import_has.default)(video, "content.content") ? `<div class="${"block-text"}">${validate_component(Blocks, "Blocks").$$render($$result, { blocks: video.content.content }, {}, {})}</div>` : ``}

		
		${video.internalLinks || video.externalLinks ? `${validate_component(See_also, "SeeAlso").$$render($$result, {
    externalLinks: video.externalLinks,
    internalLinks: video.internalLinks
  }, {}, {})}` : ``}</div>

	
	${validate_component(Bottom_bar, "BottomBar").$$render($$result, { updatedAt: video._updatedAt }, {}, {})}
</div>`;
});
var _slug_$2 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": U5Bslugu5D$2,
  load: load$4
});
var css$2 = {
  code: ".tile.svelte-nhepsa.svelte-nhepsa{padding:15px;overflow:hidden}.main-content.svelte-nhepsa.svelte-nhepsa{float:left;width:calc((100% / 3) * 2)}@media(max-width: 900px){.main-content.svelte-nhepsa.svelte-nhepsa{width:100%}}.main-content.svelte-nhepsa .inner.svelte-nhepsa{width:100%;border:1px solid #221f20;min-height:100vh;display:inline-block}.introduction.svelte-nhepsa.svelte-nhepsa{border-bottom:1px solid #221f20;min-height:440px;padding-top:0;padding-right:30px}.nav-tile.svelte-nhepsa.svelte-nhepsa{width:50%;min-height:440px;border-bottom:1px solid #221f20;border-right:1px solid #221f20;display:block;float:left;text-decoration:none;cursor:pointer;padding-right:40px}.nav-tile.svelte-nhepsa.svelte-nhepsa:hover{background:#e0ded7}.nav-tile.svelte-nhepsa.svelte-nhepsa:active{background:#221f20;color:#f5f4ee}.nav-tile.our-history.svelte-nhepsa.svelte-nhepsa,.nav-tile.artists.svelte-nhepsa.svelte-nhepsa,.nav-tile.get-involved.svelte-nhepsa.svelte-nhepsa,.nav-tile.media-kit.svelte-nhepsa.svelte-nhepsa{border-right:none}.full-tile.svelte-nhepsa.svelte-nhepsa{width:100%;min-height:440px;border-bottom:1px solid #221f20;display:block;float:left;text-decoration:none}.full-tile.contact.svelte-nhepsa.svelte-nhepsa{border-bottom:none;min-height:unset;height:220px;position:relative}.full-tile.contact.svelte-nhepsa .bottom-container.svelte-nhepsa{position:absolute;bottom:15px;left:15px;width:100%}.full-tile.contact.svelte-nhepsa .bottom-container .column.svelte-nhepsa{width:25%;float:left}.press-and-news.svelte-nhepsa.svelte-nhepsa{position:relative}.press-and-news.svelte-nhepsa .press-and-news-listing.svelte-nhepsa{width:100%;display:flex;margin-top:45px}.press-and-news.svelte-nhepsa .see-all.svelte-nhepsa{position:absolute;bottom:0;left:0;height:50px;width:100%;border-top:1px solid #221f20;text-align:center;line-height:50px;text-decoration:none}.press-and-news.svelte-nhepsa .see-all.svelte-nhepsa:hover{background:#e0ded7}",
  map: `{"version":3,"file":"index.svelte","sources":["index.svelte"],"sourcesContent":["<script context=\\"module\\">\\n\\texport const load = async ({ fetch }) => {\\n\\t\\tconst res = await fetch('/about.json');\\n\\t\\tif (res.ok) {\\n\\t\\t\\tconst about = await res.json();\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tprops: { about }\\n\\t\\t\\t};\\n\\t\\t}\\n\\t\\tconst { message } = await res.json();\\n\\t\\treturn {\\n\\t\\t\\terror: new Error(message)\\n\\t\\t};\\n\\t};\\n<\/script>\\n\\n<script>\\n\\t// # # # # # # # # # # # # #\\n\\t//\\n\\t//  What is Eyebeam?\\n\\t//\\n\\t// # # # # # # # # # # # # #\\n\\n\\t// __ IMPORTS\\n\\timport { renderBlockText, loadData } from '$lib/sanity.js';\\n\\timport has from 'lodash/has.js';\\n\\timport get from 'lodash/get.js';\\n\\timport keyBy from 'lodash/keyBy.js';\\n\\n\\t// __ COMPONENTS\\n\\timport Sidebar from '$lib/sidebar/sidebar.svelte';\\n\\timport BottomBar from '$lib/bottom-bar/bottom-bar.svelte';\\n\\timport PressAndNewsItem from '$lib/press-and-news-item/press-and-news-item.svelte';\\n\\n\\t// __ PROPS\\n\\texport let about;\\n\\tconst aboutMap = keyBy(about, '_id');\\n\\n\\tconst pressAndNews = loadData('*[_type == \\"press\\" || _type == \\"news\\" ][0..3]');\\n\\n\\tconst ORDER = [\\n\\t\\t'our-mission-and-values',\\n\\t\\t'our-history',\\n\\t\\t'staff-and-board',\\n\\t\\t'artists',\\n\\t\\t'support-eyebeam',\\n\\t\\t'get-involved',\\n\\t\\t'press-and-news',\\n\\t\\t'our-operating-documents',\\n\\t\\t'media-kit',\\n\\t\\t'contact'\\n\\t];\\n\\n\\tconst toc = [\\n\\t\\t{\\n\\t\\t\\tlink: '/about/our-mission-and-values',\\n\\t\\t\\ttitle: 'Our Mission and Values'\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\tlink: '/about/our-history',\\n\\t\\t\\ttitle: 'Our History'\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\tlink: '/about/staff-and-board',\\n\\t\\t\\ttitle: 'Staff & Board'\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\tlink: '/about/artists',\\n\\t\\t\\ttitle: 'Artists'\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\tlink: '/about/support-eyebeam',\\n\\t\\t\\ttitle: 'Support'\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\tlink: '/about/get-involved',\\n\\t\\t\\ttitle: 'Get involved'\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\tlink: '/about/press-and-news',\\n\\t\\t\\ttitle: 'Press & News'\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\tlink: '/about/our-operating-documents',\\n\\t\\t\\ttitle: 'Our Operating Documents'\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\tlink: '/about/media-kit',\\n\\t\\t\\ttitle: 'Media Kit'\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\tlink: '/about/contact',\\n\\t\\t\\ttitle: 'Contact'\\n\\t\\t}\\n\\t];\\n<\/script>\\n\\n<svelte:head>\\n\\t<title>{aboutMap['what-is-eyebeam'].title}</title>\\n</svelte:head>\\n\\n<!-- SIDEBAR -->\\n<Sidebar {toc} title={aboutMap['what-is-eyebeam'].title} />\\n\\n<div class=\\"main-content\\">\\n\\t<div class=\\"inner\\">\\n\\t\\t<div class=\\"tile introduction\\">\\n\\t\\t\\t<!-- TITLE -->\\n\\t\\t\\t<h1>{aboutMap['what-is-eyebeam'].title}</h1>\\n\\t\\t\\t<!-- INTRODUCTION -->\\n\\t\\t\\t{#if has(aboutMap['what-is-eyebeam'], 'introduction.content')}\\n\\t\\t\\t\\t<div class=\\"description\\">\\n\\t\\t\\t\\t\\t{@html renderBlockText(aboutMap['what-is-eyebeam'].introduction.content)}\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t{/if}\\n\\t\\t</div>\\n\\n\\t\\t{#each ORDER as section}\\n\\t\\t\\t{#if section == 'press-and-news'}\\n\\t\\t\\t\\t<div class=\\"tile full-tile press-and-news\\">\\n\\t\\t\\t\\t\\t<h2>{aboutMap['press-and-news'].title}</h2>\\n\\t\\t\\t\\t\\t<div class=\\"press-and-news-listing\\">\\n\\t\\t\\t\\t\\t\\t{#await pressAndNews then pressAndNews}\\n\\t\\t\\t\\t\\t\\t\\t{#each pressAndNews as post}\\n\\t\\t\\t\\t\\t\\t\\t\\t<PressAndNewsItem {post} />\\n\\t\\t\\t\\t\\t\\t\\t{/each}\\n\\t\\t\\t\\t\\t\\t{/await}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<a href=\\"/press-and-news\\" class=\\"see-all\\">See all Press & News</a>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t{:else if section == 'contact'}\\n\\t\\t\\t\\t<div class=\\"tile full-tile contact\\">\\n\\t\\t\\t\\t\\t<h2>Contact</h2>\\n\\t\\t\\t\\t\\t<div class=\\"bottom-container\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\"column\\">{aboutMap['contact'].address}</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\"column\\">\\n\\t\\t\\t\\t\\t\\t\\t{aboutMap['contact'].phoneNumber}<br /><a href={'mailto:' + aboutMap['contact'].email}\\n\\t\\t\\t\\t\\t\\t\\t\\t>{aboutMap['contact'].email}</a\\n\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t{:else}\\n\\t\\t\\t\\t<a\\n\\t\\t\\t\\t\\tclass=\\"tile nav-tile {section}\\"\\n\\t\\t\\t\\t\\thref={'/about/' + aboutMap[section]._id}\\n\\t\\t\\t\\t\\tsveltekit:prefetch\\n\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t<h2>{aboutMap[section].title}</h2>\\n\\t\\t\\t\\t\\t{#if has(aboutMap[section], 'introduction.content')}\\n\\t\\t\\t\\t\\t\\t<div class=\\"description\\">\\n\\t\\t\\t\\t\\t\\t\\t{@html renderBlockText(aboutMap[section].introduction.content)}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t</a>\\n\\t\\t\\t{/if}\\n\\t\\t{/each}\\n\\t</div>\\n\\n\\t<!-- BOTTOM BAR -->\\n\\t<BottomBar />\\n</div>\\n\\n<style lang=\\"scss\\">.tile {\\n  padding: 15px;\\n  overflow: hidden; }\\n\\n.main-content {\\n  float: left;\\n  width: calc((100% / 3) * 2); }\\n  @media (max-width: 900px) {\\n    .main-content {\\n      width: 100%; } }\\n  .main-content .inner {\\n    width: 100%;\\n    border: 1px solid #221f20;\\n    min-height: 100vh;\\n    display: inline-block; }\\n\\n.introduction {\\n  border-bottom: 1px solid #221f20;\\n  min-height: 440px;\\n  padding-top: 0;\\n  padding-right: 30px; }\\n  .introduction p {\\n    font-style: italic;\\n    font-size: 22px; }\\n\\n.nav-tile {\\n  width: 50%;\\n  min-height: 440px;\\n  border-bottom: 1px solid #221f20;\\n  border-right: 1px solid #221f20;\\n  display: block;\\n  float: left;\\n  text-decoration: none;\\n  cursor: pointer;\\n  padding-right: 40px; }\\n  .nav-tile:hover {\\n    background: #e0ded7; }\\n  .nav-tile:active {\\n    background: #221f20;\\n    color: #f5f4ee; }\\n  .nav-tile.our-history, .nav-tile.artists, .nav-tile.get-involved, .nav-tile.media-kit {\\n    border-right: none; }\\n\\n.full-tile {\\n  width: 100%;\\n  min-height: 440px;\\n  border-bottom: 1px solid #221f20;\\n  display: block;\\n  float: left;\\n  text-decoration: none; }\\n  .full-tile.contact {\\n    border-bottom: none;\\n    min-height: unset;\\n    height: 220px;\\n    position: relative; }\\n    .full-tile.contact .bottom-container {\\n      position: absolute;\\n      bottom: 15px;\\n      left: 15px;\\n      width: 100%; }\\n      .full-tile.contact .bottom-container .column {\\n        width: 25%;\\n        float: left; }\\n\\n.press-and-news {\\n  position: relative; }\\n  .press-and-news .press-and-news-listing {\\n    width: 100%;\\n    display: flex;\\n    margin-top: 45px; }\\n  .press-and-news .see-all {\\n    position: absolute;\\n    bottom: 0;\\n    left: 0;\\n    height: 50px;\\n    width: 100%;\\n    border-top: 1px solid #221f20;\\n    text-align: center;\\n    line-height: 50px;\\n    text-decoration: none; }\\n    .press-and-news .see-all:hover {\\n      background: #e0ded7; }\\n</style>\\n"],"names":[],"mappings":"AAmKmB,KAAK,4BAAC,CAAC,AACxB,OAAO,CAAE,IAAI,CACb,QAAQ,CAAE,MAAM,AAAE,CAAC,AAErB,aAAa,4BAAC,CAAC,AACb,KAAK,CAAE,IAAI,CACX,KAAK,CAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,AAAE,CAAC,AAC9B,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,aAAa,4BAAC,CAAC,AACb,KAAK,CAAE,IAAI,AAAE,CAAC,AAAC,CAAC,AACpB,2BAAa,CAAC,MAAM,cAAC,CAAC,AACpB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,UAAU,CAAE,KAAK,CACjB,OAAO,CAAE,YAAY,AAAE,CAAC,AAE5B,aAAa,4BAAC,CAAC,AACb,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAChC,UAAU,CAAE,KAAK,CACjB,WAAW,CAAE,CAAC,CACd,aAAa,CAAE,IAAI,AAAE,CAAC,AAKxB,SAAS,4BAAC,CAAC,AACT,KAAK,CAAE,GAAG,CACV,UAAU,CAAE,KAAK,CACjB,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAChC,YAAY,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAC/B,OAAO,CAAE,KAAK,CACd,KAAK,CAAE,IAAI,CACX,eAAe,CAAE,IAAI,CACrB,MAAM,CAAE,OAAO,CACf,aAAa,CAAE,IAAI,AAAE,CAAC,AACtB,qCAAS,MAAM,AAAC,CAAC,AACf,UAAU,CAAE,OAAO,AAAE,CAAC,AACxB,qCAAS,OAAO,AAAC,CAAC,AAChB,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,OAAO,AAAE,CAAC,AACnB,SAAS,wCAAY,CAAE,SAAS,oCAAQ,CAAE,SAAS,yCAAa,CAAE,SAAS,UAAU,4BAAC,CAAC,AACrF,YAAY,CAAE,IAAI,AAAE,CAAC,AAEzB,UAAU,4BAAC,CAAC,AACV,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,KAAK,CACjB,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAChC,OAAO,CAAE,KAAK,CACd,KAAK,CAAE,IAAI,CACX,eAAe,CAAE,IAAI,AAAE,CAAC,AACxB,UAAU,QAAQ,4BAAC,CAAC,AAClB,aAAa,CAAE,IAAI,CACnB,UAAU,CAAE,KAAK,CACjB,MAAM,CAAE,KAAK,CACb,QAAQ,CAAE,QAAQ,AAAE,CAAC,AACrB,UAAU,sBAAQ,CAAC,iBAAiB,cAAC,CAAC,AACpC,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,IAAI,CACZ,IAAI,CAAE,IAAI,CACV,KAAK,CAAE,IAAI,AAAE,CAAC,AACd,UAAU,sBAAQ,CAAC,iBAAiB,CAAC,OAAO,cAAC,CAAC,AAC5C,KAAK,CAAE,GAAG,CACV,KAAK,CAAE,IAAI,AAAE,CAAC,AAEtB,eAAe,4BAAC,CAAC,AACf,QAAQ,CAAE,QAAQ,AAAE,CAAC,AACrB,6BAAe,CAAC,uBAAuB,cAAC,CAAC,AACvC,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,IAAI,AAAE,CAAC,AACrB,6BAAe,CAAC,QAAQ,cAAC,CAAC,AACxB,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,CAAC,CACT,IAAI,CAAE,CAAC,CACP,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAC7B,UAAU,CAAE,MAAM,CAClB,WAAW,CAAE,IAAI,CACjB,eAAe,CAAE,IAAI,AAAE,CAAC,AACxB,6BAAe,CAAC,sBAAQ,MAAM,AAAC,CAAC,AAC9B,UAAU,CAAE,OAAO,AAAE,CAAC"}`
};
var load$3 = async ({ fetch: fetch2 }) => {
  const res = await fetch2("/about.json");
  if (res.ok) {
    const about = await res.json();
    return { props: { about } };
  }
  const { message } = await res.json();
  return { error: new Error(message) };
};
var About = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { about } = $$props;
  const aboutMap = (0, import_keyBy.default)(about, "_id");
  const pressAndNews = loadData('*[_type == "press" || _type == "news" ][0..3]');
  const ORDER = [
    "our-mission-and-values",
    "our-history",
    "staff-and-board",
    "artists",
    "support-eyebeam",
    "get-involved",
    "press-and-news",
    "our-operating-documents",
    "media-kit",
    "contact"
  ];
  const toc = [
    {
      link: "/about/our-mission-and-values",
      title: "Our Mission and Values"
    },
    {
      link: "/about/our-history",
      title: "Our History"
    },
    {
      link: "/about/staff-and-board",
      title: "Staff & Board"
    },
    { link: "/about/artists", title: "Artists" },
    {
      link: "/about/support-eyebeam",
      title: "Support"
    },
    {
      link: "/about/get-involved",
      title: "Get involved"
    },
    {
      link: "/about/press-and-news",
      title: "Press & News"
    },
    {
      link: "/about/our-operating-documents",
      title: "Our Operating Documents"
    },
    {
      link: "/about/media-kit",
      title: "Media Kit"
    },
    { link: "/about/contact", title: "Contact" }
  ];
  if ($$props.about === void 0 && $$bindings.about && about !== void 0)
    $$bindings.about(about);
  $$result.css.add(css$2);
  return `${$$result.head += `${$$result.title = `<title>${escape(aboutMap["what-is-eyebeam"].title)}</title>`, ""}`, ""}


${validate_component(Sidebar, "Sidebar").$$render($$result, {
    toc,
    title: aboutMap["what-is-eyebeam"].title
  }, {}, {})}

<div class="${"main-content svelte-nhepsa"}"><div class="${"inner svelte-nhepsa"}"><div class="${"tile introduction svelte-nhepsa"}">
			<h1>${escape(aboutMap["what-is-eyebeam"].title)}</h1>
			
			${(0, import_has.default)(aboutMap["what-is-eyebeam"], "introduction.content") ? `<div class="${"description"}"><!-- HTML_TAG_START -->${renderBlockText(aboutMap["what-is-eyebeam"].introduction.content)}<!-- HTML_TAG_END --></div>` : ``}</div>

		${each(ORDER, (section) => `${section == "press-and-news" ? `<div class="${"tile full-tile press-and-news svelte-nhepsa"}"><h2>${escape(aboutMap["press-and-news"].title)}</h2>
					<div class="${"press-and-news-listing svelte-nhepsa"}">${function(__value) {
    if (is_promise(__value)) {
      __value.then(null, noop);
      return ``;
    }
    return function(pressAndNews2) {
      return `
							${each(pressAndNews2, (post) => `${validate_component(Press_and_news_item, "PressAndNewsItem").$$render($$result, { post }, {}, {})}`)}
						`;
    }(__value);
  }(pressAndNews)}</div>
					<a href="${"/press-and-news"}" class="${"see-all svelte-nhepsa"}">See all Press &amp; News</a>
				</div>` : `${section == "contact" ? `<div class="${"tile full-tile contact svelte-nhepsa"}"><h2>Contact</h2>
					<div class="${"bottom-container svelte-nhepsa"}"><div class="${"column svelte-nhepsa"}">${escape(aboutMap["contact"].address)}</div>
						<div class="${"column svelte-nhepsa"}">${escape(aboutMap["contact"].phoneNumber)}<br><a${add_attribute("href", "mailto:" + aboutMap["contact"].email, 0)}>${escape(aboutMap["contact"].email)}</a>
						</div></div>
				</div>` : `<a class="${"tile nav-tile " + escape(section) + " svelte-nhepsa"}"${add_attribute("href", "/about/" + aboutMap[section]._id, 0)} sveltekit:prefetch><h2>${escape(aboutMap[section].title)}</h2>
					${(0, import_has.default)(aboutMap[section], "introduction.content") ? `<div class="${"description"}"><!-- HTML_TAG_START -->${renderBlockText(aboutMap[section].introduction.content)}<!-- HTML_TAG_END -->
						</div>` : ``}
				</a>`}`}`)}</div>

	
	${validate_component(Bottom_bar, "BottomBar").$$render($$result, {}, {}, {})}
</div>`;
});
var index$1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": About,
  load: load$3
});
var css$1 = {
  code: ".main-content.svelte-1cur66w.svelte-1cur66w{float:left;width:calc((100% / 3) * 2)}@media(max-width: 900px){.main-content.svelte-1cur66w.svelte-1cur66w{width:100%}}.main-content.svelte-1cur66w .block-text.svelte-1cur66w{border:1px solid #221f20;min-height:100vh;display:inline-block;padding-bottom:20px;width:100%}.main-content.svelte-1cur66w .block-text .header.svelte-1cur66w{display:flex;width:100%;justify-content:space-between;height:440px}.main-content.svelte-1cur66w .block-text .header h1.svelte-1cur66w{margin-left:20px;margin-right:20px;margin-bottom:160px}.main-content.svelte-1cur66w .block-text .header .image-container.svelte-1cur66w{max-width:50%;max-height:100%;margin-right:20px}.main-content.svelte-1cur66w .block-text .header .image-container img.svelte-1cur66w{border:1px solid #221f20;max-height:100%;max-width:100%}",
  map: `{"version":3,"file":"[slug].svelte","sources":["[slug].svelte"],"sourcesContent":["<script context=\\"module\\">\\n\\texport const load = async ({ page, fetch, session, stuff }) => {\\n\\t\\tconst res = await fetch(\`/about/\${page.params.slug}.json\`);\\n\\t\\tif (res.ok) {\\n\\t\\t\\tconst page = await res.json();\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tprops: { page }\\n\\t\\t\\t};\\n\\t\\t}\\n\\t\\tconst { message } = await res.json();\\n\\t\\treturn {\\n\\t\\t\\terror: new Error(message)\\n\\t\\t};\\n\\t};\\n<\/script>\\n\\n<script>\\n\\t// # # # # # # # # # # # # #\\n\\t//\\n\\t//  Single about page\\n\\t//\\n\\t// # # # # # # # # # # # # #\\n\\n\\t// __ IMPORTS\\n\\timport { onDestroy } from 'svelte';\\n\\timport { urlFor } from '$lib/sanity.js';\\n\\timport get from 'lodash/get.js';\\n\\timport has from 'lodash/has.js';\\n\\timport { parseToc } from '$lib/global.js';\\n\\n\\t// __ STORES\\n\\timport { currentPage } from '$lib/stores.js';\\n\\n\\t// __ COMPONENTS\\n\\timport Sidebar from '$lib/sidebar/sidebar.svelte';\\n\\timport BottomBar from '$lib/bottom-bar/bottom-bar.svelte';\\n\\timport Blocks from '$lib/blocks/blocks.svelte';\\n\\timport SeeAlso from '$lib/see-also/see-also.svelte';\\n\\n\\t// *** PROPS\\n\\texport let page;\\n\\n\\t// __ Set currentPage\\n\\tcurrentPage.set({ slug: get(page, 'slug.current', ''), title: page.title });\\n\\n\\tconst toc = parseToc(get(page, 'content.content'));\\n\\n\\tonDestroy(() => {\\n\\t\\tcurrentPage.set(null);\\n\\t});\\n<\/script>\\n\\n<svelte:head>\\n\\t<title>{page.title}</title>\\n</svelte:head>\\n\\n<!-- SIDEBAR -->\\n<Sidebar {toc} title={page.title} />\\n\\n<!-- SIDEBAR -->\\n\\n<!-- MAIN CONTENT -->\\n<div class=\\"main-content\\">\\n\\t<div class=\\"block-text\\">\\n\\t\\t<div class=\\"header\\">\\n\\t\\t\\t<!-- TITLE -->\\n\\t\\t\\t<h1>{page.title}</h1>\\n\\n\\t\\t\\t<!-- MAIN IMAGE -->\\n\\t\\t\\t{#if page.mainImage}\\n\\t\\t\\t\\t<figure class=\\"image-container\\">\\n\\t\\t\\t\\t\\t<img\\n\\t\\t\\t\\t\\t\\tclass=\\"main-image\\"\\n\\t\\t\\t\\t\\t\\talt={page.title}\\n\\t\\t\\t\\t\\t\\tsrc={urlFor(page.mainImage).quality(90).saturation(-100).width(400).url()}\\n\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t{#if has(page, 'mainImage.caption.content')}\\n\\t\\t\\t\\t\\t\\t<figcaption>\\n\\t\\t\\t\\t\\t\\t\\t<Blocks blocks={page.mainImage.caption.content} />\\n\\t\\t\\t\\t\\t\\t</figcaption>\\n\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t</figure>\\n\\t\\t\\t{/if}\\n\\t\\t</div>\\n\\n\\t\\t<!-- MAIN TEXT -->\\n\\t\\t{#if has(page, 'content.content')}\\n\\t\\t\\t<Blocks blocks={page.content.content} />\\n\\t\\t{/if}\\n\\n\\t\\t<!-- SEE ALSO -->\\n\\t\\t{#if page.internalLinks || page.externalLinks}\\n\\t\\t\\t<SeeAlso externalLinks={page.externalLinks} internalLinks={page.internalLinks} />\\n\\t\\t{/if}\\n\\t</div>\\n\\n\\t<!-- BOTTOM BAR -->\\n\\t<BottomBar updatedAt={page._updatedAt} />\\n</div>\\n\\n<style lang=\\"scss\\">.main-content {\\n  float: left;\\n  width: calc((100% / 3) * 2); }\\n  @media (max-width: 900px) {\\n    .main-content {\\n      width: 100%; } }\\n  .main-content .block-text {\\n    border: 1px solid #221f20;\\n    min-height: 100vh;\\n    display: inline-block;\\n    padding-bottom: 20px;\\n    width: 100%; }\\n    .main-content .block-text .header {\\n      display: flex;\\n      width: 100%;\\n      justify-content: space-between;\\n      height: 440px; }\\n      .main-content .block-text .header h1 {\\n        margin-left: 20px;\\n        margin-right: 20px;\\n        margin-bottom: 160px; }\\n      .main-content .block-text .header .image-container {\\n        max-width: 50%;\\n        max-height: 100%;\\n        margin-right: 20px; }\\n        .main-content .block-text .header .image-container img {\\n          border: 1px solid #221f20;\\n          max-height: 100%;\\n          max-width: 100%; }\\n</style>\\n"],"names":[],"mappings":"AAoGmB,aAAa,8BAAC,CAAC,AAChC,KAAK,CAAE,IAAI,CACX,KAAK,CAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,AAAE,CAAC,AAC9B,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,aAAa,8BAAC,CAAC,AACb,KAAK,CAAE,IAAI,AAAE,CAAC,AAAC,CAAC,AACpB,4BAAa,CAAC,WAAW,eAAC,CAAC,AACzB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,UAAU,CAAE,KAAK,CACjB,OAAO,CAAE,YAAY,CACrB,cAAc,CAAE,IAAI,CACpB,KAAK,CAAE,IAAI,AAAE,CAAC,AACd,4BAAa,CAAC,WAAW,CAAC,OAAO,eAAC,CAAC,AACjC,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,IAAI,CACX,eAAe,CAAE,aAAa,CAC9B,MAAM,CAAE,KAAK,AAAE,CAAC,AAChB,4BAAa,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,eAAC,CAAC,AACpC,WAAW,CAAE,IAAI,CACjB,YAAY,CAAE,IAAI,CAClB,aAAa,CAAE,KAAK,AAAE,CAAC,AACzB,4BAAa,CAAC,WAAW,CAAC,OAAO,CAAC,gBAAgB,eAAC,CAAC,AAClD,SAAS,CAAE,GAAG,CACd,UAAU,CAAE,IAAI,CAChB,YAAY,CAAE,IAAI,AAAE,CAAC,AACrB,4BAAa,CAAC,WAAW,CAAC,OAAO,CAAC,gBAAgB,CAAC,GAAG,eAAC,CAAC,AACtD,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,UAAU,CAAE,IAAI,CAChB,SAAS,CAAE,IAAI,AAAE,CAAC"}`
};
var load$2 = async ({ page: page2, fetch: fetch2, session, stuff }) => {
  const res = await fetch2(`/about/${page2.params.slug}.json`);
  if (res.ok) {
    const page3 = await res.json();
    return { props: { page: page3 } };
  }
  const { message } = await res.json();
  return { error: new Error(message) };
};
var U5Bslugu5D$1 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { page: page2 } = $$props;
  currentPage.set({
    slug: (0, import_get.default)(page2, "slug.current", ""),
    title: page2.title
  });
  const toc = parseToc((0, import_get.default)(page2, "content.content"));
  onDestroy(() => {
    currentPage.set(null);
  });
  if ($$props.page === void 0 && $$bindings.page && page2 !== void 0)
    $$bindings.page(page2);
  $$result.css.add(css$1);
  return `${$$result.head += `${$$result.title = `<title>${escape(page2.title)}</title>`, ""}`, ""}


${validate_component(Sidebar, "Sidebar").$$render($$result, { toc, title: page2.title }, {}, {})}




<div class="${"main-content svelte-1cur66w"}"><div class="${"block-text svelte-1cur66w"}"><div class="${"header svelte-1cur66w"}">
			<h1 class="${"svelte-1cur66w"}">${escape(page2.title)}</h1>

			
			${page2.mainImage ? `<figure class="${"image-container svelte-1cur66w"}"><img class="${"main-image svelte-1cur66w"}"${add_attribute("alt", page2.title, 0)}${add_attribute("src", urlFor(page2.mainImage).quality(90).saturation(-100).width(400).url(), 0)}>
					${(0, import_has.default)(page2, "mainImage.caption.content") ? `<figcaption>${validate_component(Blocks, "Blocks").$$render($$result, { blocks: page2.mainImage.caption.content }, {}, {})}</figcaption>` : ``}</figure>` : ``}</div>

		
		${(0, import_has.default)(page2, "content.content") ? `${validate_component(Blocks, "Blocks").$$render($$result, { blocks: page2.content.content }, {}, {})}` : ``}

		
		${page2.internalLinks || page2.externalLinks ? `${validate_component(See_also, "SeeAlso").$$render($$result, {
    externalLinks: page2.externalLinks,
    internalLinks: page2.internalLinks
  }, {}, {})}` : ``}</div>

	
	${validate_component(Bottom_bar, "BottomBar").$$render($$result, { updatedAt: page2._updatedAt }, {}, {})}
</div>`;
});
var _slug_$1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": U5Bslugu5D$1,
  load: load$2
});
async function load$1() {
  return {
    status: 302,
    redirect: "/everything#note"
  };
}
var Notes = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return ``;
});
var index = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Notes,
  load: load$1
});
var css = {
  code: ".main-content.svelte-oxg8en.svelte-oxg8en{float:left;width:50%;width:calc((100% / 3) * 2)}.main-content.svelte-oxg8en .header.svelte-oxg8en{height:440px;border-bottom:1px solid #221f20;padding:15px;font-size:16px}.main-content.svelte-oxg8en .header h1.svelte-oxg8en{margin-bottom:20px}.main-content.svelte-oxg8en .header .date.svelte-oxg8en{margin-bottom:20px}.main-content.svelte-oxg8en .header .authors.svelte-oxg8en{margin-bottom:20px}.main-content.svelte-oxg8en .inner.svelte-oxg8en{border:1px solid #221f20;min-height:100vh}",
  map: `{"version":3,"file":"[slug].svelte","sources":["[slug].svelte"],"sourcesContent":["<script context=\\"module\\">\\n\\texport const load = async ({ page, fetch, session, stuff }) => {\\n\\t\\tconst res = await fetch(\`/notes/\${page.params.slug}.json\`);\\n\\t\\tif (res.ok) {\\n\\t\\t\\tconst note = await res.json();\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tprops: { note }\\n\\t\\t\\t};\\n\\t\\t}\\n\\t\\tconst { message } = await res.json();\\n\\t\\treturn {\\n\\t\\t\\terror: new Error(message)\\n\\t\\t};\\n\\t};\\n<\/script>\\n\\n<script>\\n\\t// # # # # # # # # # # # # #\\n\\t//\\n\\t//  Single note\\n\\t//\\n\\t// # # # # # # # # # # # # #\\n\\n\\t// __ IMPORTS\\n\\timport { onDestroy } from 'svelte';\\n\\timport get from 'lodash/get.js';\\n\\timport has from 'lodash/has.js';\\n\\timport { longFormatDate } from '$lib/global';\\n\\timport { parseToc } from '$lib/global.js';\\n\\n\\t// __ STORES\\n\\timport { currentPage } from '$lib/stores.js';\\n\\n\\t// __ COMPONENTS\\n\\timport Sidebar from '$lib/sidebar/sidebar.svelte';\\n\\timport BottomBar from '$lib/bottom-bar/bottom-bar.svelte';\\n\\timport Blocks from '$lib/blocks/blocks.svelte';\\n\\timport PersonLink from '$lib/person-link/person-link.svelte';\\n\\timport SeeAlso from '$lib/see-also/see-also.svelte';\\n\\n\\t// __ PROPS\\n\\texport let note;\\n\\tlet toc = parseToc(get(note, 'content.content'));\\n\\n\\t// __ Set currentPage\\n\\tcurrentPage.set({ slug: get(note, 'slug.current', ''), title: note.title });\\n\\n\\tonDestroy(() => {\\n\\t\\tcurrentPage.set(null);\\n\\t});\\n<\/script>\\n\\n<svelte:head>\\n\\t<title>{note.title}</title>\\n</svelte:head>\\n\\n<!-- SIDEBAR -->\\n<Sidebar title={note.title} {toc} />\\n\\n<div class=\\"main-content\\">\\n\\t<div class=\\"inner\\">\\n\\t\\t<div class=\\"header\\">\\n\\t\\t\\t<!-- TITLE -->\\n\\t\\t\\t<h1>{note.title}</h1>\\n\\t\\t\\t<!-- DATE -->\\n\\t\\t\\t<div class=\\"date\\">\\n\\t\\t\\t\\t{longFormatDate(note._createdAt)}\\n\\t\\t\\t</div>\\n\\t\\t\\t<!-- AUTHOR(S) -->\\n\\t\\t\\t{#if note.people && note.people.length > 0}\\n\\t\\t\\t\\t<div class=\\"authors\\">\\n\\t\\t\\t\\t\\tby {#each note.people as person}\\n\\t\\t\\t\\t\\t\\t<PersonLink {person} />\\n\\t\\t\\t\\t\\t{/each}\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t{/if}\\n\\t\\t\\t<!-- INTRODUCTION -->\\n\\t\\t\\t{#if has(note, 'introduction.content')}\\n\\t\\t\\t\\t<div class=\\"introduction\\">\\n\\t\\t\\t\\t\\t<Blocks blocks={note.introduction.content} />\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t{/if}\\n\\t\\t</div>\\n\\n\\t\\t<!-- MAIN TEXT -->\\n\\t\\t{#if has(note, 'content.content')}\\n\\t\\t\\t<div class=\\"block-text\\">\\n\\t\\t\\t\\t<Blocks blocks={note.content.content} />\\n\\t\\t\\t</div>\\n\\t\\t{/if}\\n\\n\\t\\t<!-- SEE ALSO -->\\n\\t\\t{#if note.internalLinks || note.externalLinks}\\n\\t\\t\\t<SeeAlso externalLinks={note.externalLinks} internalLinks={note.internalLinks} />\\n\\t\\t{/if}\\n\\t</div>\\n\\n\\t<!-- BOTTOM BAR -->\\n\\t<BottomBar updatedAt={note._updatedAt} />\\n</div>\\n\\n<style lang=\\"scss\\">.main-content {\\n  float: left;\\n  width: 50%;\\n  width: calc((100% / 3) * 2); }\\n  .main-content .header {\\n    height: 440px;\\n    border-bottom: 1px solid #221f20;\\n    padding: 15px;\\n    font-size: 16px; }\\n    .main-content .header h1 {\\n      margin-bottom: 20px; }\\n    .main-content .header .date {\\n      margin-bottom: 20px; }\\n    .main-content .header .authors {\\n      margin-bottom: 20px; }\\n  .main-content .inner {\\n    border: 1px solid #221f20;\\n    min-height: 100vh; }\\n  .main-content .main-image {\\n    width: 300px; }\\n\\nimg {\\n  float: right; }\\n</style>\\n"],"names":[],"mappings":"AAqGmB,aAAa,4BAAC,CAAC,AAChC,KAAK,CAAE,IAAI,CACX,KAAK,CAAE,GAAG,CACV,KAAK,CAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,AAAE,CAAC,AAC9B,2BAAa,CAAC,OAAO,cAAC,CAAC,AACrB,MAAM,CAAE,KAAK,CACb,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAChC,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,IAAI,AAAE,CAAC,AAClB,2BAAa,CAAC,OAAO,CAAC,EAAE,cAAC,CAAC,AACxB,aAAa,CAAE,IAAI,AAAE,CAAC,AACxB,2BAAa,CAAC,OAAO,CAAC,KAAK,cAAC,CAAC,AAC3B,aAAa,CAAE,IAAI,AAAE,CAAC,AACxB,2BAAa,CAAC,OAAO,CAAC,QAAQ,cAAC,CAAC,AAC9B,aAAa,CAAE,IAAI,AAAE,CAAC,AAC1B,2BAAa,CAAC,MAAM,cAAC,CAAC,AACpB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,UAAU,CAAE,KAAK,AAAE,CAAC"}`
};
var load = async ({ page: page2, fetch: fetch2, session, stuff }) => {
  const res = await fetch2(`/notes/${page2.params.slug}.json`);
  if (res.ok) {
    const note = await res.json();
    return { props: { note } };
  }
  const { message } = await res.json();
  return { error: new Error(message) };
};
var U5Bslugu5D = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { note } = $$props;
  let toc = parseToc((0, import_get.default)(note, "content.content"));
  currentPage.set({
    slug: (0, import_get.default)(note, "slug.current", ""),
    title: note.title
  });
  onDestroy(() => {
    currentPage.set(null);
  });
  if ($$props.note === void 0 && $$bindings.note && note !== void 0)
    $$bindings.note(note);
  $$result.css.add(css);
  return `${$$result.head += `${$$result.title = `<title>${escape(note.title)}</title>`, ""}`, ""}


${validate_component(Sidebar, "Sidebar").$$render($$result, { title: note.title, toc }, {}, {})}

<div class="${"main-content svelte-oxg8en"}"><div class="${"inner svelte-oxg8en"}"><div class="${"header svelte-oxg8en"}">
			<h1 class="${"svelte-oxg8en"}">${escape(note.title)}</h1>
			
			<div class="${"date svelte-oxg8en"}">${escape(longFormatDate(note._createdAt))}</div>
			
			${note.people && note.people.length > 0 ? `<div class="${"authors svelte-oxg8en"}">by ${each(note.people, (person) => `${validate_component(Person_link, "PersonLink").$$render($$result, { person }, {}, {})}`)}</div>` : ``}
			
			${(0, import_has.default)(note, "introduction.content") ? `<div class="${"introduction"}">${validate_component(Blocks, "Blocks").$$render($$result, { blocks: note.introduction.content }, {}, {})}</div>` : ``}</div>

		
		${(0, import_has.default)(note, "content.content") ? `<div class="${"block-text"}">${validate_component(Blocks, "Blocks").$$render($$result, { blocks: note.content.content }, {}, {})}</div>` : ``}

		
		${note.internalLinks || note.externalLinks ? `${validate_component(See_also, "SeeAlso").$$render($$result, {
    externalLinks: note.externalLinks,
    internalLinks: note.internalLinks
  }, {}, {})}` : ``}</div>

	
	${validate_component(Bottom_bar, "BottomBar").$$render($$result, { updatedAt: note._updatedAt }, {}, {})}
</div>`;
});
var _slug_ = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": U5Bslugu5D,
  load
});

// .svelte-kit/netlify/entry.js
init();
async function handler(event) {
  const { path, httpMethod, headers, rawQuery, body, isBase64Encoded } = event;
  const query = new URLSearchParams(rawQuery);
  const encoding = isBase64Encoded ? "base64" : headers["content-encoding"] || "utf-8";
  const rawBody = typeof body === "string" ? Buffer.from(body, encoding) : body;
  const rendered = await render({
    method: httpMethod,
    headers,
    path,
    query,
    rawBody
  });
  if (rendered) {
    return {
      isBase64Encoded: false,
      statusCode: rendered.status,
      ...splitHeaders(rendered.headers),
      body: rendered.body
    };
  }
  return {
    statusCode: 404,
    body: "Not found"
  };
}
function splitHeaders(headers) {
  const h2 = {};
  const m = {};
  for (const key in headers) {
    const value = headers[key];
    const target = Array.isArray(value) ? m : h2;
    target[key] = value;
  }
  return {
    headers: h2,
    multiValueHeaders: m
  };
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  handler
});
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
/*!
 * Cross-Browser Split 1.1.1
 * Copyright 2007-2012 Steven Levithan <stevenlevithan.com>
 * Available under the MIT License
 * ECMAScript compliant, uniform cross-browser split method
 */
/*!
 * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
 *
 * Copyright (c) 2014-2017, Jon Schlinkert.
 * Released under the MIT License.
 */
/*!
 * isobject <https://github.com/jonschlinkert/isobject>
 *
 * Copyright (c) 2014-2017, Jon Schlinkert.
 * Released under the MIT License.
 */
/*! get-video-id v3.4.3 | @license MIT © Michael Wuergler | https://github.com/radiovisual/get-video-id */
/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
/*! simple-concat. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
